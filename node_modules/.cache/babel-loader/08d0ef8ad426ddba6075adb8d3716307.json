{"ast":null,"code":"import _regeneratorRuntime from \"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nfunction isArray(x) {\n  return Array.isArray(x);\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar METRICS_MAP = {\n  'AMS-Regular': {\n    '65': [0, 0.68889, 0, 0],\n    '66': [0, 0.68889, 0, 0],\n    '67': [0, 0.68889, 0, 0],\n    '68': [0, 0.68889, 0, 0],\n    '69': [0, 0.68889, 0, 0],\n    '70': [0, 0.68889, 0, 0],\n    '71': [0, 0.68889, 0, 0],\n    '72': [0, 0.68889, 0, 0],\n    '73': [0, 0.68889, 0, 0],\n    '74': [0.16667, 0.68889, 0, 0],\n    '75': [0, 0.68889, 0, 0],\n    '76': [0, 0.68889, 0, 0],\n    '77': [0, 0.68889, 0, 0],\n    '78': [0, 0.68889, 0, 0],\n    '79': [0.16667, 0.68889, 0, 0],\n    '80': [0, 0.68889, 0, 0],\n    '81': [0.16667, 0.68889, 0, 0],\n    '82': [0, 0.68889, 0, 0],\n    '83': [0, 0.68889, 0, 0],\n    '84': [0, 0.68889, 0, 0],\n    '85': [0, 0.68889, 0, 0],\n    '86': [0, 0.68889, 0, 0],\n    '87': [0, 0.68889, 0, 0],\n    '88': [0, 0.68889, 0, 0],\n    '89': [0, 0.68889, 0, 0],\n    '90': [0, 0.68889, 0, 0],\n    '107': [0, 0.68889, 0, 0],\n    '165': [0, 0.675, 0.025, 0],\n    '174': [0.15559, 0.69224, 0, 0],\n    '240': [0, 0.68889, 0, 0],\n    '295': [0, 0.68889, 0, 0],\n    '710': [0, 0.825, 0, 0],\n    '732': [0, 0.9, 0, 0],\n    '770': [0, 0.825, 0, 0],\n    '771': [0, 0.9, 0, 0],\n    '989': [0.08167, 0.58167, 0, 0],\n    '1008': [0, 0.43056, 0.04028, 0],\n    '8245': [0, 0.54986, 0, 0],\n    '8463': [0, 0.68889, 0, 0],\n    '8487': [0, 0.68889, 0, 0],\n    '8498': [0, 0.68889, 0, 0],\n    '8502': [0, 0.68889, 0, 0],\n    '8503': [0, 0.68889, 0, 0],\n    '8504': [0, 0.68889, 0, 0],\n    '8513': [0, 0.68889, 0, 0],\n    '8592': [-0.03598, 0.46402, 0, 0],\n    '8594': [-0.03598, 0.46402, 0, 0],\n    '8602': [-0.13313, 0.36687, 0, 0],\n    '8603': [-0.13313, 0.36687, 0, 0],\n    '8606': [0.01354, 0.52239, 0, 0],\n    '8608': [0.01354, 0.52239, 0, 0],\n    '8610': [0.01354, 0.52239, 0, 0],\n    '8611': [0.01354, 0.52239, 0, 0],\n    '8619': [0, 0.54986, 0, 0],\n    '8620': [0, 0.54986, 0, 0],\n    '8621': [-0.13313, 0.37788, 0, 0],\n    '8622': [-0.13313, 0.36687, 0, 0],\n    '8624': [0, 0.69224, 0, 0],\n    '8625': [0, 0.69224, 0, 0],\n    '8630': [0, 0.43056, 0, 0],\n    '8631': [0, 0.43056, 0, 0],\n    '8634': [0.08198, 0.58198, 0, 0],\n    '8635': [0.08198, 0.58198, 0, 0],\n    '8638': [0.19444, 0.69224, 0, 0],\n    '8639': [0.19444, 0.69224, 0, 0],\n    '8642': [0.19444, 0.69224, 0, 0],\n    '8643': [0.19444, 0.69224, 0, 0],\n    '8644': [0.1808, 0.675, 0, 0],\n    '8646': [0.1808, 0.675, 0, 0],\n    '8647': [0.1808, 0.675, 0, 0],\n    '8648': [0.19444, 0.69224, 0, 0],\n    '8649': [0.1808, 0.675, 0, 0],\n    '8650': [0.19444, 0.69224, 0, 0],\n    '8651': [0.01354, 0.52239, 0, 0],\n    '8652': [0.01354, 0.52239, 0, 0],\n    '8653': [-0.13313, 0.36687, 0, 0],\n    '8654': [-0.13313, 0.36687, 0, 0],\n    '8655': [-0.13313, 0.36687, 0, 0],\n    '8666': [0.13667, 0.63667, 0, 0],\n    '8667': [0.13667, 0.63667, 0, 0],\n    '8669': [-0.13313, 0.37788, 0, 0],\n    '8672': [-0.064, 0.437, 0, 0],\n    '8674': [-0.064, 0.437, 0, 0],\n    '8705': [0, 0.825, 0, 0],\n    '8708': [0, 0.68889, 0, 0],\n    '8709': [0.08167, 0.58167, 0, 0],\n    '8717': [0, 0.43056, 0, 0],\n    '8722': [-0.03598, 0.46402, 0, 0],\n    '8724': [0.08198, 0.69224, 0, 0],\n    '8726': [0.08167, 0.58167, 0, 0],\n    '8733': [0, 0.69224, 0, 0],\n    '8736': [0, 0.69224, 0, 0],\n    '8737': [0, 0.69224, 0, 0],\n    '8738': [0.03517, 0.52239, 0, 0],\n    '8739': [0.08167, 0.58167, 0, 0],\n    '8740': [0.25142, 0.74111, 0, 0],\n    '8741': [0.08167, 0.58167, 0, 0],\n    '8742': [0.25142, 0.74111, 0, 0],\n    '8756': [0, 0.69224, 0, 0],\n    '8757': [0, 0.69224, 0, 0],\n    '8764': [-0.13313, 0.36687, 0, 0],\n    '8765': [-0.13313, 0.37788, 0, 0],\n    '8769': [-0.13313, 0.36687, 0, 0],\n    '8770': [-0.03625, 0.46375, 0, 0],\n    '8774': [0.30274, 0.79383, 0, 0],\n    '8776': [-0.01688, 0.48312, 0, 0],\n    '8778': [0.08167, 0.58167, 0, 0],\n    '8782': [0.06062, 0.54986, 0, 0],\n    '8783': [0.06062, 0.54986, 0, 0],\n    '8785': [0.08198, 0.58198, 0, 0],\n    '8786': [0.08198, 0.58198, 0, 0],\n    '8787': [0.08198, 0.58198, 0, 0],\n    '8790': [0, 0.69224, 0, 0],\n    '8791': [0.22958, 0.72958, 0, 0],\n    '8796': [0.08198, 0.91667, 0, 0],\n    '8806': [0.25583, 0.75583, 0, 0],\n    '8807': [0.25583, 0.75583, 0, 0],\n    '8808': [0.25142, 0.75726, 0, 0],\n    '8809': [0.25142, 0.75726, 0, 0],\n    '8812': [0.25583, 0.75583, 0, 0],\n    '8814': [0.20576, 0.70576, 0, 0],\n    '8815': [0.20576, 0.70576, 0, 0],\n    '8816': [0.30274, 0.79383, 0, 0],\n    '8817': [0.30274, 0.79383, 0, 0],\n    '8818': [0.22958, 0.72958, 0, 0],\n    '8819': [0.22958, 0.72958, 0, 0],\n    '8822': [0.1808, 0.675, 0, 0],\n    '8823': [0.1808, 0.675, 0, 0],\n    '8828': [0.13667, 0.63667, 0, 0],\n    '8829': [0.13667, 0.63667, 0, 0],\n    '8830': [0.22958, 0.72958, 0, 0],\n    '8831': [0.22958, 0.72958, 0, 0],\n    '8832': [0.20576, 0.70576, 0, 0],\n    '8833': [0.20576, 0.70576, 0, 0],\n    '8840': [0.30274, 0.79383, 0, 0],\n    '8841': [0.30274, 0.79383, 0, 0],\n    '8842': [0.13597, 0.63597, 0, 0],\n    '8843': [0.13597, 0.63597, 0, 0],\n    '8847': [0.03517, 0.54986, 0, 0],\n    '8848': [0.03517, 0.54986, 0, 0],\n    '8858': [0.08198, 0.58198, 0, 0],\n    '8859': [0.08198, 0.58198, 0, 0],\n    '8861': [0.08198, 0.58198, 0, 0],\n    '8862': [0, 0.675, 0, 0],\n    '8863': [0, 0.675, 0, 0],\n    '8864': [0, 0.675, 0, 0],\n    '8865': [0, 0.675, 0, 0],\n    '8872': [0, 0.69224, 0, 0],\n    '8873': [0, 0.69224, 0, 0],\n    '8874': [0, 0.69224, 0, 0],\n    '8876': [0, 0.68889, 0, 0],\n    '8877': [0, 0.68889, 0, 0],\n    '8878': [0, 0.68889, 0, 0],\n    '8879': [0, 0.68889, 0, 0],\n    '8882': [0.03517, 0.54986, 0, 0],\n    '8883': [0.03517, 0.54986, 0, 0],\n    '8884': [0.13667, 0.63667, 0, 0],\n    '8885': [0.13667, 0.63667, 0, 0],\n    '8888': [0, 0.54986, 0, 0],\n    '8890': [0.19444, 0.43056, 0, 0],\n    '8891': [0.19444, 0.69224, 0, 0],\n    '8892': [0.19444, 0.69224, 0, 0],\n    '8901': [0, 0.54986, 0, 0],\n    '8903': [0.08167, 0.58167, 0, 0],\n    '8905': [0.08167, 0.58167, 0, 0],\n    '8906': [0.08167, 0.58167, 0, 0],\n    '8907': [0, 0.69224, 0, 0],\n    '8908': [0, 0.69224, 0, 0],\n    '8909': [-0.03598, 0.46402, 0, 0],\n    '8910': [0, 0.54986, 0, 0],\n    '8911': [0, 0.54986, 0, 0],\n    '8912': [0.03517, 0.54986, 0, 0],\n    '8913': [0.03517, 0.54986, 0, 0],\n    '8914': [0, 0.54986, 0, 0],\n    '8915': [0, 0.54986, 0, 0],\n    '8916': [0, 0.69224, 0, 0],\n    '8918': [0.0391, 0.5391, 0, 0],\n    '8919': [0.0391, 0.5391, 0, 0],\n    '8920': [0.03517, 0.54986, 0, 0],\n    '8921': [0.03517, 0.54986, 0, 0],\n    '8922': [0.38569, 0.88569, 0, 0],\n    '8923': [0.38569, 0.88569, 0, 0],\n    '8926': [0.13667, 0.63667, 0, 0],\n    '8927': [0.13667, 0.63667, 0, 0],\n    '8928': [0.30274, 0.79383, 0, 0],\n    '8929': [0.30274, 0.79383, 0, 0],\n    '8934': [0.23222, 0.74111, 0, 0],\n    '8935': [0.23222, 0.74111, 0, 0],\n    '8936': [0.23222, 0.74111, 0, 0],\n    '8937': [0.23222, 0.74111, 0, 0],\n    '8938': [0.20576, 0.70576, 0, 0],\n    '8939': [0.20576, 0.70576, 0, 0],\n    '8940': [0.30274, 0.79383, 0, 0],\n    '8941': [0.30274, 0.79383, 0, 0],\n    '8994': [0.19444, 0.69224, 0, 0],\n    '8995': [0.19444, 0.69224, 0, 0],\n    '9416': [0.15559, 0.69224, 0, 0],\n    '9484': [0, 0.69224, 0, 0],\n    '9488': [0, 0.69224, 0, 0],\n    '9492': [0, 0.37788, 0, 0],\n    '9496': [0, 0.37788, 0, 0],\n    '9585': [0.19444, 0.68889, 0, 0],\n    '9586': [0.19444, 0.74111, 0, 0],\n    '9632': [0, 0.675, 0, 0],\n    '9633': [0, 0.675, 0, 0],\n    '9650': [0, 0.54986, 0, 0],\n    '9651': [0, 0.54986, 0, 0],\n    '9654': [0.03517, 0.54986, 0, 0],\n    '9660': [0, 0.54986, 0, 0],\n    '9661': [0, 0.54986, 0, 0],\n    '9664': [0.03517, 0.54986, 0, 0],\n    '9674': [0.11111, 0.69224, 0, 0],\n    '9733': [0.19444, 0.69224, 0, 0],\n    '10003': [0, 0.69224, 0, 0],\n    '10016': [0, 0.69224, 0, 0],\n    '10731': [0.11111, 0.69224, 0, 0],\n    '10846': [0.19444, 0.75583, 0, 0],\n    '10877': [0.13667, 0.63667, 0, 0],\n    '10878': [0.13667, 0.63667, 0, 0],\n    '10885': [0.25583, 0.75583, 0, 0],\n    '10886': [0.25583, 0.75583, 0, 0],\n    '10887': [0.13597, 0.63597, 0, 0],\n    '10888': [0.13597, 0.63597, 0, 0],\n    '10889': [0.26167, 0.75726, 0, 0],\n    '10890': [0.26167, 0.75726, 0, 0],\n    '10891': [0.48256, 0.98256, 0, 0],\n    '10892': [0.48256, 0.98256, 0, 0],\n    '10901': [0.13667, 0.63667, 0, 0],\n    '10902': [0.13667, 0.63667, 0, 0],\n    '10933': [0.25142, 0.75726, 0, 0],\n    '10934': [0.25142, 0.75726, 0, 0],\n    '10935': [0.26167, 0.75726, 0, 0],\n    '10936': [0.26167, 0.75726, 0, 0],\n    '10937': [0.26167, 0.75726, 0, 0],\n    '10938': [0.26167, 0.75726, 0, 0],\n    '10949': [0.25583, 0.75583, 0, 0],\n    '10950': [0.25583, 0.75583, 0, 0],\n    '10955': [0.28481, 0.79383, 0, 0],\n    '10956': [0.28481, 0.79383, 0, 0],\n    '57350': [0.08167, 0.58167, 0, 0],\n    '57351': [0.08167, 0.58167, 0, 0],\n    '57352': [0.08167, 0.58167, 0, 0],\n    '57353': [0, 0.43056, 0.04028, 0],\n    '57356': [0.25142, 0.75726, 0, 0],\n    '57357': [0.25142, 0.75726, 0, 0],\n    '57358': [0.41951, 0.91951, 0, 0],\n    '57359': [0.30274, 0.79383, 0, 0],\n    '57360': [0.30274, 0.79383, 0, 0],\n    '57361': [0.41951, 0.91951, 0, 0],\n    '57366': [0.25142, 0.75726, 0, 0],\n    '57367': [0.25142, 0.75726, 0, 0],\n    '57368': [0.25142, 0.75726, 0, 0],\n    '57369': [0.25142, 0.75726, 0, 0],\n    '57370': [0.13597, 0.63597, 0, 0],\n    '57371': [0.13597, 0.63597, 0, 0]\n  },\n  'Caligraphic-Regular': {\n    '48': [0, 0.43056, 0, 0],\n    '49': [0, 0.43056, 0, 0],\n    '50': [0, 0.43056, 0, 0],\n    '51': [0.19444, 0.43056, 0, 0],\n    '52': [0.19444, 0.43056, 0, 0],\n    '53': [0.19444, 0.43056, 0, 0],\n    '54': [0, 0.64444, 0, 0],\n    '55': [0.19444, 0.43056, 0, 0],\n    '56': [0, 0.64444, 0, 0],\n    '57': [0.19444, 0.43056, 0, 0],\n    '65': [0, 0.68333, 0, 0.19445],\n    '66': [0, 0.68333, 0.03041, 0.13889],\n    '67': [0, 0.68333, 0.05834, 0.13889],\n    '68': [0, 0.68333, 0.02778, 0.08334],\n    '69': [0, 0.68333, 0.08944, 0.11111],\n    '70': [0, 0.68333, 0.09931, 0.11111],\n    '71': [0.09722, 0.68333, 0.0593, 0.11111],\n    '72': [0, 0.68333, 0.00965, 0.11111],\n    '73': [0, 0.68333, 0.07382, 0],\n    '74': [0.09722, 0.68333, 0.18472, 0.16667],\n    '75': [0, 0.68333, 0.01445, 0.05556],\n    '76': [0, 0.68333, 0, 0.13889],\n    '77': [0, 0.68333, 0, 0.13889],\n    '78': [0, 0.68333, 0.14736, 0.08334],\n    '79': [0, 0.68333, 0.02778, 0.11111],\n    '80': [0, 0.68333, 0.08222, 0.08334],\n    '81': [0.09722, 0.68333, 0, 0.11111],\n    '82': [0, 0.68333, 0, 0.08334],\n    '83': [0, 0.68333, 0.075, 0.13889],\n    '84': [0, 0.68333, 0.25417, 0],\n    '85': [0, 0.68333, 0.09931, 0.08334],\n    '86': [0, 0.68333, 0.08222, 0],\n    '87': [0, 0.68333, 0.08222, 0.08334],\n    '88': [0, 0.68333, 0.14643, 0.13889],\n    '89': [0.09722, 0.68333, 0.08222, 0.08334],\n    '90': [0, 0.68333, 0.07944, 0.13889]\n  },\n  'Fraktur-Regular': {\n    '33': [0, 0.69141, 0, 0],\n    '34': [0, 0.69141, 0, 0],\n    '38': [0, 0.69141, 0, 0],\n    '39': [0, 0.69141, 0, 0],\n    '40': [0.24982, 0.74947, 0, 0],\n    '41': [0.24982, 0.74947, 0, 0],\n    '42': [0, 0.62119, 0, 0],\n    '43': [0.08319, 0.58283, 0, 0],\n    '44': [0, 0.10803, 0, 0],\n    '45': [0.08319, 0.58283, 0, 0],\n    '46': [0, 0.10803, 0, 0],\n    '47': [0.24982, 0.74947, 0, 0],\n    '48': [0, 0.47534, 0, 0],\n    '49': [0, 0.47534, 0, 0],\n    '50': [0, 0.47534, 0, 0],\n    '51': [0.18906, 0.47534, 0, 0],\n    '52': [0.18906, 0.47534, 0, 0],\n    '53': [0.18906, 0.47534, 0, 0],\n    '54': [0, 0.69141, 0, 0],\n    '55': [0.18906, 0.47534, 0, 0],\n    '56': [0, 0.69141, 0, 0],\n    '57': [0.18906, 0.47534, 0, 0],\n    '58': [0, 0.47534, 0, 0],\n    '59': [0.12604, 0.47534, 0, 0],\n    '61': [-0.13099, 0.36866, 0, 0],\n    '63': [0, 0.69141, 0, 0],\n    '65': [0, 0.69141, 0, 0],\n    '66': [0, 0.69141, 0, 0],\n    '67': [0, 0.69141, 0, 0],\n    '68': [0, 0.69141, 0, 0],\n    '69': [0, 0.69141, 0, 0],\n    '70': [0.12604, 0.69141, 0, 0],\n    '71': [0, 0.69141, 0, 0],\n    '72': [0.06302, 0.69141, 0, 0],\n    '73': [0, 0.69141, 0, 0],\n    '74': [0.12604, 0.69141, 0, 0],\n    '75': [0, 0.69141, 0, 0],\n    '76': [0, 0.69141, 0, 0],\n    '77': [0, 0.69141, 0, 0],\n    '78': [0, 0.69141, 0, 0],\n    '79': [0, 0.69141, 0, 0],\n    '80': [0.18906, 0.69141, 0, 0],\n    '81': [0.03781, 0.69141, 0, 0],\n    '82': [0, 0.69141, 0, 0],\n    '83': [0, 0.69141, 0, 0],\n    '84': [0, 0.69141, 0, 0],\n    '85': [0, 0.69141, 0, 0],\n    '86': [0, 0.69141, 0, 0],\n    '87': [0, 0.69141, 0, 0],\n    '88': [0, 0.69141, 0, 0],\n    '89': [0.18906, 0.69141, 0, 0],\n    '90': [0.12604, 0.69141, 0, 0],\n    '91': [0.24982, 0.74947, 0, 0],\n    '93': [0.24982, 0.74947, 0, 0],\n    '94': [0, 0.69141, 0, 0],\n    '97': [0, 0.47534, 0, 0],\n    '98': [0, 0.69141, 0, 0],\n    '99': [0, 0.47534, 0, 0],\n    '100': [0, 0.62119, 0, 0],\n    '101': [0, 0.47534, 0, 0],\n    '102': [0.18906, 0.69141, 0, 0],\n    '103': [0.18906, 0.47534, 0, 0],\n    '104': [0.18906, 0.69141, 0, 0],\n    '105': [0, 0.69141, 0, 0],\n    '106': [0, 0.69141, 0, 0],\n    '107': [0, 0.69141, 0, 0],\n    '108': [0, 0.69141, 0, 0],\n    '109': [0, 0.47534, 0, 0],\n    '110': [0, 0.47534, 0, 0],\n    '111': [0, 0.47534, 0, 0],\n    '112': [0.18906, 0.52396, 0, 0],\n    '113': [0.18906, 0.47534, 0, 0],\n    '114': [0, 0.47534, 0, 0],\n    '115': [0, 0.47534, 0, 0],\n    '116': [0, 0.62119, 0, 0],\n    '117': [0, 0.47534, 0, 0],\n    '118': [0, 0.52396, 0, 0],\n    '119': [0, 0.52396, 0, 0],\n    '120': [0.18906, 0.47534, 0, 0],\n    '121': [0.18906, 0.47534, 0, 0],\n    '122': [0.18906, 0.47534, 0, 0],\n    '8216': [0, 0.69141, 0, 0],\n    '8217': [0, 0.69141, 0, 0],\n    '58112': [0, 0.62119, 0, 0],\n    '58113': [0, 0.62119, 0, 0],\n    '58114': [0.18906, 0.69141, 0, 0],\n    '58115': [0.18906, 0.69141, 0, 0],\n    '58116': [0.18906, 0.47534, 0, 0],\n    '58117': [0, 0.69141, 0, 0],\n    '58118': [0, 0.62119, 0, 0],\n    '58119': [0, 0.47534, 0, 0]\n  },\n  'Main-Bold': {\n    '33': [0, 0.69444, 0, 0],\n    '34': [0, 0.69444, 0, 0],\n    '35': [0.19444, 0.69444, 0, 0],\n    '36': [0.05556, 0.75, 0, 0],\n    '37': [0.05556, 0.75, 0, 0],\n    '38': [0, 0.69444, 0, 0],\n    '39': [0, 0.69444, 0, 0],\n    '40': [0.25, 0.75, 0, 0],\n    '41': [0.25, 0.75, 0, 0],\n    '42': [0, 0.75, 0, 0],\n    '43': [0.13333, 0.63333, 0, 0],\n    '44': [0.19444, 0.15556, 0, 0],\n    '45': [0, 0.44444, 0, 0],\n    '46': [0, 0.15556, 0, 0],\n    '47': [0.25, 0.75, 0, 0],\n    '48': [0, 0.64444, 0, 0],\n    '49': [0, 0.64444, 0, 0],\n    '50': [0, 0.64444, 0, 0],\n    '51': [0, 0.64444, 0, 0],\n    '52': [0, 0.64444, 0, 0],\n    '53': [0, 0.64444, 0, 0],\n    '54': [0, 0.64444, 0, 0],\n    '55': [0, 0.64444, 0, 0],\n    '56': [0, 0.64444, 0, 0],\n    '57': [0, 0.64444, 0, 0],\n    '58': [0, 0.44444, 0, 0],\n    '59': [0.19444, 0.44444, 0, 0],\n    '60': [0.08556, 0.58556, 0, 0],\n    '61': [-0.10889, 0.39111, 0, 0],\n    '62': [0.08556, 0.58556, 0, 0],\n    '63': [0, 0.69444, 0, 0],\n    '64': [0, 0.69444, 0, 0],\n    '65': [0, 0.68611, 0, 0],\n    '66': [0, 0.68611, 0, 0],\n    '67': [0, 0.68611, 0, 0],\n    '68': [0, 0.68611, 0, 0],\n    '69': [0, 0.68611, 0, 0],\n    '70': [0, 0.68611, 0, 0],\n    '71': [0, 0.68611, 0, 0],\n    '72': [0, 0.68611, 0, 0],\n    '73': [0, 0.68611, 0, 0],\n    '74': [0, 0.68611, 0, 0],\n    '75': [0, 0.68611, 0, 0],\n    '76': [0, 0.68611, 0, 0],\n    '77': [0, 0.68611, 0, 0],\n    '78': [0, 0.68611, 0, 0],\n    '79': [0, 0.68611, 0, 0],\n    '80': [0, 0.68611, 0, 0],\n    '81': [0.19444, 0.68611, 0, 0],\n    '82': [0, 0.68611, 0, 0],\n    '83': [0, 0.68611, 0, 0],\n    '84': [0, 0.68611, 0, 0],\n    '85': [0, 0.68611, 0, 0],\n    '86': [0, 0.68611, 0.01597, 0],\n    '87': [0, 0.68611, 0.01597, 0],\n    '88': [0, 0.68611, 0, 0],\n    '89': [0, 0.68611, 0.02875, 0],\n    '90': [0, 0.68611, 0, 0],\n    '91': [0.25, 0.75, 0, 0],\n    '92': [0.25, 0.75, 0, 0],\n    '93': [0.25, 0.75, 0, 0],\n    '94': [0, 0.69444, 0, 0],\n    '95': [0.31, 0.13444, 0.03194, 0],\n    '97': [0, 0.44444, 0, 0],\n    '98': [0, 0.69444, 0, 0],\n    '99': [0, 0.44444, 0, 0],\n    '100': [0, 0.69444, 0, 0],\n    '101': [0, 0.44444, 0, 0],\n    '102': [0, 0.69444, 0.10903, 0],\n    '103': [0.19444, 0.44444, 0.01597, 0],\n    '104': [0, 0.69444, 0, 0],\n    '105': [0, 0.69444, 0, 0],\n    '106': [0.19444, 0.69444, 0, 0],\n    '107': [0, 0.69444, 0, 0],\n    '108': [0, 0.69444, 0, 0],\n    '109': [0, 0.44444, 0, 0],\n    '110': [0, 0.44444, 0, 0],\n    '111': [0, 0.44444, 0, 0],\n    '112': [0.19444, 0.44444, 0, 0],\n    '113': [0.19444, 0.44444, 0, 0],\n    '114': [0, 0.44444, 0, 0],\n    '115': [0, 0.44444, 0, 0],\n    '116': [0, 0.63492, 0, 0],\n    '117': [0, 0.44444, 0, 0],\n    '118': [0, 0.44444, 0.01597, 0],\n    '119': [0, 0.44444, 0.01597, 0],\n    '120': [0, 0.44444, 0, 0],\n    '121': [0.19444, 0.44444, 0.01597, 0],\n    '122': [0, 0.44444, 0, 0],\n    '123': [0.25, 0.75, 0, 0],\n    '124': [0.25, 0.75, 0, 0],\n    '125': [0.25, 0.75, 0, 0],\n    '126': [0.35, 0.34444, 0, 0],\n    '168': [0, 0.69444, 0, 0],\n    '172': [0, 0.44444, 0, 0],\n    '176': [0, 0.69444, 0, 0],\n    '177': [0.13333, 0.63333, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '198': [0, 0.68611, 0, 0],\n    '215': [0.13333, 0.63333, 0, 0],\n    '216': [0.04861, 0.73472, 0, 0],\n    '223': [0, 0.69444, 0, 0],\n    '230': [0, 0.44444, 0, 0],\n    '247': [0.13333, 0.63333, 0, 0],\n    '248': [0.09722, 0.54167, 0, 0],\n    '305': [0, 0.44444, 0, 0],\n    '338': [0, 0.68611, 0, 0],\n    '339': [0, 0.44444, 0, 0],\n    '567': [0.19444, 0.44444, 0, 0],\n    '710': [0, 0.69444, 0, 0],\n    '711': [0, 0.63194, 0, 0],\n    '713': [0, 0.59611, 0, 0],\n    '714': [0, 0.69444, 0, 0],\n    '715': [0, 0.69444, 0, 0],\n    '728': [0, 0.69444, 0, 0],\n    '729': [0, 0.69444, 0, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.69444, 0, 0],\n    '733': [0, 0.69444, 0, 0],\n    '915': [0, 0.68611, 0, 0],\n    '916': [0, 0.68611, 0, 0],\n    '920': [0, 0.68611, 0, 0],\n    '923': [0, 0.68611, 0, 0],\n    '926': [0, 0.68611, 0, 0],\n    '928': [0, 0.68611, 0, 0],\n    '931': [0, 0.68611, 0, 0],\n    '933': [0, 0.68611, 0, 0],\n    '934': [0, 0.68611, 0, 0],\n    '936': [0, 0.68611, 0, 0],\n    '937': [0, 0.68611, 0, 0],\n    '8211': [0, 0.44444, 0.03194, 0],\n    '8212': [0, 0.44444, 0.03194, 0],\n    '8216': [0, 0.69444, 0, 0],\n    '8217': [0, 0.69444, 0, 0],\n    '8220': [0, 0.69444, 0, 0],\n    '8221': [0, 0.69444, 0, 0],\n    '8224': [0.19444, 0.69444, 0, 0],\n    '8225': [0.19444, 0.69444, 0, 0],\n    '8242': [0, 0.55556, 0, 0],\n    '8407': [0, 0.72444, 0.15486, 0],\n    '8463': [0, 0.69444, 0, 0],\n    '8465': [0, 0.69444, 0, 0],\n    '8467': [0, 0.69444, 0, 0],\n    '8472': [0.19444, 0.44444, 0, 0],\n    '8476': [0, 0.69444, 0, 0],\n    '8501': [0, 0.69444, 0, 0],\n    '8592': [-0.10889, 0.39111, 0, 0],\n    '8593': [0.19444, 0.69444, 0, 0],\n    '8594': [-0.10889, 0.39111, 0, 0],\n    '8595': [0.19444, 0.69444, 0, 0],\n    '8596': [-0.10889, 0.39111, 0, 0],\n    '8597': [0.25, 0.75, 0, 0],\n    '8598': [0.19444, 0.69444, 0, 0],\n    '8599': [0.19444, 0.69444, 0, 0],\n    '8600': [0.19444, 0.69444, 0, 0],\n    '8601': [0.19444, 0.69444, 0, 0],\n    '8636': [-0.10889, 0.39111, 0, 0],\n    '8637': [-0.10889, 0.39111, 0, 0],\n    '8640': [-0.10889, 0.39111, 0, 0],\n    '8641': [-0.10889, 0.39111, 0, 0],\n    '8656': [-0.10889, 0.39111, 0, 0],\n    '8657': [0.19444, 0.69444, 0, 0],\n    '8658': [-0.10889, 0.39111, 0, 0],\n    '8659': [0.19444, 0.69444, 0, 0],\n    '8660': [-0.10889, 0.39111, 0, 0],\n    '8661': [0.25, 0.75, 0, 0],\n    '8704': [0, 0.69444, 0, 0],\n    '8706': [0, 0.69444, 0.06389, 0],\n    '8707': [0, 0.69444, 0, 0],\n    '8709': [0.05556, 0.75, 0, 0],\n    '8711': [0, 0.68611, 0, 0],\n    '8712': [0.08556, 0.58556, 0, 0],\n    '8715': [0.08556, 0.58556, 0, 0],\n    '8722': [0.13333, 0.63333, 0, 0],\n    '8723': [0.13333, 0.63333, 0, 0],\n    '8725': [0.25, 0.75, 0, 0],\n    '8726': [0.25, 0.75, 0, 0],\n    '8727': [-0.02778, 0.47222, 0, 0],\n    '8728': [-0.02639, 0.47361, 0, 0],\n    '8729': [-0.02639, 0.47361, 0, 0],\n    '8730': [0.18, 0.82, 0, 0],\n    '8733': [0, 0.44444, 0, 0],\n    '8734': [0, 0.44444, 0, 0],\n    '8736': [0, 0.69224, 0, 0],\n    '8739': [0.25, 0.75, 0, 0],\n    '8741': [0.25, 0.75, 0, 0],\n    '8743': [0, 0.55556, 0, 0],\n    '8744': [0, 0.55556, 0, 0],\n    '8745': [0, 0.55556, 0, 0],\n    '8746': [0, 0.55556, 0, 0],\n    '8747': [0.19444, 0.69444, 0.12778, 0],\n    '8764': [-0.10889, 0.39111, 0, 0],\n    '8768': [0.19444, 0.69444, 0, 0],\n    '8771': [0.00222, 0.50222, 0, 0],\n    '8776': [0.02444, 0.52444, 0, 0],\n    '8781': [0.00222, 0.50222, 0, 0],\n    '8801': [0.00222, 0.50222, 0, 0],\n    '8804': [0.19667, 0.69667, 0, 0],\n    '8805': [0.19667, 0.69667, 0, 0],\n    '8810': [0.08556, 0.58556, 0, 0],\n    '8811': [0.08556, 0.58556, 0, 0],\n    '8826': [0.08556, 0.58556, 0, 0],\n    '8827': [0.08556, 0.58556, 0, 0],\n    '8834': [0.08556, 0.58556, 0, 0],\n    '8835': [0.08556, 0.58556, 0, 0],\n    '8838': [0.19667, 0.69667, 0, 0],\n    '8839': [0.19667, 0.69667, 0, 0],\n    '8846': [0, 0.55556, 0, 0],\n    '8849': [0.19667, 0.69667, 0, 0],\n    '8850': [0.19667, 0.69667, 0, 0],\n    '8851': [0, 0.55556, 0, 0],\n    '8852': [0, 0.55556, 0, 0],\n    '8853': [0.13333, 0.63333, 0, 0],\n    '8854': [0.13333, 0.63333, 0, 0],\n    '8855': [0.13333, 0.63333, 0, 0],\n    '8856': [0.13333, 0.63333, 0, 0],\n    '8857': [0.13333, 0.63333, 0, 0],\n    '8866': [0, 0.69444, 0, 0],\n    '8867': [0, 0.69444, 0, 0],\n    '8868': [0, 0.69444, 0, 0],\n    '8869': [0, 0.69444, 0, 0],\n    '8900': [-0.02639, 0.47361, 0, 0],\n    '8901': [-0.02639, 0.47361, 0, 0],\n    '8902': [-0.02778, 0.47222, 0, 0],\n    '8968': [0.25, 0.75, 0, 0],\n    '8969': [0.25, 0.75, 0, 0],\n    '8970': [0.25, 0.75, 0, 0],\n    '8971': [0.25, 0.75, 0, 0],\n    '8994': [-0.13889, 0.36111, 0, 0],\n    '8995': [-0.13889, 0.36111, 0, 0],\n    '9651': [0.19444, 0.69444, 0, 0],\n    '9657': [-0.02778, 0.47222, 0, 0],\n    '9661': [0.19444, 0.69444, 0, 0],\n    '9667': [-0.02778, 0.47222, 0, 0],\n    '9711': [0.19444, 0.69444, 0, 0],\n    '9824': [0.12963, 0.69444, 0, 0],\n    '9825': [0.12963, 0.69444, 0, 0],\n    '9826': [0.12963, 0.69444, 0, 0],\n    '9827': [0.12963, 0.69444, 0, 0],\n    '9837': [0, 0.75, 0, 0],\n    '9838': [0.19444, 0.69444, 0, 0],\n    '9839': [0.19444, 0.69444, 0, 0],\n    '10216': [0.25, 0.75, 0, 0],\n    '10217': [0.25, 0.75, 0, 0],\n    '10815': [0, 0.68611, 0, 0],\n    '10927': [0.19667, 0.69667, 0, 0],\n    '10928': [0.19667, 0.69667, 0, 0],\n    '57376': [0.19444, 0.69444, 0, 0]\n  },\n  'Main-BoldItalic': {\n    '33': [0, 0.69444, 0.11417, 0],\n    '34': [0, 0.69444, 0.07939, 0],\n    '35': [0.19444, 0.69444, 0.06833, 0],\n    '37': [0.05556, 0.75, 0.12861, 0],\n    '38': [0, 0.69444, 0.08528, 0],\n    '39': [0, 0.69444, 0.12945, 0],\n    '40': [0.25, 0.75, 0.15806, 0],\n    '41': [0.25, 0.75, 0.03306, 0],\n    '42': [0, 0.75, 0.14333, 0],\n    '43': [0.10333, 0.60333, 0.03306, 0],\n    '44': [0.19444, 0.14722, 0, 0],\n    '45': [0, 0.44444, 0.02611, 0],\n    '46': [0, 0.14722, 0, 0],\n    '47': [0.25, 0.75, 0.15806, 0],\n    '48': [0, 0.64444, 0.13167, 0],\n    '49': [0, 0.64444, 0.13167, 0],\n    '50': [0, 0.64444, 0.13167, 0],\n    '51': [0, 0.64444, 0.13167, 0],\n    '52': [0.19444, 0.64444, 0.13167, 0],\n    '53': [0, 0.64444, 0.13167, 0],\n    '54': [0, 0.64444, 0.13167, 0],\n    '55': [0.19444, 0.64444, 0.13167, 0],\n    '56': [0, 0.64444, 0.13167, 0],\n    '57': [0, 0.64444, 0.13167, 0],\n    '58': [0, 0.44444, 0.06695, 0],\n    '59': [0.19444, 0.44444, 0.06695, 0],\n    '61': [-0.10889, 0.39111, 0.06833, 0],\n    '63': [0, 0.69444, 0.11472, 0],\n    '64': [0, 0.69444, 0.09208, 0],\n    '65': [0, 0.68611, 0, 0],\n    '66': [0, 0.68611, 0.0992, 0],\n    '67': [0, 0.68611, 0.14208, 0],\n    '68': [0, 0.68611, 0.09062, 0],\n    '69': [0, 0.68611, 0.11431, 0],\n    '70': [0, 0.68611, 0.12903, 0],\n    '71': [0, 0.68611, 0.07347, 0],\n    '72': [0, 0.68611, 0.17208, 0],\n    '73': [0, 0.68611, 0.15681, 0],\n    '74': [0, 0.68611, 0.145, 0],\n    '75': [0, 0.68611, 0.14208, 0],\n    '76': [0, 0.68611, 0, 0],\n    '77': [0, 0.68611, 0.17208, 0],\n    '78': [0, 0.68611, 0.17208, 0],\n    '79': [0, 0.68611, 0.09062, 0],\n    '80': [0, 0.68611, 0.0992, 0],\n    '81': [0.19444, 0.68611, 0.09062, 0],\n    '82': [0, 0.68611, 0.02559, 0],\n    '83': [0, 0.68611, 0.11264, 0],\n    '84': [0, 0.68611, 0.12903, 0],\n    '85': [0, 0.68611, 0.17208, 0],\n    '86': [0, 0.68611, 0.18625, 0],\n    '87': [0, 0.68611, 0.18625, 0],\n    '88': [0, 0.68611, 0.15681, 0],\n    '89': [0, 0.68611, 0.19803, 0],\n    '90': [0, 0.68611, 0.14208, 0],\n    '91': [0.25, 0.75, 0.1875, 0],\n    '93': [0.25, 0.75, 0.09972, 0],\n    '94': [0, 0.69444, 0.06709, 0],\n    '95': [0.31, 0.13444, 0.09811, 0],\n    '97': [0, 0.44444, 0.09426, 0],\n    '98': [0, 0.69444, 0.07861, 0],\n    '99': [0, 0.44444, 0.05222, 0],\n    '100': [0, 0.69444, 0.10861, 0],\n    '101': [0, 0.44444, 0.085, 0],\n    '102': [0.19444, 0.69444, 0.21778, 0],\n    '103': [0.19444, 0.44444, 0.105, 0],\n    '104': [0, 0.69444, 0.09426, 0],\n    '105': [0, 0.69326, 0.11387, 0],\n    '106': [0.19444, 0.69326, 0.1672, 0],\n    '107': [0, 0.69444, 0.11111, 0],\n    '108': [0, 0.69444, 0.10861, 0],\n    '109': [0, 0.44444, 0.09426, 0],\n    '110': [0, 0.44444, 0.09426, 0],\n    '111': [0, 0.44444, 0.07861, 0],\n    '112': [0.19444, 0.44444, 0.07861, 0],\n    '113': [0.19444, 0.44444, 0.105, 0],\n    '114': [0, 0.44444, 0.11111, 0],\n    '115': [0, 0.44444, 0.08167, 0],\n    '116': [0, 0.63492, 0.09639, 0],\n    '117': [0, 0.44444, 0.09426, 0],\n    '118': [0, 0.44444, 0.11111, 0],\n    '119': [0, 0.44444, 0.11111, 0],\n    '120': [0, 0.44444, 0.12583, 0],\n    '121': [0.19444, 0.44444, 0.105, 0],\n    '122': [0, 0.44444, 0.13889, 0],\n    '126': [0.35, 0.34444, 0.11472, 0],\n    '163': [0, 0.69444, 0, 0],\n    '168': [0, 0.69444, 0.11473, 0],\n    '176': [0, 0.69444, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '198': [0, 0.68611, 0.11431, 0],\n    '216': [0.04861, 0.73472, 0.09062, 0],\n    '223': [0.19444, 0.69444, 0.09736, 0],\n    '230': [0, 0.44444, 0.085, 0],\n    '248': [0.09722, 0.54167, 0.09458, 0],\n    '305': [0, 0.44444, 0.09426, 0],\n    '338': [0, 0.68611, 0.11431, 0],\n    '339': [0, 0.44444, 0.085, 0],\n    '567': [0.19444, 0.44444, 0.04611, 0],\n    '710': [0, 0.69444, 0.06709, 0],\n    '711': [0, 0.63194, 0.08271, 0],\n    '713': [0, 0.59444, 0.10444, 0],\n    '714': [0, 0.69444, 0.08528, 0],\n    '715': [0, 0.69444, 0, 0],\n    '728': [0, 0.69444, 0.10333, 0],\n    '729': [0, 0.69444, 0.12945, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.69444, 0.11472, 0],\n    '733': [0, 0.69444, 0.11472, 0],\n    '915': [0, 0.68611, 0.12903, 0],\n    '916': [0, 0.68611, 0, 0],\n    '920': [0, 0.68611, 0.09062, 0],\n    '923': [0, 0.68611, 0, 0],\n    '926': [0, 0.68611, 0.15092, 0],\n    '928': [0, 0.68611, 0.17208, 0],\n    '931': [0, 0.68611, 0.11431, 0],\n    '933': [0, 0.68611, 0.10778, 0],\n    '934': [0, 0.68611, 0.05632, 0],\n    '936': [0, 0.68611, 0.10778, 0],\n    '937': [0, 0.68611, 0.0992, 0],\n    '8211': [0, 0.44444, 0.09811, 0],\n    '8212': [0, 0.44444, 0.09811, 0],\n    '8216': [0, 0.69444, 0.12945, 0],\n    '8217': [0, 0.69444, 0.12945, 0],\n    '8220': [0, 0.69444, 0.16772, 0],\n    '8221': [0, 0.69444, 0.07939, 0]\n  },\n  'Main-Italic': {\n    '33': [0, 0.69444, 0.12417, 0],\n    '34': [0, 0.69444, 0.06961, 0],\n    '35': [0.19444, 0.69444, 0.06616, 0],\n    '37': [0.05556, 0.75, 0.13639, 0],\n    '38': [0, 0.69444, 0.09694, 0],\n    '39': [0, 0.69444, 0.12417, 0],\n    '40': [0.25, 0.75, 0.16194, 0],\n    '41': [0.25, 0.75, 0.03694, 0],\n    '42': [0, 0.75, 0.14917, 0],\n    '43': [0.05667, 0.56167, 0.03694, 0],\n    '44': [0.19444, 0.10556, 0, 0],\n    '45': [0, 0.43056, 0.02826, 0],\n    '46': [0, 0.10556, 0, 0],\n    '47': [0.25, 0.75, 0.16194, 0],\n    '48': [0, 0.64444, 0.13556, 0],\n    '49': [0, 0.64444, 0.13556, 0],\n    '50': [0, 0.64444, 0.13556, 0],\n    '51': [0, 0.64444, 0.13556, 0],\n    '52': [0.19444, 0.64444, 0.13556, 0],\n    '53': [0, 0.64444, 0.13556, 0],\n    '54': [0, 0.64444, 0.13556, 0],\n    '55': [0.19444, 0.64444, 0.13556, 0],\n    '56': [0, 0.64444, 0.13556, 0],\n    '57': [0, 0.64444, 0.13556, 0],\n    '58': [0, 0.43056, 0.0582, 0],\n    '59': [0.19444, 0.43056, 0.0582, 0],\n    '61': [-0.13313, 0.36687, 0.06616, 0],\n    '63': [0, 0.69444, 0.1225, 0],\n    '64': [0, 0.69444, 0.09597, 0],\n    '65': [0, 0.68333, 0, 0],\n    '66': [0, 0.68333, 0.10257, 0],\n    '67': [0, 0.68333, 0.14528, 0],\n    '68': [0, 0.68333, 0.09403, 0],\n    '69': [0, 0.68333, 0.12028, 0],\n    '70': [0, 0.68333, 0.13305, 0],\n    '71': [0, 0.68333, 0.08722, 0],\n    '72': [0, 0.68333, 0.16389, 0],\n    '73': [0, 0.68333, 0.15806, 0],\n    '74': [0, 0.68333, 0.14028, 0],\n    '75': [0, 0.68333, 0.14528, 0],\n    '76': [0, 0.68333, 0, 0],\n    '77': [0, 0.68333, 0.16389, 0],\n    '78': [0, 0.68333, 0.16389, 0],\n    '79': [0, 0.68333, 0.09403, 0],\n    '80': [0, 0.68333, 0.10257, 0],\n    '81': [0.19444, 0.68333, 0.09403, 0],\n    '82': [0, 0.68333, 0.03868, 0],\n    '83': [0, 0.68333, 0.11972, 0],\n    '84': [0, 0.68333, 0.13305, 0],\n    '85': [0, 0.68333, 0.16389, 0],\n    '86': [0, 0.68333, 0.18361, 0],\n    '87': [0, 0.68333, 0.18361, 0],\n    '88': [0, 0.68333, 0.15806, 0],\n    '89': [0, 0.68333, 0.19383, 0],\n    '90': [0, 0.68333, 0.14528, 0],\n    '91': [0.25, 0.75, 0.1875, 0],\n    '93': [0.25, 0.75, 0.10528, 0],\n    '94': [0, 0.69444, 0.06646, 0],\n    '95': [0.31, 0.12056, 0.09208, 0],\n    '97': [0, 0.43056, 0.07671, 0],\n    '98': [0, 0.69444, 0.06312, 0],\n    '99': [0, 0.43056, 0.05653, 0],\n    '100': [0, 0.69444, 0.10333, 0],\n    '101': [0, 0.43056, 0.07514, 0],\n    '102': [0.19444, 0.69444, 0.21194, 0],\n    '103': [0.19444, 0.43056, 0.08847, 0],\n    '104': [0, 0.69444, 0.07671, 0],\n    '105': [0, 0.65536, 0.1019, 0],\n    '106': [0.19444, 0.65536, 0.14467, 0],\n    '107': [0, 0.69444, 0.10764, 0],\n    '108': [0, 0.69444, 0.10333, 0],\n    '109': [0, 0.43056, 0.07671, 0],\n    '110': [0, 0.43056, 0.07671, 0],\n    '111': [0, 0.43056, 0.06312, 0],\n    '112': [0.19444, 0.43056, 0.06312, 0],\n    '113': [0.19444, 0.43056, 0.08847, 0],\n    '114': [0, 0.43056, 0.10764, 0],\n    '115': [0, 0.43056, 0.08208, 0],\n    '116': [0, 0.61508, 0.09486, 0],\n    '117': [0, 0.43056, 0.07671, 0],\n    '118': [0, 0.43056, 0.10764, 0],\n    '119': [0, 0.43056, 0.10764, 0],\n    '120': [0, 0.43056, 0.12042, 0],\n    '121': [0.19444, 0.43056, 0.08847, 0],\n    '122': [0, 0.43056, 0.12292, 0],\n    '126': [0.35, 0.31786, 0.11585, 0],\n    '163': [0, 0.69444, 0, 0],\n    '168': [0, 0.66786, 0.10474, 0],\n    '176': [0, 0.69444, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '198': [0, 0.68333, 0.12028, 0],\n    '216': [0.04861, 0.73194, 0.09403, 0],\n    '223': [0.19444, 0.69444, 0.10514, 0],\n    '230': [0, 0.43056, 0.07514, 0],\n    '248': [0.09722, 0.52778, 0.09194, 0],\n    '305': [0, 0.43056, 0, 0.02778],\n    '338': [0, 0.68333, 0.12028, 0],\n    '339': [0, 0.43056, 0.07514, 0],\n    '567': [0.19444, 0.43056, 0, 0.08334],\n    '710': [0, 0.69444, 0.06646, 0],\n    '711': [0, 0.62847, 0.08295, 0],\n    '713': [0, 0.56167, 0.10333, 0],\n    '714': [0, 0.69444, 0.09694, 0],\n    '715': [0, 0.69444, 0, 0],\n    '728': [0, 0.69444, 0.10806, 0],\n    '729': [0, 0.66786, 0.11752, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.66786, 0.11585, 0],\n    '733': [0, 0.69444, 0.1225, 0],\n    '915': [0, 0.68333, 0.13305, 0],\n    '916': [0, 0.68333, 0, 0],\n    '920': [0, 0.68333, 0.09403, 0],\n    '923': [0, 0.68333, 0, 0],\n    '926': [0, 0.68333, 0.15294, 0],\n    '928': [0, 0.68333, 0.16389, 0],\n    '931': [0, 0.68333, 0.12028, 0],\n    '933': [0, 0.68333, 0.11111, 0],\n    '934': [0, 0.68333, 0.05986, 0],\n    '936': [0, 0.68333, 0.11111, 0],\n    '937': [0, 0.68333, 0.10257, 0],\n    '8211': [0, 0.43056, 0.09208, 0],\n    '8212': [0, 0.43056, 0.09208, 0],\n    '8216': [0, 0.69444, 0.12417, 0],\n    '8217': [0, 0.69444, 0.12417, 0],\n    '8220': [0, 0.69444, 0.1685, 0],\n    '8221': [0, 0.69444, 0.06961, 0],\n    '8463': [0, 0.68889, 0, 0]\n  },\n  'Main-Regular': {\n    '32': [0, 0, 0, 0],\n    '33': [0, 0.69444, 0, 0],\n    '34': [0, 0.69444, 0, 0],\n    '35': [0.19444, 0.69444, 0, 0],\n    '36': [0.05556, 0.75, 0, 0],\n    '37': [0.05556, 0.75, 0, 0],\n    '38': [0, 0.69444, 0, 0],\n    '39': [0, 0.69444, 0, 0],\n    '40': [0.25, 0.75, 0, 0],\n    '41': [0.25, 0.75, 0, 0],\n    '42': [0, 0.75, 0, 0],\n    '43': [0.08333, 0.58333, 0, 0],\n    '44': [0.19444, 0.10556, 0, 0],\n    '45': [0, 0.43056, 0, 0],\n    '46': [0, 0.10556, 0, 0],\n    '47': [0.25, 0.75, 0, 0],\n    '48': [0, 0.64444, 0, 0],\n    '49': [0, 0.64444, 0, 0],\n    '50': [0, 0.64444, 0, 0],\n    '51': [0, 0.64444, 0, 0],\n    '52': [0, 0.64444, 0, 0],\n    '53': [0, 0.64444, 0, 0],\n    '54': [0, 0.64444, 0, 0],\n    '55': [0, 0.64444, 0, 0],\n    '56': [0, 0.64444, 0, 0],\n    '57': [0, 0.64444, 0, 0],\n    '58': [0, 0.43056, 0, 0],\n    '59': [0.19444, 0.43056, 0, 0],\n    '60': [0.0391, 0.5391, 0, 0],\n    '61': [-0.13313, 0.36687, 0, 0],\n    '62': [0.0391, 0.5391, 0, 0],\n    '63': [0, 0.69444, 0, 0],\n    '64': [0, 0.69444, 0, 0],\n    '65': [0, 0.68333, 0, 0],\n    '66': [0, 0.68333, 0, 0],\n    '67': [0, 0.68333, 0, 0],\n    '68': [0, 0.68333, 0, 0],\n    '69': [0, 0.68333, 0, 0],\n    '70': [0, 0.68333, 0, 0],\n    '71': [0, 0.68333, 0, 0],\n    '72': [0, 0.68333, 0, 0],\n    '73': [0, 0.68333, 0, 0],\n    '74': [0, 0.68333, 0, 0],\n    '75': [0, 0.68333, 0, 0],\n    '76': [0, 0.68333, 0, 0],\n    '77': [0, 0.68333, 0, 0],\n    '78': [0, 0.68333, 0, 0],\n    '79': [0, 0.68333, 0, 0],\n    '80': [0, 0.68333, 0, 0],\n    '81': [0.19444, 0.68333, 0, 0],\n    '82': [0, 0.68333, 0, 0],\n    '83': [0, 0.68333, 0, 0],\n    '84': [0, 0.68333, 0, 0],\n    '85': [0, 0.68333, 0, 0],\n    '86': [0, 0.68333, 0.01389, 0],\n    '87': [0, 0.68333, 0.01389, 0],\n    '88': [0, 0.68333, 0, 0],\n    '89': [0, 0.68333, 0.025, 0],\n    '90': [0, 0.68333, 0, 0],\n    '91': [0.25, 0.75, 0, 0],\n    '92': [0.25, 0.75, 0, 0],\n    '93': [0.25, 0.75, 0, 0],\n    '94': [0, 0.69444, 0, 0],\n    '95': [0.31, 0.12056, 0.02778, 0],\n    '97': [0, 0.43056, 0, 0],\n    '98': [0, 0.69444, 0, 0],\n    '99': [0, 0.43056, 0, 0],\n    '100': [0, 0.69444, 0, 0],\n    '101': [0, 0.43056, 0, 0],\n    '102': [0, 0.69444, 0.07778, 0],\n    '103': [0.19444, 0.43056, 0.01389, 0],\n    '104': [0, 0.69444, 0, 0],\n    '105': [0, 0.66786, 0, 0],\n    '106': [0.19444, 0.66786, 0, 0],\n    '107': [0, 0.69444, 0, 0],\n    '108': [0, 0.69444, 0, 0],\n    '109': [0, 0.43056, 0, 0],\n    '110': [0, 0.43056, 0, 0],\n    '111': [0, 0.43056, 0, 0],\n    '112': [0.19444, 0.43056, 0, 0],\n    '113': [0.19444, 0.43056, 0, 0],\n    '114': [0, 0.43056, 0, 0],\n    '115': [0, 0.43056, 0, 0],\n    '116': [0, 0.61508, 0, 0],\n    '117': [0, 0.43056, 0, 0],\n    '118': [0, 0.43056, 0.01389, 0],\n    '119': [0, 0.43056, 0.01389, 0],\n    '120': [0, 0.43056, 0, 0],\n    '121': [0.19444, 0.43056, 0.01389, 0],\n    '122': [0, 0.43056, 0, 0],\n    '123': [0.25, 0.75, 0, 0],\n    '124': [0.25, 0.75, 0, 0],\n    '125': [0.25, 0.75, 0, 0],\n    '126': [0.35, 0.31786, 0, 0],\n    '160': [0, 0, 0, 0],\n    '167': [0.19444, 0.69444, 0, 0],\n    '168': [0, 0.66786, 0, 0],\n    '172': [0, 0.43056, 0, 0],\n    '176': [0, 0.69444, 0, 0],\n    '177': [0.08333, 0.58333, 0, 0],\n    '182': [0.19444, 0.69444, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '198': [0, 0.68333, 0, 0],\n    '215': [0.08333, 0.58333, 0, 0],\n    '216': [0.04861, 0.73194, 0, 0],\n    '223': [0, 0.69444, 0, 0],\n    '230': [0, 0.43056, 0, 0],\n    '247': [0.08333, 0.58333, 0, 0],\n    '248': [0.09722, 0.52778, 0, 0],\n    '305': [0, 0.43056, 0, 0],\n    '338': [0, 0.68333, 0, 0],\n    '339': [0, 0.43056, 0, 0],\n    '567': [0.19444, 0.43056, 0, 0],\n    '710': [0, 0.69444, 0, 0],\n    '711': [0, 0.62847, 0, 0],\n    '713': [0, 0.56778, 0, 0],\n    '714': [0, 0.69444, 0, 0],\n    '715': [0, 0.69444, 0, 0],\n    '728': [0, 0.69444, 0, 0],\n    '729': [0, 0.66786, 0, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.66786, 0, 0],\n    '733': [0, 0.69444, 0, 0],\n    '915': [0, 0.68333, 0, 0],\n    '916': [0, 0.68333, 0, 0],\n    '920': [0, 0.68333, 0, 0],\n    '923': [0, 0.68333, 0, 0],\n    '926': [0, 0.68333, 0, 0],\n    '928': [0, 0.68333, 0, 0],\n    '931': [0, 0.68333, 0, 0],\n    '933': [0, 0.68333, 0, 0],\n    '934': [0, 0.68333, 0, 0],\n    '936': [0, 0.68333, 0, 0],\n    '937': [0, 0.68333, 0, 0],\n    '8211': [0, 0.43056, 0.02778, 0],\n    '8212': [0, 0.43056, 0.02778, 0],\n    '8216': [0, 0.69444, 0, 0],\n    '8217': [0, 0.69444, 0, 0],\n    '8220': [0, 0.69444, 0, 0],\n    '8221': [0, 0.69444, 0, 0],\n    '8224': [0.19444, 0.69444, 0, 0],\n    '8225': [0.19444, 0.69444, 0, 0],\n    '8230': [0, 0.12, 0, 0],\n    '8242': [0, 0.55556, 0, 0],\n    '8407': [0, 0.71444, 0.15382, 0],\n    '8463': [0, 0.68889, 0, 0],\n    '8465': [0, 0.69444, 0, 0],\n    '8467': [0, 0.69444, 0, 0.11111],\n    '8472': [0.19444, 0.43056, 0, 0.11111],\n    '8476': [0, 0.69444, 0, 0],\n    '8501': [0, 0.69444, 0, 0],\n    '8592': [-0.13313, 0.36687, 0, 0],\n    '8593': [0.19444, 0.69444, 0, 0],\n    '8594': [-0.13313, 0.36687, 0, 0],\n    '8595': [0.19444, 0.69444, 0, 0],\n    '8596': [-0.13313, 0.36687, 0, 0],\n    '8597': [0.25, 0.75, 0, 0],\n    '8598': [0.19444, 0.69444, 0, 0],\n    '8599': [0.19444, 0.69444, 0, 0],\n    '8600': [0.19444, 0.69444, 0, 0],\n    '8601': [0.19444, 0.69444, 0, 0],\n    '8614': [0.011, 0.511, 0, 0],\n    '8617': [0.011, 0.511, 0, 0],\n    '8618': [0.011, 0.511, 0, 0],\n    '8636': [-0.13313, 0.36687, 0, 0],\n    '8637': [-0.13313, 0.36687, 0, 0],\n    '8640': [-0.13313, 0.36687, 0, 0],\n    '8641': [-0.13313, 0.36687, 0, 0],\n    '8652': [0.011, 0.671, 0, 0],\n    '8656': [-0.13313, 0.36687, 0, 0],\n    '8657': [0.19444, 0.69444, 0, 0],\n    '8658': [-0.13313, 0.36687, 0, 0],\n    '8659': [0.19444, 0.69444, 0, 0],\n    '8660': [-0.13313, 0.36687, 0, 0],\n    '8661': [0.25, 0.75, 0, 0],\n    '8704': [0, 0.69444, 0, 0],\n    '8706': [0, 0.69444, 0.05556, 0.08334],\n    '8707': [0, 0.69444, 0, 0],\n    '8709': [0.05556, 0.75, 0, 0],\n    '8711': [0, 0.68333, 0, 0],\n    '8712': [0.0391, 0.5391, 0, 0],\n    '8715': [0.0391, 0.5391, 0, 0],\n    '8722': [0.08333, 0.58333, 0, 0],\n    '8723': [0.08333, 0.58333, 0, 0],\n    '8725': [0.25, 0.75, 0, 0],\n    '8726': [0.25, 0.75, 0, 0],\n    '8727': [-0.03472, 0.46528, 0, 0],\n    '8728': [-0.05555, 0.44445, 0, 0],\n    '8729': [-0.05555, 0.44445, 0, 0],\n    '8730': [0.2, 0.8, 0, 0],\n    '8733': [0, 0.43056, 0, 0],\n    '8734': [0, 0.43056, 0, 0],\n    '8736': [0, 0.69224, 0, 0],\n    '8739': [0.25, 0.75, 0, 0],\n    '8741': [0.25, 0.75, 0, 0],\n    '8743': [0, 0.55556, 0, 0],\n    '8744': [0, 0.55556, 0, 0],\n    '8745': [0, 0.55556, 0, 0],\n    '8746': [0, 0.55556, 0, 0],\n    '8747': [0.19444, 0.69444, 0.11111, 0],\n    '8764': [-0.13313, 0.36687, 0, 0],\n    '8768': [0.19444, 0.69444, 0, 0],\n    '8771': [-0.03625, 0.46375, 0, 0],\n    '8773': [-0.022, 0.589, 0, 0],\n    '8776': [-0.01688, 0.48312, 0, 0],\n    '8781': [-0.03625, 0.46375, 0, 0],\n    '8784': [-0.133, 0.67, 0, 0],\n    '8801': [-0.03625, 0.46375, 0, 0],\n    '8804': [0.13597, 0.63597, 0, 0],\n    '8805': [0.13597, 0.63597, 0, 0],\n    '8810': [0.0391, 0.5391, 0, 0],\n    '8811': [0.0391, 0.5391, 0, 0],\n    '8826': [0.0391, 0.5391, 0, 0],\n    '8827': [0.0391, 0.5391, 0, 0],\n    '8834': [0.0391, 0.5391, 0, 0],\n    '8835': [0.0391, 0.5391, 0, 0],\n    '8838': [0.13597, 0.63597, 0, 0],\n    '8839': [0.13597, 0.63597, 0, 0],\n    '8846': [0, 0.55556, 0, 0],\n    '8849': [0.13597, 0.63597, 0, 0],\n    '8850': [0.13597, 0.63597, 0, 0],\n    '8851': [0, 0.55556, 0, 0],\n    '8852': [0, 0.55556, 0, 0],\n    '8853': [0.08333, 0.58333, 0, 0],\n    '8854': [0.08333, 0.58333, 0, 0],\n    '8855': [0.08333, 0.58333, 0, 0],\n    '8856': [0.08333, 0.58333, 0, 0],\n    '8857': [0.08333, 0.58333, 0, 0],\n    '8866': [0, 0.69444, 0, 0],\n    '8867': [0, 0.69444, 0, 0],\n    '8868': [0, 0.69444, 0, 0],\n    '8869': [0, 0.69444, 0, 0],\n    '8872': [0.249, 0.75, 0, 0],\n    '8900': [-0.05555, 0.44445, 0, 0],\n    '8901': [-0.05555, 0.44445, 0, 0],\n    '8902': [-0.03472, 0.46528, 0, 0],\n    '8904': [0.005, 0.505, 0, 0],\n    '8942': [0.03, 0.9, 0, 0],\n    '8943': [-0.19, 0.31, 0, 0],\n    '8945': [-0.1, 0.82, 0, 0],\n    '8968': [0.25, 0.75, 0, 0],\n    '8969': [0.25, 0.75, 0, 0],\n    '8970': [0.25, 0.75, 0, 0],\n    '8971': [0.25, 0.75, 0, 0],\n    '8994': [-0.14236, 0.35764, 0, 0],\n    '8995': [-0.14236, 0.35764, 0, 0],\n    '9136': [0.244, 0.744, 0, 0],\n    '9137': [0.244, 0.744, 0, 0],\n    '9651': [0.19444, 0.69444, 0, 0],\n    '9657': [-0.03472, 0.46528, 0, 0],\n    '9661': [0.19444, 0.69444, 0, 0],\n    '9667': [-0.03472, 0.46528, 0, 0],\n    '9711': [0.19444, 0.69444, 0, 0],\n    '9824': [0.12963, 0.69444, 0, 0],\n    '9825': [0.12963, 0.69444, 0, 0],\n    '9826': [0.12963, 0.69444, 0, 0],\n    '9827': [0.12963, 0.69444, 0, 0],\n    '9837': [0, 0.75, 0, 0],\n    '9838': [0.19444, 0.69444, 0, 0],\n    '9839': [0.19444, 0.69444, 0, 0],\n    '10216': [0.25, 0.75, 0, 0],\n    '10217': [0.25, 0.75, 0, 0],\n    '10222': [0.244, 0.744, 0, 0],\n    '10223': [0.244, 0.744, 0, 0],\n    '10229': [0.011, 0.511, 0, 0],\n    '10230': [0.011, 0.511, 0, 0],\n    '10231': [0.011, 0.511, 0, 0],\n    '10232': [0.024, 0.525, 0, 0],\n    '10233': [0.024, 0.525, 0, 0],\n    '10234': [0.024, 0.525, 0, 0],\n    '10236': [0.011, 0.511, 0, 0],\n    '10815': [0, 0.68333, 0, 0],\n    '10927': [0.13597, 0.63597, 0, 0],\n    '10928': [0.13597, 0.63597, 0, 0],\n    '57376': [0.19444, 0.69444, 0, 0]\n  },\n  'Math-BoldItalic': {\n    '65': [0, 0.68611, 0, 0],\n    '66': [0, 0.68611, 0.04835, 0],\n    '67': [0, 0.68611, 0.06979, 0],\n    '68': [0, 0.68611, 0.03194, 0],\n    '69': [0, 0.68611, 0.05451, 0],\n    '70': [0, 0.68611, 0.15972, 0],\n    '71': [0, 0.68611, 0, 0],\n    '72': [0, 0.68611, 0.08229, 0],\n    '73': [0, 0.68611, 0.07778, 0],\n    '74': [0, 0.68611, 0.10069, 0],\n    '75': [0, 0.68611, 0.06979, 0],\n    '76': [0, 0.68611, 0, 0],\n    '77': [0, 0.68611, 0.11424, 0],\n    '78': [0, 0.68611, 0.11424, 0],\n    '79': [0, 0.68611, 0.03194, 0],\n    '80': [0, 0.68611, 0.15972, 0],\n    '81': [0.19444, 0.68611, 0, 0],\n    '82': [0, 0.68611, 0.00421, 0],\n    '83': [0, 0.68611, 0.05382, 0],\n    '84': [0, 0.68611, 0.15972, 0],\n    '85': [0, 0.68611, 0.11424, 0],\n    '86': [0, 0.68611, 0.25555, 0],\n    '87': [0, 0.68611, 0.15972, 0],\n    '88': [0, 0.68611, 0.07778, 0],\n    '89': [0, 0.68611, 0.25555, 0],\n    '90': [0, 0.68611, 0.06979, 0],\n    '97': [0, 0.44444, 0, 0],\n    '98': [0, 0.69444, 0, 0],\n    '99': [0, 0.44444, 0, 0],\n    '100': [0, 0.69444, 0, 0],\n    '101': [0, 0.44444, 0, 0],\n    '102': [0.19444, 0.69444, 0.11042, 0],\n    '103': [0.19444, 0.44444, 0.03704, 0],\n    '104': [0, 0.69444, 0, 0],\n    '105': [0, 0.69326, 0, 0],\n    '106': [0.19444, 0.69326, 0.0622, 0],\n    '107': [0, 0.69444, 0.01852, 0],\n    '108': [0, 0.69444, 0.0088, 0],\n    '109': [0, 0.44444, 0, 0],\n    '110': [0, 0.44444, 0, 0],\n    '111': [0, 0.44444, 0, 0],\n    '112': [0.19444, 0.44444, 0, 0],\n    '113': [0.19444, 0.44444, 0.03704, 0],\n    '114': [0, 0.44444, 0.03194, 0],\n    '115': [0, 0.44444, 0, 0],\n    '116': [0, 0.63492, 0, 0],\n    '117': [0, 0.44444, 0, 0],\n    '118': [0, 0.44444, 0.03704, 0],\n    '119': [0, 0.44444, 0.02778, 0],\n    '120': [0, 0.44444, 0, 0],\n    '121': [0.19444, 0.44444, 0.03704, 0],\n    '122': [0, 0.44444, 0.04213, 0],\n    '915': [0, 0.68611, 0.15972, 0],\n    '916': [0, 0.68611, 0, 0],\n    '920': [0, 0.68611, 0.03194, 0],\n    '923': [0, 0.68611, 0, 0],\n    '926': [0, 0.68611, 0.07458, 0],\n    '928': [0, 0.68611, 0.08229, 0],\n    '931': [0, 0.68611, 0.05451, 0],\n    '933': [0, 0.68611, 0.15972, 0],\n    '934': [0, 0.68611, 0, 0],\n    '936': [0, 0.68611, 0.11653, 0],\n    '937': [0, 0.68611, 0.04835, 0],\n    '945': [0, 0.44444, 0, 0],\n    '946': [0.19444, 0.69444, 0.03403, 0],\n    '947': [0.19444, 0.44444, 0.06389, 0],\n    '948': [0, 0.69444, 0.03819, 0],\n    '949': [0, 0.44444, 0, 0],\n    '950': [0.19444, 0.69444, 0.06215, 0],\n    '951': [0.19444, 0.44444, 0.03704, 0],\n    '952': [0, 0.69444, 0.03194, 0],\n    '953': [0, 0.44444, 0, 0],\n    '954': [0, 0.44444, 0, 0],\n    '955': [0, 0.69444, 0, 0],\n    '956': [0.19444, 0.44444, 0, 0],\n    '957': [0, 0.44444, 0.06898, 0],\n    '958': [0.19444, 0.69444, 0.03021, 0],\n    '959': [0, 0.44444, 0, 0],\n    '960': [0, 0.44444, 0.03704, 0],\n    '961': [0.19444, 0.44444, 0, 0],\n    '962': [0.09722, 0.44444, 0.07917, 0],\n    '963': [0, 0.44444, 0.03704, 0],\n    '964': [0, 0.44444, 0.13472, 0],\n    '965': [0, 0.44444, 0.03704, 0],\n    '966': [0.19444, 0.44444, 0, 0],\n    '967': [0.19444, 0.44444, 0, 0],\n    '968': [0.19444, 0.69444, 0.03704, 0],\n    '969': [0, 0.44444, 0.03704, 0],\n    '977': [0, 0.69444, 0, 0],\n    '981': [0.19444, 0.69444, 0, 0],\n    '982': [0, 0.44444, 0.03194, 0],\n    '1009': [0.19444, 0.44444, 0, 0],\n    '1013': [0, 0.44444, 0, 0]\n  },\n  'Math-Italic': {\n    '65': [0, 0.68333, 0, 0.13889],\n    '66': [0, 0.68333, 0.05017, 0.08334],\n    '67': [0, 0.68333, 0.07153, 0.08334],\n    '68': [0, 0.68333, 0.02778, 0.05556],\n    '69': [0, 0.68333, 0.05764, 0.08334],\n    '70': [0, 0.68333, 0.13889, 0.08334],\n    '71': [0, 0.68333, 0, 0.08334],\n    '72': [0, 0.68333, 0.08125, 0.05556],\n    '73': [0, 0.68333, 0.07847, 0.11111],\n    '74': [0, 0.68333, 0.09618, 0.16667],\n    '75': [0, 0.68333, 0.07153, 0.05556],\n    '76': [0, 0.68333, 0, 0.02778],\n    '77': [0, 0.68333, 0.10903, 0.08334],\n    '78': [0, 0.68333, 0.10903, 0.08334],\n    '79': [0, 0.68333, 0.02778, 0.08334],\n    '80': [0, 0.68333, 0.13889, 0.08334],\n    '81': [0.19444, 0.68333, 0, 0.08334],\n    '82': [0, 0.68333, 0.00773, 0.08334],\n    '83': [0, 0.68333, 0.05764, 0.08334],\n    '84': [0, 0.68333, 0.13889, 0.08334],\n    '85': [0, 0.68333, 0.10903, 0.02778],\n    '86': [0, 0.68333, 0.22222, 0],\n    '87': [0, 0.68333, 0.13889, 0],\n    '88': [0, 0.68333, 0.07847, 0.08334],\n    '89': [0, 0.68333, 0.22222, 0],\n    '90': [0, 0.68333, 0.07153, 0.08334],\n    '97': [0, 0.43056, 0, 0],\n    '98': [0, 0.69444, 0, 0],\n    '99': [0, 0.43056, 0, 0.05556],\n    '100': [0, 0.69444, 0, 0.16667],\n    '101': [0, 0.43056, 0, 0.05556],\n    '102': [0.19444, 0.69444, 0.10764, 0.16667],\n    '103': [0.19444, 0.43056, 0.03588, 0.02778],\n    '104': [0, 0.69444, 0, 0],\n    '105': [0, 0.65952, 0, 0],\n    '106': [0.19444, 0.65952, 0.05724, 0],\n    '107': [0, 0.69444, 0.03148, 0],\n    '108': [0, 0.69444, 0.01968, 0.08334],\n    '109': [0, 0.43056, 0, 0],\n    '110': [0, 0.43056, 0, 0],\n    '111': [0, 0.43056, 0, 0.05556],\n    '112': [0.19444, 0.43056, 0, 0.08334],\n    '113': [0.19444, 0.43056, 0.03588, 0.08334],\n    '114': [0, 0.43056, 0.02778, 0.05556],\n    '115': [0, 0.43056, 0, 0.05556],\n    '116': [0, 0.61508, 0, 0.08334],\n    '117': [0, 0.43056, 0, 0.02778],\n    '118': [0, 0.43056, 0.03588, 0.02778],\n    '119': [0, 0.43056, 0.02691, 0.08334],\n    '120': [0, 0.43056, 0, 0.02778],\n    '121': [0.19444, 0.43056, 0.03588, 0.05556],\n    '122': [0, 0.43056, 0.04398, 0.05556],\n    '915': [0, 0.68333, 0.13889, 0.08334],\n    '916': [0, 0.68333, 0, 0.16667],\n    '920': [0, 0.68333, 0.02778, 0.08334],\n    '923': [0, 0.68333, 0, 0.16667],\n    '926': [0, 0.68333, 0.07569, 0.08334],\n    '928': [0, 0.68333, 0.08125, 0.05556],\n    '931': [0, 0.68333, 0.05764, 0.08334],\n    '933': [0, 0.68333, 0.13889, 0.05556],\n    '934': [0, 0.68333, 0, 0.08334],\n    '936': [0, 0.68333, 0.11, 0.05556],\n    '937': [0, 0.68333, 0.05017, 0.08334],\n    '945': [0, 0.43056, 0.0037, 0.02778],\n    '946': [0.19444, 0.69444, 0.05278, 0.08334],\n    '947': [0.19444, 0.43056, 0.05556, 0],\n    '948': [0, 0.69444, 0.03785, 0.05556],\n    '949': [0, 0.43056, 0, 0.08334],\n    '950': [0.19444, 0.69444, 0.07378, 0.08334],\n    '951': [0.19444, 0.43056, 0.03588, 0.05556],\n    '952': [0, 0.69444, 0.02778, 0.08334],\n    '953': [0, 0.43056, 0, 0.05556],\n    '954': [0, 0.43056, 0, 0],\n    '955': [0, 0.69444, 0, 0],\n    '956': [0.19444, 0.43056, 0, 0.02778],\n    '957': [0, 0.43056, 0.06366, 0.02778],\n    '958': [0.19444, 0.69444, 0.04601, 0.11111],\n    '959': [0, 0.43056, 0, 0.05556],\n    '960': [0, 0.43056, 0.03588, 0],\n    '961': [0.19444, 0.43056, 0, 0.08334],\n    '962': [0.09722, 0.43056, 0.07986, 0.08334],\n    '963': [0, 0.43056, 0.03588, 0],\n    '964': [0, 0.43056, 0.1132, 0.02778],\n    '965': [0, 0.43056, 0.03588, 0.02778],\n    '966': [0.19444, 0.43056, 0, 0.08334],\n    '967': [0.19444, 0.43056, 0, 0.05556],\n    '968': [0.19444, 0.69444, 0.03588, 0.11111],\n    '969': [0, 0.43056, 0.03588, 0],\n    '977': [0, 0.69444, 0, 0.08334],\n    '981': [0.19444, 0.69444, 0, 0.08334],\n    '982': [0, 0.43056, 0.02778, 0],\n    '1009': [0.19444, 0.43056, 0, 0.08334],\n    '1013': [0, 0.43056, 0, 0.05556]\n  },\n  'SansSerif-Bold': {\n    '33': [0, 0.69444, 0, 0],\n    '34': [0, 0.69444, 0, 0],\n    '35': [0.19444, 0.69444, 0, 0],\n    '36': [0.05556, 0.75, 0, 0],\n    '37': [0.05556, 0.75, 0, 0],\n    '38': [0, 0.69444, 0, 0],\n    '39': [0, 0.69444, 0, 0],\n    '40': [0.25, 0.75, 0, 0],\n    '41': [0.25, 0.75, 0, 0],\n    '42': [0, 0.75, 0, 0],\n    '43': [0.11667, 0.61667, 0, 0],\n    '44': [0.10556, 0.13056, 0, 0],\n    '45': [0, 0.45833, 0, 0],\n    '46': [0, 0.13056, 0, 0],\n    '47': [0.25, 0.75, 0, 0],\n    '48': [0, 0.69444, 0, 0],\n    '49': [0, 0.69444, 0, 0],\n    '50': [0, 0.69444, 0, 0],\n    '51': [0, 0.69444, 0, 0],\n    '52': [0, 0.69444, 0, 0],\n    '53': [0, 0.69444, 0, 0],\n    '54': [0, 0.69444, 0, 0],\n    '55': [0, 0.69444, 0, 0],\n    '56': [0, 0.69444, 0, 0],\n    '57': [0, 0.69444, 0, 0],\n    '58': [0, 0.45833, 0, 0],\n    '59': [0.10556, 0.45833, 0, 0],\n    '61': [-0.09375, 0.40625, 0, 0],\n    '63': [0, 0.69444, 0, 0],\n    '64': [0, 0.69444, 0, 0],\n    '65': [0, 0.69444, 0, 0],\n    '66': [0, 0.69444, 0, 0],\n    '67': [0, 0.69444, 0, 0],\n    '68': [0, 0.69444, 0, 0],\n    '69': [0, 0.69444, 0, 0],\n    '70': [0, 0.69444, 0, 0],\n    '71': [0, 0.69444, 0, 0],\n    '72': [0, 0.69444, 0, 0],\n    '73': [0, 0.69444, 0, 0],\n    '74': [0, 0.69444, 0, 0],\n    '75': [0, 0.69444, 0, 0],\n    '76': [0, 0.69444, 0, 0],\n    '77': [0, 0.69444, 0, 0],\n    '78': [0, 0.69444, 0, 0],\n    '79': [0, 0.69444, 0, 0],\n    '80': [0, 0.69444, 0, 0],\n    '81': [0.10556, 0.69444, 0, 0],\n    '82': [0, 0.69444, 0, 0],\n    '83': [0, 0.69444, 0, 0],\n    '84': [0, 0.69444, 0, 0],\n    '85': [0, 0.69444, 0, 0],\n    '86': [0, 0.69444, 0.01528, 0],\n    '87': [0, 0.69444, 0.01528, 0],\n    '88': [0, 0.69444, 0, 0],\n    '89': [0, 0.69444, 0.0275, 0],\n    '90': [0, 0.69444, 0, 0],\n    '91': [0.25, 0.75, 0, 0],\n    '93': [0.25, 0.75, 0, 0],\n    '94': [0, 0.69444, 0, 0],\n    '95': [0.35, 0.10833, 0.03056, 0],\n    '97': [0, 0.45833, 0, 0],\n    '98': [0, 0.69444, 0, 0],\n    '99': [0, 0.45833, 0, 0],\n    '100': [0, 0.69444, 0, 0],\n    '101': [0, 0.45833, 0, 0],\n    '102': [0, 0.69444, 0.07639, 0],\n    '103': [0.19444, 0.45833, 0.01528, 0],\n    '104': [0, 0.69444, 0, 0],\n    '105': [0, 0.69444, 0, 0],\n    '106': [0.19444, 0.69444, 0, 0],\n    '107': [0, 0.69444, 0, 0],\n    '108': [0, 0.69444, 0, 0],\n    '109': [0, 0.45833, 0, 0],\n    '110': [0, 0.45833, 0, 0],\n    '111': [0, 0.45833, 0, 0],\n    '112': [0.19444, 0.45833, 0, 0],\n    '113': [0.19444, 0.45833, 0, 0],\n    '114': [0, 0.45833, 0.01528, 0],\n    '115': [0, 0.45833, 0, 0],\n    '116': [0, 0.58929, 0, 0],\n    '117': [0, 0.45833, 0, 0],\n    '118': [0, 0.45833, 0.01528, 0],\n    '119': [0, 0.45833, 0.01528, 0],\n    '120': [0, 0.45833, 0, 0],\n    '121': [0.19444, 0.45833, 0.01528, 0],\n    '122': [0, 0.45833, 0, 0],\n    '126': [0.35, 0.34444, 0, 0],\n    '168': [0, 0.69444, 0, 0],\n    '176': [0, 0.69444, 0, 0],\n    '180': [0, 0.69444, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '305': [0, 0.45833, 0, 0],\n    '567': [0.19444, 0.45833, 0, 0],\n    '710': [0, 0.69444, 0, 0],\n    '711': [0, 0.63542, 0, 0],\n    '713': [0, 0.63778, 0, 0],\n    '728': [0, 0.69444, 0, 0],\n    '729': [0, 0.69444, 0, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.69444, 0, 0],\n    '733': [0, 0.69444, 0, 0],\n    '915': [0, 0.69444, 0, 0],\n    '916': [0, 0.69444, 0, 0],\n    '920': [0, 0.69444, 0, 0],\n    '923': [0, 0.69444, 0, 0],\n    '926': [0, 0.69444, 0, 0],\n    '928': [0, 0.69444, 0, 0],\n    '931': [0, 0.69444, 0, 0],\n    '933': [0, 0.69444, 0, 0],\n    '934': [0, 0.69444, 0, 0],\n    '936': [0, 0.69444, 0, 0],\n    '937': [0, 0.69444, 0, 0],\n    '8211': [0, 0.45833, 0.03056, 0],\n    '8212': [0, 0.45833, 0.03056, 0],\n    '8216': [0, 0.69444, 0, 0],\n    '8217': [0, 0.69444, 0, 0],\n    '8220': [0, 0.69444, 0, 0],\n    '8221': [0, 0.69444, 0, 0]\n  },\n  'SansSerif-Italic': {\n    '33': [0, 0.69444, 0.05733, 0],\n    '34': [0, 0.69444, 0.00316, 0],\n    '35': [0.19444, 0.69444, 0.05087, 0],\n    '36': [0.05556, 0.75, 0.11156, 0],\n    '37': [0.05556, 0.75, 0.03126, 0],\n    '38': [0, 0.69444, 0.03058, 0],\n    '39': [0, 0.69444, 0.07816, 0],\n    '40': [0.25, 0.75, 0.13164, 0],\n    '41': [0.25, 0.75, 0.02536, 0],\n    '42': [0, 0.75, 0.11775, 0],\n    '43': [0.08333, 0.58333, 0.02536, 0],\n    '44': [0.125, 0.08333, 0, 0],\n    '45': [0, 0.44444, 0.01946, 0],\n    '46': [0, 0.08333, 0, 0],\n    '47': [0.25, 0.75, 0.13164, 0],\n    '48': [0, 0.65556, 0.11156, 0],\n    '49': [0, 0.65556, 0.11156, 0],\n    '50': [0, 0.65556, 0.11156, 0],\n    '51': [0, 0.65556, 0.11156, 0],\n    '52': [0, 0.65556, 0.11156, 0],\n    '53': [0, 0.65556, 0.11156, 0],\n    '54': [0, 0.65556, 0.11156, 0],\n    '55': [0, 0.65556, 0.11156, 0],\n    '56': [0, 0.65556, 0.11156, 0],\n    '57': [0, 0.65556, 0.11156, 0],\n    '58': [0, 0.44444, 0.02502, 0],\n    '59': [0.125, 0.44444, 0.02502, 0],\n    '61': [-0.13, 0.37, 0.05087, 0],\n    '63': [0, 0.69444, 0.11809, 0],\n    '64': [0, 0.69444, 0.07555, 0],\n    '65': [0, 0.69444, 0, 0],\n    '66': [0, 0.69444, 0.08293, 0],\n    '67': [0, 0.69444, 0.11983, 0],\n    '68': [0, 0.69444, 0.07555, 0],\n    '69': [0, 0.69444, 0.11983, 0],\n    '70': [0, 0.69444, 0.13372, 0],\n    '71': [0, 0.69444, 0.11983, 0],\n    '72': [0, 0.69444, 0.08094, 0],\n    '73': [0, 0.69444, 0.13372, 0],\n    '74': [0, 0.69444, 0.08094, 0],\n    '75': [0, 0.69444, 0.11983, 0],\n    '76': [0, 0.69444, 0, 0],\n    '77': [0, 0.69444, 0.08094, 0],\n    '78': [0, 0.69444, 0.08094, 0],\n    '79': [0, 0.69444, 0.07555, 0],\n    '80': [0, 0.69444, 0.08293, 0],\n    '81': [0.125, 0.69444, 0.07555, 0],\n    '82': [0, 0.69444, 0.08293, 0],\n    '83': [0, 0.69444, 0.09205, 0],\n    '84': [0, 0.69444, 0.13372, 0],\n    '85': [0, 0.69444, 0.08094, 0],\n    '86': [0, 0.69444, 0.1615, 0],\n    '87': [0, 0.69444, 0.1615, 0],\n    '88': [0, 0.69444, 0.13372, 0],\n    '89': [0, 0.69444, 0.17261, 0],\n    '90': [0, 0.69444, 0.11983, 0],\n    '91': [0.25, 0.75, 0.15942, 0],\n    '93': [0.25, 0.75, 0.08719, 0],\n    '94': [0, 0.69444, 0.0799, 0],\n    '95': [0.35, 0.09444, 0.08616, 0],\n    '97': [0, 0.44444, 0.00981, 0],\n    '98': [0, 0.69444, 0.03057, 0],\n    '99': [0, 0.44444, 0.08336, 0],\n    '100': [0, 0.69444, 0.09483, 0],\n    '101': [0, 0.44444, 0.06778, 0],\n    '102': [0, 0.69444, 0.21705, 0],\n    '103': [0.19444, 0.44444, 0.10836, 0],\n    '104': [0, 0.69444, 0.01778, 0],\n    '105': [0, 0.67937, 0.09718, 0],\n    '106': [0.19444, 0.67937, 0.09162, 0],\n    '107': [0, 0.69444, 0.08336, 0],\n    '108': [0, 0.69444, 0.09483, 0],\n    '109': [0, 0.44444, 0.01778, 0],\n    '110': [0, 0.44444, 0.01778, 0],\n    '111': [0, 0.44444, 0.06613, 0],\n    '112': [0.19444, 0.44444, 0.0389, 0],\n    '113': [0.19444, 0.44444, 0.04169, 0],\n    '114': [0, 0.44444, 0.10836, 0],\n    '115': [0, 0.44444, 0.0778, 0],\n    '116': [0, 0.57143, 0.07225, 0],\n    '117': [0, 0.44444, 0.04169, 0],\n    '118': [0, 0.44444, 0.10836, 0],\n    '119': [0, 0.44444, 0.10836, 0],\n    '120': [0, 0.44444, 0.09169, 0],\n    '121': [0.19444, 0.44444, 0.10836, 0],\n    '122': [0, 0.44444, 0.08752, 0],\n    '126': [0.35, 0.32659, 0.08826, 0],\n    '168': [0, 0.67937, 0.06385, 0],\n    '176': [0, 0.69444, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '305': [0, 0.44444, 0.04169, 0],\n    '567': [0.19444, 0.44444, 0.04169, 0],\n    '710': [0, 0.69444, 0.0799, 0],\n    '711': [0, 0.63194, 0.08432, 0],\n    '713': [0, 0.60889, 0.08776, 0],\n    '714': [0, 0.69444, 0.09205, 0],\n    '715': [0, 0.69444, 0, 0],\n    '728': [0, 0.69444, 0.09483, 0],\n    '729': [0, 0.67937, 0.07774, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.67659, 0.08826, 0],\n    '733': [0, 0.69444, 0.09205, 0],\n    '915': [0, 0.69444, 0.13372, 0],\n    '916': [0, 0.69444, 0, 0],\n    '920': [0, 0.69444, 0.07555, 0],\n    '923': [0, 0.69444, 0, 0],\n    '926': [0, 0.69444, 0.12816, 0],\n    '928': [0, 0.69444, 0.08094, 0],\n    '931': [0, 0.69444, 0.11983, 0],\n    '933': [0, 0.69444, 0.09031, 0],\n    '934': [0, 0.69444, 0.04603, 0],\n    '936': [0, 0.69444, 0.09031, 0],\n    '937': [0, 0.69444, 0.08293, 0],\n    '8211': [0, 0.44444, 0.08616, 0],\n    '8212': [0, 0.44444, 0.08616, 0],\n    '8216': [0, 0.69444, 0.07816, 0],\n    '8217': [0, 0.69444, 0.07816, 0],\n    '8220': [0, 0.69444, 0.14205, 0],\n    '8221': [0, 0.69444, 0.00316, 0]\n  },\n  'SansSerif-Regular': {\n    '33': [0, 0.69444, 0, 0],\n    '34': [0, 0.69444, 0, 0],\n    '35': [0.19444, 0.69444, 0, 0],\n    '36': [0.05556, 0.75, 0, 0],\n    '37': [0.05556, 0.75, 0, 0],\n    '38': [0, 0.69444, 0, 0],\n    '39': [0, 0.69444, 0, 0],\n    '40': [0.25, 0.75, 0, 0],\n    '41': [0.25, 0.75, 0, 0],\n    '42': [0, 0.75, 0, 0],\n    '43': [0.08333, 0.58333, 0, 0],\n    '44': [0.125, 0.08333, 0, 0],\n    '45': [0, 0.44444, 0, 0],\n    '46': [0, 0.08333, 0, 0],\n    '47': [0.25, 0.75, 0, 0],\n    '48': [0, 0.65556, 0, 0],\n    '49': [0, 0.65556, 0, 0],\n    '50': [0, 0.65556, 0, 0],\n    '51': [0, 0.65556, 0, 0],\n    '52': [0, 0.65556, 0, 0],\n    '53': [0, 0.65556, 0, 0],\n    '54': [0, 0.65556, 0, 0],\n    '55': [0, 0.65556, 0, 0],\n    '56': [0, 0.65556, 0, 0],\n    '57': [0, 0.65556, 0, 0],\n    '58': [0, 0.44444, 0, 0],\n    '59': [0.125, 0.44444, 0, 0],\n    '61': [-0.13, 0.37, 0, 0],\n    '63': [0, 0.69444, 0, 0],\n    '64': [0, 0.69444, 0, 0],\n    '65': [0, 0.69444, 0, 0],\n    '66': [0, 0.69444, 0, 0],\n    '67': [0, 0.69444, 0, 0],\n    '68': [0, 0.69444, 0, 0],\n    '69': [0, 0.69444, 0, 0],\n    '70': [0, 0.69444, 0, 0],\n    '71': [0, 0.69444, 0, 0],\n    '72': [0, 0.69444, 0, 0],\n    '73': [0, 0.69444, 0, 0],\n    '74': [0, 0.69444, 0, 0],\n    '75': [0, 0.69444, 0, 0],\n    '76': [0, 0.69444, 0, 0],\n    '77': [0, 0.69444, 0, 0],\n    '78': [0, 0.69444, 0, 0],\n    '79': [0, 0.69444, 0, 0],\n    '80': [0, 0.69444, 0, 0],\n    '81': [0.125, 0.69444, 0, 0],\n    '82': [0, 0.69444, 0, 0],\n    '83': [0, 0.69444, 0, 0],\n    '84': [0, 0.69444, 0, 0],\n    '85': [0, 0.69444, 0, 0],\n    '86': [0, 0.69444, 0.01389, 0],\n    '87': [0, 0.69444, 0.01389, 0],\n    '88': [0, 0.69444, 0, 0],\n    '89': [0, 0.69444, 0.025, 0],\n    '90': [0, 0.69444, 0, 0],\n    '91': [0.25, 0.75, 0, 0],\n    '93': [0.25, 0.75, 0, 0],\n    '94': [0, 0.69444, 0, 0],\n    '95': [0.35, 0.09444, 0.02778, 0],\n    '97': [0, 0.44444, 0, 0],\n    '98': [0, 0.69444, 0, 0],\n    '99': [0, 0.44444, 0, 0],\n    '100': [0, 0.69444, 0, 0],\n    '101': [0, 0.44444, 0, 0],\n    '102': [0, 0.69444, 0.06944, 0],\n    '103': [0.19444, 0.44444, 0.01389, 0],\n    '104': [0, 0.69444, 0, 0],\n    '105': [0, 0.67937, 0, 0],\n    '106': [0.19444, 0.67937, 0, 0],\n    '107': [0, 0.69444, 0, 0],\n    '108': [0, 0.69444, 0, 0],\n    '109': [0, 0.44444, 0, 0],\n    '110': [0, 0.44444, 0, 0],\n    '111': [0, 0.44444, 0, 0],\n    '112': [0.19444, 0.44444, 0, 0],\n    '113': [0.19444, 0.44444, 0, 0],\n    '114': [0, 0.44444, 0.01389, 0],\n    '115': [0, 0.44444, 0, 0],\n    '116': [0, 0.57143, 0, 0],\n    '117': [0, 0.44444, 0, 0],\n    '118': [0, 0.44444, 0.01389, 0],\n    '119': [0, 0.44444, 0.01389, 0],\n    '120': [0, 0.44444, 0, 0],\n    '121': [0.19444, 0.44444, 0.01389, 0],\n    '122': [0, 0.44444, 0, 0],\n    '126': [0.35, 0.32659, 0, 0],\n    '168': [0, 0.67937, 0, 0],\n    '176': [0, 0.69444, 0, 0],\n    '184': [0.17014, 0, 0, 0],\n    '305': [0, 0.44444, 0, 0],\n    '567': [0.19444, 0.44444, 0, 0],\n    '710': [0, 0.69444, 0, 0],\n    '711': [0, 0.63194, 0, 0],\n    '713': [0, 0.60889, 0, 0],\n    '714': [0, 0.69444, 0, 0],\n    '715': [0, 0.69444, 0, 0],\n    '728': [0, 0.69444, 0, 0],\n    '729': [0, 0.67937, 0, 0],\n    '730': [0, 0.69444, 0, 0],\n    '732': [0, 0.67659, 0, 0],\n    '733': [0, 0.69444, 0, 0],\n    '915': [0, 0.69444, 0, 0],\n    '916': [0, 0.69444, 0, 0],\n    '920': [0, 0.69444, 0, 0],\n    '923': [0, 0.69444, 0, 0],\n    '926': [0, 0.69444, 0, 0],\n    '928': [0, 0.69444, 0, 0],\n    '931': [0, 0.69444, 0, 0],\n    '933': [0, 0.69444, 0, 0],\n    '934': [0, 0.69444, 0, 0],\n    '936': [0, 0.69444, 0, 0],\n    '937': [0, 0.69444, 0, 0],\n    '8211': [0, 0.44444, 0.02778, 0],\n    '8212': [0, 0.44444, 0.02778, 0],\n    '8216': [0, 0.69444, 0, 0],\n    '8217': [0, 0.69444, 0, 0],\n    '8220': [0, 0.69444, 0, 0],\n    '8221': [0, 0.69444, 0, 0]\n  },\n  'Script-Regular': {\n    '65': [0, 0.7, 0.22925, 0],\n    '66': [0, 0.7, 0.04087, 0],\n    '67': [0, 0.7, 0.1689, 0],\n    '68': [0, 0.7, 0.09371, 0],\n    '69': [0, 0.7, 0.18583, 0],\n    '70': [0, 0.7, 0.13634, 0],\n    '71': [0, 0.7, 0.17322, 0],\n    '72': [0, 0.7, 0.29694, 0],\n    '73': [0, 0.7, 0.19189, 0],\n    '74': [0.27778, 0.7, 0.19189, 0],\n    '75': [0, 0.7, 0.31259, 0],\n    '76': [0, 0.7, 0.19189, 0],\n    '77': [0, 0.7, 0.15981, 0],\n    '78': [0, 0.7, 0.3525, 0],\n    '79': [0, 0.7, 0.08078, 0],\n    '80': [0, 0.7, 0.08078, 0],\n    '81': [0, 0.7, 0.03305, 0],\n    '82': [0, 0.7, 0.06259, 0],\n    '83': [0, 0.7, 0.19189, 0],\n    '84': [0, 0.7, 0.29087, 0],\n    '85': [0, 0.7, 0.25815, 0],\n    '86': [0, 0.7, 0.27523, 0],\n    '87': [0, 0.7, 0.27523, 0],\n    '88': [0, 0.7, 0.26006, 0],\n    '89': [0, 0.7, 0.2939, 0],\n    '90': [0, 0.7, 0.24037, 0]\n  },\n  'Size1-Regular': {\n    '40': [0.35001, 0.85, 0, 0],\n    '41': [0.35001, 0.85, 0, 0],\n    '47': [0.35001, 0.85, 0, 0],\n    '91': [0.35001, 0.85, 0, 0],\n    '92': [0.35001, 0.85, 0, 0],\n    '93': [0.35001, 0.85, 0, 0],\n    '123': [0.35001, 0.85, 0, 0],\n    '125': [0.35001, 0.85, 0, 0],\n    '710': [0, 0.72222, 0, 0],\n    '732': [0, 0.72222, 0, 0],\n    '770': [0, 0.72222, 0, 0],\n    '771': [0, 0.72222, 0, 0],\n    '8214': [-0.00099, 0.601, 0, 0],\n    '8593': [1e-5, 0.6, 0, 0],\n    '8595': [1e-5, 0.6, 0, 0],\n    '8657': [1e-5, 0.6, 0, 0],\n    '8659': [1e-5, 0.6, 0, 0],\n    '8719': [0.25001, 0.75, 0, 0],\n    '8720': [0.25001, 0.75, 0, 0],\n    '8721': [0.25001, 0.75, 0, 0],\n    '8730': [0.35001, 0.85, 0, 0],\n    '8739': [-0.00599, 0.606, 0, 0],\n    '8741': [-0.00599, 0.606, 0, 0],\n    '8747': [0.30612, 0.805, 0.19445, 0],\n    '8748': [0.306, 0.805, 0.19445, 0],\n    '8749': [0.306, 0.805, 0.19445, 0],\n    '8750': [0.30612, 0.805, 0.19445, 0],\n    '8896': [0.25001, 0.75, 0, 0],\n    '8897': [0.25001, 0.75, 0, 0],\n    '8898': [0.25001, 0.75, 0, 0],\n    '8899': [0.25001, 0.75, 0, 0],\n    '8968': [0.35001, 0.85, 0, 0],\n    '8969': [0.35001, 0.85, 0, 0],\n    '8970': [0.35001, 0.85, 0, 0],\n    '8971': [0.35001, 0.85, 0, 0],\n    '9168': [-0.00099, 0.601, 0, 0],\n    '10216': [0.35001, 0.85, 0, 0],\n    '10217': [0.35001, 0.85, 0, 0],\n    '10752': [0.25001, 0.75, 0, 0],\n    '10753': [0.25001, 0.75, 0, 0],\n    '10754': [0.25001, 0.75, 0, 0],\n    '10756': [0.25001, 0.75, 0, 0],\n    '10758': [0.25001, 0.75, 0, 0]\n  },\n  'Size2-Regular': {\n    '40': [0.65002, 1.15, 0, 0],\n    '41': [0.65002, 1.15, 0, 0],\n    '47': [0.65002, 1.15, 0, 0],\n    '91': [0.65002, 1.15, 0, 0],\n    '92': [0.65002, 1.15, 0, 0],\n    '93': [0.65002, 1.15, 0, 0],\n    '123': [0.65002, 1.15, 0, 0],\n    '125': [0.65002, 1.15, 0, 0],\n    '710': [0, 0.75, 0, 0],\n    '732': [0, 0.75, 0, 0],\n    '770': [0, 0.75, 0, 0],\n    '771': [0, 0.75, 0, 0],\n    '8719': [0.55001, 1.05, 0, 0],\n    '8720': [0.55001, 1.05, 0, 0],\n    '8721': [0.55001, 1.05, 0, 0],\n    '8730': [0.65002, 1.15, 0, 0],\n    '8747': [0.86225, 1.36, 0.44445, 0],\n    '8748': [0.862, 1.36, 0.44445, 0],\n    '8749': [0.862, 1.36, 0.44445, 0],\n    '8750': [0.86225, 1.36, 0.44445, 0],\n    '8896': [0.55001, 1.05, 0, 0],\n    '8897': [0.55001, 1.05, 0, 0],\n    '8898': [0.55001, 1.05, 0, 0],\n    '8899': [0.55001, 1.05, 0, 0],\n    '8968': [0.65002, 1.15, 0, 0],\n    '8969': [0.65002, 1.15, 0, 0],\n    '8970': [0.65002, 1.15, 0, 0],\n    '8971': [0.65002, 1.15, 0, 0],\n    '10216': [0.65002, 1.15, 0, 0],\n    '10217': [0.65002, 1.15, 0, 0],\n    '10752': [0.55001, 1.05, 0, 0],\n    '10753': [0.55001, 1.05, 0, 0],\n    '10754': [0.55001, 1.05, 0, 0],\n    '10756': [0.55001, 1.05, 0, 0],\n    '10758': [0.55001, 1.05, 0, 0]\n  },\n  'Size3-Regular': {\n    '40': [0.95003, 1.45, 0, 0],\n    '41': [0.95003, 1.45, 0, 0],\n    '47': [0.95003, 1.45, 0, 0],\n    '91': [0.95003, 1.45, 0, 0],\n    '92': [0.95003, 1.45, 0, 0],\n    '93': [0.95003, 1.45, 0, 0],\n    '123': [0.95003, 1.45, 0, 0],\n    '125': [0.95003, 1.45, 0, 0],\n    '710': [0, 0.75, 0, 0],\n    '732': [0, 0.75, 0, 0],\n    '770': [0, 0.75, 0, 0],\n    '771': [0, 0.75, 0, 0],\n    '8730': [0.95003, 1.45, 0, 0],\n    '8968': [0.95003, 1.45, 0, 0],\n    '8969': [0.95003, 1.45, 0, 0],\n    '8970': [0.95003, 1.45, 0, 0],\n    '8971': [0.95003, 1.45, 0, 0],\n    '10216': [0.95003, 1.45, 0, 0],\n    '10217': [0.95003, 1.45, 0, 0]\n  },\n  'Size4-Regular': {\n    '40': [1.25003, 1.75, 0, 0],\n    '41': [1.25003, 1.75, 0, 0],\n    '47': [1.25003, 1.75, 0, 0],\n    '91': [1.25003, 1.75, 0, 0],\n    '92': [1.25003, 1.75, 0, 0],\n    '93': [1.25003, 1.75, 0, 0],\n    '123': [1.25003, 1.75, 0, 0],\n    '125': [1.25003, 1.75, 0, 0],\n    '710': [0, 0.825, 0, 0],\n    '732': [0, 0.825, 0, 0],\n    '770': [0, 0.825, 0, 0],\n    '771': [0, 0.825, 0, 0],\n    '8730': [1.25003, 1.75, 0, 0],\n    '8968': [1.25003, 1.75, 0, 0],\n    '8969': [1.25003, 1.75, 0, 0],\n    '8970': [1.25003, 1.75, 0, 0],\n    '8971': [1.25003, 1.75, 0, 0],\n    '9115': [0.64502, 1.155, 0, 0],\n    '9116': [1e-5, 0.6, 0, 0],\n    '9117': [0.64502, 1.155, 0, 0],\n    '9118': [0.64502, 1.155, 0, 0],\n    '9119': [1e-5, 0.6, 0, 0],\n    '9120': [0.64502, 1.155, 0, 0],\n    '9121': [0.64502, 1.155, 0, 0],\n    '9122': [-0.00099, 0.601, 0, 0],\n    '9123': [0.64502, 1.155, 0, 0],\n    '9124': [0.64502, 1.155, 0, 0],\n    '9125': [-0.00099, 0.601, 0, 0],\n    '9126': [0.64502, 1.155, 0, 0],\n    '9127': [1e-5, 0.9, 0, 0],\n    '9128': [0.65002, 1.15, 0, 0],\n    '9129': [0.90001, 0, 0, 0],\n    '9130': [0, 0.3, 0, 0],\n    '9131': [1e-5, 0.9, 0, 0],\n    '9132': [0.65002, 1.15, 0, 0],\n    '9133': [0.90001, 0, 0, 0],\n    '9143': [0.88502, 0.915, 0, 0],\n    '10216': [1.25003, 1.75, 0, 0],\n    '10217': [1.25003, 1.75, 0, 0],\n    '57344': [-0.00499, 0.605, 0, 0],\n    '57345': [-0.00499, 0.605, 0, 0],\n    '57680': [0, 0.12, 0, 0],\n    '57681': [0, 0.12, 0, 0],\n    '57682': [0, 0.12, 0, 0],\n    '57683': [0, 0.12, 0, 0]\n  },\n  'Typewriter-Regular': {\n    '32': [0, 0, 0, 0],\n    '33': [0, 0.61111, 0, 0],\n    '34': [0, 0.61111, 0, 0],\n    '35': [0, 0.61111, 0, 0],\n    '36': [0.08333, 0.69444, 0, 0],\n    '37': [0.08333, 0.69444, 0, 0],\n    '38': [0, 0.61111, 0, 0],\n    '39': [0, 0.61111, 0, 0],\n    '40': [0.08333, 0.69444, 0, 0],\n    '41': [0.08333, 0.69444, 0, 0],\n    '42': [0, 0.52083, 0, 0],\n    '43': [-0.08056, 0.53055, 0, 0],\n    '44': [0.13889, 0.125, 0, 0],\n    '45': [-0.08056, 0.53055, 0, 0],\n    '46': [0, 0.125, 0, 0],\n    '47': [0.08333, 0.69444, 0, 0],\n    '48': [0, 0.61111, 0, 0],\n    '49': [0, 0.61111, 0, 0],\n    '50': [0, 0.61111, 0, 0],\n    '51': [0, 0.61111, 0, 0],\n    '52': [0, 0.61111, 0, 0],\n    '53': [0, 0.61111, 0, 0],\n    '54': [0, 0.61111, 0, 0],\n    '55': [0, 0.61111, 0, 0],\n    '56': [0, 0.61111, 0, 0],\n    '57': [0, 0.61111, 0, 0],\n    '58': [0, 0.43056, 0, 0],\n    '59': [0.13889, 0.43056, 0, 0],\n    '60': [-0.05556, 0.55556, 0, 0],\n    '61': [-0.19549, 0.41562, 0, 0],\n    '62': [-0.05556, 0.55556, 0, 0],\n    '63': [0, 0.61111, 0, 0],\n    '64': [0, 0.61111, 0, 0],\n    '65': [0, 0.61111, 0, 0],\n    '66': [0, 0.61111, 0, 0],\n    '67': [0, 0.61111, 0, 0],\n    '68': [0, 0.61111, 0, 0],\n    '69': [0, 0.61111, 0, 0],\n    '70': [0, 0.61111, 0, 0],\n    '71': [0, 0.61111, 0, 0],\n    '72': [0, 0.61111, 0, 0],\n    '73': [0, 0.61111, 0, 0],\n    '74': [0, 0.61111, 0, 0],\n    '75': [0, 0.61111, 0, 0],\n    '76': [0, 0.61111, 0, 0],\n    '77': [0, 0.61111, 0, 0],\n    '78': [0, 0.61111, 0, 0],\n    '79': [0, 0.61111, 0, 0],\n    '80': [0, 0.61111, 0, 0],\n    '81': [0.13889, 0.61111, 0, 0],\n    '82': [0, 0.61111, 0, 0],\n    '83': [0, 0.61111, 0, 0],\n    '84': [0, 0.61111, 0, 0],\n    '85': [0, 0.61111, 0, 0],\n    '86': [0, 0.61111, 0, 0],\n    '87': [0, 0.61111, 0, 0],\n    '88': [0, 0.61111, 0, 0],\n    '89': [0, 0.61111, 0, 0],\n    '90': [0, 0.61111, 0, 0],\n    '91': [0.08333, 0.69444, 0, 0],\n    '92': [0.08333, 0.69444, 0, 0],\n    '93': [0.08333, 0.69444, 0, 0],\n    '94': [0, 0.61111, 0, 0],\n    '95': [0.09514, 0, 0, 0],\n    '96': [0, 0.61111, 0, 0],\n    '97': [0, 0.43056, 0, 0],\n    '98': [0, 0.61111, 0, 0],\n    '99': [0, 0.43056, 0, 0],\n    '100': [0, 0.61111, 0, 0],\n    '101': [0, 0.43056, 0, 0],\n    '102': [0, 0.61111, 0, 0],\n    '103': [0.22222, 0.43056, 0, 0],\n    '104': [0, 0.61111, 0, 0],\n    '105': [0, 0.61111, 0, 0],\n    '106': [0.22222, 0.61111, 0, 0],\n    '107': [0, 0.61111, 0, 0],\n    '108': [0, 0.61111, 0, 0],\n    '109': [0, 0.43056, 0, 0],\n    '110': [0, 0.43056, 0, 0],\n    '111': [0, 0.43056, 0, 0],\n    '112': [0.22222, 0.43056, 0, 0],\n    '113': [0.22222, 0.43056, 0, 0],\n    '114': [0, 0.43056, 0, 0],\n    '115': [0, 0.43056, 0, 0],\n    '116': [0, 0.55358, 0, 0],\n    '117': [0, 0.43056, 0, 0],\n    '118': [0, 0.43056, 0, 0],\n    '119': [0, 0.43056, 0, 0],\n    '120': [0, 0.43056, 0, 0],\n    '121': [0.22222, 0.43056, 0, 0],\n    '122': [0, 0.43056, 0, 0],\n    '123': [0.08333, 0.69444, 0, 0],\n    '124': [0.08333, 0.69444, 0, 0],\n    '125': [0.08333, 0.69444, 0, 0],\n    '126': [0, 0.61111, 0, 0],\n    '127': [0, 0.61111, 0, 0],\n    '160': [0, 0, 0, 0],\n    '176': [0, 0.61111, 0, 0],\n    '184': [0.19445, 0, 0, 0],\n    '305': [0, 0.43056, 0, 0],\n    '567': [0.22222, 0.43056, 0, 0],\n    '711': [0, 0.56597, 0, 0],\n    '713': [0, 0.56555, 0, 0],\n    '714': [0, 0.61111, 0, 0],\n    '715': [0, 0.61111, 0, 0],\n    '728': [0, 0.61111, 0, 0],\n    '730': [0, 0.61111, 0, 0],\n    '770': [0, 0.61111, 0, 0],\n    '771': [0, 0.61111, 0, 0],\n    '776': [0, 0.61111, 0, 0],\n    '915': [0, 0.61111, 0, 0],\n    '916': [0, 0.61111, 0, 0],\n    '920': [0, 0.61111, 0, 0],\n    '923': [0, 0.61111, 0, 0],\n    '926': [0, 0.61111, 0, 0],\n    '928': [0, 0.61111, 0, 0],\n    '931': [0, 0.61111, 0, 0],\n    '933': [0, 0.61111, 0, 0],\n    '934': [0, 0.61111, 0, 0],\n    '936': [0, 0.61111, 0, 0],\n    '937': [0, 0.61111, 0, 0],\n    '8216': [0, 0.61111, 0, 0],\n    '8217': [0, 0.61111, 0, 0],\n    '8242': [0, 0.61111, 0, 0],\n    '9251': [0.11111, 0.21944, 0, 0]\n  }\n};\n/**\r\n * This module contains metrics regarding fonts and individual symbols. The sigma\r\n * and xi variables, as well as the METRICS_MAP map contain data extracted from\r\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\r\n * `metrics` variable and the getCharacterMetrics function.\r\n */\n// const hangulRegex = /[\\uAC00-\\uD7AF]/;\n// This regex combines\n// - Hiragana: [\\u3040-\\u309F]\n// - Katakana: [\\u30A0-\\u30FF]\n// - CJK ideograms: [\\u4E00-\\u9FAF]\n// - Hangul syllables: [\\uAC00-\\uD7AF]\n// Notably missing are half width Katakana and Romaji glyphs.\n\nconst cjkRegex = /[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\u4E00-\\u9FAF]|[\\uAC00-\\uD7AF]/;\n/*\r\n *\r\n * In TeX, there are actually three sets of dimensions, one for each of\r\n * textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the\r\n * the arrays below, in that order.\r\n *\r\n * The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respectively.\r\n * This was determined by running the following script:\r\n *``` bash\r\n      latex -interaction=nonstopmode \\\r\n      '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\r\n      '$a$ \\expandafter\\show\\the\\textfont2' \\\r\n      '\\expandafter\\show\\the\\scriptfont2' \\\r\n      '\\expandafter\\show\\the\\scriptscriptfont2' \\\r\n      '\\stop'\r\n  ```\r\n * The metrics themselves were retrieved using the following commands:\r\n * ``` bash\r\n      tftopl cmsy10\r\n      tftopl cmsy7\r\n      tftopl cmsy5\r\n    ```\r\n *\r\n * The output of each of these commands is quite lengthy.  The only part we\r\n * care about is the FONTDIMEN section. Each value is measured in EMs.\r\n * @memberof module:fontMetrics\r\n */\n\nconst SIGMAS = {\n  slant: [0.25, 0.25, 0.25],\n  space: [0.0, 0.0, 0.0],\n  stretch: [0.0, 0.0, 0.0],\n  shrink: [0.0, 0.0, 0.0],\n  xHeight: [0.431, 0.431, 0.431],\n  quad: [1.0, 1.171, 1.472],\n  extraSpace: [0.0, 0.0, 0.0],\n  num1: [0.677, 0.732, 0.925],\n  num2: [0.394, 0.384, 0.387],\n  num3: [0.444, 0.471, 0.504],\n  denom1: [0.686, 0.752, 1.025],\n  denom2: [0.345, 0.344, 0.532],\n  sup1: [0.413, 0.503, 0.504],\n  sup2: [0.363, 0.431, 0.404],\n  sup3: [0.289, 0.286, 0.294],\n  sub1: [0.15, 0.143, 0.2],\n  sub2: [0.247, 0.286, 0.4],\n  supDrop: [0.386, 0.353, 0.494],\n  subDrop: [0.05, 0.071, 0.1],\n  delim1: [2.39, 1.7, 1.98],\n  delim2: [1.01, 1.157, 1.42],\n  axisHeight: [0.25, 0.25, 0.25]\n}; // These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 433\n// const xi1 = 0; // Slant per pt\n// const xi2 = 0; // Interword space\n// const xi3 = 0; // Interword stretch\n// const xi4 = 0; // Interword shrink\n// const xi5 = 0.431; // x-height\n// const xi6 = 1; // Quad width\n// const xi7 = 0; // Extra space\n\nconst xi8 = 0.04; // Default rule thickness, TexBook p.390\n\nconst xi9 = 0.111;\nconst xi10 = 0.166;\nconst xi11 = 0.2;\nconst xi12 = 0.6;\nconst xi13 = 0.1; // Note: xi14: offset from baseline for superscript TexBook p. 179\n// Note: xi16: offset from baseline for subscript\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\n\nconst ptPerEm = 10.0;\n/*\r\n * This is just a mapping from common names to real metrics\r\n */\n\nconst METRICS = {\n  defaultRuleThickness: xi8,\n  bigOpSpacing1: xi9,\n  bigOpSpacing2: xi10,\n  bigOpSpacing3: xi11,\n  bigOpSpacing4: xi12,\n  bigOpSpacing5: xi13,\n  ptPerEm: ptPerEm,\n  pxPerEm: ptPerEm * 4.0 / 3.0,\n  doubleRuleSep: 2.0 / ptPerEm,\n  // article.cls.txt:455\n  arraycolsep: 5.0 / ptPerEm,\n  baselineskip: 12.0 / ptPerEm,\n  arrayrulewidth: 0.4 / ptPerEm,\n  fboxsep: 3 / ptPerEm,\n  fboxrule: 0.4 / ptPerEm\n}; // These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nconst extraCharacterMap = {\n  '\\u00a0': '\\u0020',\n  '\\u200b': '\\u0020',\n  // Latin-1\n  Å: 'A',\n  Ç: 'C',\n  Ð: 'D',\n  Þ: 'o',\n  å: 'a',\n  ç: 'c',\n  ð: 'd',\n  þ: 'o',\n  // Cyrillic\n  А: 'A',\n  Б: 'B',\n  В: 'B',\n  Г: 'F',\n  Д: 'A',\n  Е: 'E',\n  Ж: 'K',\n  З: '3',\n  И: 'N',\n  Й: 'N',\n  К: 'K',\n  Л: 'N',\n  М: 'M',\n  Н: 'H',\n  О: 'O',\n  П: 'N',\n  Р: 'P',\n  С: 'C',\n  Т: 'T',\n  У: 'y',\n  Ф: 'O',\n  Х: 'X',\n  Ц: 'U',\n  Ч: 'h',\n  Ш: 'W',\n  Щ: 'W',\n  Ъ: 'B',\n  Ы: 'X',\n  Ь: 'B',\n  Э: '3',\n  Ю: 'X',\n  Я: 'R',\n  а: 'a',\n  б: 'b',\n  в: 'a',\n  г: 'r',\n  д: 'y',\n  е: 'e',\n  ж: 'm',\n  з: 'e',\n  и: 'n',\n  й: 'n',\n  к: 'n',\n  л: 'n',\n  м: 'm',\n  н: 'n',\n  о: 'o',\n  п: 'n',\n  р: 'p',\n  с: 'c',\n  т: 'o',\n  у: 'y',\n  ф: 'b',\n  х: 'x',\n  ц: 'n',\n  ч: 'n',\n  ш: 'w',\n  щ: 'w',\n  ъ: 'a',\n  ы: 'm',\n  ь: 'a',\n  э: 'e',\n  ю: 'm',\n  я: 'r'\n};\n/**\r\n * This function is a convenience function for looking up information in the\r\n * METRICS_MAP table. It takes a character as a string, and a font name.\r\n *\r\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\r\n * built using `Make extended_metrics`.\r\n * @param fontName e.g. 'Main-Regular', 'Typewriter-Regular', etc...\r\n */\n\nfunction getCharacterMetrics(character, fontName) {\n  // console.assert(character.length === 1);\n  console.assert(METRICS_MAP[fontName], 'Unknown font \"' + fontName + '\"');\n  let ch = character.charCodeAt(0);\n\n  if (character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n  } else if (cjkRegex.test(character[0])) {\n    ch = 77; // 'M'.charCodeAt(0);\n\n    return {\n      defaultMetrics: true,\n      depth: 0.2,\n      height: 0.9,\n      italic: 0,\n      skew: 0\n    };\n  }\n\n  const metrics = METRICS_MAP[fontName][ch];\n\n  if (!metrics) {\n    // console.warn(\n    //     'No metrics for ' +\n    //     '\"' + character + '\" (U+' + ('000000' + ch.toString(16)).substr(-6) + ')' +\n    //     ' in font \"' + fontName + '\"');\n    // Assume default values.\n    // depth + height should be less than 1.0 em\n    if (ch === 11034) {\n      // Placeholder character\n      return {\n        defaultMetrics: true,\n        depth: 0,\n        height: 1.0,\n        italic: 0,\n        skew: 0\n      };\n    }\n\n    return {\n      defaultMetrics: true,\n      depth: 0.2,\n      height: 0.7,\n      italic: 0,\n      skew: 0\n    };\n  }\n\n  return {\n    defaultMetrics: false,\n    depth: metrics[0],\n    height: metrics[1],\n    italic: metrics[2],\n    skew: metrics[3]\n  };\n}\n/**\r\n *\r\n * @param value If value is a string, it may be suffixed\r\n * with a unit, which will override the `unit` paramter\r\n */\n\n\nfunction convertDimenToEm(value, unit, precision = NaN) {\n  if (typeof value === 'string') {\n    const m = value.match(/([-+]?[0-9.]*)\\s*([a-zA-Z]+)/);\n\n    if (!m) {\n      value = parseFloat(value);\n    } else {\n      value = parseFloat(m[1]);\n      unit = m[2].toLowerCase();\n    }\n  } // If the units are missing, TeX assumes 'pt'\n\n\n  const f = {\n    pt: 1.0,\n    mm: 7227 / 2540,\n    cm: 7227 / 254,\n    ex: 35271 / 8192,\n    px: 3.0 / 4.0,\n    em: METRICS.ptPerEm,\n    bp: 803 / 800,\n    dd: 1238 / 1157,\n    pc: 12.0,\n    in: 72.27,\n    mu: 10 / 18\n  }[unit] || 1.0;\n\n  if (isFinite(precision)) {\n    const factor = Math.pow(10, precision);\n    return Math.round(value / METRICS.ptPerEm * f * factor) / factor;\n  }\n\n  return value / METRICS.ptPerEm * f;\n}\n\nfunction convertDimenToPx(value, unit) {\n  return convertDimenToEm(value, unit) * (4.0 / 3.0) * METRICS.ptPerEm;\n}\n/**\r\n * This file contains information and classes for the 'math styles' used by TeX,\r\n * which are specific layout\r\n * algorithms for math. They get progressively smaller and tighter:\r\n * - displaystyle is used for expressions laid out on their own (in a block)\r\n * - textstyle is for expressions displayed on a line (usually wiht some text\r\n * around)\r\n * - scriptstyle is for expressions displayed as a superscript for example\r\n * - scriptscriptstyle is for expressions displayed as a superscript of a superscript\r\n * - the 'cramped' variations are used in various places, for examples a subscript\r\n * is using the 'scriptstyle', but cramped (so it's a bit more tight than a\r\n * superscript which is just using the 'scriptstyle')\r\n *\r\n * See Texbook, p.441:\r\n *\r\n * A math list is a sequence of items of the various kinds listed in Chapter 17,\r\n * and TEX typesets a formula by converting a math list to a horizontal list.\r\n * When such typesetting begins, TEX has two other pieces of information in\r\n * addition to the math list itself. (a) The starting style tells what style\r\n * should be used for the math list, unless another style is specified by a\r\n * style item. For example, the starting style for a displayed formula is D,\r\n * but for an equation in the text or an equation number it is T; and for a\r\n * subformula it can be any one of the eight styles defined in Chapter 17.\r\n *\r\n * We shall use C to stand for the current style, and we shall say that the\r\n * math list is being typeset in style C. (b) The typesetting is done either\r\n * with or without penalties. Formulas in the text of a paragraph are converted\r\n * to horizontal lists in which additional penalty items are inserted after\r\n * binary operations and relations, in order to aid in line breaking. Such\r\n * penalties are not inserted in other cases, because they would serve no\r\n * useful function.\r\n *\r\n * The eight styles are considered to be D > D′ > T > T′ > S > S′ > SS > SS′,\r\n * in decreasing order. Thus, C ≤ S means that the current style is S, S , SS,\r\n * or SS . Style C′ means the current style with a prime added if one isn’t\r\n * there; for example, we have C =T if and only if C = T or C = T'.\r\n * Style C↑ is the superscript style for C; this means style S if C is D or T,\r\n * style S′ if C is D′ or T′, style SS if C is S or SS,\r\n * and style SS if C is S or SS.\r\n * Finally, style C↓ is the subscript style, which is (C↑) .\r\n */\n// IDs of the different MATHSTYLES\n\n\nconst D = 0; // displaystyle\n\nconst Dc = 1; // displaystyle, cramped\n\nconst T = 2; // textstyle\n\nconst Tc = 3;\nconst S = 4; // scriptstyle\n\nconst Sc = 5;\nconst SS = 6; // scriptscriptstyle\n\nconst SSc = 7;\n/**\r\n * @property {number} id unique id for the style\r\n * @property {number} size (which is the same for cramped and uncramped version\r\n * of a style)\r\n * @property {number}  multiplier, size multiplier which gives the size difference between\r\n * a style and textstyle.\r\n * @property {boolean}  cramped flag\r\n */\n\nclass Mathstyle {\n  constructor(id, size, multiplier, cramped) {\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n    this.sizeMultiplier = multiplier;\n    this.metrics = Object.keys(SIGMAS).reduce((acc, x) => {\n      return _objectSpread(_objectSpread({}, acc), {}, {\n        [x]: SIGMAS[x][this.size]\n      });\n    }, {});\n    this.metrics.emPerEx = SIGMAS.xHeight[this.size] / SIGMAS.quad[this.size];\n  }\n  /**\r\n   * Get the style of a superscript given a base in the current style.\r\n   */\n\n\n  sup() {\n    return MATHSTYLES[[S, Sc, S, Sc, SS, SSc, SS, SSc][this.id]];\n  }\n  /**\r\n   * Get the style of a subscript given a base in the current style.\r\n   */\n\n\n  sub() {\n    return MATHSTYLES[[Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc][this.id]];\n  }\n  /**\r\n   * Get the style of a fraction numerator given the fraction in the current\r\n   * style.\r\n   */\n\n\n  fracNum() {\n    return MATHSTYLES[[T, Tc, S, Sc, SS, SSc, SS, SSc][this.id]];\n  }\n  /**\r\n   * Get the style of a fraction denominator given the fraction in the current\r\n   * style.\r\n   */\n\n\n  fracDen() {\n    return MATHSTYLES[[Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc][this.id]];\n  }\n  /**\r\n   * Get the cramped version of a style (in particular, cramping a cramped style\r\n   * doesn't change the style).\r\n   */\n\n\n  cramp() {\n    return MATHSTYLES[[Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc][this.id]];\n  }\n  /**\r\n   * CSS class name, for example `displaystyle cramped`\r\n   */\n\n\n  cls() {\n    return ['displaystyle textstyle', 'textstyle', 'scriptstyle', 'scriptscriptstyle'][this.size]; // @revisit: use this.id to include 'cramped' variants\n  }\n  /**\r\n   * CSS class name to adjust from one style to another, like 'reset-textstyle'\r\n   */\n\n\n  adjustTo(newStyle) {\n    // @revisit the values used here\n    let result = [['', '', 'reset-textstyle scriptstyle', 'reset-textstyle scriptscriptstyle'], ['reset-textstyle displaystyle textstyle', '', 'reset-textstyle scriptstyle', 'reset-textstyle scriptscriptstyle'], ['reset-scriptstyle textstyle displaystyle', 'reset-scriptstyle textstyle', '', 'reset-scriptstyle scriptscriptstyle'], ['reset-scriptscriptstyle textstyle displaystyle', 'reset-scriptscriptstyle textstyle', 'reset-scriptscriptstyle scriptstyle', '']][this.size][newStyle.size];\n    if (result.length > 0) result = ' ' + result;\n    return result;\n  }\n  /**\r\n   * Return if this style is tightly spaced (scriptstyle/scriptscriptstyle)\r\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n}\n\nconst MATHSTYLES = {\n  0: new Mathstyle(D, 0, 1.0, false),\n  1: new Mathstyle(Dc, 0, 1.0, true),\n  2: new Mathstyle(T, 1, 1.0, false),\n  3: new Mathstyle(Tc, 1, 1.0, true),\n  4: new Mathstyle(S, 2, 0.7, false),\n  5: new Mathstyle(Sc, 2, 0.7, true),\n  6: new Mathstyle(SS, 3, 0.5, false),\n  7: new Mathstyle(SSc, 3, 0.5, true)\n}; // Aliases\n\nMATHSTYLES.displaystyle = MATHSTYLES[0];\nMATHSTYLES.textstyle = MATHSTYLES[2];\nMATHSTYLES.scriptstyle = MATHSTYLES[4];\nMATHSTYLES.scriptscriptstyle = MATHSTYLES[6];\n/**\r\n * This structure contains the rendering context of the current parse level.\r\n *\r\n * It also holds information about the parent context to handle scaling\r\n * adjustments.\r\n *\r\n * When a new scope is entered, a clone of the context is created with `.clone()`\r\n * so that any further changes remain local to the scope.\r\n *\r\n * A scope is defined for example by:\r\n * - an explicit group enclosed in braces `{...}`\r\n * - a semi-simple group enclosed in `\\bgroup...\\endgroup`\r\n * - an environment delimited by `\\begin{<envname>}...\\end{<envname>}`\r\n *\r\n * @property {Mathstyle} mathstyle\r\n * @property {number} opacity\r\n * @property {number} size\r\n * @property {object} atomIdsSettings - If not undefined, unique IDs should be\r\n * generated for each span so they can be mapped back to an atom.\r\n * The `seed` field should be a number to generate a specific range of\r\n * IDs or the string \"random\" to generate a random number.\r\n * Optionally, if a `groupNumbers` property is set to true, an additional\r\n * span will enclose strings of digits. This is used by read aloud to properly\r\n * pronounce (and highlight) numbers in expressions.\r\n * @property {Mathstyle} parentMathstyle\r\n * @property {number} parentSize\r\n * @property {object} macros A macros dictionary\r\n * @property {string} color\r\n */\n\nclass Context {\n  constructor(from) {\n    var _a, _b, _c, _d, _e, _f;\n\n    this.macros = (_a = from.macros) !== null && _a !== void 0 ? _a : {};\n    this.atomIdsSettings = from.atomIdsSettings;\n    this.mathstyle = (_b = from.mathstyle) !== null && _b !== void 0 ? _b : MATHSTYLES.displaystyle;\n    this.letterShapeStyle = (_c = from.letterShapeStyle) !== null && _c !== void 0 ? _c : 'tex';\n    this.size = (_d = from.size) !== null && _d !== void 0 ? _d : 'size5'; // medium size\n\n    this.parentMathstyle = (_e = from.parentMathstyle) !== null && _e !== void 0 ? _e : this.mathstyle;\n    this.parentSize = (_f = from.parentSize) !== null && _f !== void 0 ? _f : this.size;\n    this.opacity = from.opacity;\n    this.smartFence = from.smartFence;\n  }\n  /**\r\n   * Returns a new context with the same properties as 'this',\r\n   * except for the ones provided in `override`\r\n   */\n\n\n  clone(override = {}) {\n    const result = new Context(this);\n\n    if (typeof override !== 'undefined') {\n      // `'auto'` (or undefined) to indicate that the mathstyle should in\n      // fact not be changed. This is used when specifying the mathstyle\n      // for some environments.\n      Object.assign(result, override);\n\n      if (!override.mathstyle) {\n        result.mathstyle = this.mathstyle;\n      } else {\n        result.parentMathstyle = this.mathstyle;\n        result.parentSize = this.size;\n\n        if (typeof override.mathstyle === 'string') {\n          result.mathstyle = MATHSTYLES[override.mathstyle];\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Change the mathstyle of this context\r\n   * @param value - `'auto'` to indicate that the mathstyle should in\r\n   * fact not be changed. This is used when specifying the mathstyle for some\r\n   * environments.\r\n   */\n\n\n  setMathstyle(value) {\n    if (value && value !== 'auto') {\n      this.mathstyle = MATHSTYLES[value];\n    }\n  }\n\n  cramp() {\n    return this.clone({\n      mathstyle: this.mathstyle.cramp()\n    });\n  }\n\n  sup() {\n    return this.clone({\n      mathstyle: this.mathstyle.sup()\n    });\n  }\n\n  sub() {\n    return this.clone({\n      mathstyle: this.mathstyle.sub()\n    });\n  }\n\n}\n\nconst SVG_BODY = {\n  // Adapted from https://github.com/KaTeX/KaTeX/blob/master/src/stretchy.js\n  overrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],\n  overleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],\n  underrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],\n  underleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],\n  xrightarrow: [['rightarrow'], 1.469, 522, 'xMaxYMin'],\n  xleftarrow: [['leftarrow'], 1.469, 522, 'xMinYMin'],\n  Overrightarrow: [['doublerightarrow'], 0.888, 560, 'xMaxYMin'],\n  xRightarrow: [['doublerightarrow'], 1.526, 560, 'xMaxYMin'],\n  xLeftarrow: [['doubleleftarrow'], 1.526, 560, 'xMinYMin'],\n  overleftharpoon: [['leftharpoon'], 0.888, 522, 'xMinYMin'],\n  xleftharpoonup: [['leftharpoon'], 0.888, 522, 'xMinYMin'],\n  xleftharpoondown: [['leftharpoondown'], 0.888, 522, 'xMinYMin'],\n  overrightharpoon: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],\n  xrightharpoonup: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],\n  xrightharpoondown: [['rightharpoondown'], 0.888, 522, 'xMaxYMin'],\n  xlongequal: [['longequal'], 0.888, 334, 'xMinYMin'],\n  xtwoheadleftarrow: [['twoheadleftarrow'], 0.888, 334, 'xMinYMin'],\n  xtwoheadrightarrow: [['twoheadrightarrow'], 0.888, 334, 'xMaxYMin'],\n  overleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],\n  overbrace: [['leftbrace', 'midbrace', 'rightbrace'], 1.6, 548],\n  underbrace: [['leftbraceunder', 'midbraceunder', 'rightbraceunder'], 1.6, 548],\n  underleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],\n  xleftrightarrow: [['leftarrow', 'rightarrow'], 1.75, 522],\n  xLeftrightarrow: [['doubleleftarrow', 'doublerightarrow'], 1.75, 560],\n  xrightleftharpoons: [['leftharpoondownplus', 'rightharpoonplus'], 1.75, 716],\n  xleftrightharpoons: [['leftharpoonplus', 'rightharpoondownplus'], 1.75, 716],\n  xhookleftarrow: [['leftarrow', 'righthook'], 1.08, 522],\n  xhookrightarrow: [['lefthook', 'rightarrow'], 1.08, 522],\n  overlinesegment: [['leftlinesegment', 'rightlinesegment'], 0.888, 522],\n  underlinesegment: [['leftlinesegment', 'rightlinesegment'], 0.888, 522],\n  overgroup: [['leftgroup', 'rightgroup'], 0.888, 342],\n  undergroup: [['leftgroupunder', 'rightgroupunder'], 0.888, 342],\n  xmapsto: [['leftmapsto', 'rightarrow'], 1.5, 522],\n  xtofrom: [['leftToFrom', 'rightToFrom'], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [['baraboveleftarrow', 'rightarrowabovebar'], 1.75, 901],\n  xrightequilibrium: [['baraboveshortleftharpoon', 'rightharpoonaboveshortbar'], 1.75, 716],\n  xleftequilibrium: [['shortbaraboveleftharpoon', 'shortrightharpoonabovebar'], 1.75, 716]\n}; // While the images above are sliced, \"accents\" are stretched\n// The variants (xxx1, xxx2, etc...) are used depending on the length\n// (in number of characters) of the base.\n\nconst SVG_ACCENTS = {\n  // viewBoxWidth, viewBoxHeight, height\n  widehat1: [1062, 239, 0.24],\n  widehat2: [2364, 300, 0.3],\n  widehat3: [2364, 360, 0.36],\n  widehat4: [2364, 420, 0.42],\n  widecheck1: [1062, 239, 0.24],\n  widecheck2: [2364, 300, 0.3],\n  widecheck3: [2364, 360, 0.36],\n  widecheck4: [2364, 420, 0.42],\n  widetilde1: [600, 260, 0.26],\n  widetilde2: [1033, 286, 0.286],\n  widetilde3: [2339, 306, 0.306],\n  widetilde4: [2340, 312, 0.34]\n}; // From https://github.com/KaTeX/KaTeX/blob/master/src/svgGeometry.js\n\nconst PATHS = {\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  widetilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  widetilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  widetilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  widetilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n/**\r\n * Generate the HTML markup to represent a SVG span.\r\n *\r\n */\n\nfunction svgBodyToMarkup(svgBodyName) {\n  if (SVG_ACCENTS[svgBodyName]) {\n    const height = SVG_ACCENTS[svgBodyName][2];\n    const result = \"<span class=\\\"stretchy\\\" style=\\\"height:\".concat(height, \"em\\\">\") + \"<svg width=\\\"100%\\\" height=\\\"\".concat(height, \"em\\\"\") + \"viewBox=\\\"0 0 \".concat(SVG_ACCENTS[svgBodyName][0], \" \").concat(SVG_ACCENTS[svgBodyName][1], \"\\\"\") + \"preserveAspectRatio=\\\"none\\\">\" + \"<path d=\\\"\".concat(PATHS[svgBodyName], \"\\\"></path>\") + \"</svg></span>\";\n    return \"<span style=\\\"height:\".concat(height, \"em;min-width:0\\\">\").concat(result, \"</span>\");\n  }\n\n  const _SVG_BODY$svgBodyName = _slicedToArray(SVG_BODY[svgBodyName], 4),\n        paths = _SVG_BODY$svgBodyName[0],\n        minWidth = _SVG_BODY$svgBodyName[1],\n        viewBoxHeight = _SVG_BODY$svgBodyName[2],\n        align = _SVG_BODY$svgBodyName[3];\n\n  let widthClasses;\n  let aligns;\n  const height = viewBoxHeight / 1000;\n\n  if (paths.length === 3) {\n    widthClasses = ['slice-1-of-3', 'slice-2-of-3', 'slice-3-of-3'];\n    aligns = ['xMinYMin', 'xMidYMin', 'xMaxYMin'];\n  } else if (paths.length === 2) {\n    widthClasses = ['slice-1-of-2', 'slice-2-of-2'];\n    aligns = ['xMinYMin', 'xMaxYMin'];\n  } else {\n    widthClasses = ['slice-1-of-1'];\n    aligns = [align];\n  }\n\n  const body = paths.map((path, i) => \"<span class=\\\"\".concat(widthClasses[i], \"\\\" style=\\\"height:\").concat(height, \"em\\\">\") + \"<svg width=\\\"400em\\\" height=\\\"\".concat(height, \"em\\\"\") + \"viewBox=\\\"0 0 400000 \".concat(viewBoxHeight, \"\\\"\") + \"preserveAspectRatio=\\\"\".concat(aligns[i], \" slice\\\">\") + \"<path d=\\\"\".concat(PATHS[path], \"\\\"></path>\") + \"</svg></span>\").join('');\n  return \"<span style=\\\"height:\".concat(height, \"em;min-width:\").concat(minWidth, \"em;display:inline-block;\\\">\").concat(body, \"</span>\");\n}\n\nfunction svgBodyHeight(svgBodyName) {\n  if (SVG_BODY[svgBodyName]) {\n    return SVG_BODY[svgBodyName][2] / 1000;\n  }\n\n  return SVG_ACCENTS[svgBodyName][2];\n}\n/*\r\n * Return an array of runs (array of atoms with the same value\r\n *   for the specified property)\r\n */\n\n\nfunction getPropertyRuns(atoms, property) {\n  const result = [];\n  let run = [];\n  let currentValue;\n  atoms.forEach(atom => {\n    if (atom.type !== 'first') {\n      let value;\n\n      if (property === 'variant') {\n        value = atom.variant;\n\n        if (atom.variantStyle && atom.variantStyle !== 'up') {\n          value += '-' + atom.variantStyle;\n        }\n      } else {\n        value = atom[property];\n      } // If the value of this atom is different from the\n      // current value, start a new run\n\n\n      if (value !== currentValue) {\n        if (run.length > 0) result.push(run);\n        run = [atom];\n        currentValue = value;\n      } else {\n        // Same value, add it to the current run\n        run.push(atom);\n      }\n    }\n  }); // Push whatever is left\n\n  if (run.length > 0) result.push(run);\n  return result;\n}\n\nconst MODES_REGISTRY = {};\n\nfunction register(name, definition) {\n  MODES_REGISTRY[name] = _objectSpread({}, definition);\n}\n\nfunction emitLatexRun(parent, run, expandMacro) {\n  var _a;\n\n  if ((_a = MODES_REGISTRY[run[0].mode]) === null || _a === void 0 ? void 0 : _a.emitLatexRun) {\n    return MODES_REGISTRY[run[0].mode].emitLatexRun(parent, run, expandMacro);\n  }\n\n  return '';\n}\n\nfunction parseTokens(mode, tokens, onError, options) {\n  var _a;\n\n  if ((_a = MODES_REGISTRY[mode]) === null || _a === void 0 ? void 0 : _a.parse) {\n    return MODES_REGISTRY[mode].parse(tokens, onError, options);\n  }\n\n  return null;\n}\n/*\r\n * Apply the styling (bold, italic, etc..) as classes to the atom, and return\r\n * the effective font name to be used for metrics\r\n * ('Main-Regular', 'Caligraphic-Regualr' etc...)\r\n */\n\n\nfunction applyStyle(span, style) {\n  var _a;\n\n  if ((_a = MODES_REGISTRY[style.mode]) === null || _a === void 0 ? void 0 : _a.applyStyle) {\n    return MODES_REGISTRY[style.mode].applyStyle(span, style);\n  }\n\n  return '';\n}\n/*\r\n * See https://tex.stackexchange.com/questions/81752/\r\n * for a thorough description of the TeXt atom type and their relevance to\r\n * proper kerning.\r\n */\n\n\nconst SPAN_TYPE = ['', 'mord', 'mbin', 'mop', 'mrel', 'mopen', 'mclose', 'mpunct', 'minner', 'spacing', // 'mtable',\n'first', 'command', 'composition', 'error', 'placeholder', 'textord', 'none']; // The const assertion prevents widening to string[]\n\nfunction isSpanType(type) {\n  return SPAN_TYPE.includes(type);\n}\n/*\r\n * See http://www.tug.org/TUGboat/tb30-3/tb96vieth.pdf for\r\n * typesetting conventions for mathematical physics (units, etc...)\r\n */\n\n\nconst INTER_ATOM_SPACING = {\n  'mord+mop': 3,\n  'mord+mbin': 4,\n  'mord+mrel': 5,\n  'mord+minner': 3,\n  'mop+mord': 3,\n  'mop+mop': 3,\n  'mop+mbin': 5,\n  'mop+minner': 3,\n  'mbin+mord': 4,\n  'mbin+mop': 4,\n  'mbin+mopen': 4,\n  'mbin+minner': 4,\n  'mrel+mord': 5,\n  'mrel+mop': 5,\n  'mrel+mopen': 5,\n  'mrel+minner': 5,\n  'mclose+mop': 3,\n  'mclose+mbin': 4,\n  'mclose+mrel': 5,\n  'mclose+minner': 3,\n  'mpunct+mord': 3,\n  'mpunct+mop': 3,\n  'mpunct+mbin': 4,\n  'mpunct+mrel': 5,\n  'mpunct+mopen': 3,\n  'mpunct+mpunct': 3,\n  'mpunct+minner': 3\n};\nconst INTER_ATOM_TIGHT_SPACING = {\n  'mord+mop': 3,\n  'mop+mord': 3,\n  'mop+mop': 3,\n  'mclose+mop': 3,\n  'minner+mop': 3\n};\n/**\r\n * Return a string made up of the concatenated arguments.\r\n * Each arguments can be either a string, which is unchanged,\r\n * or a number, which is converted to a string with at most 2 fractional digits.\r\n *\r\n */\n\nfunction toString(arg) {\n  if (typeof arg === 'string') {\n    return arg;\n  }\n\n  if (typeof arg === 'number') {\n    return Number(Math.ceil(1e2 * arg) / 1e2).toString();\n  }\n\n  if (typeof arg === 'undefined') {\n    return '';\n  }\n\n  if (isArray(arg)) {\n    let result = '';\n\n    var _iterator = _createForOfIteratorHelper(arg),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        const elem = _step.value;\n        result += toString(elem);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return result; // } else if (arg) {\n    //     result += (arg as number).toString();\n  }\n\n  console.error('Span.toStringUnexpected argument type');\n  return '';\n} //----------------------------------------------------------------------------\n// SPAN\n//----------------------------------------------------------------------------\n\n/**\r\n * A span is the most elementary element that can be rendered.\r\n * It is composed of an optional body of text and an optional list\r\n * of children (other spans). Each span can be decorated with\r\n * CSS classes and style attributes.\r\n *\r\n * @param content the items 'contained' by this node\r\n * @param classes list of classes attributes associated with this node\r\n\n\n * @property  type - For example, `'command'`, `'mrel'`, etc...\r\n * @property classes - A string of space separated CSS classes\r\n * associated with this element\r\n * @property cssId - A CSS ID assigned to this span (optional)\r\n * @property children - An array, potentially empty, of spans which\r\n * this span encloses\r\n * @property body - Content of this span. Can be empty.\r\n * @property style - A set of key/value pairs specifying CSS properties\r\n * associated with this element.\r\n * @property height - The measurement from baseline to top, in em.\r\n * @property depth - The measurement from baseline to bottom, in em.\r\n * @property width\r\n */\n\n\nclass Span {\n  constructor(content, classes = '', type = '') {\n    // CLASSES\n    this.classes = classes; // CONTENT\n\n    if (isArray(content)) {\n      // Check if isArray first, since an array is also an object\n      // Flatten it (i.e. [[a1, a2], b1, b2] -> [a1, a2, b1, b2]\n      this.children = [].concat(...content);\n    } else if (typeof content === 'string') {\n      this.body = content;\n    } else if (content && typeof content === 'object') {\n      this.children = [content];\n    }\n\n    this.type = type; // STYLE\n    // CSS style, as an array of key value pairs.\n    // Use this.setStyle() to modify it.\n\n    this.style = null; // Calculate the dimensions of this span based on its children\n\n    this.updateDimensions();\n  }\n  /**\r\n   * Update the dimensions of this node based on its children:\r\n   * - height: distance from bottom to top\r\n   * - depth: distance from bottom to baseline\r\n   * - maxFontSize: a size multiplier (typically set with commands such as \\huge)\r\n   */\n\n\n  updateDimensions() {\n    let height = 0.0;\n    let depth = 0.0;\n    let maxFontSize = 1.0;\n\n    if (this.children) {\n      this.children.forEach(x => {\n        if (x.height > height) height = x.height;\n        if (x.depth > depth) depth = x.depth;\n        if (x.maxFontSize > maxFontSize) maxFontSize = x.maxFontSize;\n      });\n    } else if (typeof this.body === 'string') {\n      height = METRICS.baselineskip;\n      depth = 0;\n    }\n\n    this.height = height;\n    this.depth = depth;\n    this.maxFontSize = maxFontSize;\n  }\n\n  selected(isSelected) {\n    if (isSelected && !/ML__selected/.test(this.classes)) {\n      if (this.classes.length > 0) this.classes += ' ';\n      this.classes += 'ML__selected';\n    }\n\n    if (!isSelected && /ML__selected/.test(this.classes)) {\n      this.classes = this.classes.replace('ML__selected', '');\n    }\n\n    if (this.children) {\n      this.children.forEach(x => x.selected(isSelected));\n    }\n  }\n\n  applyStyle(style) {\n    if (!style) return; //\n    // 1. Apply color\n    //\n\n    if (style.color) {\n      if (style.color !== 'none') {\n        this.setStyle('color', style.color);\n      } else {\n        this.setStyle('color', '');\n      }\n    }\n\n    if (style.backgroundColor) {\n      if (style.backgroundColor !== 'none') {\n        this.setStyle('background-color', style.backgroundColor);\n      } else {\n        this.setStyle('background-color', '');\n      }\n    } //\n    // 2. Add any custom style classes\n    //\n\n\n    if (style.cssClass) {\n      this.classes += ' ' + style.cssClass;\n    } // If the body is null (for example for a line), we're done.\n\n\n    if (!this.body) return; //\n    // 3. Determine the font family (i.e. 'ams', 'mathcal', etc...)\n    // and apply styling by adding appropriate classes to the atom\n    //\n\n    console.assert(typeof this.body === 'string');\n    const fontName = applyStyle(this, style); //\n    // 5. Get the metrics information\n    //\n\n    if (this.body && fontName) {\n      this.maxFontSize = {\n        size1: 0.5,\n        size2: 0.7,\n        size3: 0.8,\n        size4: 0.9,\n        size5: 1.0,\n        size6: 1.2,\n        size7: 1.44,\n        size8: 1.73,\n        size9: 2.07,\n        size10: 2.49\n      }[style.fontSize] || 1.0;\n      this.height = 0.0;\n      this.depth = 0.0;\n      this.skew = 0.0;\n      this.italic = 0.0;\n\n      for (let i = 0; i < this.body.length; i++) {\n        const metrics = getCharacterMetrics(this.body.charAt(i), fontName); // If we were able to get metrics info for this character, store it.\n\n        if (metrics) {\n          this.height = Math.max(this.height, metrics.height);\n          this.depth = Math.max(this.depth, metrics.depth);\n          this.skew = metrics.skew;\n          this.italic = metrics.italic;\n        }\n      }\n    }\n  }\n  /**\r\n   * Set the value of a CSS property associated with this span.\r\n   * For example, setStyle('border-right', 5.6, 'em');\r\n   *\r\n   * @param prop the CSS property to set\r\n   * @param value a series of strings and numbers that will be concatenated.\r\n   */\n\n\n  setStyle(prop, ...value) {\n    const v = toString(value);\n\n    if (v.length > 0) {\n      if (!this.style) this.style = {};\n      this.style[prop] = v;\n    }\n  }\n\n  setTop(top) {\n    if (top && top !== 0) {\n      if (!this.style) this.style = {};\n      this.style['top'] = toString(top) + 'em';\n      this.height -= top;\n      this.depth += top;\n    }\n  }\n\n  setLeft(left) {\n    if (left && left !== 0) {\n      if (!this.style) this.style = {};\n      this.style['margin-left'] = toString(left) + 'em';\n    }\n  }\n\n  setRight(right) {\n    if (right && right !== 0) {\n      if (!this.style) this.style = {};\n      this.style['margin-right'] = toString(right) + 'em';\n    }\n  }\n\n  setWidth(width) {\n    if (width && width !== 0) {\n      if (!this.style) this.style = {};\n      this.style['width'] = toString(width) + 'em';\n    }\n  }\n  /**\r\n   * Generate the HTML markup to represent this span.\r\n   *\r\n   * @param hskip - Space (in mu, 1/18em) to leave on the left side\r\n   * of the span. Implemented as a Unicode character if possible, a margin-left otherwise.\r\n   * This is used to adjust the inter-spacing between spans of different types,\r\n   * e.g. 'bin' and 'rel', according to the TeX rules (TexBook p.170)\r\n   *\r\n   * @param hscale - If a value is provided, the margins are scaled by\r\n   * this factor.\r\n   *\r\n   * @return HTML markup\r\n   */\n\n\n  toMarkup(hskip = 1.0, hscale = 1.0) {\n    var _a, _b, _c, _d, _e;\n\n    let result = '';\n    let body = this.body || ''; //\n    // 1. Calculate the spacing between atoms, based on their type\n    // (`mord`, `mbin`, `mrel`, etc...)\n    //\n\n    if (this.children) {\n      let previousType = 'none';\n\n      for (let i = 0; i < this.children.length; i++) {\n        const child = this.children[i];\n        let spacing = 0;\n        const type = getEffectiveType(this.children, i);\n        const combinedType = previousType + '+' + type;\n\n        if (child.isTight) {\n          spacing = (_a = INTER_ATOM_TIGHT_SPACING[combinedType]) !== null && _a !== void 0 ? _a : 0;\n        } else {\n          spacing = (_b = INTER_ATOM_SPACING[combinedType]) !== null && _b !== void 0 ? _b : 0;\n        }\n\n        body += child.toMarkup(spacing, hscale);\n        previousType = type;\n      }\n    } // Collapse 'empty' spans\n\n\n    if ((body === '\\u200b' || !body && !this.svgBody) && (!this.classes || this.classes === 'ML__selected') && !this.cssId && !this.style && !this.svgOverlay) {\n      result = '';\n    } else {\n      // Note: We can't omit the tag, even if it has no class and no style,\n      // as some layouts (vlist) depends on the presence of the tag to function\n      result = '<span';\n\n      if (this.cssId) {\n        result += ' id=\"' + this.cssId + '\" ';\n      }\n\n      if (this.attributes) {\n        result += ' ' + Object.keys(this.attributes).map(attribute => \"\".concat(attribute, \"=\\\"\").concat(this.attributes[attribute], \"\\\"\")).join(' ');\n      }\n\n      const classes = this.classes.split(' '); // Add the type (mbin, mrel, etc...) if specified\n\n      classes.push((_c = {\n        command: 'ML__command',\n        placeholder: 'ML__placeholder',\n        error: 'ML__error'\n      }[this.type]) !== null && _c !== void 0 ? _c : '');\n\n      if (this.caret && this.type === 'command') {\n        classes.push('ML__command-caret');\n      } // Remove duplicate and empty classes\n\n\n      let classList = '';\n\n      if (classes.length > 1) {\n        classList = classes.filter((x, e, a) => {\n          return x.length > 0 && a.indexOf(x) === e;\n        }).join(' ');\n      } else {\n        classList = classes[0];\n      }\n\n      if (classList.length > 0) {\n        result += \" class=\\\"\".concat(classList, \"\\\"\");\n      } // If a `hskip` value was provided, add it to the margin-left\n\n\n      if (hskip) {\n        if ((_d = this.style) === null || _d === void 0 ? void 0 : _d['margin-left']) {\n          // There was already a margin, add to it\n          this.style['margin-left'] = toString(parseFloat(this.style['margin-left']) + hskip / 18) + 'em';\n        } else {\n          if (!this.style) this.style = {};\n          this.style['margin-left'] = toString(hskip / 18) + 'em';\n        }\n      }\n\n      if (this.style) {\n        let styleString = '';\n        const isSelected = /ML__selected/.test(this.classes);\n\n        for (const style in this.style) {\n          if (Object.prototype.hasOwnProperty.call(this.style, style)) {\n            // Render the style property, except the background\n            // of selected spans\n            if (style !== 'background-color' || !isSelected) {\n              styleString += style + ':' + this.style[style] + ';';\n            }\n          }\n        }\n\n        if (styleString.length > 0) {\n          result += ' style=\"' + styleString + '\"';\n        }\n      }\n\n      result += '>'; // If there is some SVG markup associated with this span,\n      // include it now\n\n      if (this.svgBody) {\n        result += svgBodyToMarkup(this.svgBody);\n      } else if (this.svgOverlay) {\n        result += '<span style=\"';\n        result += 'display: inline-block;';\n        result += 'height:' + (this.height + this.depth) + 'em;';\n        result += 'vertical-align:' + this.depth + 'em;';\n        result += '\">';\n        result += body;\n        result += '</span>';\n        result += '<svg ';\n        result += 'style=\"position:absolute;';\n        result += 'overflow:overlay;';\n        result += 'height:' + (this.height + this.depth) + 'em;';\n\n        if ((_e = this.style) === null || _e === void 0 ? void 0 : _e.padding) {\n          result += 'top:' + this.style.padding + ';';\n          result += 'left:' + this.style.padding + ';';\n          result += 'width:calc(100% - 2 * ' + this.style.padding + ' );';\n        } else {\n          result += 'top:0;';\n          result += 'left:0;';\n          result += 'width:100%;';\n        }\n\n        result += 'z-index:2;';\n        result += '\"';\n\n        if (this.svgStyle) {\n          result += ' style=\"' + this.svgStyle + '\"';\n        }\n\n        result += '>';\n        result += this.svgOverlay;\n        result += '</svg>';\n      } else {\n        result += body;\n      }\n\n      result = result + '</span>';\n    }\n\n    if (this.caret && this.type !== 'command') {\n      if (this.caret === 'text') {\n        result = result + '<span class=\"ML__text-caret\"></span>';\n      } else {\n        result = result + '<span class=\"ML__caret\"></span>';\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Can this span be coalesced with 'span'?\r\n   * This is used to 'coalesce' (i.e. group together) a series of spans that are\r\n   * identical except for their value, and to avoid generating redundant spans.\r\n   * That is: '12' ->\r\n   *      \"<span class='mord mathrm'>12</span>\"\r\n   * rather than:\r\n   *      \"<span class='mord mathrm'>1</span><span class='mord mathrm'>2</span>\"\r\n   */\n\n\n  tryCoalesceWith(span) {\n    // Don't coalesce if the tag or type are different\n    if (this.type !== span.type) return false; // Don't coalesce consecutive errors, placeholders or commands\n\n    if (this.type === 'error' || this.type === 'placeholder' || this.type === 'command') {\n      return false;\n    } // Don't coalesce if some of the content is SVG\n\n\n    if (this.svgBody || !this.body) return false;\n    if (span.svgBody || !span.body) return false; // If this span or the candidate span have children, we can't\n    // coalesce them, but we'll try to coalesce their children\n\n    const hasChildren = this.children && this.children.length > 0;\n    const spanHasChildren = span.children && span.children.length > 0;\n    if (hasChildren || spanHasChildren) return false; // If they have a different number of styles, can't coalesce\n\n    const thisStyleCount = this.style ? this.style.length : 0;\n    const spanStyleCount = span.style ? span.style.length : 0;\n    if (thisStyleCount !== spanStyleCount) return false; // For the purpose of our comparison,\n    // any 'empty' classes (whitespace)\n\n    const classes = this.classes.trim().replace(/\\s+/g, ' ').split(' ');\n    const spanClasses = span.classes.trim().replace(/\\s+/g, ' ').split(' '); // If they have a different number of classes, can't coalesce\n\n    if (classes.length !== spanClasses.length) return false; // OK, let's do the more expensive comparison now.\n    // If they have different classes, can't coalesce\n\n    classes.sort();\n    spanClasses.sort();\n\n    for (let i = 0; i < classes.length; i++) {\n      // Don't coalesce vertical separators\n      // (used in column formating with {l||r} for example\n      if (classes[i] === 'vertical-separator') return false;\n      if (classes[i] !== spanClasses[i]) return false;\n    } // If the styles are different, can't coalesce\n\n\n    if (this.style && span.style) {\n      for (const style in this.style) {\n        if (Object.prototype.hasOwnProperty.call(this.style, style) && Object.prototype.hasOwnProperty.call(span.style, style)) {\n          if (this.style[style] !== span.style[style]) return false;\n        }\n      }\n    } // OK, the attributes of those spans are compatible.\n    // Merge span into this\n\n\n    this.body += span.body;\n    this.height = Math.max(this.height, span.height);\n    this.depth = Math.max(this.depth, span.depth);\n    this.maxFontSize = Math.max(this.maxFontSize, span.maxFontSize); // The italic correction for the coalesced spans is the\n    // italic correction of the last span.\n\n    this.italic = span.italic;\n    return true;\n  }\n\n}\n\nfunction getEffectiveType(xs, i) {\n  var _a, _b, _c, _d, _e;\n\n  if (i < 0 || i >= xs.length) return 'none';\n  const prevType = (_b = (_a = xs[i - 1]) === null || _a === void 0 ? void 0 : _a.type) !== null && _b !== void 0 ? _b : 'none';\n  const nextType = (_d = (_c = xs[i + 1]) === null || _c === void 0 ? void 0 : _c.type) !== null && _d !== void 0 ? _d : 'none';\n  let result = (_e = xs[i].type) !== null && _e !== void 0 ? _e : 'none';\n  if (result === 'first') return 'none';\n  if (result === 'textord') return 'mord';\n\n  if (result === 'mbin') {\n    // If a `mbin` span, i.e. \"+\" is after or before spans\n    // of a certain type, consider it to be a `mord` instead.\n    // This is to handle proper spacing of, e.g. \"-4\" vs \"1-4\"\n    if (/first|none|mrel|mpunct|mopen|mbin|mop/.test(prevType) || /none|mrel|mpunct|mclose/.test(nextType)) {\n      result = 'mord';\n    }\n  }\n\n  return result;\n}\n/**\r\n * Attempts to coalesce (merge) spans, for example consecutive text spans.\r\n * Return a new tree with coalesced spans.\r\n *\r\n */\n\n\nfunction coalesce(spans) {\n  if (!spans || spans.length === 0) return [];\n  spans[0].children = coalesce(spans[0].children);\n  const result = [spans[0]];\n\n  for (let i = 1; i < spans.length; i++) {\n    if (!result[result.length - 1].tryCoalesceWith(spans[i])) {\n      spans[i].children = coalesce(spans[i].children);\n      result.push(spans[i]);\n    }\n  }\n\n  return result;\n} //----------------------------------------------------------------------------\n// UTILITY FUNCTIONS\n//----------------------------------------------------------------------------\n\n\nfunction height(spans) {\n  if (!spans) return 0;\n\n  if (isArray(spans)) {\n    return spans.reduce((acc, x) => Math.max(acc, x.height), 0);\n  }\n\n  return spans.height;\n}\n\nfunction depth(spans) {\n  if (!spans) return 0;\n\n  if (isArray(spans)) {\n    return spans.reduce((acc, x) => Math.max(acc, x.depth), 0);\n  }\n\n  return spans.depth;\n}\n\nfunction skew(spans) {\n  if (!spans) return 0;\n\n  if (isArray(spans)) {\n    let result = 0;\n\n    var _iterator2 = _createForOfIteratorHelper(spans),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        const span = _step2.value;\n        result += span.skew || 0;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return result;\n  }\n\n  return spans.skew;\n}\n\nfunction italic(spans) {\n  if (!spans) return 0;\n\n  if (isArray(spans)) {\n    return spans[spans.length - 1].italic;\n  }\n\n  return spans.italic;\n}\n/**\r\n * Make an element made of a sequence of children with classes\r\n * @param content the items 'contained' by this node\r\n * @param classes list of classes attributes associated with this node\r\n */\n\n\nfunction makeSpan(content, classes = '', type = '') {\n  if (isArray(content)) {\n    const c = content.filter(x => Boolean(x));\n\n    if (c.length === 1) {\n      return new Span(c[0], classes, type);\n    }\n\n    return new Span(c, classes, type);\n  }\n\n  return new Span(content, classes, type);\n}\n\nfunction makeSymbol(fontFamily, symbol, classes = '', type = '') {\n  const result = new Span(symbol, classes, type);\n  const metrics = getCharacterMetrics(symbol, fontFamily);\n  result.height = metrics.height;\n  result.depth = metrics.depth;\n  result.skew = metrics.skew;\n  result.italic = metrics.italic;\n  result.setRight(result.italic);\n  return result;\n}\n/**\r\n * Makes an element placed in each of the vlist elements to ensure that each\r\n * element has the same max font size. To do this, we create a zero-width space\r\n * with the correct font size.\r\n//  * Note: without this, even when fontSize = 0, the fraction bar is no\r\n//  * longer positioned correctly\r\n */\n\n\nfunction makeFontSizer(context, fontSize) {\n  const fontSizeAdjustment = fontSize ? fontSize / context.mathstyle.sizeMultiplier : 0;\n  const fontSizeInner = new Span('\\u200b'); // ZERO WIDTH SPACE\n\n  fontSizeInner.depth = 0;\n  fontSizeInner.height = 0;\n\n  if (fontSizeAdjustment !== 1) {\n    fontSizeInner.setStyle('font-size', fontSizeAdjustment, fontSizeAdjustment > 0 ? 'em' : '');\n    fontSizeInner.attributes = {\n      'aria-hidden': 'true'\n    };\n  }\n\n  if (context.size !== 'size5') {\n    return new Span(fontSizeInner, 'fontsize-ensurer reset-' + context.size + ' size5');\n  }\n\n  return fontSizeAdjustment !== 0 ? fontSizeInner : null;\n}\n\nfunction makeStruts(content, classes = '', type = '') {\n  const topStrut = makeSpan('', 'ML__strut');\n  topStrut.setStyle('height', height(content), 'em');\n  let bottomStrut;\n\n  if (depth(content) !== 0) {\n    bottomStrut = makeSpan('', 'ML__strut--bottom');\n    bottomStrut.setStyle('height', height(content) + depth(content), 'em');\n    bottomStrut.setStyle('vertical-align', -depth(content), 'em');\n  }\n\n  let struts;\n\n  if (isArray(content)) {\n    struts = [topStrut, bottomStrut, ...content];\n  } else {\n    struts = [topStrut, bottomStrut, content];\n  }\n\n  const result = makeSpan(struts, classes, type); // result.setStyle('display', 'inline-block');\n\n  return result;\n}\n\nfunction makeStyleWrap(type, children, fromStyle, toStyle, classes) {\n  classes = classes || '';\n  classes += ' style-wrap ';\n  const result = makeHlist(children, classes + fromStyle.adjustTo(toStyle));\n  result.type = type;\n  const multiplier = toStyle.sizeMultiplier / fromStyle.sizeMultiplier;\n  result.height *= multiplier; // @revisit. Use spanHeight()? is height set at this point?\n\n  result.depth *= multiplier;\n  result.maxFontSize = toStyle.sizeMultiplier;\n  return result;\n}\n/**\r\n * Add some SVG markup to be overlaid on top of the span\r\n */\n\n\nfunction addSVGOverlay(body, svgMarkup, svgStyle) {\n  body.svgOverlay = svgMarkup;\n  body.svgStyle = svgStyle;\n  return body;\n}\n\nfunction makeHlist(spans, classes = '', type = '') {\n  // Note: do not try to optimize and avoid creating the span below\n  // Some layouts, e.g. vlist, depend on that span being there.\n  const result = new Span(spans, classes, type);\n  let multiplier = 1.0;\n\n  if (spans instanceof Span) {\n    multiplier = spans.maxFontSize;\n  } else {\n    multiplier = spans.reduce((acc, x) => Math.max(acc, x.maxFontSize), multiplier);\n  }\n\n  result.height *= multiplier;\n  result.depth *= multiplier;\n  return result;\n}\n/**\r\n * Create a new span of type `vlist`, a set of vertically stacked items\r\n * @param elements  An array of Span and integer. The integer can be either some kerning information\r\n * or the value of an individual shift of the preceding child if in 'individualShift' mode\r\n * @param pos The method that will be used to position the elements in the vlist.\r\n *\r\n * One of:\r\n * - `\"individualShift\"`: each child must be followed by a number indicating how much to shift it (i.e. moved downwards)\r\n * - `\"top\"`: posData specifies the topmost point of the vlist (>0 move up)\r\n * - `\"bottom\"`: posData specifies the bottommost point of the vlist (>0 move down)\r\n * - `\"shift\"`: the baseline of the vlist will be positioned posData away from the baseline\r\n * of the first child. (>0 moves down)\r\n */\n\n\nfunction makeVlist(context, elements, pos = 'shift', posData = 0) {\n  let listDepth = 0;\n  let currPos = 0;\n  pos = pos || 'shift'; // Normalize the elements so that they're all either a number or\n  // a single span. If a child is an array of spans,\n  // wrap it in a span\n\n  for (let i = 0; i < elements.length; i++) {\n    if (isArray(elements[i])) {\n      if (elements[i].length === 1) {\n        // If that's an array made up of a single span, use that span\n        elements[i] = elements[i][0];\n      } else {\n        // Otherwise, wrap it in a span\n        elements[i] = makeSpan(elements[i]);\n      }\n    }\n  }\n\n  if (pos === 'shift') {\n    console.assert(elements[0] instanceof Span);\n    listDepth = -elements[0].depth - posData;\n  } else if (pos === 'bottom') {\n    listDepth = -posData;\n  } else if (pos === 'top') {\n    let bottom = posData;\n\n    var _iterator3 = _createForOfIteratorHelper(elements),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        const element = _step3.value;\n\n        if (element instanceof Span) {\n          // It's a Span, use the dimension data\n          bottom -= element.height + element.depth;\n        } else if (typeof element === 'number') {\n          // It's a kern adjustment\n          bottom -= element;\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    listDepth = bottom;\n  } else if (pos === 'individualShift') {\n    // Individual adjustment to each elements.\n    // The elements list is made up of a Span followed\n    // by a shift adjustment as an integer\n    const originalElements = elements;\n    elements = [originalElements[0]]; // Add in kerns to the list of elements to get each element to be\n    // shifted to the correct specified shift\n\n    console.assert(originalElements[0] instanceof Span);\n    listDepth = -originalElements[1] - originalElements[0].depth;\n    currPos = listDepth;\n\n    for (let i = 2; i < originalElements.length; i += 2) {\n      console.assert(originalElements[i] instanceof Span);\n      const diff = -originalElements[i + 1] - currPos - originalElements[i].depth;\n      currPos = currPos + diff;\n      console.assert(originalElements[i - 2] instanceof Span);\n      const kern = diff - (originalElements[i - 2].height + originalElements[i - 2].depth);\n      elements.push(kern);\n      elements.push(originalElements[i]);\n    }\n  } else {\n    console.assert(false, 'makeVList with unknown method: \"' + pos + '\"');\n  } // Make the fontSizer\n\n\n  let maxFontSize = 1.0;\n\n  var _iterator4 = _createForOfIteratorHelper(elements),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      const element = _step4.value;\n\n      if (element instanceof Span) {\n        maxFontSize = Math.max(maxFontSize, element.maxFontSize);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  const fontSizer = makeFontSizer(context, maxFontSize);\n  const newElements = [];\n  currPos = listDepth;\n\n  var _iterator5 = _createForOfIteratorHelper(elements),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      const element = _step5.value;\n\n      if (typeof element === 'number') {\n        // It's a kern adjustment\n        currPos += element;\n      } else if (element instanceof Span) {\n        const wrap = makeSpan([fontSizer, element]);\n        wrap.setTop(-element.depth - currPos);\n        newElements.push(wrap);\n        currPos += element.height + element.depth;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  const result = makeSpan(newElements, 'vlist'); // Fix the final height and depth, in case there were kerns at the ends\n  // since makeSpan won't take that into account.\n\n  result.depth = Math.max(listDepth, depth(result) || 0);\n  result.height = Math.max(-currPos, height(result) || 0);\n  return result;\n}\n/**\r\n * Create a span that consist of a (stretchy) SVG element\r\n *\r\n * @param classes list of classes attributes associated with this node\r\n */\n\n\nfunction makeSVGSpan(svgBodyName) {\n  const span = new Span(null);\n  span.svgBody = svgBodyName;\n  span.height = svgBodyHeight(svgBodyName) / 2;\n  span.depth = span.height;\n  return span;\n}\n\nconst MATH_SYMBOLS = {}; // Map a character to some corresponding Latex\n// This is used for some characters such as ² SUPERSCRIPT TWO.\n// This is also an opportunity to specify the prefered form when\n// a unicode character is encountered that maps to multiple commands,\n// for example ≠ could map either to \\ne or \\neq\n// The table will also be populated by any registered symbol\n// from MATH_SYMBOLS\n// prettier-ignore\n\nconst REVERSE_MATH_SYMBOLS = {\n  '<': '<',\n  '>': '>',\n  'o': 'o',\n  '&': '\\\\&',\n  '{': '\\\\{',\n  '}': '\\\\}',\n  '[': '\\\\lbrack',\n  ']': '\\\\rbrack',\n  ':': '\\\\colon',\n  '\\u00a0': '~',\n  '\\u00ac': '\\\\neg',\n  '\\u00b7': '\\\\cdot',\n  '\\u00bc': '\\\\frac{1}{4}',\n  '\\u00bd': '\\\\frac{1}{2}',\n  '\\u00be': '\\\\frac{3}{4}',\n  '\\u2070': '^{0}',\n  '\\u2071': '^{i}',\n  '\\u00b9': '^{1}',\n  '\\u00b2': '^{2}',\n  '\\u00b3': '^{3}',\n  '\\u2020': '\\\\dagger',\n  '\\u2021': '\\\\ddagger',\n  '\\u2026': '\\\\ldots',\n  '\\u2074': '^{4}',\n  '\\u2075': '^{5}',\n  '\\u2076': '^{6}',\n  '\\u2077': '^{7}',\n  '\\u2078': '^{8}',\n  '\\u2079': '^{9}',\n  '\\u207a': '^{+}',\n  '\\u207b': '^{-}',\n  '\\u207c': '^{=}',\n  '\\u207f': '^{n}',\n  '\\u2080': '_{0}',\n  '\\u2081': '_{1}',\n  '\\u2082': '_{2}',\n  '\\u2083': '_{3}',\n  '\\u2084': '_{4}',\n  '\\u2085': '_{5}',\n  '\\u2086': '_{6}',\n  '\\u2087': '_{7}',\n  '\\u2088': '_{8}',\n  '\\u2089': '_{9}',\n  '\\u208a': '_{+}',\n  '\\u208b': '_{-}',\n  '\\u208c': '_{=}',\n  '\\u2090': '_{a}',\n  '\\u2091': '_{e}',\n  '\\u2092': '_{o}',\n  '\\u2093': '_{x}',\n  '\\u2032': '\\\\prime',\n  '\\'': '\\\\prime',\n  '\\u2190': '\\\\gets',\n  '\\u2192': '\\\\to',\n  '\\u25b3': '\\\\triangle',\n  '\\u25bd': '\\\\triangledown',\n  '\\u220b': '\\\\owns',\n  '\\u2217': '\\\\ast',\n  '\\u2223': '\\\\vert',\n  '\\u2225': '\\\\Vert',\n  '\\u2227': '\\\\land',\n  '\\u2228': '\\\\lor',\n  '\\u22c5': '\\\\cdot',\n  '\\u22c8': '\\\\bowtie',\n  '\\u2260': '\\\\ne',\n  '\\u2264': '\\\\le',\n  '\\u2265': '\\\\ge',\n  '\\u22a5': '\\\\bot',\n  '\\u27f7': '\\\\biconditional',\n  '\\u27f8': '\\\\impliedby',\n  '\\u27f9': '\\\\implies',\n  '\\u2102': '\\\\C',\n  '\\u2115': '\\\\N',\n  '\\u2119': '\\\\P',\n  '\\u211a': '\\\\Q',\n  '\\u211d': '\\\\R',\n  '\\u2124': '\\\\Z'\n};\nconst FUNCTIONS = {};\nconst ENVIRONMENTS = {};\nconst MACROS = {\n  iff: '\\\\;\\u27fa\\\\;',\n  nicefrac: '^{#1}\\\\!\\\\!/\\\\!_{#2}',\n  // From bracket.sty, Dirac notation\n  bra: '\\\\mathinner{\\\\langle{#1}|}',\n  ket: '\\\\mathinner{|{#1}\\\\rangle}',\n  braket: '\\\\mathinner{\\\\langle{#1}\\\\rangle}',\n  set: '\\\\mathinner{\\\\lbrace #1 \\\\rbrace}',\n  Bra: '\\\\left\\\\langle #1\\\\right|',\n  Ket: '\\\\left|#1\\\\right\\\\rangle',\n  Braket: '\\\\left\\\\langle{#1}\\\\right\\\\rangle',\n  Set: '\\\\left\\\\lbrace #1 \\\\right\\\\rbrace',\n  // Proof Wiki\n  rd: '\\\\mathrm{d}',\n  rD: '\\\\mathrm{D}',\n  // From Wolfram Alpha\n  doubleStruckCapitalN: '\\\\mathbb{N}',\n  doubleStruckCapitalR: '\\\\mathbb{R}',\n  doubleStruckCapitalQ: '\\\\mathbb{Q}',\n  doubleStruckCapitalZ: '\\\\mathbb{Z}',\n  doubleStruckCapitalP: '\\\\mathbb{P}',\n  scriptCapitalE: '\\\\mathscr{E}',\n  scriptCapitalH: '\\\\mathscr{H}',\n  scriptCapitalL: '\\\\mathscr{L}',\n  gothicCapitalC: '\\\\mathfrak{C}',\n  gothicCapitalH: '\\\\mathfrak{H}',\n  gothicCapitalI: '\\\\mathfrak{I}',\n  gothicCapitalR: '\\\\mathfrak{R}',\n  imaginaryI: '\\\\mathrm{i}',\n  imaginaryJ: '\\\\mathrm{j}',\n  exponentialE: '\\\\mathrm{e}',\n  differentialD: '\\\\mathrm{d}',\n  capitalDifferentialD: '\\\\mathrm{D}'\n};\nconst RIGHT_DELIM = {\n  '(': ')',\n  '{': '}',\n  '[': ']',\n  '|': '|',\n  '\\\\lbrace': '\\\\rbrace',\n  '\\\\{': '\\\\}',\n  '\\\\langle': '\\\\rangle',\n  '\\\\lfloor': '\\\\rfloor',\n  '\\\\lceil': '\\\\rceil',\n  '\\\\vert': '\\\\vert',\n  '\\\\lvert': '\\\\rvert',\n  '\\\\Vert': '\\\\Vert',\n  '\\\\lVert': '\\\\rVert',\n  '\\\\lbrack': '\\\\rbrack',\n  '\\\\ulcorner': '\\\\urcorner',\n  '\\\\llcorner': '\\\\lrcorner',\n  '\\\\lgroup': '\\\\rgroup',\n  '\\\\lmoustache': '\\\\rmoustache'\n}; // Body-text symbols\n// See http://ctan.mirrors.hoobly.com/info/symbols/comprehensive/symbols-a4.pdf, p14\n\nconst TEXT_SYMBOLS = {\n  '\\\\#': '\\u0023',\n  '\\\\&': '\\u0026',\n  '\\\\$': '$',\n  '\\\\%': '%',\n  '\\\\_': '_',\n  '\\\\euro': '\\u20AC',\n  '\\\\maltese': '\\u2720',\n  '\\\\{': '{',\n  '\\\\}': '}',\n  '\\\\nobreakspace': '\\u00A0',\n  '\\\\ldots': '\\u2026',\n  '\\\\textellipsis': '\\u2026',\n  '\\\\backslash': '\\\\',\n  '`': '\\u2018',\n  \"'\": '\\u2019',\n  '``': '\\u201c',\n  \"''\": '\\u201d',\n  '\\\\degree': '\\u00b0',\n  '\\\\textasciicircum': '^',\n  '\\\\textasciitilde': '~',\n  '\\\\textasteriskcentered': '*',\n  '\\\\textbackslash': '\\\\',\n  '\\\\textbraceleft': '{',\n  '\\\\textbraceright': '}',\n  '\\\\textbullet': '•',\n  '\\\\textdollar': '$',\n  '\\\\textsterling': '£',\n  '\\\\textdagger': '\\u2020',\n  '\\\\textdaggerdbl': '\\u2021',\n  '–': '\\u2013',\n  '—': '\\u2014',\n  '‘': '\\u2018',\n  '’': '\\u2019',\n  '“': '\\u201C',\n  '”': '\\u201D',\n  '\"': '\\u201D',\n  '\\\\ss': '\\u00df',\n  '\\\\ae': '\\u00E6',\n  '\\\\oe': '\\u0153',\n  '\\\\AE': '\\u00c6',\n  '\\\\OE': '\\u0152',\n  '\\\\O': '\\u00d8',\n  '\\\\i': '\\u0131',\n  '\\\\j': '\\u0237',\n  '\\\\aa': '\\u00e5',\n  '\\\\AA': '\\u00c5'\n};\nconst COMMAND_MODE_CHARACTERS = /[a-zA-Z0-9!@*()-=+{}[\\]\\\\';:?/.,~<>`|'$%#&^_\" ]/; // Word boundaries for Cyrillic, Polish, French, German, Italian\n// and Spanish. We use \\p{L} (Unicode property escapes: \"Letter\")\n// but Firefox doesn't support it\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1361876). Booo...\n// See also https://stackoverflow.com/questions/26133593/using-regex-to-match-international-unicode-alphanumeric-characters-in-javascript\n\nconst LETTER = typeof navigator !== 'undefined' && /firefox|edge|Trident/i.test(navigator.userAgent) ? /[a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/ : new RegExp('\\\\p{Letter}', 'u');\nconst LETTER_AND_DIGITS = typeof navigator !== 'undefined' && /firefox|edge|Trident/i.test(navigator.userAgent) ? /[0-9a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/ : new RegExp('[0-9\\\\p{Letter}]', 'u');\n/**\r\n * @param symbol    The LaTeX command for this symbol, for\r\n * example `\\alpha` or `+`\r\n */\n\nfunction defineSymbol(symbol, value, type = 'mord', variant = '') {\n  MATH_SYMBOLS[symbol] = {\n    type,\n    variant,\n    value\n  };\n\n  if (!REVERSE_MATH_SYMBOLS[value] && !variant) {\n    REVERSE_MATH_SYMBOLS[value] = symbol;\n  } // We accept all math symbols in text mode as well\n  // which is a bit more permissive than TeX\n\n\n  TEXT_SYMBOLS[symbol] = value;\n}\n/**\r\n * Define a set of single-character symbols as 'mord' symbols.\r\n * @param string a string of single character symbols\r\n */\n\n\nfunction defineSymbols(string) {\n  for (let i = 0; i < string.length; i++) {\n    const ch = string.charAt(i);\n    defineSymbol(ch, ch);\n  }\n}\n/**\r\n * Define a set of single-character symbols as a range of Unicode codepoints\r\n * @param from First Unicode codepoint\r\n * @param to Last Unicode codepoint\r\n */\n\n\nfunction defineSymbolRange(from, to) {\n  for (let i = from; i <= to; i++) {\n    const ch = String.fromCodePoint(i);\n    defineSymbol(ch, ch);\n  }\n}\n/**\r\n * Given a character, return a LaTeX expression matching its Unicode codepoint.\r\n * If there is a matching symbol (e.g. \\alpha) it is returned.\r\n */\n\n\nfunction charToLatex(parseMode, s) {\n  if (parseMode === 'math') {\n    return REVERSE_MATH_SYMBOLS[s] || s;\n  }\n\n  if (parseMode === 'text') {\n    let textSymbol = Object.keys(TEXT_SYMBOLS).find(x => TEXT_SYMBOLS[x] === s);\n\n    if (!textSymbol) {\n      const hex = s.codePointAt(0).toString(16);\n      textSymbol = '^'.repeat(hex.length) + hex;\n    }\n\n    return textSymbol;\n  }\n\n  return s;\n}\n/* Some symbols in the MATHEMATICAL ALPHANUMERICAL SYMBOLS block had\r\n   been previously defined in other blocks. Remap them */\n\n\nconst MATH_LETTER_EXCEPTIONS = {\n  0x1d455: 0x0210e,\n  0x1d49d: 0x0212c,\n  0x1d4a0: 0x02130,\n  0x1d4a1: 0x02131,\n  0x1d4a3: 0x0210b,\n  0x1d4a4: 0x02110,\n  0x1d4a7: 0x02112,\n  0x1d4a8: 0x02133,\n  0x1d4ad: 0x0211b,\n  0x1d4ba: 0x0212f,\n  0x1d4bc: 0x0210a,\n  0x1d4c4: 0x02134,\n  0x1d506: 0x0212d,\n  0x1d50b: 0x0210c,\n  0x1d50c: 0x02111,\n  0x1d515: 0x0211c,\n  0x1d51d: 0x02128,\n  0x1d53a: 0x02102,\n  0x1d53f: 0x0210d,\n  0x1d545: 0x02115,\n  0x1d547: 0x02119,\n  0x1d548: 0x0211a,\n  0x1d549: 0x0211d,\n  0x1d551: 0x02124\n};\nconst MATH_UNICODE_BLOCKS = [{\n  start: 0x1d400,\n  len: 26,\n  offset: 65,\n  style: 'bold'\n}, {\n  start: 0x1d41a,\n  len: 26,\n  offset: 97,\n  style: 'bold'\n}, {\n  start: 0x1d434,\n  len: 26,\n  offset: 65,\n  style: 'italic'\n}, {\n  start: 0x1d44e,\n  len: 26,\n  offset: 97,\n  style: 'italic'\n}, {\n  start: 0x1d468,\n  len: 26,\n  offset: 65,\n  style: 'bolditalic'\n}, {\n  start: 0x1d482,\n  len: 26,\n  offset: 97,\n  style: 'bolditalic'\n}, {\n  start: 0x1d49c,\n  len: 26,\n  offset: 65,\n  variant: 'script'\n}, {\n  start: 0x1d4b6,\n  len: 26,\n  offset: 97,\n  variant: 'script'\n}, {\n  start: 0x1d4d0,\n  len: 26,\n  offset: 65,\n  variant: 'script',\n  style: 'bold'\n}, {\n  start: 0x1d4ea,\n  len: 26,\n  offset: 97,\n  variant: 'script',\n  style: 'bold'\n}, {\n  start: 0x1d504,\n  len: 26,\n  offset: 65,\n  variant: 'fraktur'\n}, {\n  start: 0x1d51e,\n  len: 26,\n  offset: 97,\n  variant: 'fraktur'\n}, {\n  start: 0x1d56c,\n  len: 26,\n  offset: 65,\n  variant: 'fraktur',\n  style: 'bold'\n}, {\n  start: 0x1d586,\n  len: 26,\n  offset: 97,\n  variant: 'fraktur',\n  style: 'bold'\n}, {\n  start: 0x1d538,\n  len: 26,\n  offset: 65,\n  variant: 'double-struck'\n}, {\n  start: 0x1d552,\n  len: 26,\n  offset: 97,\n  variant: 'double-struck'\n}, {\n  start: 0x1d5a0,\n  len: 26,\n  offset: 65,\n  variant: 'sans-serif'\n}, {\n  start: 0x1d5ba,\n  len: 26,\n  offset: 97,\n  variant: 'sans-serif'\n}, {\n  start: 0x1d5d4,\n  len: 26,\n  offset: 65,\n  variant: 'sans-serif',\n  style: 'bold'\n}, {\n  start: 0x1d5ee,\n  len: 26,\n  offset: 97,\n  variant: 'sans-serif',\n  style: 'bold'\n}, {\n  start: 0x1d608,\n  len: 26,\n  offset: 65,\n  variant: 'sans-serif',\n  style: 'italic'\n}, {\n  start: 0x1d622,\n  len: 26,\n  offset: 97,\n  variant: 'sans-serif',\n  style: 'italic'\n}, {\n  start: 0x1d63c,\n  len: 26,\n  offset: 65,\n  variant: 'sans-serif',\n  style: 'bolditalic'\n}, {\n  start: 0x1d656,\n  len: 26,\n  offset: 97,\n  variant: 'sans-serif',\n  style: 'bolditalic'\n}, {\n  start: 0x1d670,\n  len: 26,\n  offset: 65,\n  variant: 'monospace'\n}, {\n  start: 0x1d68a,\n  len: 26,\n  offset: 97,\n  variant: 'monospace'\n}, {\n  start: 0x1d6a8,\n  len: 25,\n  offset: 0x391,\n  style: 'bold'\n}, {\n  start: 0x1d6c2,\n  len: 25,\n  offset: 0x3b1,\n  style: 'bold'\n}, {\n  start: 0x1d6e2,\n  len: 25,\n  offset: 0x391,\n  style: 'italic'\n}, {\n  start: 0x1d6fc,\n  len: 25,\n  offset: 0x3b1,\n  style: 'italic'\n}, {\n  start: 0x1d71c,\n  len: 25,\n  offset: 0x391,\n  style: 'bolditalic'\n}, {\n  start: 0x1d736,\n  len: 25,\n  offset: 0x3b1,\n  style: 'bolditalic'\n}, {\n  start: 0x1d756,\n  len: 25,\n  offset: 0x391,\n  variant: 'sans-serif',\n  style: 'bold'\n}, {\n  start: 0x1d770,\n  len: 25,\n  offset: 0x3b1,\n  variant: 'sans-serif',\n  style: 'bold'\n}, {\n  start: 0x1d790,\n  len: 25,\n  offset: 0x391,\n  variant: 'sans-serif',\n  style: 'bolditalic'\n}, {\n  start: 0x1d7aa,\n  len: 25,\n  offset: 0x3b1,\n  variant: 'sans-serif',\n  style: 'bolditalic'\n}, {\n  start: 0x1d7ce,\n  len: 10,\n  offset: 48,\n  variant: '',\n  style: 'bold'\n}, {\n  start: 0x1d7d8,\n  len: 10,\n  offset: 48,\n  variant: 'double-struck'\n}, {\n  start: 0x1d7e3,\n  len: 10,\n  offset: 48,\n  variant: 'sans-serif'\n}, {\n  start: 0x1d7ec,\n  len: 10,\n  offset: 48,\n  variant: 'sans-serif',\n  style: 'bold'\n}, {\n  start: 0x1d7f6,\n  len: 10,\n  offset: 48,\n  variant: 'monospace'\n}];\n\nfunction unicodeToMathVariant(codepoint) {\n  var _a;\n\n  if ((codepoint < 0x1d400 || codepoint > 0x1d7ff) && (codepoint < 0x2100 || codepoint > 0x214f)) {\n    return {\n      char: String.fromCodePoint(codepoint)\n    };\n  } // Handle the 'gap' letters by converting them back into their logical range\n\n\n  for (const c in MATH_LETTER_EXCEPTIONS) {\n    if (Object.prototype.hasOwnProperty.call(MATH_LETTER_EXCEPTIONS, c)) {\n      if (MATH_LETTER_EXCEPTIONS[c] === codepoint) {\n        codepoint = (_a = c.codePointAt(0)) !== null && _a !== void 0 ? _a : 0;\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < MATH_UNICODE_BLOCKS.length; i++) {\n    if (codepoint >= MATH_UNICODE_BLOCKS[i].start && codepoint < MATH_UNICODE_BLOCKS[i].start + MATH_UNICODE_BLOCKS[i].len) {\n      return {\n        char: String.fromCodePoint(codepoint - MATH_UNICODE_BLOCKS[i].start + MATH_UNICODE_BLOCKS[i].offset),\n        variant: MATH_UNICODE_BLOCKS[i].variant,\n        style: MATH_UNICODE_BLOCKS[i].style\n      };\n    }\n  }\n\n  return {\n    char: String.fromCodePoint(codepoint)\n  };\n}\n/**\r\n * Given a character and variant ('double-struck', 'fraktur', etc...)\r\n * return the corresponding unicode character (a string)\r\n */\n\n\nfunction mathVariantToUnicode(char, variant, style) {\n  if (!/[A-Za-z0-9]/.test(char)) return char;\n  if (!variant && !style) return char;\n  const codepoint = char.codePointAt(0);\n\n  for (let i = 0; i < MATH_UNICODE_BLOCKS.length; i++) {\n    if (!variant || MATH_UNICODE_BLOCKS[i].variant === variant) {\n      if (!style || MATH_UNICODE_BLOCKS[i].style === style) {\n        if (codepoint >= MATH_UNICODE_BLOCKS[i].offset && codepoint < MATH_UNICODE_BLOCKS[i].offset + MATH_UNICODE_BLOCKS[i].len) {\n          const result = MATH_UNICODE_BLOCKS[i].start + codepoint - MATH_UNICODE_BLOCKS[i].offset;\n          return String.fromCodePoint(MATH_LETTER_EXCEPTIONS[result] || result);\n        }\n      }\n    }\n  }\n\n  return char;\n}\n\nfunction unicodeCharToLatex(parseMode, char) {\n  if (parseMode === 'text') {\n    return charToLatex(parseMode, char) || char;\n  }\n\n  let result; // Codepoint shortcuts have priority over variants\n  // That is, \"\\N\" vs \"\\mathbb{N}\"\n  // if (CODEPOINT_SHORTCUTS[cp]) return CODEPOINT_SHORTCUTS[cp];\n\n  result = charToLatex(parseMode, char);\n  if (result) return result;\n  const cp = char.codePointAt(0);\n  const v = unicodeToMathVariant(cp);\n  if (!v.style && !v.variant) return '';\n  result = v.char;\n\n  if (v.variant) {\n    result = '\\\\' + v.variant + '{' + result + '}';\n  }\n\n  if (v.style === 'bold') {\n    result = '\\\\mathbf{' + result + '}';\n  } else if (v.style === 'italic') {\n    result = '\\\\mathit{' + result + '}';\n  } else if (v.style === 'bolditalic') {\n    result = '\\\\mathbfit{' + result + '}';\n  }\n\n  return '\\\\mathord{' + result + '}';\n}\n\nfunction unicodeStringToLatex(parseMode, s) {\n  let result = '';\n  let needSpace = false;\n\n  var _iterator6 = _createForOfIteratorHelper(s),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      const c = _step6.value;\n\n      if (needSpace) {\n        if (parseMode === 'text') {\n          result += '{}';\n        } else {\n          result += ' ';\n        }\n      }\n\n      needSpace = false;\n      const latex = unicodeCharToLatex(parseMode, c);\n\n      if (latex) {\n        result += latex;\n        needSpace = /\\\\[a-zA-Z0-9]+\\*?$/.test(latex);\n      } else {\n        result += c;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return result;\n}\n/**\r\n * Gets the value of a symbol in math mode\r\n */\n\n\nfunction getValue(symbol) {\n  var _a, _b;\n\n  return (_b = (_a = MATH_SYMBOLS[symbol]) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : symbol;\n}\n\nfunction emit(symbol, parent, atom, emitFn) {\n  var _a, _b, _c;\n\n  console.assert(Boolean(atom));\n  console.assert(Boolean(symbol), 'Missing command for ', atom.body);\n\n  if ((_a = FUNCTIONS[symbol]) === null || _a === void 0 ? void 0 : _a.emit) {\n    return FUNCTIONS[symbol].emit(symbol, parent, atom, emitFn);\n  }\n\n  if (MATH_SYMBOLS[symbol] || TEXT_SYMBOLS[symbol]) {\n    return symbol;\n  }\n\n  if (atom.body && ((_c = (_b = FUNCTIONS[symbol]) === null || _b === void 0 ? void 0 : _b.params) === null || _c === void 0 ? void 0 : _c.length) === 1) {\n    return symbol + '{' + emitFn(atom, atom.body) + '}';\n  } // No custom emit function provided, return an escaped version of the symbol\n\n\n  const hex = symbol.codePointAt(0).toString(16);\n  return '^'.repeat(hex.length) + hex;\n}\n\nfunction getEnvironmentDefinition(name) {\n  var _a;\n\n  return (_a = ENVIRONMENTS[name]) !== null && _a !== void 0 ? _a : null;\n}\n/**\r\n * @param symbol    A command (e.g. '\\alpha') or a character (e.g. 'a')\r\n * @param parseMode One of 'math' or 'text'\r\n * @param macros A macros dictionary\r\n * @return {object} An info structure about the symbol, or null\r\n */\n\n\nfunction getInfo(symbol, parseMode, macros) {\n  if (!symbol || symbol.length === 0) return null;\n  let info = null;\n\n  if (symbol.charAt(0) === '\\\\') {\n    // This could be a function or a symbol\n    info = FUNCTIONS[symbol];\n\n    if (info) {\n      // We've got a match\n      return info;\n    } // It wasn't a function, maybe it's a symbol?\n\n\n    if (parseMode === 'math') {\n      info = MATH_SYMBOLS[symbol];\n    } else if (TEXT_SYMBOLS[symbol]) {\n      info = {\n        value: TEXT_SYMBOLS[symbol]\n      };\n    }\n\n    if (!info) {\n      // Maybe it's a macro\n      const command = symbol.slice(1);\n\n      if (macros === null || macros === void 0 ? void 0 : macros[command]) {\n        let def = macros[command];\n\n        if (typeof def === 'object') {\n          def = def.def;\n        }\n\n        let argCount = 0; // Let's see if there are arguments in the definition.\n\n        if (/(^|[^\\\\])#1/.test(def)) argCount = 1;\n        if (/(^|[^\\\\])#2/.test(def)) argCount = 2;\n        if (/(^|[^\\\\])#3/.test(def)) argCount = 3;\n        if (/(^|[^\\\\])#4/.test(def)) argCount = 4;\n        if (/(^|[^\\\\])#5/.test(def)) argCount = 5;\n        if (/(^|[^\\\\])#6/.test(def)) argCount = 6;\n        if (/(^|[^\\\\])#7/.test(def)) argCount = 7;\n        if (/(^|[^\\\\])#8/.test(def)) argCount = 8;\n        if (/(^|[^\\\\])#9/.test(def)) argCount = 9;\n        info = {\n          type: 'group',\n          mode: 'math',\n          params: [],\n          infix: false\n        };\n\n        while (argCount >= 1) {\n          info.params.push({\n            isOptional: false,\n            type: 'math'\n          });\n          argCount -= 1;\n        }\n      }\n    }\n  } else {\n    if (parseMode === 'math') {\n      info = MATH_SYMBOLS[symbol];\n    } else if (TEXT_SYMBOLS[symbol]) {\n      info = {\n        value: TEXT_SYMBOLS[symbol]\n      };\n    } else if (parseMode === 'text') {\n      info = {\n        value: symbol\n      };\n    }\n  } // Special case `f`, `g` and `h` are recognized as functions.\n\n\n  if (info && info.type === 'mord' && (info.value === 'f' || info.value === 'g' || info.value === 'h')) {\n    info.isFunction = true;\n  }\n\n  return info;\n}\n/**\r\n * Return an array of suggestion for completing string 's'.\r\n * For example, for 'si', it could return ['sin', 'sinh', 'sim', 'simeq', 'sigma']\r\n * Infix operators are excluded, since they are deprecated commands.\r\n */\n\n\nfunction suggest(s) {\n  if (s.length <= 1) return [];\n  const result = []; // Iterate over items in the dictionary\n\n  for (const p in FUNCTIONS) {\n    if (Object.prototype.hasOwnProperty.call(FUNCTIONS, p)) {\n      if (p.startsWith(s) && !FUNCTIONS[p].infix) {\n        result.push({\n          match: p,\n          frequency: FUNCTIONS[p].frequency\n        });\n      }\n    }\n  }\n\n  for (const p in MATH_SYMBOLS) {\n    if (Object.prototype.hasOwnProperty.call(MATH_SYMBOLS, p)) {\n      if (p.startsWith(s)) {\n        result.push({\n          match: p,\n          frequency: MATH_SYMBOLS[p].frequency\n        });\n      }\n    }\n  }\n\n  result.sort((a, b) => {\n    if (a.frequency === b.frequency) {\n      return a.match.length - b.match.length;\n    }\n\n    return (b.frequency || 0) - (a.frequency || 0);\n  });\n  return result;\n}\n/**\r\n * An argument template has the following syntax:\r\n *\r\n * <placeholder>:<type>\r\n *\r\n * where\r\n * - <placeholder> is a string whose value is displayed when the argument\r\n *   is missing\r\n * - <type> is one of 'string', 'color', 'dimen', 'auto', 'text', 'math'\r\n *\r\n */\n\n\nfunction parseParamTemplateArgument(argTemplate) {\n  let type = 'auto'; // Parse the type (:type)\n\n  const r = argTemplate.match(/:([^=]+)/);\n  if (r) type = r[1].trim();\n  return type;\n}\n\nfunction parseParamTemplate(paramTemplate) {\n  if (!paramTemplate) return [];\n  let result = [];\n  let params = paramTemplate.split(']');\n\n  if (params[0].charAt(0) === '[') {\n    // We found at least one optional parameter.\n    result.push({\n      isOptional: true,\n      type: parseParamTemplateArgument(params[0].slice(1))\n    }); // Parse the rest\n\n    for (let i = 1; i <= params.length; i++) {\n      result = result.concat(parseParamTemplate(params[i]));\n    }\n  } else {\n    params = paramTemplate.split('}');\n\n    if (params[0].charAt(0) === '{') {\n      // We found a required parameter\n      result.push({\n        isOptional: false,\n        type: parseParamTemplateArgument(params[0].slice(1))\n      }); // Parse the rest\n\n      for (let i = 1; i <= params.length; i++) {\n        result = result.concat(parseParamTemplate(params[i]));\n      }\n    }\n  }\n\n  return result;\n}\n/**\r\n * If possible, i.e. if they are all simple atoms, return a string made up of\r\n * their body\r\n */\n\n\nfunction parseArgAsString(atoms) {\n  let result = '';\n  let success = true;\n  atoms.forEach(atom => {\n    if (typeof atom.body === 'string') {\n      result += atom.body;\n    } else {\n      success = false;\n    }\n  });\n  return success ? result : '';\n}\n/**\r\n * Define one or more environments to be used with\r\n *         \\begin{<env-name>}...\\end{<env-name>}.\r\n *\r\n * @param params The number and type of required and optional parameters.\r\n */\n\n\nfunction defineEnvironment(names, params, parser, isTabular = false) {\n  if (typeof names === 'string') {\n    names = [names];\n  }\n\n  const parsedParams = parseParamTemplate(params); // Set default values of functions\n\n  const data = {\n    tabular: isTabular,\n    // Params: the parameters for this function, an array of\n    // {optional, type}\n    params: parsedParams,\n    // Callback to parse the arguments\n    parser: parser\n  };\n\n  var _iterator7 = _createForOfIteratorHelper(names),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      const name = _step7.value;\n      ENVIRONMENTS[name] = data;\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\n/**\r\n * Like defineEnvironment, but for a tabular environment, i.e.\r\n * one whose content is in tabular mode, where '&' indicata a new column\r\n * and '\\\\' indicate a new row.\r\n */\n\n\nfunction defineTabularEnvironment(names, params, parser) {\n  defineEnvironment(names, params, parser, true);\n}\n/**\r\n * Define one of more functions.\r\n *\r\n * @param names\r\n * @param params The number and type of required and optional parameters.\r\n * For example: '{}' defines a single mandatory parameter\r\n * '[string]{auto}' defines two params, one optional, one required\r\n */\n\n\nfunction defineFunction(names, params, options, parseFunction, emitFunction) {\n  if (typeof names === 'string') {\n    names = [names];\n  }\n\n  if (!options) options = {}; // Set default values of functions\n\n  const data = {\n    // The parameters for this function, an array of\n    // {optional, type}\n    params: parseParamTemplate(params),\n    mode: options.mode,\n    infix: Boolean(options.infix),\n    parse: parseFunction,\n    emit: emitFunction\n  };\n  names.forEach(name => {\n    FUNCTIONS['\\\\' + name] = data;\n  });\n}\n\nconst ACCENTS = {\n  acute: '\\u02ca',\n  grave: '\\u02cb',\n  dot: '\\u02d9',\n  ddot: '\\u00a8',\n  mathring: '\\u02da',\n  tilde: '\\u007e',\n  bar: '\\u02c9',\n  breve: '\\u02d8',\n  check: '\\u02c7',\n  hat: '\\u005e',\n  vec: '\\u20d7'\n};\ndefineFunction(Object.keys(ACCENTS), '{body:auto}', null, function (name, args) {\n  return {\n    type: 'accent',\n    accent: ACCENTS[name.slice(1)],\n    limits: 'accent',\n    // supsub attachment and will delegate\n    // it to the decomposeAccent\n    // (any non-null value would do)\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction(['widehat', 'widecheck', 'widetilde'], '{body:auto}', null, (name, args) => {\n  const baseString = parseArgAsString(args[0]);\n  const accent = name.slice(1) + (baseString.length > 5 ? '4' : ['1', '1', '2', '2', '3', '3'][baseString.length]);\n  return {\n    type: 'accent',\n    svgAccent: accent,\n    limits: 'accent',\n    // supsub attachment and will delegate\n    // it to the decomposeAccent\n    // (any non-null value would do)\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction('utilde', '{body:auto}', null, (_name, args) => {\n  const baseString = parseArgAsString(args[0]);\n  const accent = 'widetilde' + (baseString.length > 5 ? '4' : ['1', '1', '2', '2', '3', '3'][baseString.length]);\n  return {\n    type: 'overunder',\n    body: args[0],\n    svgBelow: accent,\n    skipBoundary: true\n  };\n}, (_name, _parent, atom, emit) => \"\\\\utilde{\".concat(emit(atom, atom.body), \"}\"));\n/*\r\n * From plain.tex\r\n *\r\n */\n\ndefineFunction('^', '{:string}', {}, (_name, args) => {\n  return {\n    type: 'mord',\n    limits: 'nolimits',\n    isSymbol: true,\n    isFunction: false,\n    body: args[0] ? {\n      a: 'â',\n      e: 'ê',\n      i: 'î',\n      o: 'ô',\n      u: 'û',\n      A: 'Â',\n      E: 'Ê',\n      I: 'Î',\n      O: 'Ô',\n      U: 'Û'\n    }[args[0]] || '^' : '^'\n  };\n});\ndefineFunction('`', '{:string}', {}, (_name, args) => {\n  return {\n    type: 'mord',\n    limits: 'nolimits',\n    isSymbol: true,\n    isFunction: false,\n    body: args[0] ? {\n      a: 'à',\n      e: 'è',\n      i: 'ì',\n      o: 'ò',\n      u: 'ù',\n      A: 'À',\n      E: 'È',\n      I: 'Ì',\n      O: 'Ò',\n      U: 'Ù'\n    }[args[0]] || '`' : '`'\n  };\n});\ndefineFunction(\"'\", '{:string}', {}, function (name, args) {\n  return {\n    type: 'mord',\n    limits: 'nolimits',\n    isSymbol: true,\n    isFunction: false,\n    body: args[0] ? {\n      a: 'á',\n      e: 'é',\n      i: 'í',\n      o: 'ó',\n      u: 'ú',\n      A: 'Á',\n      E: 'É',\n      I: 'Í',\n      O: 'Ó',\n      U: 'Ú'\n    }[args[0]] || '\\u005e' : '\\u005e'\n  };\n});\ndefineFunction('~', '{:string}', {}, (_name, args) => {\n  return {\n    type: 'mord',\n    limits: 'nolimits',\n    isSymbol: true,\n    isFunction: false,\n    body: args[0] ? {\n      n: 'ñ',\n      N: 'Ñ',\n      a: 'ã',\n      o: 'õ',\n      A: 'Ã',\n      O: 'Õ'\n    }[args[0]] || '\\u00B4' : '\\u00B4'\n  };\n});\ndefineFunction('c', '{:string}', {}, (_name, args) => {\n  return {\n    type: 'mord',\n    limits: 'nolimits',\n    isSymbol: true,\n    isFunction: false,\n    body: args[0] ? {\n      c: 'ç',\n      C: 'Ç'\n    }[args[0]] || '' : ''\n  };\n}); // \\enclose, a MathJax extension mapping to the MathML `menclose` tag.\n// The first argument is a comma delimited list of notations, as defined\n// here: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/menclose\n// The second, optional, specifies the style to use for the notations.\n\ndefineFunction('enclose', '{notation:string}[style:string]{body:auto}', null, (_name, args) => {\n  var _a;\n\n  const result = {\n    type: 'enclose',\n    strokeColor: 'currentColor',\n    strokeWidth: 1,\n    strokeStyle: 'solid',\n    backgroundcolor: 'transparent',\n    padding: 'auto',\n    shadow: 'auto',\n    captureSelection: true,\n    body: args[2]\n  }; // Extract info from style string\n\n  if (args[1]) {\n    // Split the string by comma delimited sub-strings, ignoring commas\n    // that may be inside (). For example\"x, rgb(a, b, c)\" would return\n    // ['x', 'rgb(a, b, c)']\n    const styles = args[1].split(/,(?![^(]*\\)(?:(?:[^(]*\\)){2})*[^\"]*$)/);\n\n    var _iterator8 = _createForOfIteratorHelper(styles),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        const s = _step8.value;\n        const shorthand = s.match(/\\s*(\\S+)\\s+(\\S+)\\s+(.*)/);\n\n        if (shorthand) {\n          result.strokeWidth = convertDimenToPx(shorthand[1], 'px');\n\n          if (!isFinite(result.strokeWidth)) {\n            result.strokeWidth = 1;\n          }\n\n          result.strokeStyle = shorthand[2];\n          result.strokeColor = shorthand[3];\n        } else {\n          const attribute = s.match(/\\s*([a-z]*)\\s*=\\s*\"(.*)\"/);\n\n          if (attribute) {\n            if (attribute[1] === 'mathbackground') {\n              result.backgroundcolor = attribute[2];\n            } else if (attribute[1] === 'mathcolor') {\n              result.strokeColor = attribute[2];\n            } else if (attribute[1] === 'padding') {\n              result.padding = convertDimenToPx(attribute[2], 'px');\n            } else if (attribute[1] === 'shadow') {\n              result.shadow = attribute[2];\n            }\n          }\n        }\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    if (result.strokeStyle === 'dashed') {\n      result.svgStrokeStyle = '5,5';\n    } else if (result.strokeStyle === 'dotted') {\n      result.svgStrokeStyle = '1,5';\n    }\n  }\n\n  result.borderStyle = result.strokeWidth + 'px ' + result.strokeStyle + ' ' + result.strokeColor; // Normalize the list of notations.\n\n  result.notation = {};\n  ((_a = args[0]) !== null && _a !== void 0 ? _a : '').split(/[, ]/).filter(v => v.length > 0).forEach(x => {\n    result.notation[x.toLowerCase()] = true;\n  });\n\n  if (result.notation['updiagonalarrow']) {\n    result.notation['updiagonalstrike'] = false;\n  }\n\n  if (result.notation['box']) {\n    result.notation['left'] = false;\n    result.notation['right'] = false;\n    result.notation['bottom'] = false;\n    result.notation['top'] = false;\n  }\n\n  return result;\n});\ndefineFunction('cancel', '{body:auto}', null, function (_name, args) {\n  return {\n    type: 'enclose',\n    strokeColor: 'currentColor',\n    strokeWidth: 1,\n    strokeStyle: 'solid',\n    borderStyle: '1px solid currentColor',\n    backgroundcolor: 'transparent',\n    padding: 'auto',\n    shadow: 'auto',\n    notation: {\n      updiagonalstrike: true\n    },\n    body: args[0]\n  };\n});\ndefineFunction('bcancel', '{body:auto}', null, function (name, args) {\n  return {\n    type: 'enclose',\n    strokeColor: 'currentColor',\n    strokeWidth: 1,\n    strokeStyle: 'solid',\n    borderStyle: '1px solid currentColor',\n    backgroundcolor: 'transparent',\n    padding: 'auto',\n    shadow: 'auto',\n    notation: {\n      downdiagonalstrike: true\n    },\n    body: args[0]\n  };\n});\ndefineFunction('xcancel', '{body:auto}', null, function (name, args) {\n  return {\n    type: 'enclose',\n    strokeColor: 'currentColor',\n    strokeWidth: 1,\n    strokeStyle: 'solid',\n    borderStyle: '1px solid currentColor',\n    backgroundcolor: 'transparent',\n    padding: 'auto',\n    shadow: 'auto',\n    notation: {\n      updiagonalstrike: true,\n      downdiagonalstrike: true\n    },\n    body: args[0]\n  };\n});\n/*\r\n\nSee http://texdoc.net/texmf-dist/doc/latex/amsmath/amsldoc.pdf\r\n\n<columns> ::= <column>*<line>\r\n<column> ::= <line>('l'|'c'|'r')\r\n<line> ::= '|' | '||' | ''\r\n\n'math',\r\n                frequency 0\r\n'displaymath',\r\n                frequency 8\r\n\n'equation'      centered, numbered\r\n                frequency 8\r\n\n'subequations'   with an 'equation' environment, appends a letter to eq no\r\n                frequency 1\r\n\n'array',        {columns:text}\r\n                cells are textstyle math\r\n                no fence\r\n\n'eqnarray'      DEPRECATED see http://www.tug.org/pracjourn/2006-4/madsen/madsen.pdf\r\n                {rcl}\r\n                first and last cell in each row is displaystyle math\r\n                each cell has a margin of \\arraycolsep\r\n                Each line has a eqno\r\n                frequency 7\r\n\n\n'theorem'       text mode. Prepends in bold 'Theorem <counter>', then body in italics.\r\n\n'multline'      single column\r\n                first row left aligned, last right aligned, others centered\r\n                last line has an eqn. counter. multline* will omit the counter\r\n                no output if inside an equation\r\n                \n\n'gather'        at most two columns\r\n                first column centered, second column right aligned\r\n                frequency 1\r\n\n'gathered'      must be in equation environment\r\n                single column,\r\n                centered\r\n                frequency: COMMON\r\n                optional argument: [b], [t] to vertical align\r\n\n'align'        multiple columns,\r\n                alternating rl\r\n                there is some 'space' (additional column?) between each pair\r\n                each line is numbered (except when inside an equation environment)\r\n                there is an implicit {} at the beginning of left columns\r\n\n'aligned'      must be in equation environment\r\n                frequency: COMMON\r\n                @{}r@{}l@{\\quad}@{}r@{}l@{}\r\n\n'split'         must be in an equation environment,\r\n                two columns, additional columns are interpreted as line breaks\r\n                first column is right aligned, second column is left aligned\r\n                entire construct is numbered (as opposed to 'align' where each line is numbered)\r\n                frequency: 0\r\n\n\n'alignedat'\r\nFrom AMSMath:\r\n---The alignedat environment was changed to take two arguments rather\r\nthan one: a mandatory argument (as formerly) specifying the number of\r\nalign structures, and a new optional one specifying the placement of the\r\nenvironment (parallel to the optional argument of aligned). However,\r\naligned is simpler to use, allowing any number of aligned structures\r\nautomatically, and therefore the use of alignedat is deprecated.\r\n\n\n 'alignat'      {pairs:number}\r\n                {rl} alternating as many times as indicated by <pairs> arg\r\n                no space between column pairs (unlike align)\r\n                there is an implicit {} at the beginning of left columns\r\n                frequency: 0\r\n\n 'flalign'      multiple columns\r\n                alternate rl\r\n                third column further away than align...?\r\n                frequency: 0\r\n\n\n'matrix'        at most 10 columns\r\n                cells centered\r\n                no fence\r\n                no colsep at beginning or end\r\n                (mathtools package add an optional arg for the cell alignment)\r\n                frequency: COMMON\r\n\n'pmatrix'       fence: ()\r\n                frequency: COMMON\r\n\n'bmatrix'       fence: []\r\n                frequency: COMMON\r\n\n'Bmatrix'       fence: {}\r\n                frequency: 237\r\n\n'vmatrix'       fence: \\vert\r\n                frequency: 368\r\n\n'Vmatrix'       fence: \\Vert\r\n                frequency: 41\r\n\n'smallmatrix'   displaystyle: scriptstyle (?)\r\n                frequency: 279\r\n\n'cases'\r\n                frequency: COMMON\r\n                l@{2}l\r\n\n'center'        text mode only?\r\n                frequency: ?\r\n*/\n// See https://en.wikibooks.org/wiki/LaTeX/Mathematics\n// and http://www.ele.uri.edu/faculty/vetter/Other-stuff/latex/Mathmode.pdf\n\n/*\r\nThe star at the end of the name of a displayed math environment causes that\r\nthe formula lines won't be numbered. Otherwise they would automatically get a number.\r\n\n\\notag will also turn off the numbering.\r\n\\shoveright and \\shoveleft will force alignment of a line\r\n\nThe only difference between align and equation is the spacing of the formulas.\r\nYou should attempt to use equation when possible, and align when you have multi-line formulas.\r\nEquation will have space before/after < 1em if line before/after is short enough.\r\n\nAlso: equation throws an error when you have an & inside the environment,\r\nso look out for that when converting between the two.\r\n\n\n\nWhereas align produces a structure whose width is the full line width, aligned\r\ngives a width that is the actual width of the contents, thus it can be used as\r\na component in a containing expression, e.g. for putting the entire alignment\r\nin a parenthesis\r\n*/\n\ndefineEnvironment('math', '', () => {\n  return {\n    mathstyle: 'textstyle'\n  };\n});\ndefineEnvironment('displaymath', '', function () {\n  return {\n    mathstyle: 'displaystyle'\n  };\n}); // defineEnvironment('text', '', {\n//     frequency: 0,\n//     }, function(name, args) {\n//     return {\n//         mathstyle: 'text',         // @todo: not quite right, not a style, a parsemode...\n//     };\n// });\n\ndefineTabularEnvironment('array', '{columns:colspec}', (_name, args) => {\n  return {\n    colFormat: args[0],\n    mathstyle: 'textstyle'\n  };\n});\ndefineTabularEnvironment(['equation', 'equation', 'subequations'], '', () => {\n  return {\n    colFormat: [{\n      align: 'c'\n    }]\n  };\n}); // Note spelling: MULTLINE, not multiline.\n\ndefineTabularEnvironment('multline', '', function () {\n  return {\n    colFormat: [{\n      align: 'm'\n    }]\n  };\n}); // An AMS-Math environment\n// See amsmath.dtx:3565\n// Note that some versions of AMS-Math have a gap on the left.\n// More recent version suppresses that gap, but have an option to turn it back on\n// for backward compatibility.\n// Note that technically, 'eqnarray' behaves (slightly) differently. However,\n// is is generally recommended to avoid using eqnarray and use align isntead.\n// https://texblog.net/latex-archive/maths/eqnarray-align-environment/\n\ndefineTabularEnvironment(['align', 'align*', 'aligned', 'eqnarray'], '', (_name, _args, array) => {\n  let colCount = 0;\n\n  var _iterator9 = _createForOfIteratorHelper(array),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      const row = _step9.value;\n      colCount = Math.max(colCount, row.length);\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  const colFormat = [{\n    gap: 0\n  }, {\n    align: 'r'\n  }, {\n    gap: 0\n  }, {\n    align: 'l'\n  }];\n  let i = 2;\n\n  while (i < colCount) {\n    colFormat.push({\n      gap: 1\n    });\n    colFormat.push({\n      align: 'r'\n    });\n    colFormat.push({\n      gap: 0\n    });\n    colFormat.push({\n      align: 'l'\n    });\n    i += 2;\n  }\n\n  colFormat.push({\n    gap: 0\n  });\n  return {\n    arraycolsep: 0,\n    colFormat: colFormat,\n    jot: 0.3\n  };\n}); // defineEnvironment('alignat', '', function(name, args) {\n//     return {\n//     };\n// });\n// defineEnvironment('flalign', '', function(name, args) {\n//     return {\n//     };\n// });\n\ndefineTabularEnvironment('split', '', () => {\n  return {\n    colFormat: [{\n      align: 'r'\n    }, {\n      align: 'l'\n    }]\n  };\n});\ndefineTabularEnvironment(['gather', 'gathered'], '', () => {\n  // An AMS-Math environment\n  // %    The \\env{gathered} environment is for several lines that are\n  // %    centered independently.\n  // From amstex.sty\n  // \\newenvironment{gathered}[1][c]{%\n  //   \\relax\\ifmmode\\else\\nonmatherr@{\\begin{gathered}}\\fi\n  //   \\null\\,%\n  //   \\if #1t\\vtop \\else \\if#1b\\vbox \\else \\vcenter \\fi\\fi\n  //   \\bgroup\\Let@\\restore@math@cr\n  //   \\ifinany@\\else\\openup\\jot\\fi\\ialign\n  //   \\bgroup\\hfil\\strut@$\\m@th\\displaystyle##$\\hfil\\crcr\n  return {\n    colFormat: [{\n      gap: 0.25\n    }, {\n      align: 'c'\n    }, {\n      gap: 0\n    }],\n    jot: 0.3\n  };\n}); // defineEnvironment('cardinality', '',  function() {\n//     const result = {};\n//     result.mathstyle = 'textstyle';\n//     result.lFence = '|';\n//     result.rFence = '|';\n//     return result;\n// });\n\ndefineTabularEnvironment(['matrix', 'pmatrix', 'bmatrix', 'Bmatrix', 'vmatrix', 'Vmatrix', 'smallmatrix', 'matrix*', 'pmatrix*', 'bmatrix*', 'Bmatrix*', 'vmatrix*', 'Vmatrix*', 'smallmatrix*'], '[columns:colspec]', (name, args) => {\n  var _a; // From amstex.sty:\n  // \\def\\matrix{\\hskip -\\arraycolsep\\array{*\\c@MaxMatrixCols c}}\n  // \\def\\endmatrix{\\endarray \\hskip -\\arraycolsep}\n\n\n  const result = {};\n  result.mathstyle = 'textstyle';\n\n  switch (name) {\n    case 'pmatrix':\n    case 'pmatrix*':\n      result.leftDelim = '(';\n      result.rightDelim = ')';\n      break;\n\n    case 'bmatrix':\n    case 'bmatrix*':\n      result.leftDelim = '[';\n      result.rightDelim = ']';\n      break;\n\n    case 'Bmatrix':\n    case 'Bmatrix*':\n      result.leftDelim = '\\\\lbrace';\n      result.rightDelim = '\\\\rbrace';\n      break;\n\n    case 'vmatrix':\n    case 'vmatrix*':\n      result.leftDelim = '\\\\vert';\n      result.rightDelim = '\\\\vert';\n      break;\n\n    case 'Vmatrix':\n    case 'Vmatrix*':\n      result.leftDelim = '\\\\Vert';\n      result.rightDelim = '\\\\Vert';\n      break;\n\n    case 'smallmatrix':\n    case 'smallmatrix*':\n      result.mathstyle = 'scriptstyle';\n      break;\n\n    case 'matrix':\n    case 'matrix*':\n      // Specifying a fence, even a null fence,\n      // will prevent the insertion of an initial and final gap\n      result.leftDelim = '.';\n      result.rightDelim = '.';\n      break;\n  }\n\n  result.colFormat = (_a = args[0]) !== null && _a !== void 0 ? _a : [{\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }, {\n    align: 'c'\n  }];\n  return result;\n});\ndefineTabularEnvironment('cases', '', () => {\n  // From amstex.sty:\n  // \\def\\cases{\\left\\{\\def\\arraystretch{1.2}\\hskip-\\arraycolsep\n  //   \\array{l@{\\quad}l}}\n  // \\def\\endcases{\\endarray\\hskip-\\arraycolsep\\right.}\n  // From amsmath.dtx\n  // \\def\\env@cases{%\n  //   \\let\\@ifnextchar\\new@ifnextchar\n  //   \\left\\lbrace\n  //   \\def\\arraystretch{1.2}%\n  //   \\array{@{}l@{\\quad}l@{}}%\n  return {\n    arraystretch: 1.2,\n    leftDelim: '\\\\lbrace',\n    rightDelim: '.',\n    colFormat: [{\n      align: 'l'\n    }, {\n      gap: 1\n    }, {\n      align: 'l'\n    }]\n  };\n}); // This is a text mode environment\n\n/*\r\n\\begin{theorem}\r\nLet $f$ be a function whose derivative exists in every point, then $f$\r\nis a continuous function.\r\n\\end{theorem}\r\n*/\n// defineEnvironment('theorem', '', function () {\n//     return {};\n// });\n\ndefineEnvironment('center', '', function () {\n  return {\n    colFormat: [{\n      align: 'c'\n    }]\n  };\n}); // Extensible (horitontally stretchy) symbols\n\ndefineFunction(['overrightarrow', 'overleftarrow', 'Overrightarrow', 'overleftharpoon', 'overrightharpoon', 'overleftrightarrow', 'overbrace', 'overlinesegment', 'overgroup'], '{:auto}', null, (name, args) => {\n  return {\n    type: 'overunder',\n    // The body is the argument of the command\n    body: args[0],\n    // Set the \"svgAbove\" to the name of a SVG object (which is the same\n    // as the command name)\n    svgAbove: name.slice(1),\n    skipBoundary: true,\n    limits: 'overunder'\n  };\n}, (name, _parent, atom, emit) => \"\".concat(name, \"{\").concat(emit(atom, atom.body), \"}\"));\ndefineFunction(['underrightarrow', 'underleftarrow', 'underleftrightarrow', 'underbrace', 'underlinesegment', 'undergroup'], '{:auto}', null, (name, args) => {\n  return {\n    type: 'overunder',\n    body: args[0],\n    // Set the \"svgBelow\" to the name of a SVG object (which is the same\n    // as the command name)\n    svgBelow: name.slice(1),\n    skipBoundary: true,\n    limits: 'overunder'\n  };\n}, (name, _parent, atom, emit) => \"\".concat(name, \"{\").concat(emit(atom, atom.body), \"}\"));\ndefineFunction(['xrightarrow', 'xleftarrow', 'xRightarrow', 'xLeftarrow', 'xleftharpoonup', 'xleftharpoondown', 'xrightharpoonup', 'xrightharpoondown', 'xlongequal', 'xtwoheadleftarrow', 'xtwoheadrightarrow', 'xleftrightarrow', 'xLeftrightarrow', 'xrightleftharpoons', 'xleftrightharpoons', 'xhookleftarrow', 'xhookrightarrow', 'xmapsto', 'xtofrom', 'xrightleftarrows', 'xrightequilibrium', 'xleftequilibrium'], '[:auto]{:auto}', null, (name, args) => {\n  // The overscript is optional, i.e. `\\xtofrom` is valid\n  let overscript = args[1];\n\n  if ((overscript === null || overscript === void 0 ? void 0 : overscript.length) === 0) {\n    overscript = null;\n  }\n\n  return {\n    type: 'overunder',\n    // Set the spacing type\n    mathtype: 'mrel',\n    // Set the \"svgBody\" to the name of a SVG object (which is the same\n    // as the command name)\n    svgBody: name.slice(1),\n    overscript: overscript,\n    underscript: args[0]\n  };\n}, (name, _parent, atom, emit) => name + (typeof atom.underscript !== 'undefined' ? \"[\".concat(emit(atom, atom.underscript), \"]\") : '') + \"{\".concat(emit(atom, atom.overscript), \"}\"));\ndefineFunction(['arccos', 'arcsin', 'arctan', 'arctg', 'arcctg', 'arg', 'ch', 'cos', 'cosh', 'cot', 'coth', 'ctg', 'cth', 'cotg', 'csc', 'cosec', 'deg', 'dim', 'exp', 'hom', 'inf', 'ker', 'lg', 'lb', 'lg', // Sometimes used as the log2\n'ln', 'log', 'Pr', 'sec', 'sh', 'sin', 'sinh', 'sup', 'tan', 'tanh', 'tg', 'th'], '', null, function (name) {\n  return {\n    type: 'mop',\n    limits: 'nolimits',\n    isSymbol: false,\n    isFunction: true,\n    body: name.slice(1),\n    variant: 'main',\n    variantStyle: 'up'\n  };\n});\ndefineFunction(['liminf', 'limsup'], '', null, name => {\n  return {\n    type: 'mop',\n    limits: 'limits',\n    isSymbol: false,\n    body: {\n      '\\\\liminf': 'lim inf',\n      '\\\\limsup': 'lim sup'\n    }[name],\n    variant: 'main'\n  };\n});\ndefineFunction(['lim', 'mod'], '', null, function (name) {\n  return {\n    type: 'mop',\n    limits: 'limits',\n    isSymbol: false,\n    body: name.slice(1),\n    variant: 'main'\n  };\n}); // With Limits\n\ndefineFunction(['det', 'max', 'min'], '', null, function (name) {\n  return {\n    type: 'mop',\n    limits: 'limits',\n    isSymbol: false,\n    isFunction: true,\n    body: name.slice(1),\n    variant: 'main'\n  };\n}); // Root\n\ndefineFunction('sqrt', '[index:auto]{radicand:auto}', null, (_name, args) => {\n  return {\n    type: 'surd',\n    body: args[1],\n    index: args[0]\n  };\n}, (name, _parent, atom, emit) => {\n  let args = '';\n\n  if (typeof atom.index !== 'undefined') {\n    args += \"[\".concat(emit(atom, atom.index), \"]\");\n  }\n\n  args += \"{\".concat(emit(atom, atom.body), \"}\");\n  return name + args;\n}); // Fractions\n\ndefineFunction(['frac', 'dfrac', 'tfrac', 'cfrac', 'binom', 'dbinom', 'tbinom'], '{numerator}{denominator}', null, (name, args) => {\n  const result = {\n    type: 'genfrac',\n    numer: args[0],\n    denom: args[1],\n    mathstyle: 'auto'\n  };\n\n  switch (name) {\n    case '\\\\dfrac':\n    case '\\\\frac':\n    case '\\\\tfrac':\n    case '\\\\cfrac':\n      result.hasBarLine = true;\n      break;\n\n    case '\\\\\\\\atopfrac':\n      result.hasBarLine = false;\n      break;\n\n    case '\\\\dbinom':\n    case '\\\\binom':\n    case '\\\\tbinom':\n      result.hasBarLine = false;\n      result.leftDelim = '(';\n      result.rightDelim = ')';\n      break;\n  }\n\n  switch (name) {\n    case '\\\\dfrac':\n    case '\\\\dbinom':\n      result.mathstyle = 'displaystyle';\n      break;\n\n    case '\\\\tfrac':\n    case '\\\\tbinom':\n      result.mathstyle = 'textstyle';\n      break;\n  }\n\n  if (name === '\\\\cfrac') {\n    result.continuousFraction = true;\n  }\n\n  return result;\n}, (name, _parent, atom, emit) => {\n  return \"\".concat(name, \"{\").concat(emit(atom, atom.numer), \"}{\").concat(emit(atom, atom.denom), \"}\");\n});\ndefineFunction(['over', 'atop', 'choose'], '', {\n  infix: true\n}, (name, args) => {\n  const numer = args[0];\n  const denom = args[1];\n  let hasBarLine = false;\n  let leftDelim = null;\n  let rightDelim = null;\n\n  switch (name) {\n    case '\\\\atop':\n      break;\n\n    case '\\\\over':\n      hasBarLine = true;\n      break;\n\n    case '\\\\choose':\n      hasBarLine = false;\n      leftDelim = '(';\n      rightDelim = ')';\n      break;\n\n    default:\n      throw new Error('Unrecognized genfrac command');\n  }\n\n  return {\n    type: 'genfrac',\n    numer: numer,\n    denom: denom,\n    hasBarLine: hasBarLine,\n    leftDelim: leftDelim,\n    rightDelim: rightDelim,\n    mathstyle: 'auto'\n  };\n}, (name, _parent, atom, emit) => {\n  return \"{\".concat(emit(atom, atom.numer)).concat(name, \" \").concat(emit(atom, atom.denom), \"}\");\n}); // Slashed package\n\n/*\r\ndefineFunction('\\\\slashed'\r\n*/\n\ndefineFunction('pdiff', '{numerator}{denominator}', null, (_funcname, args) => {\n  return {\n    type: 'genfrac',\n    numer: args[0],\n    denom: args[1],\n    numerPrefix: '\\u2202',\n    denomPrefix: '\\u2202',\n    hasBarLine: true,\n    leftDelim: null,\n    rightDelim: null,\n    mathstyle: 'auto'\n  };\n}, (name, _parent, atom, emit) => {\n  return \"\".concat(name, \"{\").concat(emit(atom, atom.numer), \"}{\").concat(emit(atom, atom.denom), \"}\");\n}); // Limits, symbols\n\ndefineFunction(['sum', 'prod', 'bigcup', 'bigcap', 'coprod', 'bigvee', 'bigwedge', 'biguplus', 'bigotimes', 'bigoplus', 'bigodot', 'bigsqcup', 'smallint', 'intop'], '', null, name => {\n  return {\n    type: 'mop',\n    limits: 'auto',\n    isSymbol: true,\n    variant: 'main',\n    body: {\n      coprod: '\\u2210',\n      bigvee: '\\u22c1',\n      bigwedge: '\\u22c0',\n      biguplus: '\\u2a04',\n      bigcap: '\\u22c2',\n      bigcup: '\\u22c3',\n      intop: '\\u222b',\n      prod: '\\u220f',\n      sum: '\\u2211',\n      bigotimes: '\\u2a02',\n      bigoplus: '\\u2a01',\n      bigodot: '\\u2a00',\n      bigsqcup: '\\u2a06',\n      smallint: '\\u222b'\n    }[name.slice(1)]\n  };\n}); // No limits, symbols (i.e. display larger in 'display' mode, and\n// centered on the baseline)\n\nconst EXTENSIBLE_SYMBOLS = {\n  int: '\\u222b',\n  iint: '\\u222c',\n  iiint: '\\u222d',\n  oint: '\\u222e',\n  oiint: '\\u222f',\n  oiiint: '\\u2230',\n  intclockwise: '\\u2231',\n  varointclockwise: '\\u2232',\n  ointctrclockwise: '\\u2233',\n  intctrclockwise: '\\u2a11',\n  sqcup: '\\u2294',\n  sqcap: '\\u2293',\n  uplus: '\\u228e',\n  wr: '\\u2240',\n  amalg: '\\u2a3f',\n  Cap: '\\u22d2',\n  Cup: '\\u22d3',\n  doublecap: '\\u22d2',\n  doublecup: '\\u22d3'\n};\ndefineFunction(Object.keys(EXTENSIBLE_SYMBOLS), '', null, function (name) {\n  return {\n    type: 'mop',\n    limits: 'nolimits',\n    isSymbol: true,\n    body: EXTENSIBLE_SYMBOLS[name.slice(1)],\n    variant: {\n      '\\u22d2': 'ams',\n      '\\u22d3': 'ams'\n    }[EXTENSIBLE_SYMBOLS[name.slice(1)]]\n  };\n});\ndefineFunction(['Re', 'Im'], '', null, function (name) {\n  return {\n    type: 'mop',\n    limits: 'nolimits',\n    isSymbol: false,\n    isFunction: true,\n    body: {\n      '\\\\Re': '\\u211c',\n      '\\\\Im': '\\u2111'\n    }[name],\n    variant: 'fraktur'\n  };\n});\ndefineFunction('middle', '{:delim}', null, function (name, args) {\n  return {\n    type: 'delim',\n    delim: args[0]\n  };\n}); // TODO\n// Some missing greek letters, but see https://reference.wolfram.com/language/tutorial/LettersAndLetterLikeForms.html\n// koppa, stigma, Sampi\n// See https://tex.stackexchange.com/questions/231878/accessing-archaic-greek-koppa-in-the-birkmult-document-class\n// Capital Alpha, etc...\n// Colon (ratio) (2236)\n// Review:\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula\n// https://reference.wolfram.com/language/tutorial/LettersAndLetterLikeForms.html\n// ftp://ftp.dante.de/tex-archive/info/symbols/comprehensive/symbols-a4.pdf\n// Media Wiki Reference\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula\n// MathJax Reference\n// http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands\n// http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm\n// LaTeX Reference\n// http://ctan.sharelatex.com/tex-archive/info/latex2e-help-texinfo/latex2e.html\n// iBooks Author/Pages\n// https://support.apple.com/en-au/HT202501\n// Mathematica Reference\n// https://reference.wolfram.com/language/tutorial/NamesOfSymbolsAndMathematicalObjects.html\n// https://reference.wolfram.com/language/guide/MathematicalTypesetting.html\n\n/*\r\n    * @todo \\sb (equivalent to _) $\\mathfrak{sl}\\sb 2$ frequency 184\r\n    * @todo \\sp (equivalent to ^) $\\mathfrak{sl}\\sp 2$ frequency 274\r\n    * \\intertext    frequency 0\r\n\n\n    See http://mirrors.ibiblio.org/CTAN/macros/latex/contrib/mathtools/mathtools.pdf\r\n\n*/\n\n/**\r\n * This module contains some color dictionaries and algorithms to\r\n * parse a string into a hex RGB color value.s\r\n * @summary   Parsing of color strings.\r\n */\n\n/*\r\n{\\color{apricot}\\blacksquare}{\\color{aquamarine}\\blacksquare}{\\color{bittersweet}\\blacksquare}{\\color{black}\\blacksquare}{\\color{blue}\\blacksquare}{\\color{blueGreen}\\blacksquare}{\\color{blueviolet}\\blacksquare}{\\color{brickred}\\blacksquare}{\\color{brown}\\blacksquare}{\\color{burntorange}\\blacksquare}{\\color{cadetblue}\\blacksquare}{\\color{carnationpink}\\blacksquare}{\\color{cerulean}\\blacksquare}{\\color{cornflowerblue}\\blacksquare}{\\color{cyan}\\blacksquare}{\\color{dandelion}\\blacksquare}{\\color{darkorchid}\\blacksquare}{\\color{emerald}\\blacksquare}{\\color{forestgreen}\\blacksquare}{\\color{fuchsia}\\blacksquare}{\\color{goldenrod}\\blacksquare}{\\color{gray}\\blacksquare}{\\color{green}\\blacksquare}{\\color{greenyellow}\\blacksquare}{\\color{junglegreen}\\blacksquare}{\\color{lavender}\\blacksquare}{\\color{limegreen}\\blacksquare}{\\color{magenta}\\blacksquare}{\\color{mahogany}\\blacksquare}{\\color{maroon}\\blacksquare}{\\color{melon}\\blacksquare}{\\color{midnightblue}\\blacksquare}{\\color{mulberry}\\blacksquare}{\\color{navyblue}\\blacksquare}{\\color{olivegreen}\\blacksquare}{\\color{orange}\\blacksquare}{\\color{orangered}\\blacksquare}{\\color{orchid}\\blacksquare}{\\color{peach}\\blacksquare}{\\color{periwinkle}\\blacksquare}{\\color{pinegreen}\\blacksquare}{\\color{plum}\\blacksquare}{\\color{processblue}\\blacksquare}{\\color{purple}\\blacksquare}{\\color{rawsienna}\\blacksquare}{\\color{red}\\blacksquare}{\\color{redorange}\\blacksquare}{\\color{redviolet}\\blacksquare}{\\color{rhodamine}\\blacksquare}{\\color{royalblue}\\blacksquare}{\\color{royalpurple}\\blacksquare}{\\color{rubinered}\\blacksquare}{\\color{salmon}\\blacksquare}{\\color{seagreen}\\blacksquare}{\\color{sepia}\\blacksquare}{\\color{skyblue}\\blacksquare}{\\color{springgreen}\\blacksquare}{\\color{tan}\\blacksquare}{\\color{tealblue}\\blacksquare}{\\color{thistle}\\blacksquare}{\\color{turquoise}\\blacksquare}{\\color{violet}\\blacksquare}{\\color{violetred}\\blacksquare}{\\color{white}\\blacksquare}{\\color{wildstrawberry}\\blacksquare}{\\color{yellow}\\blacksquare}{\\color{yellowgreen}\\blacksquare}{\\color{yelloworange}\\blacksquare}\r\n*/\n\n/**\r\n * First 10 predefined colors used for plotting by Mathematica.\r\n *\r\n * Also known as _indexed color scheme #97_.\r\n */\n\nconst MATHEMATICA_COLORS = {\n  m0: '#3f3d99',\n  m1: '#993d71',\n  m2: '#998b3d',\n  m3: '#3d9956',\n  m4: '#3d5a99',\n  m5: '#993d90',\n  m6: '#996d3d',\n  m7: '#43993d',\n  m8: '#3d7999',\n  m9: '#843d99'\n}; // ColorData97 (Mathematica standard lines)\n// rgb(0.368417, 0.506779, 0.709798),       #5e81b5\n// rgb(0.880722, 0.611041, 0.142051),\n// rgb(0.560181, 0.691569, 0.194885),\n// rgb(0.922526, 0.385626, 0.209179),\n// rgb(0.528488, 0.470624, 0.701351),\n// rgb(0.772079, 0.431554, 0.102387),\n// rgb(0.363898, 0.618501, 0.782349),\n// rgb(1, 0.75, 0),\n// rgb(0.647624, 0.37816, 0.614037),\n// rgb(0.571589, 0.586483, 0.),\n// rgb(0.915, 0.3325, 0.2125),\n// rgb(0.40082222609352647, 0.5220066643438841, 0.85),\n// rgb(0.9728288904374106, 0.621644452187053, 0.07336199581899142),\n// rgb(0.736782672705901, 0.358, 0.5030266573755369),\n// rgb(0.28026441037696703, 0.715, 0.4292089322474965)\n// MathLab colors\n// '#0072bd' // [0, 0.4470, 0.7410]             blue\n// '#d95319' // [0.8500, 0.3250, 0.0980]        orange\n// '#edb120', // [0.9290, 0.6940, 0.1250]       yellow\n// '#7e2f8e', // [0.4940, 0.1840, 0.5560]       purple\n// '#77ac30', // [0.4660, 0.6740, 0.1880]       green\n// '#4dbeee', // [0.3010, 0.7450, 0.9330]       cyan\n// '#a2142f' // [0.6350, 0.0780, 0.1840]\t    dark red\n\n/* Area colors are most appropriate to color a large area */\n\nconst AREA_COLORS = ['#d35d60', '#7293cb', '#e1974d', '#84bb5d', '#9066a7', '#aD6a58', '#f5a4ce', '#fff590', '#212121', '#818787', '#d4d5d2', '#ffffff'];\n/* Line colors are most appropriate to color as a stroke color */\n\nconst LINE_COLORS = ['#cc2428', '#3769b1', '#da7e30', '#409852', '#6b4c9a', '#922426', '#e7298a', '#ffe907', '#000000', '#525055', '#adafaa', '#ffffff'];\n/**\r\n * 68 colors (+ white) known to dvips used in LaTeX.\r\n *\r\n * The color names are based on the names of the _Crayola Crayon_ box of\r\n * 64 crayons.\r\n *\r\n * See:\r\n * - {@link http://mirror.jmu.edu/pub/CTAN/systems/knuth/local/lib/colordvi.tex | ColorDVI.tex}\r\n * - {@link https://en.wikibooks.org/w/index.php?title=LaTeX/Colors | Wikibooks:LaTeX/Colors}\r\n */\n\nconst NAMED_COLORS = {\n  apricot: '#FBB982',\n  aquamarine: '#00B5BE',\n  bittersweet: '#C04F17',\n  black: '#221E1F',\n  blue: '#2D2F92',\n  bluegreen: '#00B3B8',\n  blueviolet: '#473992',\n  brickred: '#B6321C',\n  brown: '#792500',\n  burntorange: '#F7921D',\n  cadetblue: '#74729A',\n  carnationpink: '#F282B4',\n  cerulean: '#00A2E3',\n  cornflowerblue: '#41B0E4',\n  cyan: '#00AEEF',\n  dandelion: '#FDBC42',\n  darkorchid: '#A4538A',\n  emerald: '#00A99D',\n  forestgreen: '#009B55',\n  fuchsia: '#8C368C',\n  goldenrod: '#FFDF42',\n  gray: '#949698',\n  green: '#00A64F',\n  greenyellow: '#DFE674',\n  junglegreen: '#00A99A',\n  lavender: '#F49EC4',\n  limegreen: '#8DC73E',\n  magenta: '#EC008C',\n  mahogany: '#A9341F',\n  maroon: '#AF3235',\n  melon: '#F89E7B',\n  midnightblue: '#006795',\n  mulberry: '#A93C93',\n  navyblue: '#006EB8',\n  olivegreen: '#3C8031',\n  orange: '#F58137',\n  orangered: '#ED135A',\n  orchid: '#AF72B0',\n  peach: '#F7965A',\n  periwinkle: '#7977B8',\n  pinegreen: '#008B72',\n  plum: '#92268F',\n  processblue: '#00B0F0',\n  purple: '#99479B',\n  rawsienna: '#974006',\n  red: '#ED1B23',\n  redorange: '#F26035',\n  redviolet: '#A1246B',\n  rhodamine: '#EF559F',\n  royalblue: '#0071BC',\n  royalpurple: '#613F99',\n  rubinered: '#ED017D',\n  salmon: '#F69289',\n  seagreen: '#3FBC9D',\n  sepia: '#671800',\n  skyblue: '#46C5DD',\n  springgreen: '#C6DC67',\n  tan: '#DA9D76',\n  tealblue: '#00AEB3',\n  thistle: '#D883B7',\n  turquoise: '#00B4CE',\n  violet: '#58429B',\n  violetred: '#EF58A0',\n  white: '#FFFFFF',\n  wildstrawberry: '#EE2967',\n  yellow: '#FFF200',\n  yellowgreen: '#98CC70',\n  yelloworange: '#FAA21A'\n}; // Other color lists: SVG colors, x11 colors\n\n/*\r\naliceblue\trgb(240, 248, 255)\r\nantiquewhite\trgb(250, 235, 215)\r\naqua\trgb( 0, 255, 255)\r\naquamarine\trgb(127, 255, 212)\r\nazure\trgb(240, 255, 255)\r\nbeige\trgb(245, 245, 220)\r\nbisque\trgb(255, 228, 196)\r\nblack\trgb( 0, 0, 0)\r\nblanchedalmond\trgb(255, 235, 205)\r\nblue\trgb( 0, 0, 255)\r\nblueviolet\trgb(138, 43, 226)\r\nbrown\trgb(165, 42, 42)\r\nburlywood\trgb(222, 184, 135)\r\ncadetblue\trgb( 95, 158, 160)\r\nchartreuse\trgb(127, 255, 0)\r\nchocolate\trgb(210, 105, 30)\r\ncoral\trgb(255, 127, 80)\r\ncornflowerblue\trgb(100, 149, 237)\r\ncornsilk\trgb(255, 248, 220)\r\ncrimson\trgb(220, 20, 60)\r\ncyan\trgb( 0, 255, 255)\r\ndarkblue\trgb( 0, 0, 139)\r\ndarkcyan\trgb( 0, 139, 139)\r\ndarkgoldenrod\trgb(184, 134, 11)\r\ndarkgray\trgb(169, 169, 169)\r\ndarkgreen\trgb( 0, 100, 0)\r\ndarkgrey\trgb(169, 169, 169)\r\ndarkkhaki\trgb(189, 183, 107)\r\ndarkmagenta\trgb(139, 0, 139)\r\ndarkolivegreen\trgb( 85, 107, 47)\r\ndarkorange\trgb(255, 140, 0)\r\ndarkorchid\trgb(153, 50, 204)\r\ndarkred\trgb(139, 0, 0)\r\ndarksalmon\trgb(233, 150, 122)\r\ndarkseagreen\trgb(143, 188, 143)\r\ndarkslateblue\trgb( 72, 61, 139)\r\ndarkslategray\trgb( 47, 79, 79)\r\ndarkslategrey\trgb( 47, 79, 79)\r\ndarkturquoise\trgb( 0, 206, 209)\r\ndarkviolet\trgb(148, 0, 211)\r\ndeeppink\trgb(255, 20, 147)\r\ndeepskyblue\trgb( 0, 191, 255)\r\ndimgray\trgb(105, 105, 105)\r\ndimgrey\trgb(105, 105, 105)\r\ndodgerblue\trgb( 30, 144, 255)\r\nfirebrick\trgb(178, 34, 34)\r\nfloralwhite\trgb(255, 250, 240)\r\nforestgreen\trgb( 34, 139, 34)\r\nfuchsia\trgb(255, 0, 255)\r\ngainsboro\trgb(220, 220, 220)\r\nghostwhite\trgb(248, 248, 255)\r\ngold\trgb(255, 215, 0)\r\ngoldenrod\trgb(218, 165, 32)\r\ngray\trgb(128, 128, 128)\r\ngrey\trgb(128, 128, 128)\r\ngreen\trgb( 0, 128, 0)\r\ngreenyellow\trgb(173, 255, 47)\r\nhoneydew\trgb(240, 255, 240)\r\nhotpink\trgb(255, 105, 180)\r\nindianred\trgb(205, 92, 92)\r\nindigo\trgb( 75, 0, 130)\r\nivory\trgb(255, 255, 240)\r\nkhaki\trgb(240, 230, 140)\r\nlavender\trgb(230, 230, 250)\r\nlavenderblush\trgb(255, 240, 245)\r\nlawngreen\trgb(124, 252, 0)\r\nlemonchiffon\trgb(255, 250, 205)\r\nlightblue\trgb(173, 216, 230)\r\nlightcoral\trgb(240, 128, 128)\r\nlightcyan\trgb(224, 255, 255)\r\nlightgoldenrodyellow\trgb(250, 250, 210)\r\nlightgray\trgb(211, 211, 211)\r\nlightgreen\trgb(144, 238, 144)\r\nlightgrey\trgb(211, 211, 211)\r\nlightpink\trgb(255, 182, 193)\r\nlightsalmon\trgb(255, 160, 122)\r\nlightseagreen\trgb( 32, 178, 170)\r\nlightskyblue\trgb(135, 206, 250)\r\nlightslategray\trgb(119, 136, 153)\r\nlightslategrey\trgb(119, 136, 153)\r\nlightsteelblue\trgb(176, 196, 222)\r\nlightyellow\trgb(255, 255, 224)\r\nlime\trgb( 0, 255, 0)\r\nlimegreen\trgb( 50, 205, 50)\r\nlinen\trgb(250, 240, 230)\r\nmagenta\trgb(255, 0, 255)\r\nmaroon\trgb(128, 0, 0)\r\nmediumaquamarine\trgb(102, 205, 170)\r\nmediumblue\trgb( 0, 0, 205)\r\nmediumorchid\trgb(186, 85, 211)\r\nmediumpurple\trgb(147, 112, 219)\r\nmediumseagreen\trgb( 60, 179, 113)\r\nmediumslateblue\trgb(123, 104, 238)\r\nmediumspringgreen\trgb( 0, 250, 154)\r\nmediumturquoise\trgb( 72, 209, 204)\r\nmediumvioletred\trgb(199, 21, 133)\r\nmidnightblue\trgb( 25, 25, 112)\r\nmintcream\trgb(245, 255, 250)\r\nmistyrose\trgb(255, 228, 225)\r\nmoccasin\trgb(255, 228, 181)\r\nnavajowhite\trgb(255, 222, 173)\r\nnavy\trgb( 0, 0, 128)\r\noldlace\trgb(253, 245, 230)\r\nolive\trgb(128, 128, 0)\r\nolivedrab\trgb(107, 142, 35)\r\norange\trgb(255, 165, 0)\r\norangered\trgb(255, 69, 0)\r\norchid\trgb(218, 112, 214)\r\npalegoldenrod\trgb(238, 232, 170)\r\npalegreen\trgb(152, 251, 152)\r\npaleturquoise\trgb(175, 238, 238)\r\npalevioletred\trgb(219, 112, 147)\r\npapayawhip\trgb(255, 239, 213)\r\npeachpuff\trgb(255, 218, 185)\r\nperu\trgb(205, 133, 63)\r\npink\trgb(255, 192, 203)\r\nplum\trgb(221, 160, 221)\r\npowderblue\trgb(176, 224, 230)\r\npurple\trgb(128, 0, 128)\r\nred\trgb(255, 0, 0)\r\nrosybrown\trgb(188, 143, 143)\r\nroyalblue\trgb( 65, 105, 225)\r\nsaddlebrown\trgb(139, 69, 19)\r\nsalmon\trgb(250, 128, 114)\r\nsandybrown\trgb(244, 164, 96)\r\nseagreen\trgb( 46, 139, 87)\r\nseashell\trgb(255, 245, 238)\r\nsienna\trgb(160, 82, 45)\r\nsilver\trgb(192, 192, 192)\r\nskyblue\trgb(135, 206, 235)\r\nslateblue\trgb(106, 90, 205)\r\nslategray\trgb(112, 128, 144)\r\nslategrey\trgb(112, 128, 144)\r\nsnow\trgb(255, 250, 250)\r\nspringgreen\trgb( 0, 255, 127)\r\nsteelblue\trgb( 70, 130, 180)\r\ntan\trgb(210, 180, 140)\r\nteal\trgb( 0, 128, 128)\r\nthistle\trgb(216, 191, 216)\r\ntomato\trgb(255, 99, 71)\r\nturquoise\trgb( 64, 224, 208)\r\nviolet\trgb(238, 130, 238)\r\nwheat\trgb(245, 222, 179)\r\nwhite\trgb(255, 255, 255)\r\nwhitesmoke\trgb(245, 245, 245)\r\nyellow\trgb(255, 255, 0)\r\nyellowgreen\trgb(154, 205, 50)\r\n     \n*/\n\n/**\r\n * Return a CSS color (#rrggbb) from a string.\r\n *\r\n * Possible formats include:\r\n * - named colors from the DVI color set: 'Yellow', 'red'... Case insensitive.\r\n * - colors from the Mathematica set: 'm1'...'m9'\r\n * - 3-digit hex: `'#d50'`\r\n * - 6-digit hex: `'#dd5500'`\r\n * - RGB functional: `'rgb(240, 20, 10)'`\r\n *\r\n * In addition, colors can be mixed using the following syntax:\r\n * `<mix> = <color>![<value>][!<mix>]`\r\n * For example:\r\n * - `'blue!20'`  = 20% blue + 80% white\r\n * - `'blue!20!black'` = 20% + 80% black\r\n * - `'blue!20!black!30!green'` = (20% + 80% black) * 30 % + 70% green\r\n *\r\n * If the input string is prefixed with a dash, the complementary color\r\n * of the expression is returned.\r\n *\r\n * This creative syntax is defined by the {@link http://mirror.jmu.edu/pub/CTAN/macros/latex/contrib/xcolor/xcolor.pdf | `xcolor` LaTeX package}.\r\n *\r\n * @param s - An expression representing a color value\r\n * @return An RGB color expressed as a hex-triplet preceded by `#`\r\n */\n\nfunction stringToColor(s) {\n  var _a;\n\n  const colorSpec = s.toLowerCase().split('!');\n  let baseRed;\n  let baseGreen;\n  let baseBlue;\n  let red = 255;\n  let green = 255;\n  let blue = 255;\n  let mix = -1; // If the string is prefixed with a '-', use the complementary color\n\n  const complementary = colorSpec.length > 0 && colorSpec[0].charAt(0) === '-';\n  if (complementary) colorSpec[0] = colorSpec[0].slice(1);\n\n  for (let i = 0; i < colorSpec.length; i++) {\n    baseRed = red;\n    baseGreen = green;\n    baseBlue = blue;\n    const colorName = (_a = colorSpec[i].match(/([a-z0-9]*)/)) === null || _a === void 0 ? void 0 : _a[1];\n    let color = NAMED_COLORS[colorName] || MATHEMATICA_COLORS[colorName];\n    if (!color) color = colorSpec[i];\n    let m = color.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\n\n    if ((m === null || m === void 0 ? void 0 : m[1]) && m[2] && m[3]) {\n      // It's a six-digit hex number\n      red = Math.max(0, Math.min(255, parseInt(m[1], 16)));\n      green = Math.max(0, Math.min(255, parseInt(m[2], 16)));\n      blue = Math.max(0, Math.min(255, parseInt(m[3], 16)));\n    } else {\n      m = color.match(/^#([0-9a-f]{3})$/i);\n\n      if (m === null || m === void 0 ? void 0 : m[1]) {\n        // It's a three-digit hex number\n        const r1 = parseInt(m[1][0], 16);\n        const g1 = parseInt(m[1][1], 16);\n        const b1 = parseInt(m[1][2], 16);\n        red = Math.max(0, Math.min(255, r1 * 16 + r1));\n        green = Math.max(0, Math.min(255, g1 * 16 + g1));\n        blue = Math.max(0, Math.min(255, b1 * 16 + b1));\n      } else {\n        // It's a rgb functional\n        m = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\n        if ((m === null || m === void 0 ? void 0 : m[1]) && m[2] && m[3]) {\n          red = Math.max(0, Math.min(255, parseInt(m[1])));\n          green = Math.max(0, Math.min(255, parseInt(m[2])));\n          blue = Math.max(0, Math.min(255, parseInt(m[3])));\n        } else {\n          return null;\n        }\n      }\n    }\n\n    if (mix >= 0) {\n      red = (1.0 - mix) * red + mix * baseRed;\n      green = (1.0 - mix) * green + mix * baseGreen;\n      blue = (1.0 - mix) * blue + mix * baseBlue;\n      mix = -1;\n    }\n\n    if (i + 1 < colorSpec.length) {\n      mix = Math.max(0, Math.min(100, parseInt(colorSpec[++i]))) / 100.0;\n    }\n  }\n\n  if (mix >= 0) {\n    red = mix * red + (1.0 - mix) * baseRed;\n    green = mix * green + (1.0 - mix) * baseGreen;\n    blue = mix * blue + (1.0 - mix) * baseBlue;\n  }\n\n  if (complementary) {\n    red = 255 - red;\n    green = 255 - green;\n    blue = 255 - blue;\n  }\n\n  return '#' + ('00' + Math.round(red).toString(16)).slice(-2) + ('00' + Math.round(green).toString(16)).slice(-2) + ('00' + Math.round(blue).toString(16)).slice(-2);\n}\n\nfunction colorToString(color) {\n  let result = color.toUpperCase();\n\n  for (const c in NAMED_COLORS) {\n    if (NAMED_COLORS[c] === result) {\n      result = c;\n      break;\n    }\n  }\n\n  for (const c in MATHEMATICA_COLORS) {\n    if (MATHEMATICA_COLORS[c] === result) {\n      result = c;\n      break;\n    }\n  }\n\n  return result;\n}\n\ndefineFunction('ensuremath', '{:math}', {}, (_name, args) => {\n  return {\n    type: 'group',\n    mode: 'math',\n    body: args[0],\n    skipBoundary: true,\n    latexOpen: '\\\\ensuremath{',\n    latexClose: '}'\n  };\n}, (_name, _parent, atom, emit) => emit(atom, atom.body));\ndefineFunction('color', '{:color}', {}, (_name, args) => {\n  return {\n    color: args[0]\n  };\n}); // From the xcolor package.\n// Unlike what its name might suggest, this command does not set the mode to text\n// That is, it can equally be applied to math and text mode.\n\ndefineFunction('textcolor', '{:color}{content:auto*}', {}, (_name, args) => {\n  return {\n    color: args[0]\n  };\n}); // Can be preceded by e.g. '\\fboxsep=4pt' (also \\fboxrule)\n// Note:\n// - \\boxed: sets content in displaystyle mode (@todo: should change type of argument)\n//      equivalent to \\fbox{$$<content>$$}\n// - \\fbox: sets content in 'auto' mode (frequency 777)\n// - \\framebox[<width>][<alignment>]{<content>} (<alignment> := 'c'|'t'|'b' (center, top, bottom) (frequency 28)\n// @todo\n\ndefineFunction('boxed', '{content:math}', null, (_name, args) => {\n  return {\n    type: 'box',\n    framecolor: 'black',\n    skipBoundary: true,\n    body: args[0]\n  };\n}); // In LaTeX, \\colorbox sets the mode to text\n\ndefineFunction('colorbox', '{background-color:string}{content:auto}', {}, (_name, args) => {\n  return {\n    type: 'box',\n    backgroundcolor: stringToColor(args[0]),\n    skipBoundary: true,\n    body: args[1],\n    verbatimBackgroundcolor: args[0]\n  };\n}, (name, _parent, atom, emit) => \"\".concat(name, \"{\").concat(atom.verbatimBackgroundcolor || colorToString(atom.backgroundcolor), \"}{\").concat(emit(atom, atom.body), \"}\"));\ndefineFunction('fcolorbox', '{frame-color:string}{background-color:string}{content:auto}', {}, (_name, args) => {\n  return {\n    type: 'box',\n    framecolor: stringToColor(args[0]),\n    backgroundcolor: stringToColor(args[1]),\n    skipBoundary: true,\n    body: args[2],\n    verbatimBackgroundcolor: args[1],\n    verbatimFramecolor: args[0]\n  };\n}, (name, _parent, atom, emit) => \"\".concat(name, \"{\").concat(atom.verbatimFramecolor || colorToString(atom.framecolor), \"{\").concat(atom.verbatimBackgroundcolor || colorToString(atom.backgroundcolor), \"}{\").concat(emit(atom, atom.body), \"}\")); // \\bbox, MathJax extension\n// The first argument is a CSS border property shorthand, e.g.\n// \\bbox[red], \\bbox[5px,border:2px solid red]\n// The MathJax syntax is\n// arglist ::= <arg>[,<arg>[,<arg>]]\n// arg ::= [<background:color>|<padding:dimen>|<style>]\n// style ::= 'border:' <string>\n\ndefineFunction('bbox', '[:bbox]{body:auto}', {}, (_name, args) => {\n  if (args[0]) {\n    const arg = args[0];\n    return {\n      type: 'box',\n      padding: arg.padding,\n      border: arg.border,\n      backgroundcolor: arg.backgroundcolor,\n      skipBoundary: true,\n      body: args[1]\n    };\n  }\n\n  return {\n    type: 'box',\n    skipBoundary: true,\n    body: args[1]\n  };\n}, (name, _parent, atom, emit) => {\n  let result = name;\n\n  if (isFinite(atom.padding) || typeof atom.border !== 'undefined' || typeof atom.backgroundcolor !== 'undefined') {\n    const bboxParams = [];\n\n    if (isFinite(atom.padding)) {\n      bboxParams.push(Math.floor(1e2 * atom.padding) / 1e2 + 'em');\n    }\n\n    if (atom.border) {\n      bboxParams.push('border:' + atom.border);\n    }\n\n    if (atom.backgroundcolor) {\n      bboxParams.push(colorToString(atom.backgroundcolor));\n    }\n\n    result += \"[\".concat(bboxParams.join(','), \"]\");\n  }\n\n  return result + \"{\".concat(emit(atom, atom.body), \"}\");\n});\ndefineFunction(['displaystyle', 'textstyle', 'scriptstyle', 'scriptscriptstyle'], '', {}, (name, _args) => {\n  return {\n    mathstyle: name.slice(1)\n  };\n}); // Size\n\ndefineFunction(['tiny', 'scriptsize', 'footnotesize', 'small', 'normalsize', 'large', 'Large', 'LARGE', 'huge', 'Huge'], '', {\n  mode: 'text'\n}, (name, _args) => {\n  return {\n    fontSize: {\n      tiny: 'size1',\n      scriptsize: 'size2',\n      footnotesize: 'size3',\n      small: 'size4',\n      normalsize: 'size5',\n      large: 'size6',\n      Large: 'size7',\n      LARGE: 'size8',\n      huge: 'size9',\n      Huge: 'size10'\n    }[name.slice(1)]\n  };\n}); // \\fontseries only works in text mode\n\ndefineFunction('fontseries', '{:string}', {\n  mode: 'text'\n}, (_name, args) => {\n  return {\n    fontSeries: args[0]\n  };\n}); // SHAPE: italic, small caps\n\ndefineFunction('fontshape', '{:string}', {\n  mode: 'text'\n}, (_name, args) => {\n  return {\n    fontShape: args[0]\n  };\n}); // FONT FAMILY: Fraktur, Calligraphic, ...\n\ndefineFunction('fontfamily', '{:string}', {\n  mode: 'text'\n}, (_name, args) => {\n  return {\n    fontFamily: args[0]\n  };\n}); // In LaTeX, the \\fontseries, \\fontshape, \\fontfamily, \\fontsize commands\n// do not take effect until \\selectfont is encoded. In our implementation,\n// they take effect immediately, and \\selectfont is a no-op\n\ndefineFunction('selectfont', '', {\n  mode: 'text'\n}, (_name, _args) => {\n  return {};\n}); // \\bf works in any mode\n// As per the LaTeX 2.09 semantics, it overrides shape, family\n\ndefineFunction('bf', '', {}, (_name, _args) => {\n  return {\n    fontSeries: 'b',\n    fontShape: 'n',\n    fontFamily: 'cmr'\n  };\n}); // Note: These function work a little bit differently than LaTex\n// In LaTeX, \\bm{x\\mathrm{y}} yield a bold x and an upright y.\n// This is not necesarily intentional, but a side effect of the (current)\n// implementation of \\bm\n\ndefineFunction(['boldsymbol', 'bm'], '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    cssClass: 'ML__boldsymbol'\n  };\n}); // Note: switches to math mode\n\ndefineFunction('bold', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variantStyle: 'bold'\n  };\n});\ndefineFunction('bfseries', '', {\n  mode: 'text'\n}, (_name, _args) => {\n  return {\n    fontSeries: 'b'\n  };\n});\ndefineFunction('mdseries', '', {\n  mode: 'text'\n}, (_name, _args) => {\n  return {\n    fontSeries: 'm'\n  };\n});\ndefineFunction('upshape', '', {\n  mode: 'text'\n}, (_name, _args) => {\n  return {\n    fontShape: 'n'\n  };\n});\ndefineFunction('slshape', '', {\n  mode: 'text'\n}, (_name, _args) => {\n  return {\n    fontShape: 'sl'\n  };\n}); // Small caps\n\ndefineFunction('scshape', '', {\n  mode: 'text'\n}, (_name, _args) => {\n  return {\n    fontShape: 'sc'\n  };\n});\ndefineFunction('textbf', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontSeries: 'b'\n  };\n});\ndefineFunction('textmd', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontSeries: 'm'\n  };\n});\ndefineFunction('textup', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontShape: 'n'\n  };\n}); // @todo: family could be 'none' or 'default'\n// \"normal\" font of the body text, not necessarily roman\n\ndefineFunction('textnormal', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontShape: 'n',\n    fontSeries: 'm'\n  };\n});\ndefineFunction('textsl', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontShape: 'sl'\n  };\n});\ndefineFunction('textit', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontShape: 'it'\n  };\n});\ndefineFunction('textsc', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontShape: 'sc'\n  };\n});\ndefineFunction('textrm', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontFamily: 'roman'\n  };\n});\ndefineFunction('textsf', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontFamily: 'sans-serif'\n  };\n});\ndefineFunction('texttt', '{:text*}', {}, (_name, _args) => {\n  return {\n    mode: 'text',\n    fontFamily: 'monospace'\n  };\n}); // Note: \\mathbf is a no-op in text mode\n\ndefineFunction('mathbf', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variant: 'normal',\n    variantStyle: 'bold'\n  };\n});\ndefineFunction('mathit', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variant: 'normal',\n    variantStyle: 'italic'\n  };\n}); // From the ISOMath package\n\ndefineFunction('mathbfit', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variant: 'normal',\n    variantStyle: 'bolditalic'\n  };\n});\ndefineFunction('mathrm', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variant: 'normal',\n    variantStyle: 'up'\n  };\n});\ndefineFunction('mathsf', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variant: 'sans-serif',\n    variantStyle: 'up'\n  };\n});\ndefineFunction('mathtt', '{:math*}', {}, (_name, _args) => {\n  return {\n    mode: 'math',\n    variant: 'monospace',\n    variantStyle: 'up'\n  };\n});\ndefineFunction('it', '', {}, (_name, _args) => {\n  return {\n    fontSeries: 'm',\n    fontShape: 'it',\n    fontFamily: 'cmr',\n    variantStyle: 'italic'\n  };\n}); // In LaTeX, \\rmfamily, \\sffamily and \\ttfamily are no-op in math mode.\n\ndefineFunction('rmfamily', '', {}, (_name, _args) => {\n  return {\n    fontFamily: 'roman'\n  };\n});\ndefineFunction('sffamily', '', {}, (_name, _args) => {\n  return {\n    fontFamily: 'sans-serif'\n  };\n});\ndefineFunction('ttfamily', '', {}, (_name, _args) => {\n  return {\n    fontFamily: 'monospace'\n  };\n}); // In LaTeX, \\Bbb and \\mathbb are no-op in text mode.\n// They also map lowercase characters to different glyphs.\n// Note that \\Bbb has been deprecated for over 20 years (as well as \\rm, \\it, \\bf)\n\ndefineFunction(['Bbb', 'mathbb'], '{:math*}', {}, (_name, _args) => {\n  return {\n    variant: 'double-struck',\n    variantStyle: 'up'\n  };\n});\ndefineFunction(['frak', 'mathfrak'], '{:math*}', {}, (_name, _args) => {\n  return {\n    variant: 'fraktur',\n    variantStyle: 'up'\n  };\n});\ndefineFunction('mathcal', '{:math*}', {}, (_name, _args) => {\n  return {\n    variant: 'calligraphic',\n    variantStyle: 'up'\n  };\n});\ndefineFunction('mathscr', '{:math*}', {}, (_name, _args) => {\n  return {\n    variant: 'script',\n    variantStyle: 'up'\n  };\n}); // Rough synomym for \\text{}\n\n/*\r\nAn \\mbox within math mode does not use the current math font; rather it uses\r\nthe typeface of the surrounding running text.\r\n*/\n\ndefineFunction('mbox', '{:text}', null, (_name, args) => {\n  return {\n    type: 'group',\n    mode: 'math',\n    body: args[0]\n  };\n});\ndefineFunction('text', '{:text*}', null, (_name, _args) => {\n  return {\n    mode: 'text'\n  };\n});\n/* A MathJax extension: assign a class to the element */\n\ndefineFunction('class', '{name:string}{content:auto*}', null, (_name, args) => {\n  return {\n    cssClass: args[0]\n  };\n});\n/* A MathJax extension: assign an ID to the element */\n\ndefineFunction('cssId', '{id:string}{content:auto}', null, (_name, args) => {\n  return {\n    type: 'group',\n    body: args[1],\n    cssId: args[0]\n  };\n});\n/* Note: in TeX, \\em is restricted to text mode. We extend it to math\r\n * This is the 'switch' variant of \\emph, i.e:\r\n * `\\emph{important text}`\r\n * `{\\em important text}`\r\n */\n\ndefineFunction('em', '', null, (_name, _args) => {\n  return {\n    cssClass: 'ML__emph'\n  };\n});\n/* Note: in TeX, \\emph is restricted to text mode. We extend it to math */\n\ndefineFunction('emph', '{:auto}', null, (_name, args) => {\n  return {\n    cssClass: 'ML__emph',\n    body: args[0],\n    type: 'group',\n    skipBoundary: true\n  };\n}); // Extra data needed for the delimiter parse function down below\n\nconst DELIMITER_SIZES = {\n  '\\\\bigl': {\n    mclass: 'mopen',\n    size: 1\n  },\n  '\\\\Bigl': {\n    mclass: 'mopen',\n    size: 2\n  },\n  '\\\\biggl': {\n    mclass: 'mopen',\n    size: 3\n  },\n  '\\\\Biggl': {\n    mclass: 'mopen',\n    size: 4\n  },\n  '\\\\bigr': {\n    mclass: 'mclose',\n    size: 1\n  },\n  '\\\\Bigr': {\n    mclass: 'mclose',\n    size: 2\n  },\n  '\\\\biggr': {\n    mclass: 'mclose',\n    size: 3\n  },\n  '\\\\Biggr': {\n    mclass: 'mclose',\n    size: 4\n  },\n  '\\\\bigm': {\n    mclass: 'mrel',\n    size: 1\n  },\n  '\\\\Bigm': {\n    mclass: 'mrel',\n    size: 2\n  },\n  '\\\\biggm': {\n    mclass: 'mrel',\n    size: 3\n  },\n  '\\\\Biggm': {\n    mclass: 'mrel',\n    size: 4\n  },\n  '\\\\big': {\n    mclass: 'mord',\n    size: 1\n  },\n  '\\\\Big': {\n    mclass: 'mord',\n    size: 2\n  },\n  '\\\\bigg': {\n    mclass: 'mord',\n    size: 3\n  },\n  '\\\\Bigg': {\n    mclass: 'mord',\n    size: 4\n  }\n};\ndefineFunction(['bigl', 'Bigl', 'biggl', 'Biggl', 'bigr', 'Bigr', 'biggr', 'Biggr', 'bigm', 'Bigm', 'biggm', 'Biggm', 'big', 'Big', 'bigg', 'Bigg'], '{:delim}', null, function (name, args) {\n  return {\n    type: 'sizeddelim',\n    size: DELIMITER_SIZES[name].size,\n    cls: DELIMITER_SIZES[name].mclass,\n    delim: args[0]\n  };\n});\ndefineFunction(['hspace', 'hspace*'], '{width:skip}', {}, function (_name, args) {\n  return {\n    type: 'spacing',\n    width: args[0] || 0\n  };\n});\ndefineFunction(['mathop', 'mathbin', 'mathrel', 'mathopen', 'mathclose', 'mathpunct', 'mathord', 'mathinner'], '{:auto}', null, (name, args) => {\n  const result = {\n    type: {\n      '\\\\mathop': 'mop',\n      '\\\\mathbin': 'mbin',\n      '\\\\mathrel': 'mrel',\n      '\\\\mathopen': 'mopen',\n      '\\\\mathclose': 'mclose',\n      '\\\\mathpunct': 'mpunct',\n      '\\\\mathord': 'mord',\n      '\\\\mathinner': 'minner'\n    }[name],\n    body: args[0],\n    // A string would be styled as text, but these need to be interpreted\n    // as 'math'\n    captureSelection: true\n  };\n\n  if (name === '\\\\mathop') {\n    result.limits = 'limits';\n    result.isFunction = true;\n  }\n\n  return result;\n}, (name, _parent, atom, emit) => {\n  return \"\".concat(name, \"{\").concat(emit(atom, atom.body), \"}\");\n}); // @todo see http://mirrors.ibiblio.org/CTAN/macros/latex/required/amsmath/amsopn.pdf\n// for list of additional operators\n\ndefineFunction(['operatorname', 'operatorname*'], '{operator:math}', null, function (name, args) {\n  const result = {\n    type: 'mop',\n    captureSelection: true,\n    body: args[0],\n    isFunction: true\n  };\n  /*\r\n  The \\operatorname commands is defined with:\r\n   \\gdef\\newmcodes@{\\mathcode`\\'39\\mathcode`\\*42\\mathcode`\\.\"613A%\r\n  \\ifnum\\mathcode`\\-=45 \\else\r\n      \\mathchardef\\std@minus\\mathcode`\\-\\relax\r\n  \\fi\r\n  \\mathcode`\\-45\\mathcode`\\/47\\mathcode`\\:\"603A\\relax}\r\n    \\mathcode assigns to a character its category (2=mbin), its font family (0=cmr),\r\n  and its character code.\r\n   It basically temporarily reassigns to \":.'-/*\" the values/properties\r\n  these characters have in text mode (but importantly, not to \" \" (space))\r\n   */\n\n  result.body.forEach(x => {\n    x.isFunction = false;\n\n    if (!x.variant && !x.variantStyle) {\n      // No variant as been specified (as it could have been with\n      // \\operatorname{\\mathit{lim}} for example)\n      // Bypass the default auto styling by specifing an upright style\n      x.variant = 'main';\n      x.variantStyle = 'up';\n    }\n\n    x.type = 'mord';\n    x.body = {\n      '\\u2217': '*',\n      '\\u2212': '-'\n    }[x.body] || x.body;\n  });\n\n  if (name === '\\\\operatorname') {\n    result.limits = 'nolimits';\n  } else if (name === '\\\\operatorname*') {\n    result.limits = 'limits';\n  }\n\n  return result;\n});\ndefineFunction('unicode', '{charcode:number}', null, (_name, args) => {\n  let codepoint = parseInt(args[0]);\n  if (!isFinite(codepoint)) codepoint = 0x2753; // BLACK QUESTION MARK\n\n  return {\n    type: 'mord',\n    body: String.fromCodePoint(codepoint),\n    codepoint: codepoint\n  };\n}, (name, _parent, atom, _emit) => {\n  return \"\".concat(name, \"{\\\"\").concat(('000000' + atom.codepoint.toString(16)).toUpperCase().substr(-6), \"}\");\n}); // A box of the width and height\n\ndefineFunction('rule', '[raise:dimen]{width:dimen}{thickness:dimen}', null, function (name, args) {\n  return {\n    type: 'rule',\n    shift: args[0],\n    width: args[1],\n    height: args[2]\n  };\n}); // An overline\n\ndefineFunction('overline', '{:auto}', null, (_name, args) => {\n  return {\n    type: 'line',\n    position: 'overline',\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction('underline', '{:auto}', null, (_name, args) => {\n  return {\n    type: 'line',\n    position: 'underline',\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction('overset', '{annotation:auto}{symbol:auto}', null, function (_name, args) {\n  return {\n    type: 'overunder',\n    overscript: args[0],\n    skipBoundary: true,\n    body: args[1]\n  };\n}, (name, _parent, atom, emit) => {\n  return \"\".concat(name, \"{\").concat(emit(atom, atom.overscript), \"}{\").concat(emit(atom, atom.body), \"}\");\n});\ndefineFunction('underset', '{annotation:auto}{symbol:auto}', null, function (_name, args) {\n  return {\n    type: 'overunder',\n    underscript: args[0],\n    skipBoundary: true,\n    body: args[1]\n  };\n}, (name, _parent, atom, emit) => {\n  return \"\".concat(name, \"{\").concat(emit(atom, atom.overscript), \"}{\").concat(emit(atom, atom.body), \"}\");\n});\ndefineFunction(['overwithdelims', 'atopwithdelims'], '{numer:auto}{denom:auto}{left-delim:delim}{right-delim:delim}', {\n  infix: true\n}, function (_name, args) {\n  return {\n    type: 'genfrac',\n    numer: args[0],\n    denom: args[1],\n    hasBarLine: false,\n    leftDelim: args[2],\n    rightDelim: args[3],\n    mathstyle: 'auto'\n  };\n}, (name, _parent, atom, emit) => {\n  return \"\".concat(emit(atom, atom.numer), \" \").concat(name).concat(atom.leftDelim).concat(atom.rightDelim).concat(emit(atom, atom.denom));\n});\ndefineFunction(['stackrel', 'stackbin'], '{annotation:auto}{symbol:auto}', null, function (name, args) {\n  return {\n    type: 'overunder',\n    overscript: args[0],\n    skipBoundary: true,\n    body: args[1],\n    // Set the correct spacing rule for \\stackrel\n    mathtype: name === '\\\\stackrel' ? 'mrel' : 'mbin'\n  };\n}, (name, _parent, atom, emit) => \"\".concat(name, \"{\").concat(emit(atom, atom.overscript), \"}{\").concat(emit(atom, atom.body), \"}\"));\n/*\r\ndisplay: inline-block;\r\nwidth: 0;\r\nline-height: 1;\r\n*/\n\n/*\r\ndisplay: inline-block;\r\n*/\n\ndefineFunction(['phantom', 'vphantom', 'hphantom'], '{:auto*}', {}, (name, _args) => {\n  return {\n    type: 'phantom',\n    captureSelection: true,\n    phantomType: name.slice(1),\n    isPhantom: true\n  };\n}, (name, _parent, atom, emit) => name + '{' + emit(atom, atom.body) + '}');\ndefineFunction('smash', '[:string]{:auto}', null, function (_name, args) {\n  let phantomType = 'smash';\n\n  if (args[0] === 'b') {\n    phantomType = 'bsmash';\n  } else if (args[0] === 't') {\n    phantomType = 'tsmash'; // } else if (args[0]) {\n  }\n\n  return {\n    type: 'phantom',\n    phantomType,\n    skipBoundary: true,\n    body: args[1]\n  };\n});\ndefineFunction('rlap', '{:auto}', null, function (_name, args) {\n  return {\n    type: 'overlap',\n    align: 'right',\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction('llap', '{:auto}', null, function (_name, args) {\n  return {\n    type: 'overlap',\n    align: 'left',\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction('mathrlap', '{:auto}', null, function (_name, args) {\n  return {\n    type: 'overlap',\n    mode: 'math',\n    align: 'right',\n    skipBoundary: true,\n    body: args[0]\n  };\n});\ndefineFunction('mathllap', '{:auto}', null, function (name, args) {\n  return {\n    type: 'overlap',\n    mode: 'math',\n    align: 'left',\n    skipBoundary: true,\n    body: args[0]\n  };\n}); // Simple characters allowed in math mode\n\ndefineSymbols('0123456789/@.?!');\ndefineSymbolRange(0x0041, 0x005a); // a-z\n\ndefineSymbolRange(0x0061, 0x007a); // A-Z\n// Quantifiers\n\ndefineSymbol('\\\\forall', '\\u2200');\ndefineSymbol('\\\\exists', '\\u2203');\ndefineSymbol('\\\\nexists', '\\u2204', 'mord', 'ams');\ndefineSymbol('\\\\mid', '\\u2223', 'mrel');\ndefineSymbol('\\\\top', '\\u22a4');\ndefineSymbol('\\\\bot', '\\u22a5'); // Misc Symbols\n\ndefineSymbol('\\\\sharp', '\\u266f');\ndefineSymbol('\\\\flat', '\\u266d');\ndefineSymbol('\\\\natural', '\\u266e');\ndefineSymbol('\\\\#', '\\u0023');\ndefineSymbol('\\\\&', '\\u0026');\ndefineSymbol('\\\\clubsuit', '\\u2663');\ndefineSymbol('\\\\heartsuit', '\\u2661');\ndefineSymbol('\\\\spadesuit', '\\u2660');\ndefineSymbol('\\\\diamondsuit', '\\u2662'); // defineSymbol( '\\\\cross', '\\uF4A0',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\n// defineSymbol( '\\\\transpose', '\\uF3C7',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\n// defineSymbol( '\\\\conjugate', 'conj'],  MAIN,  'mord', '\\uF3C8'); // NOTE: not a real TeX symbol, but Mathematica\n// defineSymbol( '\\\\conjugatetranspose', '\\uF3C9',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\n// defineSymbol( '\\\\hermitianconjugate', '\\uF3CE',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\n\ndefineSymbol('\\\\differencedelta', '\\u2206', 'mrel');\ndefineSymbol('\\\\backslash', '\\\\');\ndefineSymbol('\\\\nabla', '\\u2207');\ndefineSymbol('\\\\partial', '\\u2202');\ndefineSymbol('\\\\ell', '\\u2113');\ndefineSymbol('\\\\hbar', '\\u210f');\ndefineSymbol('\\\\hslash', '\\u210f', 'mord', 'ams');\ndefineSymbol('\\\\Finv', '\\u2132', 'mord', 'ams');\ndefineSymbol('\\\\Game', '\\u2141', 'mord', 'ams');\ndefineSymbol('\\\\wp', '\\u2118');\ndefineSymbol('\\\\eth', '\\u00f0', 'mord', 'ams');\ndefineSymbol('\\\\mho', '\\u2127', 'mord', 'ams');\ndefineSymbol('\\\\Bbbk', '\\u006b', 'mord', 'ams');\ndefineSymbol('\\\\N', 'N', 'mord', 'double-struck'); // NOTE: Check if standard Latex\n\ndefineSymbol('\\\\R', 'R', 'mord', 'double-struck'); // NOTE: Check if standard Latex\n\ndefineSymbol('\\\\Q', 'Q', 'mord', 'double-struck'); // NOTE: Check if standard Latex\n\ndefineSymbol('\\\\C', 'C', 'mord', 'double-struck'); // NOTE: Check if standard Latex\n\ndefineSymbol('\\\\Z', 'Z', 'mord', 'double-struck'); // NOTE: Check if standard Latex\n\ndefineSymbol('\\\\P', 'P', 'mord', 'double-struck'); // NOTE: Check if standard Latex\n\ndefineSymbol('\\\\pounds', '\\u00a3');\ndefineSymbol('\\\\yen', '\\u00a5', 'mord', 'ams');\ndefineSymbol('\\\\euro', '\\u20AC'); // NOTE: not TeX built-in, but textcomp package\n// TODO Koppa, Stigma, Sampi\n// Math and Text\n\ndefineSymbol('\\\\dagger', '\\u2020', 'mbin');\ndefineSymbol('\\\\dag', '\\u2020', 'mbin');\ndefineSymbol('\\\\ddag', '\\u2021', 'mbin');\ndefineSymbol('\\\\ddagger', '\\u2021', 'mbin');\ndefineSymbol('\\\\maltese', '\\u2720', 'mord', 'ams'); // Arrow Symbols\n\ndefineSymbol('\\\\rightarrow', '\\u2192', 'mrel');\ndefineSymbol('\\\\to', '\\u2192', 'mrel');\ndefineSymbol('\\\\leftarrow', '\\u2190', 'mrel');\ndefineSymbol('\\\\gets', '\\u2190', 'mrel');\ndefineSymbol('\\\\Rightarrow', '\\u21d2', 'mrel');\ndefineSymbol('\\\\Leftarrow', '\\u21d0', 'mrel');\ndefineSymbol('\\\\longrightarrow', '\\u27f6', 'mrel');\ndefineSymbol('\\\\longleftarrow', '\\u27f5', 'mrel');\ndefineSymbol('\\\\Longrightarrow', '\\u27f9', 'mrel');\ndefineSymbol('\\\\implies', '\\u27f9', 'mrel');\ndefineSymbol('\\\\Longleftarrow', '\\u27f8', 'mrel');\ndefineSymbol('\\\\impliedby', '\\u27f8', 'mrel');\ndefineSymbol('\\\\dashrightarrow', '\\u21e2', 'mrel', 'ams');\ndefineSymbol('\\\\dashleftarrow', '\\u21e0', 'mrel', 'ams');\ndefineSymbol('\\\\Rrightarrow', '\\u21db', 'mrel', 'ams');\ndefineSymbol('\\\\Lleftarrow', '\\u21da', 'mrel', 'ams');\ndefineSymbol('\\\\longleftrightarrow', '\\u27f7', 'mrel');\ndefineSymbol('\\\\biconditional', '\\u27f7', 'mrel');\ndefineSymbol('\\\\Longleftrightarrow', '\\u27fa', 'mrel');\ndefineSymbol('\\\\leftrightarrows', '\\u21c6', 'mrel', 'ams');\ndefineSymbol('\\\\rightleftarrows', '\\u21c4', 'mrel', 'ams');\ndefineSymbol('\\\\mapsto', '\\u21a6', 'mrel');\ndefineSymbol('\\\\longmapsto', '\\u27fc', 'mrel');\ndefineSymbol('\\\\uparrow', '\\u2191', 'mrel');\ndefineSymbol('\\\\downarrow', '\\u2193', 'mrel');\ndefineSymbol('\\\\Uparrow', '\\u21d1', 'mrel');\ndefineSymbol('\\\\Downarrow', '\\u21d3', 'mrel');\ndefineSymbol('\\\\updownarrow', '\\u2195', 'mrel');\ndefineSymbol('\\\\Updownarrow', '\\u21d5', 'mrel');\ndefineSymbol('\\\\curvearrowright', '\\u21b7', 'mrel', 'ams');\ndefineSymbol('\\\\curvearrowleft', '\\u21b6', 'mrel', 'ams');\ndefineSymbol('\\\\hookrightarrow', '\\u21aa', 'mrel');\ndefineSymbol('\\\\hookleftarrow', '\\u21a9', 'mrel');\ndefineSymbol('\\\\rightharpoonup', '\\u21c0', 'mrel');\ndefineSymbol('\\\\leftharpoonup', '\\u21bc', 'mrel');\ndefineSymbol('\\\\rightharpoondown', '\\u21c1', 'mrel');\ndefineSymbol('\\\\leftharpoondown', '\\u21bd', 'mrel');\ndefineSymbol('\\\\rightrightarrows', '\\u21c9', 'mrel', 'ams');\ndefineSymbol('\\\\leftleftarrows', '\\u21c7', 'mrel', 'ams');\ndefineSymbol('\\\\upuparrows', '\\u21c8', 'mrel', 'ams');\ndefineSymbol('\\\\downdownarrows', '\\u21ca', 'mrel', 'ams');\ndefineSymbol('\\\\leftarrowtail', '\\u21a2', 'mrel', 'ams');\ndefineSymbol('\\\\rightarrowtail', '\\u21a3', 'mrel', 'ams');\ndefineSymbol('\\\\looparrowright', '\\u21ac', 'mrel', 'ams');\ndefineSymbol('\\\\looparrowleft', '\\u21ab', 'mrel', 'ams');\ndefineSymbol('\\\\twoheadleftarrow', '\\u219e', 'mrel', 'ams');\ndefineSymbol('\\\\twoheadrightarrow', '\\u21a0', 'mrel', 'ams');\ndefineSymbol('\\\\rightleftharpoons', '\\u21cc', 'mrel');\ndefineSymbol('\\\\leftrightharpoons', '\\u21cb', 'mrel', 'ams');\ndefineSymbol('\\\\Rsh', '\\u21b1', 'mrel', 'ams');\ndefineSymbol('\\\\Lsh', '\\u21b0', 'mrel', 'ams');\ndefineSymbol('\\\\searrow', '\\u2198', 'mrel');\ndefineSymbol('\\\\nearrow', '\\u2197', 'mrel');\ndefineSymbol('\\\\swarrow', '\\u2199', 'mrel');\ndefineSymbol('\\\\nwarrow', '\\u2196', 'mrel');\ndefineSymbol('\\\\circlearrowright', '\\u21bb', 'mrel', 'ams');\ndefineSymbol('\\\\circlearrowleft', '\\u21ba', 'mrel', 'ams');\ndefineSymbol('\\\\restriction', '\\u21be', 'mrel', 'ams');\ndefineSymbol('\\\\upharpoonright', '\\u21be', 'mrel', 'ams');\ndefineSymbol('\\\\upharpoonleft', '\\u21bf', 'mrel', 'ams');\ndefineSymbol('\\\\downharpoonright', '\\u21c2', 'mrel', 'ams');\ndefineSymbol('\\\\downharpoonleft', '\\u21c3', 'mrel', 'ams');\ndefineSymbol('\\\\rightsquigarrow', '\\u21dd', 'mrel', 'ams');\ndefineSymbol('\\\\leadsto', '\\u21dd', 'mrel', 'ams');\ndefineSymbol('\\\\leftrightsquigarrow', '\\u21ad', 'mrel', 'ams');\ndefineSymbol('\\\\originalof', '\\u22B6', 'mrel');\ndefineSymbol('\\\\laplace', '\\u22B6', 'mrel');\ndefineSymbol('\\\\imageof', '\\u22B7', 'mrel');\ndefineSymbol('\\\\Laplace', '\\u22B7', 'mrel');\ndefineSymbol('\\\\multimap', '\\u22b8', 'mrel', 'ams'); // 'ams' Negated Arrows\n\ndefineSymbol('\\\\nrightarrow', '\\u219b', 'mrel', 'ams');\ndefineSymbol('\\\\nleftarrow', '\\u219a', 'mrel', 'ams');\ndefineSymbol('\\\\nRightarrow', '\\u21cf', 'mrel', 'ams');\ndefineSymbol('\\\\nLeftarrow', '\\u21cd', 'mrel', 'ams');\ndefineSymbol('\\\\nleftrightarrow', '\\u21ae', 'mrel', 'ams');\ndefineSymbol('\\\\nLeftrightarrow', '\\u21ce', 'mrel', 'ams'); // 'ams' Negated Binary Relations\n\ndefineSymbol('\\\\nless', '\\u226e', 'mrel', 'ams');\ndefineSymbol('\\\\nleqslant', '\\ue010', 'mrel', 'ams');\ndefineSymbol('\\\\lneq', '\\u2a87', 'mrel', 'ams');\ndefineSymbol('\\\\lneqq', '\\u2268', 'mrel', 'ams');\ndefineSymbol('\\\\nleqq', '\\ue011', 'mrel', 'ams');\ndefineSymbol('\\\\unlhd', '\\u22b4', 'mbin', 'ams');\ndefineSymbol('\\\\unrhd', '\\u22b5', 'mbin', 'ams');\ndefineSymbol('\\\\lvertneqq', '\\ue00c', 'mrel', 'ams');\ndefineSymbol('\\\\lnsim', '\\u22e6', 'mrel', 'ams');\ndefineSymbol('\\\\lnapprox', '\\u2a89', 'mrel', 'ams');\ndefineSymbol('\\\\nprec', '\\u2280', 'mrel', 'ams');\ndefineSymbol('\\\\npreceq', '\\u22e0', 'mrel', 'ams');\ndefineSymbol('\\\\precnsim', '\\u22e8', 'mrel', 'ams');\ndefineSymbol('\\\\precnapprox', '\\u2ab9', 'mrel', 'ams');\ndefineSymbol('\\\\nsim', '\\u2241', 'mrel', 'ams');\ndefineSymbol('\\\\nshortmid', '\\ue006', 'mrel', 'ams');\ndefineSymbol('\\\\nmid', '\\u2224', 'mrel', 'ams');\ndefineSymbol('\\\\nvdash', '\\u22ac', 'mrel', 'ams');\ndefineSymbol('\\\\nvDash', '\\u22ad', 'mrel', 'ams');\ndefineSymbol('\\\\ngtr', '\\u226f', 'mrel', 'ams');\ndefineSymbol('\\\\ngeqslant', '\\ue00f', 'mrel', 'ams');\ndefineSymbol('\\\\ngeqq', '\\ue00e', 'mrel', 'ams');\ndefineSymbol('\\\\gneq', '\\u2a88', 'mrel', 'ams');\ndefineSymbol('\\\\gneqq', '\\u2269', 'mrel', 'ams');\ndefineSymbol('\\\\gvertneqq', '\\ue00d', 'mrel', 'ams');\ndefineSymbol('\\\\gnsim', '\\u22e7', 'mrel', 'ams');\ndefineSymbol('\\\\gnapprox', '\\u2a8a', 'mrel', 'ams');\ndefineSymbol('\\\\nsucc', '\\u2281', 'mrel', 'ams');\ndefineSymbol('\\\\nsucceq', '\\u22e1', 'mrel', 'ams');\ndefineSymbol('\\\\succnsim', '\\u22e9', 'mrel', 'ams');\ndefineSymbol('\\\\succnapprox', '\\u2aba', 'mrel', 'ams');\ndefineSymbol('\\\\ncong', '\\u2246', 'mrel', 'ams');\ndefineSymbol('\\\\nshortparallel', '\\ue007', 'mrel', 'ams');\ndefineSymbol('\\\\nparallel', '\\u2226', 'mrel', 'ams');\ndefineSymbol('\\\\nVDash', '\\u22af', 'mrel', 'ams');\ndefineSymbol('\\\\nsupseteqq', '\\ue018', 'mrel', 'ams');\ndefineSymbol('\\\\supsetneq', '\\u228b', 'mrel', 'ams');\ndefineSymbol('\\\\varsupsetneq', '\\ue01b', 'mrel', 'ams');\ndefineSymbol('\\\\supsetneqq', '\\u2acc', 'mrel', 'ams');\ndefineSymbol('\\\\varsupsetneqq', '\\ue019', 'mrel', 'ams');\ndefineSymbol('\\\\nVdash', '\\u22ae', 'mrel', 'ams');\ndefineSymbol('\\\\precneqq', '\\u2ab5', 'mrel', 'ams');\ndefineSymbol('\\\\succneqq', '\\u2ab6', 'mrel', 'ams');\ndefineSymbol('\\\\nsubseteqq', '\\ue016', 'mrel', 'ams'); // 'ams' Misc\n\ndefineSymbol('\\\\checkmark', '\\u2713', 'mord', 'ams');\ndefineSymbol('\\\\diagup', '\\u2571', 'mord', 'ams');\ndefineSymbol('\\\\diagdown', '\\u2572', 'mord', 'ams');\ndefineSymbol('\\\\measuredangle', '\\u2221', 'mord', 'ams');\ndefineSymbol('\\\\sphericalangle', '\\u2222', 'mord', 'ams');\ndefineSymbol('\\\\backprime', '\\u2035', 'mord', 'ams');\ndefineSymbol('\\\\backdoubleprime', '\\u2036', 'mord', 'ams');\ndefineSymbol('\\\\ast', '\\u2217', 'mbin');\ndefineSymbol('\\\\star', '\\u22c6', 'mbin');\ndefineSymbol('\\\\diamond', '\\u22c4', 'mbin');\ndefineSymbol('\\\\Diamond', '\\u25ca', 'mord', 'ams');\ndefineSymbol('\\\\lozenge', '\\u25ca', 'mord', 'ams');\ndefineSymbol('\\\\blacklozenge', '\\u29eb', 'mord', 'ams');\ndefineSymbol('\\\\bigstar', '\\u2605', 'mord', 'ams'); // 'ams' Hebrew\n\ndefineSymbol('\\\\aleph', '\\u2135');\ndefineSymbol('\\\\beth', '\\u2136', 'mord', 'ams');\ndefineSymbol('\\\\daleth', '\\u2138', 'mord', 'ams');\ndefineSymbol('\\\\gimel', '\\u2137', 'mord', 'ams'); // 'ams' Delimiters\n\ndefineSymbol('\\\\lbrace', '{', 'mopen');\ndefineSymbol('\\\\rbrace', '}', 'mclose');\ndefineSymbol('\\\\langle', '\\u27e8', 'mopen');\ndefineSymbol('\\\\rangle', '\\u27e9', 'mclose');\ndefineSymbol('\\\\lfloor', '\\u230a', 'mopen');\ndefineSymbol('\\\\rfloor', '\\u230b', 'mclose');\ndefineSymbol('\\\\lceil', '\\u2308', 'mopen');\ndefineSymbol('\\\\rceil', '\\u2309', 'mclose');\ndefineSymbol('\\\\vert', '\\u2223');\ndefineSymbol('\\\\mvert', '\\u2223', 'mrel');\ndefineSymbol('\\\\lvert', '\\u2223', 'mopen');\ndefineSymbol('\\\\rvert', '\\u2223', 'mclose');\ndefineSymbol('\\\\|', '\\u2225');\ndefineSymbol('\\\\Vert', '\\u2225');\ndefineSymbol('\\\\mVert', '\\u2225');\ndefineSymbol('\\\\lVert', '\\u2225', 'mopen');\ndefineSymbol('\\\\rVert', '\\u2225', 'mclose');\ndefineSymbol('\\\\parallel', '\\u2225', 'mrel');\ndefineSymbol('\\\\shortparallel', '\\u2225', 'mrel', 'ams');\ndefineSymbol('\\\\lbrack', '[', 'mopen');\ndefineSymbol('\\\\rbrack', ']', 'mclose');\ndefineSymbol('\\\\{', '{', 'mopen');\ndefineSymbol('\\\\}', '}', 'mclose');\ndefineSymbol('(', '(', 'mopen');\ndefineSymbol(')', ')', 'mclose');\ndefineSymbol('[', '[', 'mopen');\ndefineSymbol(']', ']', 'mclose');\ndefineSymbol('\\\\ulcorner', '\\u250c', 'mopen', 'ams');\ndefineSymbol('\\\\urcorner', '\\u2510', 'mclose', 'ams');\ndefineSymbol('\\\\llcorner', '\\u2514', 'mopen', 'ams');\ndefineSymbol('\\\\lrcorner', '\\u2518', 'mclose', 'ams'); // Large Delimiters\n\ndefineSymbol('\\\\lgroup', '\\u27ee', 'mopen');\ndefineSymbol('\\\\rgroup', '\\u27ef', 'mclose');\ndefineSymbol('\\\\lmoustache', '\\u23b0', 'mopen');\ndefineSymbol('\\\\rmoustache', '\\u23b1', 'mclose'); // Relations\n\ndefineSymbol('=', '=', 'mrel');\ndefineSymbol('\\\\ne', '\\u2260', 'mrel');\ndefineSymbol('\\\\neq', '\\u2260', 'mrel'); // defineSymbol( '\\\\longequal', '\\uF7D9',  'mrel',  MAIN);   // NOTE: Not TeX\n\ndefineSymbol('<', '<', 'mrel');\ndefineSymbol('\\\\lt', '<', 'mrel');\ndefineSymbol('>', '>', 'mrel');\ndefineSymbol('\\\\gt', '>', 'mrel');\ndefineSymbol('\\\\le', '\\u2264', 'mrel');\ndefineSymbol('\\\\leq', '\\u2264', 'mrel');\ndefineSymbol('\\\\ge', '\\u2265', 'mrel');\ndefineSymbol('\\\\geq', '\\u2265', 'mrel');\ndefineSymbol('\\\\leqslant', '\\u2a7d', 'mrel', 'ams');\ndefineSymbol('\\\\geqslant', '\\u2a7e', 'mrel', 'ams');\ndefineSymbol('\\\\ll', '\\u226a', 'mrel');\ndefineSymbol('\\\\gg', '\\u226b', 'mrel');\ndefineSymbol('\\\\coloneq', '\\u2254', 'mrel');\ndefineSymbol('\\\\measeq', '\\u225d', 'mrel'); // MEASSURED BY\n\ndefineSymbol('\\\\eqdef', '\\u225e', 'mrel');\ndefineSymbol('\\\\questeq', '\\u225f', 'mrel'); // QUESTIONED EQUAL TO\n\ndefineSymbol(':', ':', 'mrel');\ndefineSymbol('\\\\cong', '\\u2245', 'mrel');\ndefineSymbol('\\\\equiv', '\\u2261', 'mrel');\ndefineSymbol('\\\\prec', '\\u227a', 'mrel');\ndefineSymbol('\\\\preceq', '\\u2aaf', 'mrel');\ndefineSymbol('\\\\succ', '\\u227b', 'mrel');\ndefineSymbol('\\\\succeq', '\\u2ab0', 'mrel');\ndefineSymbol('\\\\perp', '\\u22a5', 'mrel');\ndefineSymbol('\\\\propto', '\\u221d', 'mrel');\ndefineSymbol('\\\\Colon', '\\u2237', 'mrel');\ndefineSymbol('\\\\smile', '\\u2323', 'mrel');\ndefineSymbol('\\\\frown', '\\u2322', 'mrel');\ndefineSymbol('\\\\sim', '\\u223c', 'mrel');\ndefineSymbol('\\\\gtrsim', '\\u2273', 'mrel', 'ams');\ndefineSymbol('\\\\approx', '\\u2248', 'mrel');\ndefineSymbol('\\\\approxeq', '\\u224a', 'mrel', 'ams');\ndefineSymbol('\\\\thickapprox', '\\u2248', 'mrel', 'ams');\ndefineSymbol('\\\\lessapprox', '\\u2a85', 'mrel', 'ams');\ndefineSymbol('\\\\gtrapprox', '\\u2a86', 'mrel', 'ams');\ndefineSymbol('\\\\precapprox', '\\u2ab7', 'mrel', 'ams');\ndefineSymbol('\\\\succapprox', '\\u2ab8', 'mrel', 'ams');\ndefineSymbol('\\\\thicksim', '\\u223c', 'mrel', 'ams');\ndefineSymbol('\\\\succsim', '\\u227f', 'mrel', 'ams');\ndefineSymbol('\\\\precsim', '\\u227e', 'mrel', 'ams');\ndefineSymbol('\\\\backsim', '\\u223d', 'mrel', 'ams');\ndefineSymbol('\\\\eqsim', '\\u2242', 'mrel', 'ams');\ndefineSymbol('\\\\backsimeq', '\\u22cd', 'mrel', 'ams');\ndefineSymbol('\\\\simeq', '\\u2243', 'mrel');\ndefineSymbol('\\\\lesssim', '\\u2272', 'mrel', 'ams');\ndefineSymbol('\\\\nleq', '\\u2270', 'mrel', 'ams');\ndefineSymbol('\\\\ngeq', '\\u2271', 'mrel', 'ams');\ndefineSymbol('\\\\smallsmile', '\\u2323', 'mrel', 'ams');\ndefineSymbol('\\\\smallfrown', '\\u2322', 'mrel', 'ams');\ndefineSymbol('\\\\bowtie', '\\u22c8', 'mrel');\ndefineSymbol('\\\\Join', '\\u22c8', 'mrel');\ndefineSymbol('\\\\asymp', '\\u224d', 'mrel');\ndefineSymbol('\\\\sqsubseteq', '\\u2291', 'mrel');\ndefineSymbol('\\\\sqsupseteq', '\\u2292', 'mrel');\ndefineSymbol('\\\\leqq', '\\u2266', 'mrel', 'ams');\ndefineSymbol('\\\\eqslantless', '\\u2a95', 'mrel', 'ams');\ndefineSymbol('\\\\lll', '\\u22d8', 'mrel', 'ams');\ndefineSymbol('\\\\lessgtr', '\\u2276', 'mrel', 'ams');\ndefineSymbol('\\\\lesseqgtr', '\\u22da', 'mrel', 'ams');\ndefineSymbol('\\\\lesseqqgtr', '\\u2a8b', 'mrel', 'ams');\ndefineSymbol('\\\\risingdotseq', '\\u2253', 'mrel', 'ams');\ndefineSymbol('\\\\fallingdotseq', '\\u2252', 'mrel', 'ams');\ndefineSymbol('\\\\subseteqq', '\\u2ac5', 'mrel', 'ams');\ndefineSymbol('\\\\Subset', '\\u22d0', 'mrel', 'ams');\ndefineSymbol('\\\\sqsubset', '\\u228f', 'mrel', 'ams');\ndefineSymbol('\\\\preccurlyeq', '\\u227c', 'mrel', 'ams');\ndefineSymbol('\\\\curlyeqprec', '\\u22de', 'mrel', 'ams');\ndefineSymbol('\\\\vDash', '\\u22a8', 'mrel', 'ams');\ndefineSymbol('\\\\Vvdash', '\\u22aa', 'mrel', 'ams');\ndefineSymbol('\\\\bumpeq', '\\u224f', 'mrel', 'ams');\ndefineSymbol('\\\\Bumpeq', '\\u224e', 'mrel', 'ams');\ndefineSymbol('\\\\geqq', '\\u2267', 'mrel', 'ams');\ndefineSymbol('\\\\eqslantgtr', '\\u2a96', 'mrel', 'ams');\ndefineSymbol('\\\\ggg', '\\u22d9', 'mrel', 'ams');\ndefineSymbol('\\\\gtrless', '\\u2277', 'mrel', 'ams');\ndefineSymbol('\\\\gtreqless', '\\u22db', 'mrel', 'ams');\ndefineSymbol('\\\\gtreqqless', '\\u2a8c', 'mrel', 'ams');\ndefineSymbol('\\\\supseteqq', '\\u2ac6', 'mrel', 'ams');\ndefineSymbol('\\\\Supset', '\\u22d1', 'mrel', 'ams');\ndefineSymbol('\\\\sqsupset', '\\u2290', 'mrel', 'ams');\ndefineSymbol('\\\\succcurlyeq', '\\u227d', 'mrel', 'ams');\ndefineSymbol('\\\\curlyeqsucc', '\\u22df', 'mrel', 'ams');\ndefineSymbol('\\\\Vdash', '\\u22a9', 'mrel', 'ams');\ndefineSymbol('\\\\shortmid', '\\u2223', 'mrel', 'ams');\ndefineSymbol('\\\\between', '\\u226c', 'mrel', 'ams');\ndefineSymbol('\\\\pitchfork', '\\u22d4', 'mrel', 'ams');\ndefineSymbol('\\\\varpropto', '\\u221d', 'mrel', 'ams');\ndefineSymbol('\\\\backepsilon', '\\u220d', 'mrel', 'ams');\ndefineSymbol('\\\\llless', '\\u22d8', 'mrel', 'ams');\ndefineSymbol('\\\\gggtr', '\\u22d9', 'mrel', 'ams');\ndefineSymbol('\\\\lhd', '\\u22b2', 'mbin', 'ams');\ndefineSymbol('\\\\rhd', '\\u22b3', 'mbin', 'ams');\ndefineSymbol('\\\\doteq', '\\u2250', 'mrel');\ndefineSymbol('\\\\doteqdot', '\\u2251', 'mrel', 'ams');\ndefineSymbol('\\\\Doteq', '\\u2251', 'mrel', 'ams');\ndefineSymbol('\\\\eqcirc', '\\u2256', 'mrel', 'ams');\ndefineSymbol('\\\\circeq', '\\u2257', 'mrel', 'ams');\ndefineSymbol('\\\\lessdot', '\\u22d6', 'mbin', 'ams');\ndefineSymbol('\\\\gtrdot', '\\u22d7', 'mbin', 'ams'); // In TeX, '~' is a spacing command (non-breaking space).\n// However, '~' is used as an ASCII Math shortctut character, so define a \\\\~\n// command which maps to the '~' character\n\ndefineSymbol('\\\\~', '~', 'mrel');\ndefineSymbol('\\\\leftrightarrow', '\\u2194', 'mrel');\ndefineSymbol('\\\\Leftrightarrow', '\\u21d4', 'mrel');\ndefineSymbol('\\\\models', '\\u22a8', 'mrel');\ndefineSymbol('\\\\vdash', '\\u22a2', 'mrel');\ndefineSymbol('\\\\therefore', '\\u2234', 'mrel', 'ams');\ndefineSymbol('\\\\because', '\\u2235', 'mrel', 'ams');\ndefineSymbol('\\\\dashv', '\\u22a3', 'mrel');\ndefineSymbol('\\\\roundimplies', '\\u2970', 'mrel'); // 'ams' Binary Operators\n\ndefineSymbol('+', '+', 'mbin');\ndefineSymbol('-', '\\u2212', 'mbin');\ndefineSymbol('\\u2212', '\\u2212', 'mbin');\ndefineSymbol('\\\\pm', '\\u00b1', 'mbin');\ndefineSymbol('\\\\mp', '\\u2213', 'mbin');\ndefineSymbol('*', '\\u2217', 'mbin');\ndefineSymbol('\\\\times', '\\u00d7', 'mbin');\ndefineSymbol('\\\\div', '\\u00f7', 'mbin');\ndefineSymbol('\\\\surd', '\\u221a');\ndefineSymbol('\\\\divides', '\\u2223', 'mbin'); // From MnSymbol package\n\ndefineSymbol('\\\\ltimes', '\\u22c9', 'mbin', 'ams');\ndefineSymbol('\\\\rtimes', '\\u22ca', 'mbin', 'ams');\ndefineSymbol('\\\\leftthreetimes', '\\u22cb', 'mbin', 'ams');\ndefineSymbol('\\\\rightthreetimes', '\\u22cc', 'mbin', 'ams');\ndefineSymbol('\\\\intercal', '\\u22ba', 'mbin', 'ams');\ndefineSymbol('\\\\dotplus', '\\u2214', 'mbin', 'ams');\ndefineSymbol('\\\\doublebarwedge', '\\u2a5e', 'mbin', 'ams');\ndefineSymbol('\\\\divideontimes', '\\u22c7', 'mbin', 'ams');\ndefineSymbol('\\\\centerdot', '\\u22c5', 'mbin', 'ams');\ndefineSymbol('\\\\cdot', '\\u22c5', 'mbin');\ndefineSymbol('\\\\infty', '\\u221e');\ndefineSymbol('\\\\prime', '\\u2032');\ndefineSymbol('\\\\doubleprime', '\\u2033'); // NOTE: Not in TeX, but Mathematica\n\ndefineSymbol('\\\\angle', '\\u2220');\ndefineSymbol('`', '\\u2018');\ndefineSymbol('\\\\$', '$');\ndefineSymbol('\\\\%', '%');\ndefineSymbol('\\\\_', '_'); // Note: In TeX, greek symbols are only available in Math mode\n\ndefineSymbol('\\\\alpha', '\\u03b1');\ndefineSymbol('\\\\beta', '\\u03b2');\ndefineSymbol('\\\\gamma', '\\u03b3');\ndefineSymbol('\\\\delta', '\\u03b4');\ndefineSymbol('\\\\epsilon', '\\u03f5');\ndefineSymbol('\\\\varepsilon', '\\u03b5');\ndefineSymbol('\\\\zeta', '\\u03b6');\ndefineSymbol('\\\\eta', '\\u03b7');\ndefineSymbol('\\\\theta', '\\u03b8');\ndefineSymbol('\\\\vartheta', '\\u03d1');\ndefineSymbol('\\\\iota', '\\u03b9');\ndefineSymbol('\\\\kappa', '\\u03ba');\ndefineSymbol('\\\\varkappa', '\\u03f0', 'mord', 'ams');\ndefineSymbol('\\\\lambda', '\\u03bb');\ndefineSymbol('\\\\mu', '\\u03bc');\ndefineSymbol('\\\\nu', '\\u03bd');\ndefineSymbol('\\\\xi', '\\u03be');\ndefineSymbol('\\\\omicron', 'o');\ndefineSymbol('\\\\pi', '\\u03c0');\ndefineSymbol('\\\\varpi', '\\u03d6');\ndefineSymbol('\\\\rho', '\\u03c1');\ndefineSymbol('\\\\varrho', '\\u03f1');\ndefineSymbol('\\\\sigma', '\\u03c3');\ndefineSymbol('\\\\varsigma', '\\u03c2');\ndefineSymbol('\\\\tau', '\\u03c4');\ndefineSymbol('\\\\phi', '\\u03d5');\ndefineSymbol('\\\\varphi', '\\u03c6');\ndefineSymbol('\\\\upsilon', '\\u03c5');\ndefineSymbol('\\\\chi', '\\u03c7');\ndefineSymbol('\\\\psi', '\\u03c8');\ndefineSymbol('\\\\omega', '\\u03c9');\ndefineSymbol('\\\\Gamma', '\\u0393');\ndefineSymbol('\\\\Delta', '\\u0394');\ndefineSymbol('\\\\Theta', '\\u0398');\ndefineSymbol('\\\\Lambda', '\\u039b');\ndefineSymbol('\\\\Xi', '\\u039e');\ndefineSymbol('\\\\Pi', '\\u03a0');\ndefineSymbol('\\\\Sigma', '\\u03a3');\ndefineSymbol('\\\\Upsilon', '\\u03a5');\ndefineSymbol('\\\\Phi', '\\u03a6');\ndefineSymbol('\\\\Psi', '\\u03a8');\ndefineSymbol('\\\\Omega', '\\u03a9'); // 'ams' Greek\n\ndefineSymbol('\\\\digamma', '\\u03dd', 'mord', 'ams');\ndefineSymbol('\\\\emptyset', '\\u2205');\ndefineSymbol('\\\\varnothing', '\\u2205', 'mord', 'ams');\ndefineSymbol('\\\\cap', '\\u2229', 'mbin');\ndefineSymbol('\\\\cup', '\\u222a', 'mbin');\ndefineSymbol('\\\\setminus', '\\u2216', 'mbin');\ndefineSymbol('\\\\smallsetminus', '\\u2216', 'mbin', 'ams');\ndefineSymbol('\\\\complement', '\\u2201', 'mord', 'ams');\ndefineSymbol('\\\\in', '\\u2208', 'mrel');\ndefineSymbol('\\\\notin', '\\u2209', 'mrel');\ndefineSymbol('\\\\not', '\\u0338', 'mrel');\ndefineSymbol('\\\\ni', '\\u220b', 'mrel');\ndefineSymbol('\\\\owns', '\\u220b', 'mrel');\ndefineSymbol('\\\\subset', '\\u2282', 'mrel');\ndefineSymbol('\\\\supset', '\\u2283', 'mrel');\ndefineSymbol('\\\\subseteq', '\\u2286', 'mrel');\ndefineSymbol('\\\\supseteq', '\\u2287', 'mrel');\ndefineSymbol('\\\\subsetneq', '\\u228a', 'mrel', 'ams');\ndefineSymbol('\\\\varsubsetneq', '\\ue01a', 'mrel', 'ams');\ndefineSymbol('\\\\subsetneqq', '\\u2acb', 'mrel', 'ams');\ndefineSymbol('\\\\varsubsetneqq', '\\ue017', 'mrel', 'ams');\ndefineSymbol('\\\\nsubset', '\\u2284', 'mrel', 'ams'); // NOTE: Not TeX?\n\ndefineSymbol('\\\\nsupset', '\\u2285', 'mrel', 'ams'); // NOTE: Not TeX?\n\ndefineSymbol('\\\\nsubseteq', '\\u2288', 'mrel', 'ams');\ndefineSymbol('\\\\nsupseteq', '\\u2289', 'mrel', 'ams'); // See http://tex.stackexchange.com/questions/41476/lengths-and-when-to-use-them\n\ndefineSymbol('\\\\ ', '\\u00a0', 'spacing');\ndefineSymbol('~', '\\u00a0', 'spacing');\ndefineSymbol('\\\\space', '\\u00a0', 'spacing');\ndefineSymbol('\\\\!', null, 'spacing');\ndefineSymbol('\\\\,', null, 'spacing');\ndefineSymbol('\\\\:', null, 'spacing');\ndefineSymbol('\\\\;', null, 'spacing');\ndefineSymbol('\\\\enskip', null, 'spacing'); // \\enspace is a TeX command (not LaTeX) equivalent to a \\skip\n\ndefineSymbol('\\\\enspace', null, 'spacing');\ndefineSymbol('\\\\quad', null, 'spacing');\ndefineSymbol('\\\\qquad', null, 'spacing'); // Punctuation\n\ndefineSymbol('\\\\colon', ':', 'mpunct');\ndefineSymbol('\\\\cdotp', '\\u22c5', 'mpunct');\ndefineSymbol('\\\\cdots', '\\u22ef', 'minner');\ndefineSymbol('\\\\ddots', '\\u22f1', 'minner');\ndefineSymbol('\\\\ldots', '\\u2026', 'minner');\ndefineSymbol('\\\\mathellipsis', '\\u2026', 'minner');\ndefineSymbol('\\\\vdots', '\\u22ee');\ndefineSymbol('\\\\ldotp', '\\u002e', 'mpunct');\ndefineSymbol(',', ',', 'mpunct');\ndefineSymbol(';', ';', 'mpunct');\ndefineSymbol('\\\\land', '\\u2227', 'mbin');\ndefineSymbol('\\\\wedge', '\\u2227', 'mbin');\ndefineSymbol('\\\\lor', '\\u2228', 'mbin');\ndefineSymbol('\\\\vee', '\\u2228', 'mbin');\ndefineSymbol('\\\\lnot', '\\u00ac');\ndefineSymbol('\\\\neg', '\\u00ac');\ndefineSymbol('\\\\barwedge', '\\u22bc', 'mbin', 'ams');\ndefineSymbol('\\\\veebar', '\\u22bb', 'mbin', 'ams');\ndefineSymbol('\\\\nor', '\\u22bb', 'mbin', 'ams'); // NOTE: Not TeX, Mathematica\n\ndefineSymbol('\\\\curlywedge', '\\u22cf', 'mbin', 'ams');\ndefineSymbol('\\\\curlyvee', '\\u22ce', 'mbin', 'ams');\ndefineSymbol('\\\\square', '\\u25a1', 'mord', 'ams');\ndefineSymbol('\\\\Box', '\\u25a1', 'mord', 'ams');\ndefineSymbol('\\\\blacksquare', '\\u25a0', 'mord', 'ams');\ndefineSymbol('\\\\boxminus', '\\u229f', 'mbin', 'ams');\ndefineSymbol('\\\\boxplus', '\\u229e', 'mbin', 'ams');\ndefineSymbol('\\\\boxtimes', '\\u22a0', 'mbin', 'ams');\ndefineSymbol('\\\\boxdot', '\\u22a1', 'mbin', 'ams');\ndefineSymbol('\\\\circ', '\\u2218', 'mbin');\ndefineSymbol('\\\\bigcirc', '\\u25ef', 'mbin');\ndefineSymbol('\\\\bullet', '\\u2219', 'mbin');\ndefineSymbol('\\\\circleddash', '\\u229d', 'mbin', 'ams');\ndefineSymbol('\\\\circledast', '\\u229b', 'mbin', 'ams');\ndefineSymbol('\\\\oplus', '\\u2295', 'mbin');\ndefineSymbol('\\\\ominus', '\\u2296', 'mbin');\ndefineSymbol('\\\\otimes', '\\u2297', 'mbin');\ndefineSymbol('\\\\odot', '\\u2299', 'mbin');\ndefineSymbol('\\\\circledcirc', '\\u229a', 'mbin', 'ams');\ndefineSymbol('\\\\oslash', '\\u2298', 'mbin');\ndefineSymbol('\\\\circledS', '\\u24c8', 'mord', 'ams');\ndefineSymbol('\\\\circledR', '\\u00ae', 'mord', 'ams');\ndefineSymbol('\\\\triangle', '\\u25b3');\ndefineSymbol('\\\\bigtriangleup', '\\u25b3', 'mbin');\ndefineSymbol('\\\\vartriangle', '\\u25b3', 'mrel', 'ams');\ndefineSymbol('\\\\triangleq', '\\u225c', 'mrel', 'ams');\ndefineSymbol('\\\\triangledown', '\\u25bd', 'mord', 'ams');\ndefineSymbol('\\\\bigtriangledown', '\\u25bd', 'mbin');\ndefineSymbol('\\\\triangleleft', '\\u25c3', 'mbin');\ndefineSymbol('\\\\vartriangleleft', '\\u22b2', 'mrel', 'ams');\ndefineSymbol('\\\\trianglelefteq', '\\u22b4', 'mrel', 'ams');\ndefineSymbol('\\\\ntriangleleft', '\\u22ea', 'mrel', 'ams');\ndefineSymbol('\\\\ntrianglelefteq', '\\u22ec', 'mrel', 'ams');\ndefineSymbol('\\\\triangleright', '\\u25b9', 'mbin');\ndefineSymbol('\\\\vartriangleright', '\\u22b3', 'mrel', 'ams');\ndefineSymbol('\\\\trianglerighteq', '\\u22b5', 'mrel', 'ams');\ndefineSymbol('\\\\ntriangleright', '\\u22eb', 'mrel', 'ams');\ndefineSymbol('\\\\ntrianglerighteq', '\\u22ed', 'mrel', 'ams');\ndefineSymbol('\\\\blacktriangle', '\\u25b2', 'mord', 'ams');\ndefineSymbol('\\\\blacktriangledown', '\\u25bc', 'mord', 'ams');\ndefineSymbol('\\\\blacktriangleleft', '\\u25c0', 'mrel', 'ams');\ndefineSymbol('\\\\blacktriangleright', '\\u25b6', 'mrel', 'ams');\ndefineSymbol('\\\\/', '/');\ndefineSymbol('|', '\\u2223', 'textord');\ndefineSymbol('\\\\And', '\\u0026', 'mbin');\ndefineSymbol('\\\\imath', '\\u0131');\ndefineSymbol('\\\\jmath', '\\u0237');\ndefineSymbol('\\\\degree', '\\u00b0');\ndefineSymbol(\"'\", '\\u2032'); // Prime\n\ndefineSymbol('\"', '\\u201D'); // Double Prime\n// defineSymbol( \"\\'', '\\u2033',  'mord',  MAIN);       // Double Prime\n\n/**\r\n * This module deals with creating delimiters of various sizes. The TeXbook\r\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\r\n * x to a specified variable delimiter\" paragraph.\r\n *\r\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\r\n * normal font, but in either text, script, or scriptscript style.\r\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\r\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\r\n * smaller pieces that are stacked on top of one another.\r\n *\r\n * The functions take a parameter `center`, which determines if the delimiter\r\n * should be centered around the axis.\r\n *\r\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\r\n * one of the given sizes. This is used for things like `\\bigl`.\r\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\r\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\r\n * delimiter which surrounds an expression of a given height an depth. It is\r\n * used in `\\left` and `\\right`.\r\n * @summary   Handling of delimiters surrounds symbols.\r\n */\n\n/**\r\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\r\n * font, but is restyled to either be in textstyle, scriptstyle, or\r\n * scriptscriptstyle.\r\n */\n\nfunction makeSmallDelim(type, delim, style, center, context, classes = '') {\n  const text = makeSymbol('Main-Regular', getValue(delim));\n  const span = makeStyleWrap(type, text, context.mathstyle, style, classes);\n\n  if (center) {\n    span.setTop((1 - context.mathstyle.sizeMultiplier / style.sizeMultiplier) * context.mathstyle.metrics.axisHeight);\n  }\n\n  span.setStyle('color', context.color);\n\n  if (typeof context.opacity === 'number') {\n    span.setStyle('opacity', context.opacity);\n  }\n\n  return span;\n}\n/**\r\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\r\n * Size3, or Size4 fonts. It is always rendered in textstyle.\r\n */\n\n\nfunction makeLargeDelim(type, delim, size, center, context, classes = '') {\n  const result = makeStyleWrap(type, makeSymbol('Size' + size + '-Regular', getValue(delim), 'delimsizing size' + size), context.mathstyle, MATHSTYLES.textstyle, classes);\n\n  if (center) {\n    result.setTop((1 - context.mathstyle.sizeMultiplier) * context.mathstyle.metrics.axisHeight);\n  }\n\n  result.setStyle('color', context.color);\n\n  if (typeof context.opacity === 'number') {\n    result.setStyle('opacity', context.opacity);\n  }\n\n  return result;\n}\n/**\r\n * Make an inner span with the given offset and in the given font. This is used\r\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\r\n */\n\n\nfunction makeInner(symbol, font) {\n  let sizeClass = ''; // Apply the correct CSS class to choose the right font.\n\n  if (font === 'Size1-Regular') {\n    sizeClass = ' delim-size1';\n  } else if (font === 'Size4-Regular') {\n    sizeClass = ' delim-size4';\n  }\n\n  return makeSymbol(font, getValue(symbol), 'delimsizinginner' + sizeClass);\n}\n/**\r\n * Make a stacked delimiter out of a given delimiter, with the total height at\r\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\r\n */\n\n\nfunction makeStackedDelim(type, delim, heightTotal, center, context, classes = '') {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  let top;\n  let middle;\n  let repeat;\n  let bottom;\n  top = repeat = bottom = getValue(delim);\n  middle = null; // Also keep track of what font the delimiters are in\n\n  let font = 'Size1-Regular'; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === '\\\\vert' || delim === '\\\\lvert' || delim === '\\\\rvert' || delim === '\\\\mvert' || delim === '\\\\mid') {\n    repeat = top = bottom = '\\u2223';\n  } else if (delim === '\\\\Vert' || delim === '\\\\lVert' || delim === '\\\\rVert' || delim === '\\\\mVert' || delim === '\\\\|') {\n    repeat = top = bottom = '\\u2225';\n  } else if (delim === '\\\\uparrow') {\n    repeat = bottom = '\\u23d0';\n  } else if (delim === '\\\\Uparrow') {\n    repeat = bottom = '\\u2016';\n  } else if (delim === '\\\\downarrow') {\n    top = repeat = '\\u23d0';\n  } else if (delim === '\\\\Downarrow') {\n    top = repeat = '\\u2016';\n  } else if (delim === '\\\\updownarrow') {\n    top = '\\u2191';\n    repeat = '\\u23d0';\n    bottom = '\\u2193';\n  } else if (delim === '\\\\Updownarrow') {\n    top = '\\u21d1';\n    repeat = '\\u2016';\n    bottom = '\\u21d3';\n  } else if (delim === '[' || delim === '\\\\lbrack') {\n    top = '\\u23a1';\n    repeat = '\\u23a2';\n    bottom = '\\u23a3';\n    font = 'Size4-Regular';\n  } else if (delim === ']' || delim === '\\\\rbrack') {\n    top = '\\u23a4';\n    repeat = '\\u23a5';\n    bottom = '\\u23a6';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\lfloor') {\n    repeat = top = '\\u23a2';\n    bottom = '\\u23a3';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\lceil') {\n    top = '\\u23a1';\n    repeat = bottom = '\\u23a2';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\rfloor') {\n    repeat = top = '\\u23a5';\n    bottom = '\\u23a6';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\rceil') {\n    top = '\\u23a4';\n    repeat = bottom = '\\u23a5';\n    font = 'Size4-Regular';\n  } else if (delim === '(') {\n    top = '\\u239b';\n    repeat = '\\u239c';\n    bottom = '\\u239d';\n    font = 'Size4-Regular';\n  } else if (delim === ')') {\n    top = '\\u239e';\n    repeat = '\\u239f';\n    bottom = '\\u23a0';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\{' || delim === '\\\\lbrace') {\n    top = '\\u23a7';\n    middle = '\\u23a8';\n    bottom = '\\u23a9';\n    repeat = '\\u23aa';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\}' || delim === '\\\\rbrace') {\n    top = '\\u23ab';\n    middle = '\\u23ac';\n    bottom = '\\u23ad';\n    repeat = '\\u23aa';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\lgroup') {\n    top = '\\u23a7';\n    bottom = '\\u23a9';\n    repeat = '\\u23aa';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\rgroup') {\n    top = '\\u23ab';\n    bottom = '\\u23ad';\n    repeat = '\\u23aa';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\lmoustache') {\n    top = '\\u23a7';\n    bottom = '\\u23ad';\n    repeat = '\\u23aa';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\rmoustache') {\n    top = '\\u23ab';\n    bottom = '\\u23a9';\n    repeat = '\\u23aa';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\surd') {\n    top = '\\ue001';\n    bottom = '\\u23b7';\n    repeat = '\\ue000';\n    font = 'Size4-Regular';\n  } else if (delim === '\\\\ulcorner') {\n    top = '\\u250c';\n    repeat = bottom = ' ';\n  } else if (delim === '\\\\urcorner') {\n    top = '\\u2510';\n    repeat = bottom = ' ';\n  } else if (delim === '\\\\llcorner') {\n    bottom = '\\u2514';\n    repeat = top = ' ';\n  } else if (delim === '\\\\lrcorner') {\n    top = '\\u2518';\n    repeat = top = ' ';\n  } // Get the metrics of the four sections\n\n\n  const topMetrics = getCharacterMetrics(getValue(top), font);\n  const topHeightTotal = topMetrics.height + topMetrics.depth;\n  const repeatMetrics = getCharacterMetrics(getValue(repeat), font);\n  const repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  const bottomMetrics = getCharacterMetrics(getValue(bottom), font);\n  const bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  let middleHeightTotal = 0;\n  let middleFactor = 1;\n\n  if (middle !== null) {\n    const middleMetrics = getCharacterMetrics(getValue(middle), font);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calculate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  const minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  const repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)); // Compute the total height of the delimiter including all the symbols\n\n  const realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, 'center' means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  let axisHeight = context.mathstyle.metrics.axisHeight;\n\n  if (center) {\n    axisHeight *= context.mathstyle.sizeMultiplier;\n  } // Calculate the depth\n\n\n  const depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the inner pieces\n\n  const inners = []; // Add the bottom symbol\n\n  inners.push(makeInner(bottom, font));\n\n  if (middle === null) {\n    // Add that many symbols\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(makeInner(repeat, font));\n    }\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(makeInner(repeat, font));\n    }\n\n    inners.push(makeInner(middle, font));\n\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(makeInner(repeat, font));\n    }\n  } // Add the top symbol\n\n\n  inners.push(makeInner(top, font)); // Finally, build the vlist\n\n  const inner = makeVlist(context, inners, 'bottom', depth);\n  inner.setStyle('color', context.color);\n\n  if (typeof context.opacity === 'number') {\n    inner.setStyle('opacity', context.opacity);\n  }\n\n  return makeStyleWrap(type, makeSpan(inner, 'delimsizing mult'), context.mathstyle, MATHSTYLES.textstyle, classes);\n} // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nconst stackLargeDelimiters = ['(', ')', '[', '\\\\lbrack', ']', '\\\\rbrack', '\\\\{', '\\\\lbrace', '\\\\}', '\\\\rbrace', '\\\\lfloor', '\\\\rfloor', '\\\\lceil', '\\\\rceil', '\\\\surd']; // delimiters that always stack\n\nconst stackAlwaysDelimiters = ['\\\\uparrow', '\\\\downarrow', '\\\\updownarrow', '\\\\Uparrow', '\\\\Downarrow', '\\\\Updownarrow', '|', '\\\\|', '\\\\vert', '\\\\Vert', '\\\\lvert', '\\\\rvert', '\\\\lVert', '\\\\rVert', '\\\\mvert', '\\\\mid', '\\\\lgroup', '\\\\rgroup', '\\\\lmoustache', '\\\\rmoustache']; // and delimiters that never stack\n\nconst stackNeverDelimiters = ['<', '>', '\\\\langle', '\\\\rangle', '/', '\\\\backslash', '\\\\lt', '\\\\gt']; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\r\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\r\n */\n\nfunction makeSizedDelim(type, delim, size, context, classes = '') {\n  if (delim === '.') {\n    // Empty delimiters still count as elements, even though they don't\n    // show anything.\n    return makeNullFence(type, context, classes); // return makeSpan('', classes);\n  } // < and > turn into \\langle and \\rangle in delimiters\n\n\n  if (delim === '<' || delim === '\\\\lt') {\n    delim = '\\\\langle';\n  } else if (delim === '>' || delim === '\\\\gt') {\n    delim = '\\\\rangle';\n  } // Sized delimiters are never centered.\n\n\n  if (stackLargeDelimiters.includes(delim) || stackNeverDelimiters.includes(delim)) {\n    return makeLargeDelim(type, delim, size, false, context, classes);\n  } else if (stackAlwaysDelimiters.includes(delim)) {\n    return makeStackedDelim(type, delim, sizeToMaxHeight[size], false, context, classes);\n  }\n\n  console.assert(false, \"Unknown delimiter '\" + delim + \"'\");\n  return null;\n} // Delimiters that never stack try small delimiters and large delimiters only\n\n\nconst stackNeverDelimiterSequence = [{\n  type: 'small',\n  mathstyle: MATHSTYLES.scriptscriptstyle\n}, {\n  type: 'small',\n  mathstyle: MATHSTYLES.scriptstyle\n}, {\n  type: 'small',\n  mathstyle: MATHSTYLES.textstyle\n}, {\n  type: 'large',\n  size: 1\n}, {\n  type: 'large',\n  size: 2\n}, {\n  type: 'large',\n  size: 3\n}, {\n  type: 'large',\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nconst stackAlwaysDelimiterSequence = [{\n  type: 'small',\n  mathstyle: MATHSTYLES.scriptscriptstyle\n}, {\n  type: 'small',\n  mathstyle: MATHSTYLES.scriptstyle\n}, {\n  type: 'small',\n  mathstyle: MATHSTYLES.textstyle\n}, {\n  type: 'stack'\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nconst stackLargeDelimiterSequence = [{\n  type: 'small',\n  mathstyle: MATHSTYLES.scriptscriptstyle\n}, {\n  type: 'small',\n  mathstyle: MATHSTYLES.scriptstyle\n}, {\n  type: 'small',\n  mathstyle: MATHSTYLES.textstyle\n}, {\n  type: 'large',\n  size: 1\n}, {\n  type: 'large',\n  size: 2\n}, {\n  type: 'large',\n  size: 3\n}, {\n  type: 'large',\n  size: 4\n}, {\n  type: 'stack'\n}];\n/*\r\n * Get the font used in a delimiter based on what kind of delimiter it is.\r\n */\n\nfunction delimTypeToFont(info) {\n  if (info.type === 'small') {\n    return 'Main-Regular';\n  } else if (info.type === 'large') {\n    return 'Size' + info.size + '-Regular';\n  }\n\n  console.assert(info.type === 'stack');\n  return 'Size4-Regular';\n}\n/**\r\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\r\n * should be used to create a delimiter of the given height+depth.\r\n * @param delim - a character value (not a command)\r\n */\n\n\nfunction traverseSequence(delim, height, sequence, context) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  const start = Math.min(2, 3 - context.mathstyle.size);\n\n  for (let i = start; i < sequence.length; i++) {\n    if (sequence[i].type === 'stack') {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    const metrics = getCharacterMetrics(delim, delimTypeToFont(sequence[i]));\n\n    if (metrics.defaultMetrics) {\n      // If we don't have metrics info for this character,\n      // assume we'll construct as a small delimiter\n      return {\n        type: 'small',\n        mathstyle: MATHSTYLES.scriptstyle\n      };\n    }\n\n    let heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === 'small') {\n      heightDepth *= sequence[i].mathstyle.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n}\n/**\r\n * Make a delimiter of a given height+depth, with optional centering. Here, we\r\n * traverse the sequences, and create a delimiter that the sequence tells us to.\r\n *\r\n * @param type - 'mopen' or 'mclose'\r\n */\n\n\nfunction makeCustomSizedDelim(type, delim, height, center, context, classes = '') {\n  if (!delim || delim.length === 0 || delim === '.') {\n    return makeNullFence(type, context, type);\n  }\n\n  if (delim === '<' || delim === '\\\\lt') {\n    delim = '\\\\langle';\n  } else if (delim === '>' || delim === '\\\\gt') {\n    delim = '\\\\rangle';\n  } // Decide what sequence to use\n\n\n  let sequence;\n\n  if (stackNeverDelimiters.includes(delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (stackLargeDelimiters.includes(delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  const delimType = traverseSequence(getValue(delim), height, sequence, context); // Depending on the sequence element we decided on,\n  // call the appropriate function.\n\n  if (delimType.type === 'small') {\n    return makeSmallDelim(type, delim, delimType.mathstyle, center, context, 'ML__small-delim ' + classes);\n  }\n\n  if (delimType.type === 'large') {\n    return makeLargeDelim(type, delim, delimType.size, center, context, classes);\n  }\n\n  console.assert(delimType.type === 'stack');\n  return makeStackedDelim(type, delim, height, center, context, classes);\n}\n/**\r\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\r\n * of an expression that the delimiters surround.\r\n * See tex.web:14994\r\n */\n\n\nfunction makeLeftRightDelim(type, delim, height, depth, context, classes = '') {\n  // If this is the empty delimiter, return a null fence\n  if (delim === '.') {\n    return makeNullFence(type, context, classes);\n  } // We always center \\left/\\right delimiters, so the axis is always shifted\n\n\n  const axisHeight = context.mathstyle.metrics.axisHeight * context.mathstyle.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  const delimiterFactor = 901; // plain.tex:327, texboox:152\n\n  const delimiterShortfall = 5.0 / METRICS.ptPerEm; // plain.tex:345, texboox:152\n\n  const maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  const totalHeight = Math.max(maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterShortfall); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(type, delim, totalHeight, true, context, classes);\n}\n/**\r\n *\r\n * @param type either 'mopen', 'mclose' or null\r\n */\n\n\nfunction makeNullFence(type, context, classes) {\n  return makeSpan('', 'sizing' + // @todo not useful, redundant with 'nulldelimiter'\n  // 'reset-' + context.size, 'size5',\n  // @todo: that seems like a lot of resizing... do we need both?\n  context.mathstyle.adjustTo(MATHSTYLES.textstyle) + ' nulldelimiter ' + ( // The null delimiter has a width, specified by class 'nulldelimiter'\n  classes || ''), type);\n}\n\nfunction stringToCodepoints(str) {\n  const result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    let code = str.charCodeAt(i);\n\n    if (code === 0x0d && str.charCodeAt(i + 1) === 0x0a) {\n      code = 0x0a;\n      i++;\n    }\n\n    if (code === 0x0d || code === 0x0c) code = 0x0a;\n    if (code === 0x00) code = 0xfffd; // Decode a surrogate pair into an astral codepoint.\n\n    if (code >= 0xd800 && code <= 0xdbff) {\n      const nextCode = str.charCodeAt(i + 1);\n\n      if (nextCode >= 0xdc00 && nextCode <= 0xdfff) {\n        const lead = code - 0xd800;\n        const trail = nextCode - 0xdc00;\n        code = Math.pow(2, 16) + lead * Math.pow(2, 10) + trail; // N = ((H - 0xD800) * 0x400) + (L - 0xDC00) + 0x10000;\n\n        i++;\n      }\n    }\n\n    result.push(code);\n  }\n\n  return result;\n}\n\nconst ZWJ = 0x200d; // Zero-width joiner\n// const ZWSP = 0x200b; // Zero-width space\n\n/* The following codepoints should combine with the previous ones */\n\nconst EMOJI_COMBINATOR = [[ZWJ, 1], [0xfe0e, 2], [0x1f3fb, 5], [0x1f9b0, 4], [0xe0020, 96]];\nlet emojiCombinator; // Regional indicator: a pair of codepoints indicating some flags\n\nconst REGIONAL_INDICATOR = [0x1f1e6, 0x1f1ff];\n\nfunction isEmojiCombinator(code) {\n  var _a;\n\n  if (typeof emojiCombinator === 'undefined') {\n    emojiCombinator = {};\n    EMOJI_COMBINATOR.forEach(x => {\n      for (let i = x[0]; i <= x[0] + x[1] - 1; i++) {\n        emojiCombinator[i] = true;\n      }\n    });\n  }\n\n  return (_a = emojiCombinator[code]) !== null && _a !== void 0 ? _a : false;\n}\n\nfunction isRegionalIndicator(code) {\n  return code >= REGIONAL_INDICATOR[0] && code <= REGIONAL_INDICATOR[1];\n}\n/**\r\n * Return a string or an array of graphemes.\r\n * This includes:\r\n * - emoji with skin and hair modifiers\r\n * - emoji combination (for example \"female pilot\")\r\n * - text emoji with an emoji presentation style modifier\r\n *      - U+1F512 U+FE0E 🔒︎\r\n *      - U+1F512 U+FE0F 🔒️\r\n * - flags represented as two regional indicator codepoints\r\n * - flags represented as a flag emoji + zwj + an emoji tag\r\n * - other combinations (for example, rainbow flag)\r\n */\n\n\nfunction splitGraphemes(str) {\n  // If it's all ASCII, short-circuit the grapheme splitting...\n  if (/^[\\x20-\\xFF]*$/.test(str)) return str;\n  const result = [];\n  const codePoints = stringToCodepoints(str);\n  let index = 0;\n\n  while (index < codePoints.length) {\n    const code = codePoints[index++];\n    const next = codePoints[index]; // Combine sequences\n\n    if (next === ZWJ) {\n      // Zero-width joiner sequences are:\n      // ZWJ_SEQUENCE := (CHAR + ZWJ)+\n      const baseIndex = index - 1;\n      index += 2;\n\n      while (codePoints[index] === ZWJ) {\n        index += 2;\n      }\n\n      result.push(String.fromCodePoint(...codePoints.slice(baseIndex, index - baseIndex + 1)));\n    } else if (isEmojiCombinator(next)) {\n      // Combine emoji sequences\n      // See http://unicode.org/reports/tr51/#def_emoji_tag_sequence\n      const baseIndex = index - 1; // The previous character is the 'base'\n\n      while (isEmojiCombinator(codePoints[index])) {\n        index += codePoints[index] === ZWJ ? 2 : 1;\n      }\n\n      result.push(String.fromCodePoint(...codePoints.slice(baseIndex, index - baseIndex)));\n    } else if (isRegionalIndicator(code)) {\n      // Some (but not all) flags are represented by a sequence of two\n      // \"regional indicators\" codepoints.\n      index += 1;\n      result.push(String.fromCodePoint(...codePoints.slice(index - 2, 2)));\n    } else {\n      result.push(String.fromCodePoint(code));\n    }\n  }\n\n  return result;\n}\n/**\r\n * ## Reference\r\n * TeX source code:\r\n * {@link  http://tug.org/texlive/devsrc/Build/source/texk/web2c/tex.web | Tex.web}\r\n *\r\n */\n\n/**\r\n * Given a LaTeX expression represented as a character string,\r\n * the Lexer class will scan and return Tokens for the lexical\r\n * units in the string.\r\n *\r\n * @param s A string of LaTeX\r\n */\n\n\nclass Tokenizer {\n  constructor(s) {\n    this.obeyspaces = false;\n    this.s = splitGraphemes(s);\n    this.pos = 0;\n  }\n  /**\r\n   * @return True if we reached the end of the stream\r\n   */\n\n\n  end() {\n    return this.pos >= this.s.length;\n  }\n  /**\r\n   * Return the next char and advance\r\n   */\n\n\n  get() {\n    return this.pos < this.s.length ? this.s[this.pos++] : '';\n  }\n  /**\r\n   * Return the next char, but do not advance\r\n   */\n\n\n  peek() {\n    return this.s[this.pos];\n  }\n  /**\r\n   * Return the next substring matching regEx and advance.\r\n   */\n\n\n  match(regEx) {\n    // this.s can either be a string, if it's made up only of ASCII chars\n    // or an array of graphemes, if it's more complicated.\n    let execResult;\n\n    if (typeof this.s === 'string') {\n      execResult = regEx.exec(this.s.slice(this.pos));\n    } else {\n      execResult = regEx.exec(this.s.slice(this.pos).join(''));\n    }\n\n    if (execResult === null || execResult === void 0 ? void 0 : execResult[0]) {\n      this.pos += execResult[0].length;\n      return execResult[0];\n    }\n\n    return null;\n  }\n  /**\r\n   * Return the next token, or null.\r\n   */\n\n\n  next() {\n    // If we've reached the end, exit\n    if (this.end()) return null; // Handle white space\n    // In text mode, spaces are significant,\n    // however they are coalesced unless \\obeyspaces\n\n    if (!this.obeyspaces && this.match(/^[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]+/)) {\n      // Note that browsers are inconsistent in their definitions of the\n      // `\\s` metacharacter, so we use an explicit pattern instead.\n      // - IE:          `[ \\f\\n\\r\\t\\v]`\n      // - Chrome:      `[ \\f\\n\\r\\t\\v\\u00A0]`\n      // - Firefox:     `[ \\f\\n\\r\\t\\v\\u00A0\\u2028\\u2029]`\n      // - \\f \\u000C: form feed (FORM FEED)\n      // - \\n \\u000A: linefeed (LINE FEED)\n      // - \\r \\u000D: carriage return\n      // - \\t \\u0009: tab (CHARACTER TABULATION)\n      // - \\v \\u000B: vertical tab (LINE TABULATION)\n      // - \\u00A0: NON-BREAKING SPACE\n      // - \\u2028: LINE SEPARATOR\n      // - \\u2029: PARAGRAPH SEPARATOR\n      return '<space>';\n    } else if (this.obeyspaces && this.match(/^[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]/)) {\n      // Don't coalesce when this.obeyspaces is true (different regex from above)\n      return '<space>';\n    }\n\n    const next = this.get(); // Is it a command?\n\n    if (next === '\\\\') {\n      if (!this.end()) {\n        // A command is either a string of letters and asterisks...\n        let command = this.match(/^[a-zA-Z*]+/);\n\n        if (command) {\n          // Spaces after a 'control word' are ignored\n          // (but not after a 'control symbol' (single char)\n          this.match(/^[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]*/);\n        } else {\n          // ... or a single non-letter character\n          command = this.get();\n\n          if (command === ' ') {\n            // The `\\ ` command is equivalent to a single space\n            return '<space>';\n          }\n        }\n\n        return '\\\\' + command;\n      }\n    } else if (next === '{') {\n      // This is a group start\n      return '<{>';\n    } else if (next === '}') {\n      // This is a group end\n      return '<}>';\n    } else if (next === '^') {\n      if (this.peek() === '^') {\n        // It might be a ^^ command (inline hex character)\n        this.get(); // There can be zero to six carets with the same number of hex digits\n\n        const hex = this.match(/^(\\^(\\^(\\^(\\^[0-9a-f])?[0-9a-f])?[0-9a-f])?[0-9a-f])?[0-9a-f][0-9a-f]/);\n\n        if (hex) {\n          return String.fromCodePoint(parseInt(hex.slice(hex.lastIndexOf('^') + 1), 16));\n        }\n      }\n\n      return next;\n    } else if (next === '#') {\n      // This could be either a param token, or a literal # (used for\n      // colorspecs, for example). A param token is a '#' followed by\n      // - a digit 0-9 followed by a non-alpha, non-digit\n      // - or '?'.\n      // Otherwise, it's a literal '#'.\n      if (!this.end()) {\n        let isParam = false;\n\n        if (/[0-9?]/.test(this.peek())) {\n          // Could be a param\n          isParam = true; // Need to look ahead to the following char\n\n          if (this.pos + 1 < this.s.length) {\n            const after = this.s[this.pos + 1];\n            isParam = /[^0-9A-Za-z]/.test(after);\n          }\n        }\n\n        if (isParam) {\n          return '#' + this.get();\n        }\n\n        return '#';\n      }\n    } else if (next === '$') {\n      // Mode switch\n      if (this.peek() === '$') {\n        // $$\n        this.get();\n        return '<$$>';\n      } // $\n\n\n      return '<$>';\n    }\n\n    return next;\n  }\n\n} // Some primitive commands need to be handled in the expansion phase\n// (the 'gullet')\n\n\nfunction expand(lex, args) {\n  var _a, _b, _c, _d;\n\n  let result = [];\n  let token = lex.next();\n\n  if (token) {\n    if (token === '\\\\relax') ;else if (token === '\\\\noexpand') {\n      // Do not expand the next token\n      token = lex.next();\n\n      if (token) {\n        result.push(token);\n      }\n    } else if (token === '\\\\obeyspaces') {\n      lex.obeyspaces = true;\n    } else if (token === '\\\\space' || token === '~') {\n      // The `\\space` command is equivalent to a single space\n      // The ~ is an 'active character' (a single character macro)\n      // that maps to <space>\n      result.push('<space>');\n    } else if (token === '\\\\bgroup') {\n      // Begin group, synonym for opening brace\n      result.push('<{>');\n    } else if (token === '\\\\egroup') {\n      // End group, synonym for closing brace\n      result.push('<}>');\n    } else if (token === '\\\\string') {\n      // Turn the next token into a string\n      token = lex.next();\n\n      if (token) {\n        if (token[0] === '\\\\') {\n          Array.from(token).forEach(x => result.push(x === '\\\\' ? '\\\\backslash' : x));\n        } else if (token === '<{>') {\n          result.push('\\\\{');\n        } else if (token === '<space>') {\n          result.push('~');\n        } else if (token === '<}>') {\n          result.push('\\\\}');\n        }\n      }\n    } else if (token === '\\\\csname') {\n      // Turn the next tokens, until `\\endcsname`, into a command\n      while (lex.peek() === '<space>') {\n        lex.next();\n      }\n\n      let command = '';\n      let done = false;\n      let tokens = [];\n\n      do {\n        if (tokens.length === 0) {\n          // We're out of tokens to look at, get some more\n          if (/^#[0-9?]$/.test(lex.peek())) {\n            // Expand parameters (but not commands)\n            const param = lex.get().slice(1);\n            tokens = tokenize((_b = (_a = args === null || args === void 0 ? void 0 : args[param]) !== null && _a !== void 0 ? _a : args === null || args === void 0 ? void 0 : args['?']) !== null && _b !== void 0 ? _b : '\\\\placeholder{}', args);\n            token = tokens[0];\n          } else {\n            token = lex.next();\n            tokens = token ? [token] : [];\n          }\n        }\n\n        done = tokens.length === 0;\n\n        if (!done && token === '\\\\endcsname') {\n          done = true;\n          tokens.shift();\n        }\n\n        if (!done) {\n          done = token === '<$>' || token === '<$$>' || token === '<{>' || token === '<}>' || token.length > 1 && token[0] === '\\\\';\n        }\n\n        if (!done) {\n          command += tokens.shift();\n        }\n      } while (!done);\n\n      if (command) {\n        result.push('\\\\' + command);\n      }\n\n      result = result.concat(tokens);\n    } else if (token === '\\\\endcsname') ;else if (token.length > 1 && token[0] === '#') {\n      // It's a parameter to expand\n      const param = token.slice(1);\n      result = result.concat(tokenize((_d = (_c = args === null || args === void 0 ? void 0 : args[param]) !== null && _c !== void 0 ? _c : args === null || args === void 0 ? void 0 : args['?']) !== null && _d !== void 0 ? _d : '\\\\placeholder{}', args));\n    } else {\n      result.push(token);\n    }\n  }\n\n  return result;\n}\n/**\r\n * Create Tokens from a stream of LaTeX\r\n *\r\n * @param s - A string of LaTeX. It can include comments (with the `%`\r\n * marker) and multiple lines.\r\n */\n\n\nfunction tokenize(s, args) {\n  // Merge multiple lines into one, and remove comments\n  const lines = s.toString().split(/\\r?\\n/);\n  let stream = '';\n  let sep = '';\n\n  var _iterator10 = _createForOfIteratorHelper(lines),\n      _step10;\n\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      const line = _step10.value;\n      stream += sep;\n      sep = ' '; // Remove everything after a % (comment marker)\n      // (but \\% should be preserved...)\n\n      const m = line.match(/((?:\\\\%)|[^%])*/);\n      if (m !== null) stream += m[0];\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  const tokenizer = new Tokenizer(stream);\n  let result = [];\n\n  do {\n    result = result.concat(expand(tokenizer, args));\n  } while (!tokenizer.end());\n\n  return result;\n}\n\nfunction joinLatex(segments) {\n  let sep = '';\n  let result = '';\n\n  var _iterator11 = _createForOfIteratorHelper(segments),\n      _step11;\n\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      const segment = _step11.value;\n\n      if (segment) {\n        if (/[a-zA-Z*]/.test(segment[0])) {\n          // If the segment begins with a char that *could* be in a command\n          // name... insert a separator (if one was needed for the previous segment)\n          result += sep;\n        } // If the segment ends in a command...\n\n\n        if (/\\\\[a-zA-Z]+\\*?$/.test(segment)) {\n          // ... potentially add a space before the next segment\n          sep = ' ';\n        } else {\n          sep = '';\n        }\n\n        result += segment;\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n\n  return result;\n}\n\nfunction tokensToString(tokens) {\n  const result = joinLatex(tokens.map(token => {\n    var _a;\n\n    return (_a = {\n      '<space>': ' ',\n      '<$$>': '$$',\n      '<$>': '$',\n      '<{>': '{',\n      '<}>': '}'\n    }[token]) !== null && _a !== void 0 ? _a : token;\n  }));\n  return result;\n} // See https://tex.stackexchange.com/questions/58098/what-are-all-the-font-styles-i-can-use-in-math-mode\n\n/*\r\n * Return an array of runs with the same mode\r\n */\n\n\nfunction getModeRuns(atoms) {\n  const result = [];\n  let run = [];\n  let currentMode = 'NONE';\n  atoms.forEach(atom => {\n    if (atom.type !== 'first') {\n      if (atom.mode !== currentMode) {\n        if (run.length > 0) result.push(run);\n        run = [atom];\n        currentMode = atom.mode;\n      } else {\n        run.push(atom);\n      }\n    }\n  }); // Push whatever is left\n\n  if (run.length > 0) result.push(run);\n  return result;\n}\n/**\r\n *\r\n * @param {Atom} parent the parent or predecessor of the atom list\r\n * @param {Atom[]} atoms the list of atoms to transform to LaTeX\r\n * @param {boolean} expandMacro true if macros should be expanded\r\n * @result {string} a LaTeX string\r\n */\n\n\nfunction latexifyArray(parent, atoms, expandMacro) {\n  if (atoms.length === 0) return '';\n\n  if (atoms[0].type === 'first') {\n    if (atoms.length === 1) return ''; // Remove the 'first' atom, if present\n\n    atoms = atoms.slice(1);\n  }\n\n  if (atoms.length === 0) return '';\n  return joinLatex(getPropertyRuns(atoms, 'cssClass').map(x => {\n    const result = joinLatex(getPropertyRuns(x, 'color').map(x => joinLatex(getModeRuns(x).map(x => emitLatexRun(parent, x, expandMacro)))));\n\n    if (x[0].cssClass && (typeof parent === 'undefined' || parent.cssClass !== x[0].cssClass)) {\n      if (x[0].cssClass === 'ML__boldsymbol') {\n        return '\\\\boldsymbol{' + result + '}';\n      } else if (x[0].cssClass === 'ML__emph') {\n        return '\\\\emph{' + result + '}';\n      }\n\n      return '\\\\class{' + x[0].cssClass + '}{' + result + '}';\n    }\n\n    return result;\n  }));\n}\n/**\r\n * Given an atom or an array of atoms, return a LaTeX string representation\r\n */\n\n\nfunction latexify(parent, value, expandMacro) {\n  let result = '';\n\n  if (isArray(value)) {\n    result = latexifyArray(parent, value, expandMacro);\n  } else if (typeof value === 'number' || typeof value === 'boolean') {\n    result = value.toString();\n  } else if (typeof value === 'string') {\n    result = value.replace(/\\s/g, '~');\n  } else if (typeof value !== 'undefined' && value !== null && isFunction(value.toLatex)) {\n    result = value.toLatex(expandMacro);\n  }\n\n  return result;\n}\n/**\r\n * Return a LaTeX representation of the atom.\r\n *\r\n * @param {boolean} expandMacro - If true, macros are fully expanded. This will\r\n * no longer round-trip.\r\n *\r\n */\n\n\nfunction atomToLatex(atom, expandMacro) {\n  expandMacro = typeof expandMacro === 'undefined' ? false : expandMacro; // If we have some verbatim latex for this atom, use it.\n  // This allow non-significant punctuation to be preserved when possible.\n\n  if (!expandMacro && atom.latex) {\n    return atom.latex;\n  }\n\n  let result = '';\n  let col = 0;\n  let row = 0;\n  let i = 0;\n  const command = atom.symbol;\n  let segments = [];\n\n  const emit$1 = (parent, atom) => latexify(parent, atom, expandMacro); // atom.mode=='text' is handled in the switch by looking at atom.type===''\n\n\n  switch (atom.type) {\n    case 'group':\n      if (command) {\n        // This is a macro\n        result = expandMacro ? emit$1(atom, atom.body) : atom.latex;\n      } else {\n        result = atom.latexOpen || (atom.cssId || atom.cssClass ? '' : '{');\n        if (atom.cssId) result += '\\\\cssId{' + atom.cssId + '}{';\n\n        if (atom.cssClass === 'ML__emph') {\n          result += \"\\\\emph{\".concat(emit$1(atom, atom.body));\n        } else {\n          if (atom.cssClass) {\n            result += '\\\\class{' + atom.cssClass + '}{';\n          }\n\n          result += emit$1(atom, atom.body);\n          if (atom.cssClass) result += '}';\n        }\n\n        if (atom.cssId) result += '}';\n        result += atom.latexClose || (atom.cssId || atom.cssClass ? '' : '}');\n      }\n\n      break;\n\n    case 'array':\n      result += '\\\\begin{' + atom.environmentName + '}';\n\n      if (atom.environmentName === 'array') {\n        result += '{';\n\n        if (typeof atom.colFormat !== 'undefined') {\n          for (i = 0; i < atom.colFormat.length; i++) {\n            if (atom.colFormat[i].align) {\n              result += atom.colFormat[i].align;\n            } else if (atom.colFormat[i].rule) {\n              result += '|';\n            }\n          }\n        }\n\n        result += '}';\n      }\n\n      for (row = 0; row < atom.array.length; row++) {\n        for (col = 0; col < atom.array[row].length; col++) {\n          if (col > 0) result += ' & ';\n          result += emit$1(atom, atom.array[row][col]);\n        } // Adds a separator between rows (but not after the last row)\n\n\n        if (row < atom.array.length - 1) {\n          result += ' \\\\\\\\ ';\n        }\n      }\n\n      result += '\\\\end{' + atom.environmentName + '}';\n      break;\n\n    case 'root':\n      result = emit$1(atom, atom.body);\n      break;\n\n    case 'leftright':\n      if (atom.inner) {\n        segments = ['\\\\left' + (atom.leftDelim || '.'), emit$1(atom, atom.body), '\\\\right' + (atom.rightDelim || '.')];\n      } else {\n        if (expandMacro) {\n          // If we're in 'expandMacro' mode (i.e. interchange format\n          // used, e.g., on the clipboard for maximum compatibility\n          // with other LaTeX renderers), drop the `\\mleft(` and `\\mright`)\n          // commands\n          segments = [atom.leftDelim === '.' ? '' : atom.leftDelim, emit$1(atom, atom.body), atom.rightDelim === '.' ? '' : atom.rightDelim];\n        } else {\n          segments = ['\\\\mleft' + (atom.leftDelim || '.'), emit$1(atom, atom.body), '\\\\mright' + (atom.rightDelim || '.')];\n        }\n      }\n\n      result += joinLatex(segments);\n      break;\n\n    case 'delim':\n    case 'sizeddelim':\n      result += command + '{' + atom.delim + '}';\n      break;\n\n    case 'rule':\n      result += command;\n\n      if (atom.shift) {\n        result += \"[\".concat(emit$1(atom, atom.shift), \"em]\");\n      }\n\n      result += \"{\".concat(emit$1(atom, atom.width), \"em}{\").concat(emit$1(atom, atom.height), \"em}\");\n      break;\n\n    case 'mord':\n    case 'minner':\n    case 'mbin':\n    case 'mrel':\n    case 'mpunct':\n    case 'mopen':\n    case 'mclose':\n    case 'textord':\n      if (command === '\\\\char\"') {\n        result += atom.latex;\n      } else {\n        result += emit(command, null, atom, emit$1);\n      }\n\n      break;\n\n    case 'mop':\n      if (atom.body !== '\\u200b') {\n        // Not ZERO-WIDTH\n        if (command === '\\\\mathop') {\n          // The argument to mathop is math, therefor atom.body can be an expression\n          result += command + '{' + emit$1(atom, atom.body) + '}';\n        } else if (command === '\\\\operatorname') {\n          // The argument to `\\operatorname` is 'math' and needs to be latexified\n          result += command + '{' + emit$1(atom, atom.body) + '}';\n        } else {\n          result += command;\n\n          if (/^\\\\.*[a-zA-Z0-9]$/.test(command)) {\n            // Add a space after commands, to avoid, e.g.\n            // '\\sin' + 'x' -> '\\sinx' instead of '\\sin x'\n            result += ' ';\n          }\n        }\n      }\n\n      if (atom.explicitLimits) {\n        if (atom.limits === 'limits') result += '\\\\limits ';\n        if (atom.limits === 'nolimits') result += '\\\\nolimits ';\n      }\n\n      break;\n\n    case 'spacing':\n      // Three kinds of spacing commands:\n      // \\hskip and \\kern which take one implicit parameter\n      // \\hspace and hspace* with take one *explicit* parameter\n      // \\quad, etc... which take no parameters.\n      result += command;\n\n      if (command === '\\\\hspace' || command === '\\\\hspace*') {\n        result += '{';\n\n        if (atom.width) {\n          result += Number(atom.width).toString() + 'em';\n        } else {\n          result += '0em';\n        }\n\n        result += '}';\n      } else {\n        result += ' ';\n\n        if (atom.width) {\n          result += Number(atom.width).toString() + 'em ';\n        }\n      }\n\n      break;\n\n    case 'enclose':\n      result += command;\n\n      if (command === '\\\\enclose') {\n        result += '{' + Object.keys(atom.notation).join(' ') + '}'; // \\enclose can have optional parameters...\n\n        let style = '';\n        let sep = '';\n\n        if (atom.backgroundColor && atom.backgroundColor !== 'transparent') {\n          style += sep + 'mathbackground=\"' + colorToString(atom.backgroundColor) + '\"';\n          sep = ',';\n        }\n\n        if (atom.shadow && atom.shadow !== 'auto') {\n          style += sep + 'shadow=\"' + atom.shadow + '\"';\n          sep = ',';\n        }\n\n        if (atom.strokeWidth !== 1 || atom.strokeStyle !== 'solid') {\n          style += sep + atom.borderStyle;\n          sep = ',';\n        } else if (atom.strokeColor && atom.strokeColor !== 'currentColor') {\n          style += sep + 'mathcolor=\"' + colorToString(atom.strokeColor) + '\"';\n          sep = ',';\n        }\n\n        if (style) {\n          result += \"[\".concat(style, \"]\");\n        }\n      }\n\n      result += \"{\".concat(emit$1(atom, atom.body), \"}\");\n      break;\n\n    case 'mathstyle':\n      result += '\\\\' + atom.mathstyle;\n      break;\n\n    case 'space':\n      result += atom.symbol;\n      break;\n\n    case 'placeholder':\n      result += '\\\\placeholder{}';\n      break;\n\n    case 'first':\n    case 'command':\n    case 'msubsup':\n      break;\n\n    case 'error':\n      result += atom.latex;\n      break;\n\n    case 'composition':\n      result = '';\n      break;\n\n    case '':\n      console.assert(atom.mode === 'text', 'Null atom type in mode ' + atom.mode);\n      console.error('Attempting to emit a text atom');\n      break;\n\n    default:\n      result = emit(command, null, atom, emit$1);\n      console.assert(Boolean(result), 'Missing custom emiter for ', command || atom.body);\n\n      if (!result) {\n        result += command;\n      }\n\n      break;\n  }\n\n  if (typeof atom.superscript !== 'undefined') {\n    let sup = emit$1(atom, atom.superscript);\n\n    if (sup.length === 1) {\n      if (sup === '\\u2032') {\n        // PRIME\n        sup = '\\\\prime ';\n      } else if (sup === '\\u2033') {\n        // DOUBLE-PRIME\n        sup = '\\\\doubleprime ';\n      }\n\n      result += '^' + sup;\n    } else {\n      result += '^{' + sup + '}';\n    }\n  }\n\n  if (typeof atom.subscript !== 'undefined') {\n    const sub = emit$1(atom, atom.subscript);\n\n    if (sub.length === 1) {\n      result += '_' + sub;\n    } else {\n      result += '_{' + sub + '}';\n    }\n  }\n\n  return result;\n}\n\nconst ATOM_REGISTRY = {}; // A table of size -> font size for the different sizing functions\n\nconst SIZING_MULTIPLIER = {\n  size1: 0.5,\n  size2: 0.7,\n  size3: 0.8,\n  size4: 0.9,\n  size5: 1.0,\n  size6: 1.2,\n  size7: 1.44,\n  size8: 1.73,\n  size9: 2.07,\n  size10: 2.49\n};\n\nfunction registerAtomType(name, decompose) {\n  ATOM_REGISTRY[name] = {\n    decompose: decompose\n  };\n}\n/**\r\n * Return a list of spans equivalent to atoms.\r\n * A span is the most elementary type possible, for example 'text'\r\n * or 'vlist', while the input atoms may be more abstract and complex,\r\n * such as 'genfrac'\r\n *\r\n * @param context Font family, variant, size, color, and other info useful\r\n * to render an expression\r\n * @param atoms - A single atom or an array of atoms\r\n */\n\n\nfunction decompose(inputContext, atoms) {\n  var _a, _b;\n\n  function isDigit(atom) {\n    return atom.type === 'mord' && Boolean(atom.symbol) && /^[0-9,.]$/.test(atom.symbol);\n  }\n\n  function isText(atom) {\n    return atom.mode === 'text';\n  } // We can be passed either a Context object, or\n  // a simple object with some properties set.\n\n\n  const context = inputContext instanceof Context ? inputContext : new Context(inputContext); // In most cases we want to display selection,\n  // except if the atomIdsSettings.groupNumbers flag is set which is used for\n  // read aloud.\n\n  const displaySelection = !context.atomIdsSettings || !context.atomIdsSettings.groupNumbers;\n  let result = [];\n\n  if (isArray(atoms)) {\n    if (atoms.length === 0) {\n      return [];\n    } else if (atoms.length === 1) {\n      result = atoms[0].decompose(context);\n\n      if (result && displaySelection && atoms[0].isSelected) {\n        result.forEach(x => x.selected(true));\n      }\n\n      console.assert(!result || isArray(result));\n    } else {\n      let selection = [];\n      let digitOrTextStringID = '';\n      let lastWasDigit = true;\n      let phantomBase = null;\n\n      for (let i = 0; i < atoms.length; i++) {\n        // If this is a scaffolding supsub, we'll use the\n        // phantomBase from the previous atom to position the supsub.\n        // Otherwise, no need for the phantomBase\n        if (atoms[i].body !== '\\u200b' || !atoms[i].superscript && !atoms[i].subscript) {\n          phantomBase = null;\n        }\n\n        if (((_a = context.atomIdsSettings) === null || _a === void 0 ? void 0 : _a.groupNumbers) && digitOrTextStringID && (lastWasDigit && isDigit(atoms[i]) || !lastWasDigit && isText(atoms[i]))) {\n          context.atomIdsSettings.overrideID = digitOrTextStringID;\n        }\n\n        const span = atoms[i].decompose(context, phantomBase);\n\n        if (context.atomIdsSettings) {\n          context.atomIdsSettings.overrideID = null;\n        }\n\n        if (span) {\n          // The result from decompose is always an array\n          // Flatten it (i.e. [[a1, a2], b1, b2] -> [a1, a2, b1, b2]\n          const flat = [].concat(...span);\n          phantomBase = flat; // If this is a digit or text run, keep track of it\n\n          if ((_b = context.atomIdsSettings) === null || _b === void 0 ? void 0 : _b.groupNumbers) {\n            if (isDigit(atoms[i]) || isText(atoms[i])) {\n              if (!digitOrTextStringID || lastWasDigit !== isDigit(atoms[i])) {\n                // changed from text to digits or vice-versa\n                lastWasDigit = isDigit(atoms[i]);\n                digitOrTextStringID = atoms[i].id;\n              }\n            }\n\n            if ((!(isDigit(atoms[i]) || isText(atoms[i])) || atoms[i].superscript || atoms[i].subscript) && digitOrTextStringID) {\n              // Done with digits/text\n              digitOrTextStringID = '';\n            }\n          }\n\n          if (displaySelection && atoms[i].isSelected) {\n            selection = selection.concat(flat);\n            selection.forEach(x => x.selected(true));\n          } else {\n            if (selection.length > 0) {\n              // There was a selection, but we're out of it now\n              // Append the selection\n              result = [...result, ...selection];\n              selection = [];\n            }\n\n            result = result.concat(flat);\n          }\n        }\n      } // Is there a leftover selection?\n\n\n      if (selection.length > 0) {\n        result = [...result, ...selection];\n        selection = [];\n      }\n    }\n  } else if (atoms instanceof Atom) {\n    // This is a single atom, decompose it\n    result = atoms.decompose(context);\n\n    if (result && displaySelection && atoms.isSelected) {\n      result.forEach(x => x.selected(true));\n    }\n  }\n\n  if (!result || result.length === 0) return null;\n  console.assert(isArray(result) && result.length > 0); // If the mathstyle changed between the parent and the current atom,\n  // account for the size difference\n\n  if (context.mathstyle !== context.parentMathstyle) {\n    const factor = context.mathstyle.sizeMultiplier / context.parentMathstyle.sizeMultiplier;\n\n    var _iterator12 = _createForOfIteratorHelper(result),\n        _step12;\n\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        const span = _step12.value;\n        console.assert(!isArray(span));\n        console.assert(typeof span.height === 'number' && isFinite(span.height));\n        span.height *= factor;\n        span.depth *= factor;\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n  } // If the size changed between the parent and the current group,\n  // account for the size difference\n\n\n  if (context.size !== context.parentSize) {\n    const factor = SIZING_MULTIPLIER[context.size] / SIZING_MULTIPLIER[context.parentSize];\n\n    var _iterator13 = _createForOfIteratorHelper(result),\n        _step13;\n\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        const span = _step13.value;\n        console.assert(!isArray(span));\n        console.assert(typeof span.height === 'number' && isFinite(span.height));\n        span.height *= factor;\n        span.depth *= factor;\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n  }\n\n  return result;\n}\n/**\r\n * An atom is an object encapsulating an elementary mathematical unit,\r\n * independent of its graphical representation.\r\n *\r\n * It keeps track of the content, while the dimensions, position and style\r\n * are tracked by Span objects which are created by the `decompose()` functions.\r\n *\r\n * @param style A set of additional properties to append to\r\n * the atom\r\n * @property mode - `'display'`, `'command'`, etc...\r\n * @property type - Type can be one of:\r\n * - `mord`: ordinary symbol, e.g. `x`, `\\alpha`\r\n * - `textord`: ordinary characters\r\n * - `mop`: operators, including special functions, `\\sin`, `\\sum`, `\\cap`.\r\n * - `mbin`: binary operator: `+`, `*`, etc...\r\n * - `mrel`: relational operator: `=`, `\\ne`, etc...\r\n * - `mpunct`: punctuation: `,`, `:`, etc...\r\n * - `mopen`: opening fence: `(`, `\\langle`, etc...\r\n * - `mclose`: closing fence: `)`, `\\rangle`, etc...\r\n * - `minner`: special layout cases, overlap, `\\left...\\right`\r\n *\r\n * In addition to these basic types, which correspond to the TeX atom types,\r\n * some atoms represent more complex compounds, including:\r\n * - `space` and `spacing`: blank space between atoms\r\n * - `mathstyle`: to change the math style used: `display` or `text`.\r\n * The layout rules are different for each, the latter being more compact and\r\n * intended to be incorporated with surrounding non-math text.\r\n * - `root`: a group, which has no parent (only one per formula)\r\n * - `group`: a simple group of atoms, for example from a `{...}`\r\n * - `sizing`: set the size of the font used\r\n * - `rule`: draw a line, for the `\\rule` command\r\n * - `line`: used by `\\overline` and `\\underline` commands\r\n * - `box`: a border drawn around an expression and change its background color\r\n * - `overlap`: display a symbol _over_ another\r\n * - `overunder`: displays an annotation above or below a symbol\r\n * - `array`: a group, which has children arranged in rows. Used\r\n * by environments such as `matrix`, `cases`, etc...\r\n * - `genfrac`: a generalized fraction: a numerator and denominator, separated\r\n * by an optional line, and surrounded by optional fences\r\n * - `surd`: a surd, aka root\r\n * - `leftright`: used by the `\\left` and `\\right` commands\r\n * - `delim`: some delimiter\r\n * - `sizeddelim`: a delimiter that can grow\r\n *\r\n * The following types are used by the editor:\r\n * - `command` indicate a command being entered. The text is displayed in\r\n * blue in the editor.\r\n * - `error`: indicate a command that is unknown, for example `\\xyzy`. The text\r\n * is displayed with a wavy red underline in the editor.\r\n * - `placeholder`: indicate a temporary item. Placeholders are displayed\r\n * as a dashed square in the editor.\r\n * - `first`: a special, empty, atom put as the first atom in math lists in\r\n * order to be able to position the caret before the first element. Aside from\r\n * the caret, they display nothing.\r\n *\r\n * @property captureSelection if true, this atom does not let its\r\n * children be selected. Used by the `\\enclose` annotations, for example.\r\n *\r\n * @property skipBoundary if true, when the caret reaches the\r\n * first position in this element's body, it automatically moves to the\r\n * outside of the element. Conversely, when the caret reaches the position\r\n * right after this element, it automatically moves to the last position\r\n * inside this element.\r\n */\n\n\nclass Atom {\n  constructor(mode, type, body = '', style = {}) {\n    console.assert(type === 'first' || Boolean(mode));\n    this.mode = mode;\n    this.type = type;\n    this.body = body;\n\n    if (style.isPhantom) {\n      this.setPhantom(true);\n    } // Append all the properties in extras to this\n    // This can override the mode, type and body\n\n\n    this.applyStyle(style);\n  }\n\n  toLatex(expandMacro = false) {\n    return atomToLatex(this, expandMacro);\n  }\n\n  getStyle() {\n    return {\n      mode: this.mode,\n      color: this.isPhantom ? 'transparent' : this.color,\n      backgroundColor: this.isPhantom ? 'transparent' : this.backgroundColor,\n      variant: this.variant,\n      variantStyle: this.variantStyle,\n      fontFamily: this.fontFamily,\n      fontShape: this.fontShape,\n      fontSeries: this.fontSeries,\n      fontSize: this.fontSize,\n      cssId: this.cssId,\n      cssClass: this.cssClass\n    };\n  }\n\n  applyStyle(style) {\n    Object.assign(this, style);\n\n    if (this.fontFamily === 'none') {\n      this.fontFamily = '';\n    }\n\n    if (this.fontShape === 'auto') {\n      this.fontShape = '';\n    }\n\n    if (this.fontSeries === 'auto') {\n      this.fontSeries = '';\n    }\n\n    if (this.color === 'none') {\n      this.color = '';\n    }\n\n    if (this.backgroundColor === 'none') {\n      this.backgroundColor = '';\n    }\n\n    if (this.fontSize === 'auto') {\n      this.fontSize = '';\n    }\n\n    if (this.fontSize) {\n      this.maxFontSize = SIZING_MULTIPLIER[this.fontSize];\n    }\n\n    if (this.mode === 'text') {\n      // @revisit. Use type = 'text' for text atoms?\n      // A root can be in text mode (root created when creating a representation\n      // of the selection, for copy/paste for example)\n      if (this.type !== 'root') this.type = '';\n    }\n  }\n\n  getInitialBaseElement() {\n    let result;\n\n    if (isArray(this.body) && this.body.length > 0) {\n      if (this.body[0].type !== 'first') {\n        result = this.body[0].getInitialBaseElement();\n      } else if (this.body[1]) {\n        result = this.body[1].getInitialBaseElement();\n      }\n    }\n\n    return result || this;\n  }\n\n  getFinalBaseElement() {\n    if (isArray(this.body) && this.body.length > 0) {\n      return this.body[this.body.length - 1].getFinalBaseElement();\n    }\n\n    return this;\n  }\n\n  isCharacterBox() {\n    const base = this.getInitialBaseElement();\n    return /minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(base.type);\n  }\n\n  setPhantom(isPhantom) {\n    // this.isPhantom = isPhantom;\n    this.forEach(x => {\n      x.isPhantom = isPhantom;\n    });\n  }\n  /**\r\n   * Iterate over all the child atoms of this atom, this included,\r\n   * and invoke the cb callback.\r\n   */\n\n\n  forEach(cb) {\n    cb(this);\n\n    if (isArray(this.body)) {\n      var _iterator14 = _createForOfIteratorHelper(this.body),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          const atom = _step14.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    } else if (this.body && typeof this.body === 'object') {\n      // Note: body can be null, for example 'first' or 'rule'\n      // (and null is an object)\n      cb(this.body);\n    }\n\n    if (this.superscript) {\n      var _iterator15 = _createForOfIteratorHelper(this.superscript),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          const atom = _step15.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n\n    if (this.subscript) {\n      var _iterator16 = _createForOfIteratorHelper(this.subscript),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          const atom = _step16.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    }\n\n    if (this.overscript) {\n      var _iterator17 = _createForOfIteratorHelper(this.overscript),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          const atom = _step17.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n\n    if (this.underscript) {\n      var _iterator18 = _createForOfIteratorHelper(this.underscript),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          const atom = _step18.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n\n    if (this.numer) {\n      var _iterator19 = _createForOfIteratorHelper(this.numer),\n          _step19;\n\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          const atom = _step19.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n\n    if (this.denom) {\n      var _iterator20 = _createForOfIteratorHelper(this.denom),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          const atom = _step20.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n\n    if (this.index) {\n      var _iterator21 = _createForOfIteratorHelper(this.index),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          const atom = _step21.value;\n          if (atom) atom.forEach(cb);\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n    }\n\n    if (this.array) {\n      var _iterator22 = _createForOfIteratorHelper(this.array),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          const row = _step22.value;\n\n          var _iterator23 = _createForOfIteratorHelper(row),\n              _step23;\n\n          try {\n            for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n              const cell = _step23.value;\n\n              var _iterator24 = _createForOfIteratorHelper(cell),\n                  _step24;\n\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  const atom = _step24.value;\n                  atom.forEach(cb);\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n            }\n          } catch (err) {\n            _iterator23.e(err);\n          } finally {\n            _iterator23.f();\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n    }\n  }\n\n  decomposeGroup(context) {\n    // The scope of the context is this group, so clone it\n    // so that any changes to it will be discarded when finished\n    // with this group.\n    // Note that the mathstyle property is optional and could be undefined\n    // If that's the case, clone() returns a clone of the\n    // context with the same mathstyle.\n    const localContext = context.clone({\n      mathstyle: this.mathstyle ? MATHSTYLES[this.mathstyle] : undefined\n    });\n    const span = makeSpan(decompose(localContext, this.body), '', 'mord'); // @revisit\n\n    if (this.cssId) span.cssId = this.cssId;\n    span.applyStyle({\n      backgroundColor: this.backgroundColor,\n      cssClass: this.cssClass\n    });\n    return span;\n  }\n\n  decomposeOverlap(context) {\n    const inner = makeSpan(decompose(context, this.body), 'inner'); // @revisit\n\n    return makeSpan([inner, makeSpan(null, 'fix')], this.align === 'left' ? 'llap' : 'rlap', 'mord');\n  }\n\n  decomposeRule(context) {\n    const mathstyle = context.mathstyle;\n    const result = makeSpan('', 'rule', 'mord');\n    let shift = this.shift && !isNaN(this.shift) ? this.shift : 0;\n    shift = shift / mathstyle.sizeMultiplier;\n    const width = this.width / mathstyle.sizeMultiplier;\n    const height = this.height / mathstyle.sizeMultiplier;\n    result.setStyle('border-right-width', width, 'em');\n    result.setStyle('border-top-width', height, 'em');\n    result.setStyle('margin-top', -(height - shift), 'em');\n    result.setStyle('border-color', context['color']); // @revisit\n\n    result.width = width;\n    result.height = height + shift;\n    result.depth = -shift;\n    return result;\n  }\n  /**\r\n   * Return a representation of this, but decomposed in an array of Spans\r\n   *\r\n   * @param context Font variant, size, color, etc...\r\n   * @param phantomBase If not null, the spans to use to\r\n   * calculate the placement of the supsub\r\n   */\n\n\n  decompose(context, phantomBase = null) {\n    var _a;\n\n    let result = null;\n\n    if (!this.type || /mord|minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(this.type)) {\n      // The body of these atom types is *often* a string, but it can\n      // be a atom list (for example a command inside a \\text{} or \\mathop{})\n      if (typeof this.body === 'string') {\n        result = this.makeSpan(context, this.body);\n      } else {\n        result = this.makeSpan(context, decompose(context, this.body));\n      }\n\n      result.type = isSpanType(this.type) ? this.type : '';\n    } else if (this.type === 'group' || this.type === 'root') {\n      result = this.decomposeGroup(context);\n    } else if (this.type === 'delim') {\n      result = makeSpan(null, '');\n      result.delim = this.delim;\n    } else if (this.type === 'sizeddelim') {\n      result = this.bind(context, makeSizedDelim(this.cls, this.delim, this.size, context));\n    } else if (this.type === 'overlap') {\n      // For llap (18), rlap (270), clap (0)\n      // smash (common), mathllap (0), mathrlap (0), mathclap (0)\n      // See https://www.tug.org/TUGboat/tb22-4/tb72perlS.pdf\n      // and https://tex.stackexchange.com/questions/98785/what-are-the-different-kinds-of-vertical-spacing-and-horizontal-spacing-commands\n      result = this.decomposeOverlap(context);\n    } else if (this.type === 'rule') {\n      result = this.decomposeRule(context);\n    } else if (this.type === 'msubsup') {\n      // The caret for this atom type is handled by its elements\n      result = makeSpan('\\u200b', '', 'mord');\n\n      if (phantomBase) {\n        result.height = phantomBase[0].height;\n        result.depth = phantomBase[0].depth;\n      }\n    } else if (this.type === 'space') {\n      // A space literal\n      result = this.makeSpan(context, ' ');\n    } else if (this.type === 'spacing') {\n      // A spacing command (\\quad, etc...)\n      if (this.body === '\\u200b') {\n        // ZERO-WIDTH SPACE\n        result = this.makeSpan(context, '\\u200b');\n      } else if (this.body === '\\u00a0') {\n        if (this.mode === 'math') {\n          result = this.makeSpan(context, ' ');\n        } else {\n          result = this.makeSpan(context, '\\u00a0');\n        }\n      } else if (this.width) {\n        result = makeSpan('\\u200b', 'mspace ');\n\n        if (this.width > 0) {\n          result.setWidth(this.width);\n        } else {\n          result.setStyle('margin-left', this.width, 'em');\n        }\n      } else {\n        const spacingCls = (_a = {\n          '\\\\qquad': 'qquad',\n          '\\\\quad': 'quad',\n          '\\\\enspace': 'enspace',\n          '\\\\;': 'thickspace',\n          '\\\\:': 'mediumspace',\n          '\\\\,': 'thinspace',\n          '\\\\!': 'negativethinspace'\n        }[this.symbol]) !== null && _a !== void 0 ? _a : 'mediumspace';\n        result = makeSpan('\\u200b', 'mspace ' + spacingCls);\n      }\n    } else if (this.type === 'mathstyle') {\n      context.setMathstyle(this.mathstyle);\n    } else if (this.type === 'command' || this.type === 'error') {\n      console.assert(typeof this.body === 'string');\n      result = this.makeSpan(context, this.body);\n      result.classes = ''; // Override fonts and other attributes.\n\n      if (this.isError) {\n        result.classes += ' ML__error';\n      }\n\n      if (this.isSuggestion) {\n        result.classes += ' ML__suggestion';\n      }\n    } else if (this.type === 'composition') {\n      // In theory one would like to be able to draw the clauses\n      // in an active composition. Unfortunately, there are\n      // no API to give access to those clauses :(\n      result = this.makeSpan(context, this.body);\n      result.classes = 'ML__composition';\n    } else if (this.type === 'placeholder') {\n      result = this.makeSpan(context, '⬚');\n    } else if (this.type === 'first') {\n      // the `first` pseudo-type is used as a placeholder as\n      // the first element in a children list. This makes\n      // managing the list, and the caret selection, easier.\n      // ZERO-WIDTH SPACE\n      result = this.makeSpan(context, '\\u200b');\n    } else {\n      console.assert(ATOM_REGISTRY[this.type], 'Unknown Atom type: \"' + this.type + '\"');\n      result = ATOM_REGISTRY[this.type].decompose(context, this);\n    }\n\n    if (!result) return null;\n\n    if (this.caret && this.type !== 'msubsup' && this.type !== 'command' && this.type !== 'placeholder' && this.type !== 'first') {\n      if (isArray(result)) {\n        if (!(this.type === 'leftright' && (this.superscript || this.subscript))) {\n          result[result.length - 1].caret = this.caret;\n        }\n      } else {\n        result.caret = this.caret;\n      }\n    }\n\n    if (this.containsCaret) {\n      if (isArray(result)) {\n        // For a /mleft.../mright, tag the first and last atom in the\n        // list with the \"ML__contains-caret\" style (it's the open and\n        // closing fence, respectively)\n        result[0].classes = (result[0].classes || '') + ' ML__contains-caret';\n        result[result.length - 1].classes = (result[result.length - 1].classes || '') + ' ML__contains-caret';\n      } else {\n        result.classes = (result.classes || '') + ' ML__contains-caret';\n      }\n    } // Finally, attach any necessary superscript, subscripts\n\n\n    if (!this.limits && (this.superscript || this.subscript)) {\n      // If `limits` is set, the attachment of sup/sub was handled\n      // in the atom decomposition (e.g. mop, accent)\n      if (isArray(result)) {\n        const lastSpan = result[result.length - 1];\n        result[result.length - 1] = this.attachSupsub(context, lastSpan, lastSpan.type);\n      } else {\n        result = [this.attachSupsub(context, result, result.type)];\n      }\n    }\n\n    return isArray(result) ? result : [result];\n  }\n\n  attachSupsub(context, nucleus, type) {\n    // If no superscript or subscript, nothing to do.\n    if (!this.superscript && !this.subscript) return nucleus; // Superscript and subscripts are discussed in the TeXbook\n    // on page 445-446, rules 18(a-f).\n    // TeX:14859-14945\n\n    const mathstyle = context.mathstyle;\n    let supmid = null;\n    let submid = null;\n\n    if (this.superscript) {\n      const sup = decompose(context.sup(), this.superscript);\n      supmid = makeSpan(sup, mathstyle.adjustTo(mathstyle.sup()));\n    }\n\n    if (this.subscript) {\n      const sub = decompose(context.sub(), this.subscript);\n      submid = makeSpan(sub, mathstyle.adjustTo(mathstyle.sub()));\n    } // Rule 18a, p445\n\n\n    let supShift = 0;\n    let subShift = 0;\n\n    if (!this.isCharacterBox()) {\n      supShift = height(nucleus) - mathstyle.metrics.supDrop;\n      subShift = depth(nucleus) + mathstyle.metrics.subDrop;\n    } // Rule 18c, p445\n\n\n    let minSupShift;\n\n    if (mathstyle === MATHSTYLES.displaystyle) {\n      minSupShift = mathstyle.metrics.sup1; // sigma13\n    } else if (mathstyle.cramped) {\n      minSupShift = mathstyle.metrics.sup3; // sigma15\n    } else {\n      minSupShift = mathstyle.metrics.sup2; // sigma14\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately @revisit: do we really need to do this scaling? It's in em...\n\n\n    const multiplier = MATHSTYLES.textstyle.sizeMultiplier * mathstyle.sizeMultiplier;\n    const scriptspace = 0.5 / METRICS.ptPerEm / multiplier;\n    let supsub = null;\n\n    if (submid && supmid) {\n      // Rule 18e\n      supShift = Math.max(supShift, minSupShift, supmid.depth + 0.25 * mathstyle.metrics.xHeight);\n      subShift = Math.max(subShift, mathstyle.metrics.sub2);\n      const ruleWidth = METRICS.defaultRuleThickness;\n\n      if (supShift - depth(supmid) - (height(submid) - subShift) < 4 * ruleWidth) {\n        subShift = 4 * ruleWidth - (supShift - supmid.depth) + height(submid);\n        const psi = 0.8 * mathstyle.metrics.xHeight - (supShift - depth(supmid));\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      supsub = makeVlist(context, [submid, subShift, supmid, -supShift], 'individualShift'); // Subscripts shouldn't be shifted by the nucleus' italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the nucleus is a single symbol.\n\n      if (this.isSymbol) {\n        supsub.children[0].setLeft(-italic(nucleus));\n      }\n    } else if (submid && !supmid) {\n      // Rule 18b\n      subShift = Math.max(subShift, mathstyle.metrics.sub1, height(submid) - 0.8 * mathstyle.metrics.xHeight);\n      supsub = makeVlist(context, [submid], 'shift', subShift);\n      supsub.children[0].setRight(scriptspace);\n\n      if (this.isCharacterBox()) {\n        supsub.children[0].setLeft(-italic(nucleus));\n      }\n    } else if (!submid && supmid) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supmid.depth + 0.25 * mathstyle.metrics.xHeight);\n      supsub = makeVlist(context, [supmid], 'shift', -supShift);\n      supsub.children[0].setRight(scriptspace);\n    } // Display the caret *following* the superscript and subscript,\n    // so attach the caret to the 'msubsup' element.\n\n\n    const supsubContainer = makeSpan(supsub, 'msubsup');\n\n    if (this.caret) {\n      supsubContainer.caret = this.caret;\n      this.caret = '';\n    }\n\n    return makeSpan([nucleus, supsubContainer], '', type);\n  }\n\n  attachLimits(context, nucleus, nucleusShift, slant) {\n    const limitAbove = this.superscript ? makeSpan(decompose(context.sup(), this.superscript), context.mathstyle.adjustTo(context.mathstyle.sup())) : null;\n    const limitBelow = this.subscript ? makeSpan(decompose(context.sub(), this.subscript), context.mathstyle.adjustTo(context.mathstyle.sub())) : null;\n    return makeLimitsStack(context, nucleus, nucleusShift, slant, limitAbove, limitBelow);\n  }\n  /**\r\n   * Add an ID attribute to both the span and this atom so that the atom\r\n   * can be retrieved from the span later on (e.g. when the span is clicked on)\r\n   */\n\n\n  bind(context, span) {\n    if (this.type !== 'first' && this.body !== '\\u200b') {\n      this.id = makeID(context);\n\n      if (this.id) {\n        if (!span.attributes) span.attributes = {};\n        span.attributes['data-atom-id'] = this.id;\n      }\n    }\n\n    return span;\n  }\n  /**\r\n   * Create a span with the specified body and with a class attribute\r\n   * equal to the type ('mbin', 'inner', 'spacing', etc...)\r\n   *\r\n   */\n\n\n  makeSpan(context, body) {\n    // Ensure that the atom type is a valid Span type, or use ''\n    console.assert(isSpanType(this.type));\n    const type = this.type === 'textord' ? 'mord' : isSpanType(this.type) ? this.type : '';\n    const result = makeSpan(body, '', type); // The font family is determined by:\n    // - the base font family associated with this atom (optional). For example,\n    // some atoms such as some functions ('\\sin', '\\cos', etc...) or some\n    // symbols ('\\Z') have an explicit font family. This overrides any\n    // other font family\n    // - the user-specified font family that has been explicitly applied to\n    // this atom\n    // - the font family automatically determined in math mode, for example\n    // which italicizes some characters, but which can be overridden\n\n    const style = this.getStyle();\n    style.letterShapeStyle = context.letterShapeStyle;\n    result.applyStyle(style); // Apply size correction\n\n    const size = (style === null || style === void 0 ? void 0 : style.fontSize) ? style.fontSize : 'size5';\n\n    if (size !== context.parentSize) {\n      result.classes += ' sizing reset-' + context.parentSize;\n      result.classes += ' ' + size;\n    } else if (context.parentSize !== context.size) {\n      result.classes += ' sizing reset-' + context.parentSize;\n      result.classes += ' ' + context.size;\n    }\n\n    result.maxFontSize = Math.max(result.maxFontSize, context.mathstyle.sizeMultiplier || 1.0); // Set other attributes\n\n    if (this.mode === 'text') result.classes += ' ML__text';\n    if (context.mathstyle.isTight()) result.isTight = true; // The italic correction applies only in math mode\n\n    if (this.mode !== 'math') result.italic = 0;\n    result.setRight(result.italic); // Italic correction\n\n    if (typeof context.opacity === 'number') {\n      result.setStyle('opacity', context.opacity);\n    } // To retrieve the atom from a span, for example when the span is clicked\n    // on, attach a randomly generated ID to the span and associate it\n    // with the atom.\n\n\n    this.bind(context, result);\n\n    if (this.caret) {\n      // If this has a super/subscript, the caret will be attached\n      // to the 'msubsup' atom, so no need to have it here.\n      if (!this.superscript && !this.subscript) {\n        result.caret = this.caret;\n        this.caret = '';\n        if (context.mathstyle.isTight()) result.isTight = true;\n      }\n    }\n\n    return result;\n  }\n\n}\n\nfunction makeID(context) {\n  let result;\n\n  if (context.atomIdsSettings) {\n    if (typeof context.atomIdsSettings.seed === 'number') {\n      result = context.atomIdsSettings.overrideID ? context.atomIdsSettings.overrideID : context.atomIdsSettings.seed.toString(36);\n      context.atomIdsSettings.seed += 1;\n    } else {\n      result = Date.now().toString(36).slice(-2) + Math.floor(Math.random() * 0x186a0).toString(36);\n    }\n  }\n\n  return result;\n} ////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Combine a nucleus with an atom above and an atom below. Used to form\r\n * limits.\r\n *\r\n * @param context\r\n * @param nucleus The base over and under which the atoms will\r\n * be placed.\r\n * @param nucleusShift The vertical shift of the nucleus from\r\n * the baseline.\r\n * @param slant For operators that have a slant, such as \\int,\r\n * indicate by how much to horizontally offset the above and below atoms\r\n */\n\n\nfunction makeLimitsStack(context, nucleus, nucleusShift, slant, above, below) {\n  // If nothing above and nothing below, nothing to do.\n  if (!above && !below) return nucleus; // IE8 clips \\int if it is in a display: inline-block. We wrap it\n  // in a new span so it is an inline, and works.\n  // @todo: revisit\n\n  nucleus = makeSpan(nucleus);\n  let aboveShift = 0;\n  let belowShift = 0;\n\n  if (above) {\n    aboveShift = Math.max(METRICS.bigOpSpacing1, METRICS.bigOpSpacing3 - depth(above));\n  }\n\n  if (below) {\n    belowShift = Math.max(METRICS.bigOpSpacing2, METRICS.bigOpSpacing4 - height(below));\n  }\n\n  let result = null;\n\n  if (below && above) {\n    const bottom = METRICS.bigOpSpacing5 + height(below) + depth(below) + belowShift + depth(nucleus) + nucleusShift;\n    result = makeVlist(context, [METRICS.bigOpSpacing5, below, belowShift, nucleus, aboveShift, above, METRICS.bigOpSpacing5], 'bottom', bottom); // Here, we shift the limits by the slant of the symbol. Note\n    // that we are supposed to shift the limits by 1/2 of the slant,\n    // but since we are centering the limits adding a full slant of\n    // margin will shift by 1/2 that.\n\n    result.children[0].setLeft(-slant);\n    result.children[2].setLeft(slant);\n  } else if (below && !above) {\n    const top = height(nucleus) - nucleusShift;\n    result = makeVlist(context, [METRICS.bigOpSpacing5, below, belowShift, nucleus], 'top', top); // See comment above about slants\n\n    result.children[0].setLeft(-slant);\n  } else if (!below && above) {\n    const bottom = depth(nucleus) + nucleusShift;\n    result = makeVlist(context, [nucleus, aboveShift, above, METRICS.bigOpSpacing5], 'bottom', bottom); // See comment above about slants\n\n    result.children[1].setLeft(slant);\n  }\n\n  return makeSpan(result, 'op-limits', 'mop');\n}\n/**\r\n * Return an atom suitable for use as the root of a formula.\r\n */\n\n\nfunction makeRoot(parseMode, body = []) {\n  const result = new Atom(parseMode, 'root', body || []);\n\n  if (isArray(result.body) && (result.body.length === 0 || result.body[0].type !== 'first')) {\n    result.body.unshift(new Atom(parseMode, 'first'));\n  }\n\n  return result;\n}\n\nfunction isAtomArray(arg) {\n  return isArray(arg);\n}\n\nregisterAtomType('accent', (context, atom) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  const mathstyle = context.mathstyle; // Build the base atom\n\n  let base = decompose(context.cramp(), atom.body);\n\n  if (atom.superscript || atom.subscript) {\n    // If there is a supsub attached to the accent\n    // apply it to the base.\n    // Note this does not give the same result as TeX when there\n    // are stacked accents, e.g. \\vec{\\breve{\\hat{\\acute{...}}}}^2\n    base = [atom.attachSupsub(context, makeSpan(base, '', 'mord'), 'mord')];\n  } // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n\n  let skew$1 = 0;\n\n  if (isArray(atom.body) && atom.body.length === 1 && atom.body[0].isCharacterBox()) {\n    skew$1 = skew(base);\n  } // calculate the amount of space between the body and the accent\n\n\n  let clearance = Math.min(height(base), mathstyle.metrics.xHeight);\n  let accentBody;\n\n  if (atom.svgAccent) {\n    accentBody = makeSVGSpan(atom.svgAccent);\n    clearance = -clearance + METRICS.bigOpSpacing1;\n  } else {\n    // Build the accent\n    const accent = makeSymbol('Main-Regular', atom.accent, 'math'); // Remove the italic correction of the accent, because it only serves to\n    // shift the accent over to a place we don't want.\n\n    accent.italic = 0; // The \\vec character that the fonts use is a combining character, and\n    // thus shows up much too far to the left. To account for this, we add a\n    // specific class which shifts the accent over to where we want it.\n\n    const vecClass = atom.accent === '\\u20d7' ? ' accent-vec' : '';\n    accentBody = makeSpan(makeSpan(accent), 'accent-body' + vecClass);\n  }\n\n  accentBody = makeVlist(context, [base, -clearance, accentBody]); // Shift the accent over by the skew. Note we shift by twice the skew\n  // because we are centering the accent, so by adding 2*skew to the left,\n  // we shift it to the right by 1*skew.\n\n  accentBody.children[1].setLeft(2 * skew$1);\n  return [makeSpan([accentBody], 'accent', 'mord')];\n});\nregisterAtomType('array', (context, atom) => {\n  var _a; // See http://tug.ctan.org/macros/latex/base/ltfsstrc.dtx\n  // and http://tug.ctan.org/macros/latex/base/lttab.dtx\n\n\n  let colFormat = atom.colFormat;\n\n  if (colFormat && colFormat.length === 0) {\n    colFormat = [{\n      align: 'l'\n    }];\n  }\n\n  if (!colFormat) {\n    colFormat = [{\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }, {\n      align: 'l'\n    }];\n  } // Fold the array so that there are no more columns of content than\n  // there are columns prescribed by the column format.\n\n\n  const array = [];\n  let colMax = 0; // Maximum number of columns of content\n\n  var _iterator25 = _createForOfIteratorHelper(colFormat),\n      _step25;\n\n  try {\n    for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n      const colSpec = _step25.value;\n      if (colSpec.align) colMax++;\n    }\n  } catch (err) {\n    _iterator25.e(err);\n  } finally {\n    _iterator25.f();\n  }\n\n  var _iterator26 = _createForOfIteratorHelper(atom.array),\n      _step26;\n\n  try {\n    for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n      const row = _step26.value;\n      let colIndex = 0;\n\n      while (colIndex < row.length) {\n        const newRow = [];\n        const lastCol = Math.min(row.length, colIndex + colMax);\n\n        while (colIndex < lastCol) {\n          newRow.push(row[colIndex++]);\n        }\n\n        array.push(newRow);\n      }\n    } // If the last row is empty, ignore it.\n\n  } catch (err) {\n    _iterator26.e(err);\n  } finally {\n    _iterator26.f();\n  }\n\n  if (array[array.length - 1].length === 1 && array[array.length - 1][0].length === 0) {\n    array.pop();\n  }\n\n  const mathstyle = MATHSTYLES[atom.mathstyle] || context.mathstyle; // Row spacing\n  // Default \\arraystretch from lttab.dtx\n\n  const arraystretch = atom.arraystretch || 1;\n  const arraycolsep = typeof atom.arraycolsep === 'number' ? atom.arraycolsep : METRICS.arraycolsep;\n  const arrayskip = arraystretch * METRICS.baselineskip;\n  const arstrutHeight = 0.7 * arrayskip;\n  const arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  let totalHeight = 0;\n  let nc = 0;\n  const body = [];\n  const nr = array.length;\n\n  for (let r = 0; r < nr; ++r) {\n    const inrow = array[r];\n    nc = Math.max(nc, inrow.length);\n    let height$1 = arstrutHeight; // \\@array adds an \\@arstrut\n\n    let depth$1 = arstrutDepth; // to each row (via the template)\n\n    const outrow = {\n      cells: [],\n      height: 0,\n      depth: 0,\n      pos: 0\n    };\n\n    for (let c = 0; c < inrow.length; ++c) {\n      const localContext = context.clone({\n        mathstyle: MATHSTYLES[atom.mathstyle]\n      });\n      const cell = decompose(localContext, inrow[c]) || [];\n      const elt = [makeSpan(null, '', 'mord')].concat(cell);\n      depth$1 = Math.max(depth$1, depth(elt));\n      height$1 = Math.max(height$1, height(elt));\n      outrow.cells.push(elt);\n    }\n\n    let jot = r === nr - 1 ? 0 : atom.jot || 0;\n\n    if ((_a = atom.rowGaps) === null || _a === void 0 ? void 0 : _a[r]) {\n      jot = atom.rowGaps[r];\n\n      if (jot > 0) {\n        // \\@argarraycr\n        jot += arstrutDepth;\n\n        if (depth$1 < jot) {\n          depth$1 = jot; // \\@xargarraycr\n        }\n\n        jot = 0;\n      }\n    }\n\n    outrow.height = height$1;\n    outrow.depth = depth$1;\n    totalHeight += height$1;\n    outrow.pos = totalHeight;\n    totalHeight += depth$1 + jot; // \\@yargarraycr\n\n    body.push(outrow);\n  }\n\n  const offset = totalHeight / 2 + mathstyle.metrics.axisHeight;\n  const contentCols = [];\n\n  for (let colIndex = 0; colIndex < nc; colIndex++) {\n    const col = [];\n\n    var _iterator27 = _createForOfIteratorHelper(body),\n        _step27;\n\n    try {\n      for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n        const row = _step27.value;\n        const elem = row.cells[colIndex];\n\n        if (!elem) {\n          continue;\n        }\n\n        elem.depth = row.depth;\n        elem.height = row.height;\n        col.push(elem);\n        col.push(row.pos - offset);\n      }\n    } catch (err) {\n      _iterator27.e(err);\n    } finally {\n      _iterator27.f();\n    }\n\n    if (col.length > 0) {\n      contentCols.push(makeVlist(context, col, 'individualShift'));\n    }\n  } // Iterate over each column description.\n  // Each `colDesc` will indicate whether to insert a gap, a rule or\n  // a column from 'contentCols'\n\n\n  const cols = [];\n  let prevColContent = false;\n  let prevColRule = false;\n  let currentContentCol = 0;\n  let firstColumn = !atom.leftDelim;\n\n  var _iterator28 = _createForOfIteratorHelper(colFormat),\n      _step28;\n\n  try {\n    for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n      const colDesc = _step28.value;\n\n      if (colDesc.align && currentContentCol >= contentCols.length) {\n        break;\n      } else if (colDesc.align && currentContentCol < contentCols.length) {\n        // If an alignment is specified, insert a column of content\n        if (prevColContent) {\n          // If no gap was provided, insert a default gap between\n          // consecutive columns of content\n          cols.push(makeColGap(2 * arraycolsep));\n        } else if (prevColRule || firstColumn) {\n          // If the previous column was a rule or this is the first column\n          // add a smaller gap\n          cols.push(makeColGap(arraycolsep));\n        }\n\n        cols.push(makeSpan(contentCols[currentContentCol], 'col-align-' + colDesc.align));\n        currentContentCol++;\n        prevColContent = true;\n        prevColRule = false;\n        firstColumn = false;\n      } else if (typeof colDesc.gap !== 'undefined') {\n        // Something to insert in between columns of content\n        if (typeof colDesc.gap === 'number') {\n          // It's a number, indicating how much space, in em,\n          // to leave in between columns\n          cols.push(makeColGap(colDesc.gap));\n        } else {\n          // It's a mathlist\n          // Create a column made up of the mathlist\n          // as many times as there are rows.\n          cols.push(makeColOfRepeatingElements(context, body, offset, colDesc.gap));\n        }\n\n        prevColContent = false;\n        prevColRule = false;\n        firstColumn = false;\n      } else if (colDesc.rule) {\n        // It's a rule.\n        const separator = makeSpan(null, 'vertical-separator');\n        separator.setStyle('height', totalHeight, 'em'); // result.setTop((1 - context.mathstyle.sizeMultiplier) *\n        //     context.mathstyle.metrics.axisHeight);\n\n        separator.setStyle('margin-top', 3 * context.mathstyle.metrics.axisHeight - offset, 'em');\n        separator.setStyle('vertical-align', 'top'); // separator.setStyle('display', 'inline-block');\n\n        let gap = 0;\n\n        if (prevColRule) {\n          gap = METRICS.doubleRuleSep - METRICS.arrayrulewidth;\n        } else if (prevColContent) {\n          gap = arraycolsep - METRICS.arrayrulewidth;\n        }\n\n        separator.setLeft(gap);\n        cols.push(separator);\n        prevColContent = false;\n        prevColRule = true;\n        firstColumn = false;\n      }\n    }\n  } catch (err) {\n    _iterator28.e(err);\n  } finally {\n    _iterator28.f();\n  }\n\n  if (prevColContent && !atom.rightDelim) {\n    // If the last column was content, add a small gap\n    cols.push(makeColGap(arraycolsep));\n  }\n\n  if ((!atom.leftDelim || atom.leftDelim === '.') && (!atom.rightDelim || atom.rightDelim === '.')) {\n    // There are no delimiters around the array, just return what\n    // we've built so far.\n    return [makeSpan(cols, 'mtable', 'mord')];\n  } // There is at least one delimiter. Wrap the core of the array with\n  // appropriate left and right delimiters\n  // const inner = makeSpan(makeSpan(cols, 'mtable'), 'mord');\n\n\n  const inner = makeSpan(cols, 'mtable');\n  const innerHeight = height(inner);\n  const innerDepth = depth(inner);\n  return [makeSpan([atom.bind(context, makeLeftRightDelim('mopen', atom.leftDelim, innerHeight, innerDepth, context)), inner, atom.bind(context, makeLeftRightDelim('mclose', atom.rightDelim, innerHeight, innerDepth, context))], '', 'mord')];\n});\n/**\r\n * Used in `decomposeArray` to create a column separator span.\r\n *\r\n */\n\nfunction makeColGap(width) {\n  const separator = makeSpan('\\u200b', 'arraycolsep');\n  separator.setWidth(width);\n  return separator;\n}\n/**\r\n * Used in decomposeArray to create a column of repeating elements.\r\n */\n\n\nfunction makeColOfRepeatingElements(context, body, offset, elem) {\n  const col = [];\n\n  var _iterator29 = _createForOfIteratorHelper(body),\n      _step29;\n\n  try {\n    for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n      const row = _step29.value;\n      const cell = makeSpan(decompose(context, elem));\n      cell.depth = row.depth;\n      cell.height = row.height;\n      col.push(cell);\n      col.push(row.pos - offset);\n    }\n  } catch (err) {\n    _iterator29.e(err);\n  } finally {\n    _iterator29.f();\n  }\n\n  return makeVlist(context, col, 'individualShift');\n}\n\nregisterAtomType('box', (context, atom) => {\n  // The padding extends outside of the base\n  const padding = typeof atom.padding === 'number' ? atom.padding : METRICS.fboxsep; // Base is the main content \"inside\" the box\n\n  const content = makeSpan(decompose(context, atom.body), '', 'mord');\n  content.setStyle('vertical-align', -depth(content), 'em');\n  content.setStyle('height', 0);\n  const base = makeSpan(content, '', 'mord'); // This span will represent the box (background and border)\n  // It's positioned to overlap the base\n  // The 'ML__box' class is required to prevent the span from being omitted\n  // during rendering (it looks like an empty, no-op span)\n\n  const box = makeSpan('', 'ML__box');\n  box.setStyle('position', 'absolute');\n  box.setStyle('height', height(base) + depth(base) + 2 * padding, 'em');\n\n  if (padding !== 0) {\n    box.setStyle('width', 'calc(100% + ' + 2 * padding + 'em)');\n  } else {\n    box.setStyle('width', '100%');\n  }\n\n  box.setStyle('top', -padding, 'em');\n  box.setStyle('left', -padding, 'em');\n  box.setStyle('z-index', '-1'); // Ensure the box is *behind* the base\n\n  box.setStyle('box-sizing', 'border-box');\n\n  if (atom.backgroundcolor) {\n    box.setStyle('background-color', atom.backgroundcolor);\n  }\n\n  if (atom.framecolor) {\n    box.setStyle('border', METRICS.fboxrule + 'em solid ' + atom.framecolor);\n  }\n\n  if (atom.border) box.setStyle('border', atom.border);\n  base.setStyle('display', 'inline-block');\n  base.setStyle('height', height(base) + depth(base), 'em'); // The result is a span that encloses the box and the base\n\n  const result = makeSpan([box, base]); // Set its position as relative so that the box can be absolute positioned\n  // over the base\n\n  result.setStyle('position', 'relative');\n  result.setStyle('vertical-align', -padding + depth(base), 'em'); // The padding adds to the width and height of the pod\n\n  result.height = height(base) + padding;\n  result.depth = depth(base) + padding;\n  result.setLeft(padding);\n  result.setRight(padding);\n  result.setStyle('height', result.height + result.depth - 2 * padding, 'em');\n  result.setStyle('top', -padding, 'em');\n  result.setStyle('display', 'inline-block');\n  return [result];\n});\nregisterAtomType('enclose', (context, atom) => {\n  const base = makeSpan(decompose(context, atom.body), '', 'mord'); // Account for the padding\n\n  const padding = typeof atom.padding === 'number' ? atom.padding : METRICS.fboxsep; // The 'ML__notation' class is required to prevent the span from being omitted\n  // during rendering (it looks like an empty, no-op span)\n\n  const notation = makeSpan('', 'ML__notation');\n  notation.setStyle('position', 'absolute');\n  notation.setStyle('height', height(base) + depth(base) + 2 * padding, 'em');\n  notation.height = height(base) + padding;\n  notation.depth = depth(base) + padding;\n\n  if (padding !== 0) {\n    notation.setStyle('width', 'calc(100% + ' + 2 * padding + 'em)');\n  } else {\n    notation.setStyle('width', '100%');\n  }\n\n  notation.setStyle('top', '0');\n  notation.setStyle('left', -padding, 'em');\n  notation.setStyle('z-index', '-1'); // Ensure the box is *behind* the base\n\n  if (atom.backgroundcolor) {\n    notation.setStyle('background-color', atom.backgroundcolor);\n  }\n\n  if (atom.notation.box) notation.setStyle('border', atom.borderStyle);\n\n  if (atom.notation.actuarial) {\n    notation.setStyle('border-top', atom.borderStyle);\n    notation.setStyle('border-right', atom.borderStyle);\n  }\n\n  if (atom.notation.madruwb) {\n    notation.setStyle('border-bottom', atom.borderStyle);\n    notation.setStyle('border-right', atom.borderStyle);\n  }\n\n  if (atom.notation.roundedbox) {\n    notation.setStyle('border-radius', (height(base) + depth(base)) / 2, 'em');\n    notation.setStyle('border', atom.borderStyle);\n  }\n\n  if (atom.notation.circle) {\n    notation.setStyle('border-radius', '50%');\n    notation.setStyle('border', atom.borderStyle);\n  }\n\n  if (atom.notation.top) notation.setStyle('border-top', atom.borderStyle);\n  if (atom.notation.left) notation.setStyle('border-left', atom.borderStyle);\n\n  if (atom.notation.right) {\n    notation.setStyle('border-right', atom.borderStyle);\n  }\n\n  if (atom.notation.bottom) {\n    notation.setStyle('border-bottom', atom.borderStyle);\n  }\n\n  let svg = '';\n\n  if (atom.notation.horizontalstrike) {\n    svg += '<line x1=\"3%\"  y1=\"50%\" x2=\"97%\" y2=\"50%\"';\n    svg += \" stroke-width=\\\"\".concat(atom.strokeWidth, \"\\\" stroke=\\\"\").concat(atom.strokeColor, \"\\\"\");\n    svg += ' stroke-linecap=\"round\"';\n\n    if (atom.svgStrokeStyle) {\n      svg += \" stroke-dasharray=\\\"\".concat(atom.svgStrokeStyle, \"\\\"\");\n    }\n\n    svg += '/>';\n  }\n\n  if (atom.notation.verticalstrike) {\n    svg += '<line x1=\"50%\"  y1=\"3%\" x2=\"50%\" y2=\"97%\"';\n    svg += \" stroke-width=\\\"\".concat(atom.strokeWidth, \"\\\" stroke=\\\"\").concat(atom.strokeColor, \"\\\"\");\n    svg += ' stroke-linecap=\"round\"';\n\n    if (atom.svgStrokeStyle) {\n      svg += \" stroke-dasharray=\\\"\".concat(atom.svgStrokeStyle, \"\\\"\");\n    }\n\n    svg += '/>';\n  }\n\n  if (atom.notation.updiagonalstrike) {\n    svg += '<line x1=\"3%\"  y1=\"97%\" x2=\"97%\" y2=\"3%\"';\n    svg += \" stroke-width=\\\"\".concat(atom.strokeWidth, \"\\\" stroke=\\\"\").concat(atom.strokeColor, \"\\\"\");\n    svg += ' stroke-linecap=\"round\"';\n\n    if (atom.svgStrokeStyle) {\n      svg += \" stroke-dasharray=\\\"\".concat(atom.svgStrokeStyle, \"\\\"\");\n    }\n\n    svg += '/>';\n  }\n\n  if (atom.notation.downdiagonalstrike) {\n    svg += '<line x1=\"3%\"  y1=\"3%\" x2=\"97%\" y2=\"97%\"';\n    svg += \" stroke-width=\\\"\".concat(atom.strokeWidth, \"\\\" stroke=\\\"\").concat(atom.strokeColor, \"\\\"\");\n    svg += ' stroke-linecap=\"round\"';\n\n    if (atom.svgStrokeStyle) {\n      svg += \" stroke-dasharray=\\\"\".concat(atom.svgStrokeStyle, \"\\\"\");\n    }\n\n    svg += '/>';\n  } // if (atom.notation.updiagonalarrow) {\n  //     const t = 1;\n  //     const length = Math.sqrt(w * w + h * h);\n  //     const f = 1 / length / 0.075 * t;\n  //     const wf = w * f;\n  //     const hf = h * f;\n  //     const x = w - t / 2;\n  //     let y = t / 2;\n  //     if (y + hf - .4 * wf < 0 ) y = 0.4 * wf - hf;\n  //     svg += '<line ';\n  //     svg += `x1=\"1\" y1=\"${h - 1}px\" x2=\"${x - .7 * wf}px\" y2=\"${y + .7 * hf}px\"`;\n  //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\n  //     svg += ' stroke-linecap=\"round\"';\n  //     if (atom.svgStrokeStyle) {\n  //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\n  //     }\n  //     svg += '/>';\n  //     svg += '<polygon points=\"';\n  //     svg += `${x},${y} ${x - wf - .4 * hf},${y + hf - .4 * wf} `;\n  //     svg += `${x - .7 * wf},${y + .7 * hf} ${x - wf + .4 * hf},${y + hf + .4 * wf} `;\n  //     svg += `${x},${y}`;\n  //     svg += `\" stroke='none' fill=\"${atom.strokeColor}\"`;\n  //     svg += '/>';\n  // }\n  // if (atom.notation.phasorangle) {\n  //     svg += '<path d=\"';\n  //     svg += `M ${h / 2},1 L1,${h} L${w},${h} \"`;\n  //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\n  //     if (atom.svgStrokeStyle) {\n  //         svg += ' stroke-linecap=\"round\"';\n  //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\n  //     }\n  //     svg += '/>';\n  // }\n  // if (atom.notation.radical) {\n  //     svg += '<path d=\"';\n  //     svg += `M 0,${.6 * h} L1,${h} L${emToPx(padding) * 2},1 \"`;\n  //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\n  //     if (atom.svgStrokeStyle) {\n  //         svg += ' stroke-linecap=\"round\"';\n  //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\n  //     }\n  //     svg += '/>';\n  // }\n  // if (atom.notation.longdiv) {\n  //     svg += '<path d=\"';\n  //     svg += `M ${w} 1 L1 1 a${emToPx(padding)} ${h / 2}, 0, 0, 1, 1 ${h} \"`;\n  //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\n  //     if (atom.svgStrokeStyle) {\n  //         svg += ' stroke-linecap=\"round\"';\n  //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\n  //     }\n  //     svg += '/>';\n  // }\n\n\n  if (svg) {\n    let svgStyle;\n\n    if (atom.shadow !== 'none') {\n      if (atom.shadow === 'auto') {\n        svgStyle = 'filter: drop-shadow(0 0 .5px rgba(255, 255, 255, .7)) drop-shadow(1px 1px 2px #333)';\n      } else {\n        svgStyle = 'filter: drop-shadow(' + atom.shadow + ')';\n      }\n    }\n\n    addSVGOverlay(notation, svg, svgStyle);\n  }\n\n  const result = makeSpan([notation, base]); // Set its position as relative so that the box can be absolute positioned\n  // over the base\n\n  result.setStyle('position', 'relative');\n  result.setStyle('display', 'inline'); // The padding adds to the width and height of the pod\n\n  result.height = height(base) + padding;\n  result.depth = depth(base) + padding;\n  result.setLeft(padding);\n  result.setRight(padding);\n  return [result];\n});\n/**\r\n * Gengrac -- Generalized fraction\r\n *\r\n * Decompose fractions, binomials, and in general anything made\r\n * of two expressions on top of each other, optionally separated by a bar,\r\n * and optionally surrounded by fences (parentheses, brackets, etc...)\r\n *\r\n * Depending on the type of fraction the mathstyle is either\r\n * display math or inline math (which is indicated by 'textstyle'). This value can\r\n * also be set to 'auto', which indicates it should use the current mathstyle\r\n */\n\nregisterAtomType('genfrac', (context, atom) => {\n  const mathstyle = atom.mathstyle === 'auto' ? context.mathstyle : MATHSTYLES[atom.mathstyle];\n  const newContext = context.clone({\n    mathstyle: mathstyle\n  });\n  let numer = [];\n\n  if (atom.numerPrefix) {\n    numer.push(makeSpan(atom.numerPrefix, 'mord'));\n  }\n\n  const numeratorStyle = atom.continuousFraction ? mathstyle : mathstyle.fracNum();\n  numer = numer.concat(decompose(newContext.clone({\n    mathstyle: numeratorStyle\n  }), atom.numer));\n  const numerReset = makeHlist(numer, context.mathstyle.adjustTo(numeratorStyle));\n  let denom = [];\n\n  if (atom.denomPrefix) {\n    denom.push(makeSpan(atom.denomPrefix, 'mord'));\n  }\n\n  const denominatorStyle = atom.continuousFraction ? mathstyle : mathstyle.fracDen();\n  denom = denom.concat(decompose(newContext.clone({\n    mathstyle: denominatorStyle\n  }), atom.denom));\n  const denomReset = makeHlist(denom, context.mathstyle.adjustTo(denominatorStyle));\n  const ruleWidth = !atom.hasBarLine ? 0 : METRICS.defaultRuleThickness / mathstyle.sizeMultiplier; // Rule 15b from TeXBook Appendix G, p.444\n  //\n  // 15b. If C > T, set u ← σ8 and v ← σ11. Otherwise set u ← σ9 or σ10,according\n  // as θ ̸= 0 or θ = 0, and set v ← σ12. (The fraction will be typeset with\n  // its numerator shifted up by an amount u with respect to the current\n  // baseline, and with the denominator shifted down by v, unless the boxes\n  // are unusually large.)\n\n  let numShift;\n  let clearance = 0;\n  let denomShift;\n\n  if (mathstyle.size === MATHSTYLES.displaystyle.size) {\n    numShift = mathstyle.metrics.num1; // set u ← σ8\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleWidth; //  φ ← 3θ\n    } else {\n      clearance = 7 * METRICS.defaultRuleThickness; // φ ← 7 ξ8\n    }\n\n    denomShift = mathstyle.metrics.denom1; // v ← σ11\n  } else {\n    if (ruleWidth > 0) {\n      numShift = mathstyle.metrics.num2; // u ← σ9\n\n      clearance = ruleWidth; //  φ ← θ\n    } else {\n      numShift = mathstyle.metrics.num3; // u ← σ10\n\n      clearance = 3 * METRICS.defaultRuleThickness; // φ ← 3 ξ8\n    }\n\n    denomShift = mathstyle.metrics.denom2; // v ← σ12\n  }\n\n  const numerDepth = numerReset ? depth(numerReset) : 0;\n  const denomHeight = denomReset ? height(denomReset) : 0;\n  let frac;\n\n  if (ruleWidth === 0) {\n    // Rule 15c from Appendix G\n    // No bar line between numerator and denominator\n    const candidateClearance = numShift - numerDepth - (denomHeight - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = makeVlist(newContext, [numerReset, -numShift, denomReset, denomShift], 'individualShift');\n  } else {\n    // Rule 15d from Appendix G\n    // There is a bar line between the numerator and the denominator\n    const axisHeight = mathstyle.metrics.axisHeight;\n    const numerLine = axisHeight + 0.5 * ruleWidth;\n    const denomLine = axisHeight - 0.5 * ruleWidth;\n\n    if (numShift - numerDepth - numerLine < clearance) {\n      numShift += clearance - (numShift - numerDepth - numerLine);\n    }\n\n    if (denomLine - (denomHeight - denomShift) < clearance) {\n      denomShift += clearance - (denomLine - (denomHeight - denomShift));\n    }\n\n    const mid = makeSpan(null, ' frac-line');\n    mid.applyStyle(atom.getStyle()); // Manually set the height of the line because its height is\n    // created in CSS\n\n    mid.height = ruleWidth / 2;\n    mid.depth = ruleWidth / 2;\n    const elements = [];\n\n    if (numerReset) {\n      elements.push(numerReset);\n      elements.push(-numShift);\n    }\n\n    elements.push(mid);\n    elements.push(ruleWidth / 2 - axisHeight);\n\n    if (denomReset) {\n      elements.push(denomReset);\n      elements.push(denomShift);\n    }\n\n    frac = makeVlist(newContext, elements, 'individualShift');\n  } // Add a 'mfrac' class to provide proper context for\n  // other css selectors (such as 'frac-line')\n\n\n  frac.classes += ' mfrac'; // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n  frac.height *= mathstyle.sizeMultiplier / context.mathstyle.sizeMultiplier;\n  frac.depth *= mathstyle.sizeMultiplier / context.mathstyle.sizeMultiplier; // if (!atom.leftDelim && !atom.rightDelim) {\n  //     return makeOrd(frac,\n  //         context.parentMathstyle.adjustTo(mathstyle) +\n  //         ((context.parentSize !== context.size) ?\n  //             (' sizing reset-' + context.parentSize + ' ' + context.size) : ''));\n  // }\n  // Rule 15e of Appendix G\n\n  const delimSize = mathstyle.size === MATHSTYLES.displaystyle.size ? mathstyle.metrics.delim1 : mathstyle.metrics.delim2; // Optional delimiters\n\n  const leftDelim = atom.bind(context, makeCustomSizedDelim('mopen', atom.leftDelim, delimSize, true, context.clone({\n    mathstyle: mathstyle\n  })));\n  const rightDelim = atom.bind(context, makeCustomSizedDelim('mclose', atom.rightDelim, delimSize, true, context.clone({\n    mathstyle: mathstyle\n  })));\n  leftDelim.applyStyle(atom.getStyle());\n  rightDelim.applyStyle(atom.getStyle());\n  return [atom.bind(context, // makeStruts(\n  makeSpan([leftDelim, frac, rightDelim], context.parentSize !== context.size ? 'sizing reset-' + context.parentSize + ' ' + context.size : '', 'mord') // )\n  )];\n});\n/**\r\n *  \\left....\\right\r\n *\r\n * Note that we can encounter malformed \\left...\\right, for example\r\n * a \\left without a matching \\right or vice versa. In that case, the\r\n * leftDelim (resp. rightDelim) will be undefined. We still need to handle\r\n * those cases.\r\n *\r\n */\n\nregisterAtomType('leftright', (context, atom) => {\n  if (!atom.body) {\n    // No body, only a delimiter\n    if (atom.leftDelim) {\n      return new Atom('math', 'mopen', atom.leftDelim).decompose(context);\n    }\n\n    if (atom.rightDelim) {\n      return new Atom('math', 'mclose', atom.rightDelim).decompose(context);\n    }\n\n    return null;\n  } // The scope of the context is this group, so make a copy of it\n  // so that any changes to it will be discarded when finished\n  // with this group.\n\n\n  const localContext = context.clone();\n  const inner = decompose(localContext, atom.body);\n  const mathstyle = localContext.mathstyle;\n  let innerHeight = 0;\n  let innerDepth = 0;\n  let result = []; // Calculate its height and depth\n  // The size of delimiters is the same, regardless of what mathstyle we are\n  // in. Thus, to correctly calculate the size of delimiter we need around\n  // a group, we scale down the inner size based on the size.\n\n  innerHeight = height(inner) * mathstyle.sizeMultiplier;\n  innerDepth = depth(inner) * mathstyle.sizeMultiplier; // Add the left delimiter to the beginning of the expression\n\n  if (atom.leftDelim) {\n    result.push(atom.bind(context, makeLeftRightDelim('mopen', atom.leftDelim, innerHeight, innerDepth, localContext, 'ML__open')));\n    result[result.length - 1].applyStyle(atom.getStyle());\n  }\n\n  if (inner) {\n    // Replace the delim (\\middle) spans with proper ones now that we know\n    // the height/depth\n    for (let i = 0; i < inner.length; i++) {\n      if (inner[i].delim) {\n        const savedCaret = inner[i].caret;\n        const savedSelected = /ML__selected/.test(inner[i].classes);\n        inner[i] = atom.bind(context, makeLeftRightDelim('minner', inner[i].delim, innerHeight, innerDepth, localContext));\n        inner[i].caret = savedCaret;\n        inner[i].selected(savedSelected);\n      }\n    }\n\n    result = result.concat(inner);\n  } // Add the right delimiter to the end of the expression.\n\n\n  if (atom.rightDelim) {\n    let delim = atom.rightDelim;\n    let classes;\n\n    if (delim === '?') {\n      if (context.smartFence) {\n        // Use a placeholder delimiter matching the open delimiter\n        delim = {\n          '(': ')',\n          '\\\\{': '\\\\}',\n          '\\\\lbrace': '\\\\rbrace',\n          '\\\\langle': '\\\\rangle',\n          '\\\\lfloor': '\\\\rfloor',\n          '\\\\lceil': '\\\\rceil',\n          '\\\\vert': '\\\\vert',\n          '\\\\lvert': '\\\\rvert',\n          '\\\\Vert': '\\\\Vert',\n          '\\\\lVert': '\\\\rVert',\n          '\\\\lbrack': '\\\\rbrack',\n          '\\\\ulcorner': '\\\\urcorner',\n          '\\\\llcorner': '\\\\lrcorner',\n          '\\\\lgroup': '\\\\rgroup',\n          '\\\\lmoustache': '\\\\rmoustache'\n        }[atom.leftDelim];\n        delim = delim || atom.leftDelim;\n        classes = 'ML__smart-fence__close';\n      } else {\n        delim = '.';\n      }\n    }\n\n    result.push(atom.bind(context, makeLeftRightDelim('mclose', delim, innerHeight, innerDepth, localContext, (classes || '') + ' ML__close')));\n    result[result.length - 1].applyStyle(atom.getStyle());\n  } // If the `inner` flag is set, return the `inner` element (that's the\n  // behavior for the regular `\\left...\\right`\n\n\n  if (atom.inner) return [makeSpan(result, mathstyle.cls(), 'minner')]; // Otherwise, include a `\\mathopen{}...\\mathclose{}`. That's the\n  // behavior for `\\mleft...\\mright`, which allows for tighter spacing\n  // for example in `\\sin\\mleft(x\\mright)`\n\n  return result;\n});\n/**\r\n * \\overline and \\underline\r\n */\n\nregisterAtomType('line', (context, atom) => {\n  const mathstyle = context.mathstyle; // TeXBook:443. Rule 9 and 10\n\n  const inner = decompose(context.cramp(), atom.body);\n  const ruleWidth = METRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\n  const line = makeSpan(null, context.mathstyle.adjustTo(MATHSTYLES.textstyle) + ' ' + atom.position + '-line');\n  line.height = ruleWidth;\n  line.maxFontSize = 1.0;\n  let vlist;\n\n  if (atom.position === 'overline') {\n    vlist = makeVlist(context, [inner, 3 * ruleWidth, line, ruleWidth]);\n  } else {\n    const innerSpan = makeSpan(inner);\n    vlist = makeVlist(context, [ruleWidth, line, 3 * ruleWidth, innerSpan], 'top', height(innerSpan));\n  }\n\n  return [makeSpan(vlist, atom.position, 'mord')];\n});\n/**\r\n * Operators are handled in the TeXbook pg. 443-444, rule 13(a).\r\n */\n\nregisterAtomType('mop', (context, atom) => {\n  var _a;\n\n  const mathstyle = context.mathstyle;\n  let base;\n  let baseShift = 0;\n  let slant = 0;\n\n  if (atom.isSymbol) {\n    // If this is a symbol, create the symbol.\n    // Most symbol operators get larger in displaystyle (rule 13)\n    const large = mathstyle.size === MATHSTYLES.displaystyle.size && atom.symbol !== '\\\\smallint';\n    base = makeSymbol(large ? 'Size2-Regular' : 'Size1-Regular', atom.body, 'op-symbol ' + (large ? 'large-op' : 'small-op'), 'mop'); // Shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n\n    baseShift = (base.height - base.depth) / 2 - mathstyle.metrics.axisHeight * mathstyle.sizeMultiplier; // The slant of the symbol is just its italic correction.\n\n    slant = base.italic;\n    base.applyStyle({\n      color: atom.isPhantom ? 'transparent' : atom.color,\n      backgroundColor: atom.isPhantom ? 'transparent' : atom.backgroundColor,\n      cssId: atom.cssId,\n      cssClass: atom.cssClass,\n      letterShapeStyle: context.letterShapeStyle\n    });\n  } else if (isArray(atom.body)) {\n    // If this is a list, decompose that list.\n    base = makeSpan(decompose(context, atom.body), '', 'mop');\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    console.assert(atom.type === 'mop');\n    base = atom.makeSpan(context, atom.body);\n  } // Bind the generated span and this atom so the atom can be retrieved\n  // from the span later.\n\n\n  atom.bind(context, base);\n  if (atom.isSymbol) base.setTop(baseShift);\n  let result = base;\n\n  if (atom.superscript || atom.subscript) {\n    const limits = (_a = atom.limits) !== null && _a !== void 0 ? _a : 'auto';\n\n    if (limits === 'limits' || limits === 'auto' && mathstyle.size === MATHSTYLES.displaystyle.size) {\n      result = atom.attachLimits(context, base, baseShift, slant);\n    } else {\n      result = atom.attachSupsub(context, base, 'mop');\n    }\n  }\n\n  return [result];\n}); // An `overunder` atom has the following attributes:\n// - body: atoms[]: atoms displayed on the base line\n// - svgBody: string. A SVG graphic displayed on the base line (if present, the body is ignored)\n// - overscript: atoms[]: atoms displayed above the body\n// - svgAbove: string. A named SVG graphic above the element\n// - underscript: atoms[]: atoms displayed below the body\n// - svgBelow: string. A named SVG graphic below the element\n// - skipBoundary: boolean. If true, ignore atom boundary when keyboard navigating\n\nregisterAtomType('overunder', (context, atom) => {\n  const body = atom.svgBody ? makeSVGSpan(atom.svgBody) : decompose(context, atom.body);\n  const annotationStyle = context.clone({\n    mathstyle: MATHSTYLES.scriptstyle\n  });\n  let above;\n  let below;\n\n  if (atom.svgAbove) {\n    above = makeSVGSpan(atom.svgAbove);\n  } else if (atom.overscript && atom.overscript.length > 0) {\n    above = makeSpan(decompose(annotationStyle, atom.overscript), context.mathstyle.adjustTo(annotationStyle.mathstyle));\n  }\n\n  if (atom.svgBelow) {\n    below = makeSVGSpan(atom.svgBelow);\n  } else if (atom.underscript && atom.underscript.length > 0) {\n    below = makeSpan(decompose(annotationStyle, atom.underscript), context.mathstyle.adjustTo(annotationStyle.mathstyle));\n  }\n\n  if (above && below) {\n    // Pad the above and below if over a \"base\"\n    below.setLeft(0.3);\n    below.setRight(0.3);\n    above.setLeft(0.3);\n    above.setRight(0.3);\n  }\n\n  let result = makeOverunderStack(context, body, above, below, isSpanType(atom.type) ? atom.type : 'mrel');\n\n  if (atom.superscript || atom.subscript) {\n    result = atom.attachLimits(context, result, 0, 0);\n  }\n\n  return [result];\n});\n/**\r\n * Combine a nucleus with an atom above and an atom below. Used to form\r\n * stacks for the 'overunder' atom type .\r\n *\r\n * @param nucleus The base over and under which the atoms will\r\n * be placed.\r\n * @param type The type ('mop', 'mrel', etc...) of the result\r\n */\n\nfunction makeOverunderStack(context, nucleus, above, below, type) {\n  // If nothing above and nothing below, nothing to do.\n  if (!above && !below) {\n    return makeSpan(nucleus, 'op-over-under', type); // return isArray(nucleus) ? makeSpan(nucleus) : nucleus;\n  }\n\n  let aboveShift = 0;\n  let belowShift = 0;\n\n  if (above) {\n    aboveShift = Math.max(METRICS.bigOpSpacing1, METRICS.bigOpSpacing3 - depth(above));\n  }\n\n  if (below) {\n    belowShift = Math.max(METRICS.bigOpSpacing2, METRICS.bigOpSpacing4 - height(below));\n  }\n\n  let result = null;\n\n  if (below && above) {\n    const bottom = height(below) + depth(below) + depth(nucleus);\n    result = makeVlist(context, [0, below, belowShift, nucleus, aboveShift, above, METRICS.bigOpSpacing2], 'bottom', bottom);\n  } else if (below && !above) {\n    const top = height(nucleus);\n    result = makeVlist(context, [0, below, belowShift, nucleus], 'top', top);\n  } else if (above && !below) {\n    result = makeVlist(context, [depth(nucleus), nucleus, Math.max(METRICS.bigOpSpacing2, aboveShift), above], 'bottom', depth(nucleus));\n  }\n\n  return makeSpan(result, 'op-over-under', type);\n}\n\nregisterAtomType('phantom', (context, atom) => {\n  if (atom.phantomType === 'vphantom') {\n    const content = makeSpan(decompose(context, atom.body), 'inner');\n    return [makeSpan([content, makeSpan(null, 'fix')], 'rlap', 'mord')];\n  } else if (atom.phantomType === 'hphantom' || atom.phantomType === 'smash' || atom.phantomType === 'bsmash' || atom.phantomType === 'tsmash') {\n    const content = makeSpan(decompose(context, atom.body), '', 'mord');\n\n    if (atom.phantomType !== 'bsmash') {\n      content.height = 0;\n    }\n\n    if (atom.phantomType !== 'tsmash') {\n      content.depth = 0;\n    }\n\n    return [makeSpan(makeVlist(context, [content]), '', 'mord')];\n  }\n\n  return [makeSpan(decompose(context, atom.body), '', 'mord')];\n});\nregisterAtomType('surd', (context, atom) => {\n  var _a; // See the TeXbook pg. 443, Rule 11.\n  // http://www.ctex.org/documents/shredder/src/texbook.pdf\n\n\n  const mathstyle = context.mathstyle; // First, we do the same steps as in overline to build the inner group\n  // and line\n\n  console.assert(atom.body === null || isArray(atom.body));\n  const inner = (_a = decompose(context.cramp(), atom.body)) !== null && _a !== void 0 ? _a : makeSpan('');\n  const ruleWidth = METRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\n  let phi = ruleWidth;\n\n  if (mathstyle.id < MATHSTYLES.textstyle.id) {\n    phi = mathstyle.metrics.xHeight;\n  } // Calculate the clearance between the body and line\n\n\n  let lineClearance = ruleWidth + phi / 4;\n  const innerTotalHeight = Math.max(2 * phi, (height(inner) + depth(inner)) * mathstyle.sizeMultiplier);\n  const minDelimiterHeight = innerTotalHeight + (lineClearance + ruleWidth); // Create a \\surd delimiter of the required minimum size\n\n  const delim = makeSpan(makeCustomSizedDelim('', '\\\\surd', minDelimiterHeight, false, context), 'sqrt-sign');\n  delim.applyStyle(atom.getStyle());\n  const delimDepth = delim.height + delim.depth - ruleWidth; // Adjust the clearance based on the delimiter size\n\n  if (delimDepth > height(inner) + depth(inner) + lineClearance) {\n    lineClearance = (lineClearance + delimDepth - (height(inner) + depth(inner))) / 2;\n  } // Shift the delimiter so that its top lines up with the top of the line\n\n\n  delim.setTop(delim.height - height(inner) - (lineClearance + ruleWidth));\n  const line = makeSpan(null, context.mathstyle.adjustTo(MATHSTYLES.textstyle) + ' sqrt-line');\n  line.applyStyle(atom.getStyle());\n  line.height = ruleWidth;\n  const body = makeVlist(context, [inner, lineClearance, line, ruleWidth]);\n\n  if (!atom.index) {\n    return [atom.bind(context, makeSpan([delim, body], 'sqrt', 'mord'))];\n  } // Handle the optional root index\n  // The index is always in scriptscript style\n\n\n  const newcontext = context.clone({\n    mathstyle: MATHSTYLES.scriptscriptstyle\n  });\n  const root = makeSpan(decompose(newcontext, atom.index), mathstyle.adjustTo(MATHSTYLES.scriptscriptstyle)); // Figure out the height and depth of the inner part\n\n  const innerRootHeight = Math.max(delim.height, body.height);\n  const innerRootDepth = Math.max(delim.depth, body.depth); // The amount the index is shifted by. This is taken from the TeX\n  // source, in the definition of `\\r@@t`.\n\n  const toShift = 0.6 * (innerRootHeight - innerRootDepth); // Build a VList with the superscript shifted up correctly\n\n  const rootVlist = makeVlist(context, [root], 'shift', -toShift); // Add a class surrounding it so we can add on the appropriate\n  // kerning\n\n  const result = makeSpan([makeSpan(rootVlist, 'root'), delim, body], 'sqrt', 'mord');\n  result.height = delim.height;\n  result.depth = delim.depth;\n  return [atom.bind(context, result)];\n}); // Performance to check first char of string: https://jsben.ch/QLjdZ\n\nfunction isLiteral(token) {\n  return !/^<({|}|\\$|\\$\\$|space)>$/.test(token);\n}\n/**\r\n * Transform a list of tokens into a list of atoms.\r\n *\r\n\n * @property tokens - An array of tokens generated by the lexer.\r\n * @property args - Optional arguments to substitute the `#` token.\r\n * @property macros - A dictionary of objects, index by the name of\r\n * the macro, with the following keys:\r\n *    * args: an integer, the number of arguments, default 0. They can be referenced as #0,\r\n *       #1, #2... inside the definition of the macro\r\n *    * def: a string, the definition of the macro, which can reference other macros\r\n * @property index - The current token to be parsed: index in `this.tokens`\r\n * @property atoms - Accumulated result of the parsing by\r\n * `parseAtom()`\r\n * @property style - The font, weight, color, etc. to apply to the\r\n * upcoming tokens\r\n * @property parseMode - The parse mode indicates the syntax rules to\r\n * use to parse the upcoming tokens.\r\n * @property tabularMode - When in tabular mode, `'&'` is interpreted as\r\n *  a column separator and `'\\'` as a row separator. Used for matrixes, etc...\r\n * @property endCount - Counter to prevent deadlock. If `end()` is\r\n * called too many times (1,000) in a row for the same token, bail.\r\n */\n\n\nclass Parser {\n  /**\r\n   * @param tokens - An array of tokens generated by the lexer.\r\n   * @param args - An optional list of arguments. `#n` tokens will be\r\n   * substituted with the corresponding element in the args object. This is used\r\n   * when parsing macros.\r\n   */\n  constructor(tokens, args, macros, onError) {\n    this.index = 0;\n    this.style = {};\n    this.parseMode = 'math';\n    this.smartFence = false;\n    this.tabularMode = false; // For arrays, matrix, etc.: ifferent parsing rules apply.\n\n    this.atoms = [];\n    this.endCount = 0;\n    this.tokens = tokens;\n    this.args = args;\n    this.macros = macros;\n\n    this.onError = err => onError(_objectSpread({\n      before: tokensToString(this.tokens.slice(this.index, this.index + 10)),\n      after: tokensToString(this.tokens.slice(Math.max(0, this.index - 10), this.index))\n    }, err));\n  }\n\n  swapAtoms(newAtoms = []) {\n    const result = this.atoms;\n    this.atoms = newAtoms;\n    return result;\n  }\n\n  swapParseMode(mode) {\n    const result = this.parseMode;\n    this.parseMode = mode;\n    return result;\n  }\n  /**\r\n   * True if we've reached the end of the token stream\r\n   */\n\n\n  end() {\n    // To prevent a deadlock, count how many times end() is called without the\n    // index advancing. If it happens more than 1,000 times in a row,\n    // assume something is broken and pretend the stream is finished.\n    this.endCount++;\n    return this.index >= this.tokens.length || this.endCount > 1000;\n  }\n\n  get() {\n    this.endCount = 0;\n    return this.index < this.tokens.length ? this.tokens[this.index++] : '';\n  }\n\n  peek() {\n    return this.tokens[this.index];\n  }\n  /**\r\n   * @return True if the next token matches the input, and advance\r\n   */\n\n\n  match(input) {\n    if (this.tokens[this.index] === input) {\n      this.index++;\n      return true;\n    }\n\n    return false;\n  }\n  /**\r\n   * Return the last atom that can have a subsup attached to it.\r\n   * If there isn't one, insert a `msubsup` and return it.\r\n   */\n\n\n  lastSubsupAtom() {\n    const lastAtom = this.atoms.length === 0 ? undefined : this.atoms[this.atoms.length - 1];\n\n    if (!lastAtom || lastAtom.type !== 'mop' && lastAtom.type !== 'leftright' && lastAtom.type !== 'msubsup') {\n      if (!(lastAtom === null || lastAtom === void 0 ? void 0 : lastAtom.limits) || (lastAtom === null || lastAtom === void 0 ? void 0 : lastAtom.limits) === 'nolimits') {\n        this.atoms.push(new Atom(this.parseMode, 'msubsup', '\\u200b'));\n      }\n    }\n\n    return this.atoms[this.atoms.length - 1];\n  }\n  /**\r\n   * @return True if the next token matches the specified regular expression pattern.\r\n   */\n\n\n  hasPattern(pattern) {\n    return pattern.test(this.tokens[this.index]);\n  }\n\n  hasInfixCommand() {\n    const index = this.index;\n\n    if (index < this.tokens.length && this.tokens[index][0] === '\\\\') {\n      const info = getInfo(this.tokens[index], this.parseMode, this.macros);\n      if ((info === null || info === void 0 ? void 0 : info.mode) && !info.mode.includes(this.parseMode)) return false;\n      return info === null || info === void 0 ? void 0 : info.infix;\n    }\n\n    return false;\n  }\n\n  matchColumnSeparator() {\n    const index = this.index;\n\n    if (this.tabularMode && this.tokens[index] === '&') {\n      this.index++;\n      return true;\n    }\n\n    return false;\n  }\n\n  matchRowSeparator() {\n    const index = this.index;\n\n    if (this.tabularMode && (this.tokens[index] === '\\\\\\\\' || this.tokens[index] === '\\\\cr')) {\n      this.index++;\n      return true;\n    }\n\n    return false;\n  }\n  /**\r\n   * Return the appropriate value for a placeholder, either a default\r\n   * one, or if a value was provided for #? via args, that value.\r\n   */\n\n\n  placeholder() {\n    var _a;\n\n    if (!this.args || typeof this.args['?'] === 'undefined') {\n      // U+2753 = BLACK QUESTION MARK ORNAMENT\n      const result = new Atom(this.parseMode, 'placeholder', '?', this.style);\n      result.captureSelection = true;\n      return [result];\n    }\n\n    if (typeof ((_a = this.args) === null || _a === void 0 ? void 0 : _a['?']) === 'string') {\n      // If there is a specific value defined for the placeholder,\n      // use it.\n      return parseString(this.args['?'], this.parseMode, null, this.macros, false, this.onError);\n    }\n\n    return this.args['?'];\n  } // matchToken(type: string): boolean {\n  //     if (this.hasToken(type)) {\n  //         this.index++;\n  //         return true;\n  //     }\n  //     return false;\n  // }\n\n\n  matchWhitespace() {\n    let found = false;\n\n    while (this.match('<space>')) {\n      found = true;\n    }\n\n    return found;\n  }\n\n  skipUntilToken(input) {\n    let token = this.tokens[this.index];\n\n    while (token && token !== input) {\n      token = this.tokens[++this.index];\n    }\n\n    if (token === input) {\n      this.index++;\n    }\n  }\n\n  skipFiller() {\n    let done = false;\n\n    do {\n      const skippedSpace = this.matchWhitespace();\n      const skippedRelax = this.match('\\\\relax');\n      done = !skippedSpace && !skippedRelax;\n    } while (!done);\n  }\n  /**\r\n   * Keywords are used to specify dimensions, and for various other\r\n   * syntactic constructs.\r\n   *\r\n   * Unlike commands, they are not case sensitive.\r\n   *\r\n   * There are 25 keywords:\r\n   *\r\n   * at by bp cc cm dd depth em ex fil fill filll height in minus\r\n   * mm mu pc plus pt sp spread to true width\r\n   *\r\n   * TeX: 8212\r\n   * @return true if the expected keyword is present\r\n   */\n\n\n  matchKeyword(keyword) {\n    const savedIndex = this.index;\n    let done = this.end();\n    let value = '';\n\n    while (!done) {\n      const token = this.get();\n\n      if (isLiteral(token)) {\n        value += token;\n        done = this.end() || value.length >= keyword.length;\n      } else {\n        done = true;\n      }\n    }\n\n    const hasKeyword = keyword.toUpperCase() === value.toUpperCase();\n\n    if (!hasKeyword) {\n      this.index = savedIndex;\n    }\n\n    return hasKeyword;\n  }\n  /**\r\n   * Return a sequence of characters as a string.\r\n   * i.e. 'abcd' returns 'abcd'.\r\n   * Terminates on the first non-literal token encountered\r\n   * e.g. '<{>', '<}>' etc...\r\n   * Will also terminate on character literal ']'\r\n   */\n\n\n  scanString() {\n    let result = '';\n    let done = this.end();\n\n    while (!done) {\n      if (this.match('<space>')) {\n        result += ' ';\n      } else {\n        const token = this.peek();\n\n        if (token === ']') {\n          done = true;\n        } else if (isLiteral(token)) {\n          result += this.get();\n        } else if (token[0] === '\\\\') {\n          // TeX will give a 'Missing \\endcsname inserted' error\n          // if it encounters any command when expecting a string.\n          // We're a bit more lax.\n          this.onError({\n            code: 'unbalanced-braces'\n          });\n          result += this.get();\n        } else {\n          // It's '<{>', '<}>', '<$>' or '<$$>\n          done = true;\n        }\n      }\n\n      done = done || this.end();\n    }\n\n    return result;\n  }\n  /**\r\n   * Return a sequence of characters as a string.\r\n   * Terminates on a balanced closing bracket\r\n   * This is used by the `\\ce` command\r\n   */\n\n\n  scanBalancedString() {\n    let result = '';\n    let done = this.end();\n    let level = 1;\n\n    while (!done) {\n      if (this.match('<space>')) {\n        result += ' ';\n      } else {\n        const token = this.get();\n\n        if (token === '<{>') {\n          result += '{';\n          level += 1;\n        } else if (token === '<}>') {\n          level -= 1;\n\n          if (level > 0) {\n            result += '}';\n          } else {\n            this.index -= 1;\n          }\n        } else if (token === '<$>') {\n          result += '$';\n        } else if (token === '<$$>') {\n          result += '$$';\n        } else {\n          result += token;\n        }\n      }\n\n      done = level === 0 || this.end();\n    }\n\n    return result;\n  }\n  /**\r\n   * Return the literal tokens, as a string, until a matching closing \"}\"\r\n   */\n\n\n  matchLiteralArg() {\n    var _a;\n\n    let result = '';\n\n    if (this.match('<{>')) {\n      let depth = 1;\n\n      while (depth > 0 && !this.end()) {\n        const token = this.get();\n\n        if (token === '<}>') {\n          depth -= 1;\n\n          if (depth > 0) {\n            // Don't include final '}'\n            result += '}';\n          }\n        } else if (token === '<{>') {\n          depth += 1;\n          result += '{';\n        } else {\n          result += (_a = {\n            '<space>': ' ',\n            '<$$>': '$$',\n            '<$>': '$'\n          }[token]) !== null && _a !== void 0 ? _a : token;\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Return a CSS color (#rrggbb)\r\n   */\n\n\n  scanColor() {\n    return stringToColor(this.scanString());\n  }\n  /**\r\n   * Return as a number a group of characters representing a\r\n   * numerical quantity.\r\n   *\r\n   * From TeX:8695 (scan_int):\r\n   * An integer number can be preceded by any number of spaces and `+' or\r\n   * `-' signs. Then comes either a decimal constant (i.e., radix 10), an\r\n   * octal constant (i.e., radix 8, preceded by '), a hexadecimal constant\r\n   * (radix 16, preceded by \"), an alphabetic constant (preceded by `), or\r\n   * an internal variable.\r\n   */\n\n\n  scanNumber(isInteger = true) {\n    var _a, _b;\n\n    let negative = false;\n    let token = this.peek();\n\n    while (token === '<space>' || token === '+' || token === '-') {\n      this.get();\n      if (token === '-') negative = !negative;\n      token = this.peek();\n    }\n\n    isInteger = Boolean(isInteger);\n    let radix = 10;\n    let digits = /[0-9]/;\n\n    if (this.match(\"'\")) {\n      // Apostrophe indicates an octal value\n      radix = 8;\n      digits = /[0-7]/;\n      isInteger = true;\n    } else if (this.match('\"') || this.match('x')) {\n      // Double-quote indicates a hex value\n      // The 'x' prefix notation for the hexadecimal numbers is a MathJax extension.\n      // For example: 'x3a'\n      radix = 16; // Hex digits have to be upper-case\n\n      digits = /[0-9A-F]/;\n      isInteger = true;\n    } else if (this.match('`')) {\n      // A backtick indicates an alphabetic constant: a letter, or a single-letter command\n      token = this.get();\n\n      if (token) {\n        if (token.startsWith('\\\\') && token.length === 2) {\n          return (negative ? -1 : 1) * ((_a = token.codePointAt(1)) !== null && _a !== void 0 ? _a : 0);\n        }\n\n        return (negative ? -1 : 1) * ((_b = token.codePointAt(0)) !== null && _b !== void 0 ? _b : 0);\n      }\n\n      return NaN;\n    }\n\n    let value = '';\n\n    while (this.hasPattern(digits)) {\n      value += this.get();\n    } // Parse the fractional part, if applicable\n\n\n    if (!isInteger && (this.match('.') || this.match(','))) {\n      value += '.';\n\n      while (this.hasPattern(digits)) {\n        value += this.get();\n      }\n    }\n\n    const result = isInteger ? parseInt(value, radix) : parseFloat(value);\n    return negative ? -result : result;\n  }\n  /**\r\n   * Return as a floating point number a dimension in pt (1 em = 10 pt)\r\n   *\r\n   * See TeX:8831\r\n   * @todo: note that some units depend on the font (em, ex). So it might be\r\n   * better to return a dimen struct with the value + unit and resolve\r\n   * later when we have a font context....\r\n   */\n\n\n  scanDimen() {\n    const value = this.scanNumber(false);\n    this.matchWhitespace();\n    let result;\n\n    if (this.matchKeyword('pt')) {\n      result = convertDimenToEm(value, 'pt');\n    } else if (this.matchKeyword('mm')) {\n      result = convertDimenToEm(value, 'mm');\n    } else if (this.matchKeyword('cm')) {\n      result = convertDimenToEm(value, 'cm');\n    } else if (this.matchKeyword('ex')) {\n      result = convertDimenToEm(value, 'ex');\n    } else if (this.matchKeyword('px')) {\n      result = convertDimenToEm(value, 'px');\n    } else if (this.matchKeyword('em')) {\n      result = convertDimenToEm(value, 'em');\n    } else if (this.matchKeyword('bp')) {\n      result = convertDimenToEm(value, 'bp');\n    } else if (this.matchKeyword('dd')) {\n      result = convertDimenToEm(value, 'dd');\n    } else if (this.matchKeyword('pc')) {\n      result = convertDimenToEm(value, 'pc');\n    } else if (this.matchKeyword('in')) {\n      result = convertDimenToEm(value, 'in');\n    } else if (this.matchKeyword('mu')) {\n      result = convertDimenToEm(value, 'mu');\n    } else {\n      // If the units are missing, TeX assumes 'pt'\n      this.onError({\n        code: 'missing-unit'\n      });\n      result = convertDimenToEm(value, 'pt');\n    }\n\n    return result;\n  }\n\n  scanSkip() {\n    const result = this.scanDimen(); // We parse, but ignore, the optional 'plus' and 'minus'\n    // arguments.\n\n    this.matchWhitespace(); // 'plus', optionally followed by 'minus'\n    // ('minus' cannot come before 'plus')\n    // dimen or 'hfill'\n\n    if (this.matchKeyword('plus')) {\n      // @todo there could also be a \\hFilLlL command here\n      this.scanDimen();\n    }\n\n    this.matchWhitespace();\n\n    if (this.matchKeyword('minus')) {\n      // @todo there could also be a \\hFilLlL command here\n      this.scanDimen();\n    }\n\n    return result;\n  }\n\n  scanColspec() {\n    this.matchWhitespace();\n    const result = [];\n\n    while (!this.end() && !(this.peek() === '<}>' || this.peek() === ']')) {\n      const literal = this.get();\n\n      if (literal === 'c' || literal === 'r' || literal === 'l') {\n        result.push({\n          align: literal\n        });\n      } else if (literal === '|') {\n        result.push({\n          rule: true\n        });\n      } else if (literal === '@') {\n        if (this.match('<{>')) {\n          const savedParsemode = this.swapParseMode('math');\n          result.push({\n            gap: this.parse(token => token === '<}>')\n          });\n          this.swapParseMode(savedParsemode);\n        }\n\n        if (!this.match('<}>')) {\n          this.onError({\n            code: 'unbalanced-braces'\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\r\n   * Parse a `\\(...\\)` or `\\[...\\]` sequence\r\n   * @return group for the sequence or null\r\n   */\n\n\n  parseModeSet() {\n    let final = '';\n    if (this.match('\\\\(')) final = '\\\\)';\n    if (!final && this.match('\\\\[')) final = '\\\\]';\n    if (!final) return null;\n    const savedParsemode = this.swapParseMode('math');\n    const result = new Atom('math', 'group');\n    result.mathstyle = final === '\\\\)' ? 'textstyle' : 'displaystyle';\n    result.body = this.parse(token => token === final);\n\n    if (!this.match(final)) {\n      this.onError({\n        code: 'unbalanced-mode-shift'\n      });\n    }\n\n    this.swapParseMode(savedParsemode);\n    if (!result.body || result.body.length === 0) return null;\n    return result;\n  }\n  /**\r\n   * Parse a `$...$` or `$$...$$` sequence\r\n   */\n\n\n  parseModeShift() {\n    let final = '';\n    if (this.match('<$>')) final = '<$>';\n    if (!final && this.match('<$$>')) final = '<$$>';\n    if (!final) return null;\n    const result = new Atom('math', 'group');\n    result.mathstyle = final === '<$>' ? 'textstyle' : 'displaystyle';\n    result.latexOpen = final === '<$>' ? '$' : '$$';\n    result.latexClose = result.latexOpen;\n    const savedParsemode = this.swapParseMode('math');\n    result.body = this.parse(token => token === final);\n\n    if (!this.match(final)) {\n      this.onError({\n        code: 'unbalanced-mode-shift'\n      });\n    }\n\n    this.swapParseMode(savedParsemode);\n    if (!result.body || result.body.length === 0) return null;\n    return result;\n  }\n  /**\r\n   * Parse a \\begin{env}...\\end{end} sequence\r\n   */\n\n\n  parseEnvironment() {\n    // An environment starts with a \\begin command\n    if (!this.match('\\\\begin')) return null; // The \\begin command is immediately followed by the environment\n    // name, as a string argument\n\n    const envName = this.parseArgument('string');\n    if (!envName) return null;\n    const def = getEnvironmentDefinition(envName);\n\n    if (!def) {\n      this.onError({\n        code: 'unknown-environment',\n        arg: envName\n      });\n      return null;\n    } // If the environment has some arguments, parse them\n\n\n    const args = [];\n\n    if (def === null || def === void 0 ? void 0 : def.params) {\n      var _iterator30 = _createForOfIteratorHelper(def.params),\n          _step30;\n\n      try {\n        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n          const param = _step30.value;\n\n          // Parse an argument\n          if (param.isOptional) {\n            // If it's not present, scanArg returns null,\n            // but push it on the list of arguments anyway.\n            // The null value will be interpreted as unspecified\n            // optional value by the command parse function.\n            args.push(this.parseOptionalArgument(param.type));\n          } else {\n            const arg = this.parseArgument(param.type);\n\n            if (!arg) {\n              this.onError({\n                code: 'missing-argument',\n                arg: envName\n              });\n            }\n\n            args.push(arg);\n          }\n        }\n      } catch (err) {\n        _iterator30.e(err);\n      } finally {\n        _iterator30.f();\n      }\n    } // Some environments change the mode\n\n\n    const savedMode = this.parseMode;\n    const savedTabularMode = this.tabularMode;\n    const saveAtoms = this.swapAtoms([]); // @todo: since calling scanImplicitGroup(), may not need to save/restore the atoms\n\n    this.tabularMode = def.tabular;\n    const array = [];\n    const rowGaps = [];\n    let row = [];\n    let done = false;\n\n    do {\n      if (this.end()) {\n        this.onError({\n          code: 'unbalanced-environment',\n          arg: envName\n        });\n        done = true;\n      }\n\n      if (!done && this.match('\\\\end')) {\n        if (this.parseArgument('string') !== envName) {\n          this.onError({\n            code: 'unbalanced-environment',\n            arg: envName\n          });\n        }\n\n        done = true;\n      }\n\n      if (!done) {\n        if (this.matchColumnSeparator()) {\n          row.push(this.swapAtoms([]));\n        } else if (this.matchRowSeparator()) {\n          row.push(this.swapAtoms([]));\n          let gap = 0;\n          this.matchWhitespace();\n\n          if (this.match('[')) {\n            gap = this.scanDimen();\n            this.matchWhitespace();\n            this.match(']');\n          }\n\n          rowGaps.push(gap || 0);\n          array.push(row);\n          row = [];\n        } else {\n          this.atoms = this.atoms.concat(this.parse(token => token === '<}>' || token === '&' || token === '\\\\end' || token === '\\\\cr' || token === '\\\\\\\\'));\n        }\n      }\n    } while (!done);\n\n    row.push(this.swapAtoms([]));\n    if (row.length > 0) array.push(row);\n    const newAtoms = this.swapAtoms(saveAtoms); // If we're in tabular mode, we should end up with an empty atoms list\n\n    console.assert(!this.tabularMode || newAtoms.length === 0, 'Leftover atoms in tabular mode');\n    this.parseMode = savedMode;\n    this.tabularMode = savedTabularMode;\n    if (!def.tabular && newAtoms.length === 0) return null;\n    if (def.tabular && array.length === 0) return null;\n    const result = new Atom(this.parseMode, 'array', newAtoms);\n    Object.assign(result, def.parser(envName, args, array));\n    result.array = array;\n    result.rowGaps = rowGaps;\n    result.environmentName = envName;\n    return result;\n  }\n  /**\r\n   * Parse a sequence until a group end marker, such as\r\n   * `}`, `\\end`, `&`, etc...\r\n   *\r\n   * Returns an array of atoms or an empty array if the sequence\r\n   * terminates right away.\r\n   *\r\n   * @param done - A predicate indicating if a\r\n   * token signals the end of an implicit group\r\n   */\n\n\n  parse(done) {\n    var _a;\n\n    const savedStyle = this.style;\n\n    if (!done) {\n      // Default group end marker\n      done = token => token === '<}>';\n    } // To handle infix commands, we'll keep track of their prefix\n    // (tokens coming before them) and their arguments\n\n\n    let infix = '';\n    let infixInfo = null;\n    let infixArgs = [];\n    let prefix = null;\n    const saveAtoms = this.swapAtoms([]);\n\n    while (!this.end() && !done(this.peek())) {\n      if (this.hasInfixCommand() && !infix) {\n        // The next token is an infix and we have not seen one yet\n        // (there can be only one infix command per implicit group).\n        infix = this.get(); // The current parseMode, this.parseMode, may no longer have the value\n        // it had when we encountered the infix. However, since all infix are\n        // only defined in 'math' mode, we can use the 'math' constant\n        // for the parseMode\n\n        infixInfo = getInfo(infix, 'math', this.macros);\n\n        if (infixInfo) {\n          infixArgs = this.parseArguments(infixInfo)[1];\n        } // Save the math list so far and start a new one\n\n\n        prefix = this.swapAtoms([]);\n      } else {\n        this.parseToken();\n      }\n    }\n\n    let result;\n\n    if (infix) {\n      console.assert(Boolean(infixInfo));\n      infixArgs.unshift(this.swapAtoms(saveAtoms)); // suffix\n\n      if (prefix) infixArgs.unshift(prefix);\n      result = [new Atom(this.parseMode, infixInfo.type, (_a = infixInfo.value) !== null && _a !== void 0 ? _a : infix.slice(1), // Functions don't have\n      infixInfo.parse ? infixInfo.parse(infix, infixArgs) : null)];\n      result[0].symbol = infix;\n    } else {\n      result = this.swapAtoms(saveAtoms);\n    }\n\n    this.style = savedStyle;\n    return result;\n  }\n  /**\r\n   * Parse a group enclosed in a pair of braces: `{...}`.\r\n   *\r\n   * Return either a group Atom or null if not a group.\r\n   *\r\n   * Return a group Atom with an empty body if an empty\r\n   * group (i.e. `{}`).\r\n   */\n\n\n  parseGroup() {\n    if (!this.match('<{>')) return null;\n    const result = new Atom(this.parseMode, 'group');\n    result.body = this.parse(token => token === '<}>');\n\n    if (!this.match('<}>')) {\n      this.onError({\n        code: 'unbalanced-braces'\n      });\n    }\n\n    result.latexOpen = '{';\n    result.latexClose = '}';\n    return result;\n  }\n\n  scanSmartFence() {\n    this.matchWhitespace();\n    if (!this.match('(')) return null; // We've found an open paren... Convert to a `\\mleft...\\mright`\n\n    const result = new Atom(this.parseMode, 'leftright');\n    result.leftDelim = '(';\n    result.inner = false; // It's a `\\mleft`, not a `\\left`\n\n    const saveAtoms = this.swapAtoms([]);\n    let nestLevel = 1;\n\n    while (!this.end() && nestLevel !== 0) {\n      if (this.match('(')) nestLevel += 1;\n      if (this.match(')')) nestLevel -= 1;\n      if (nestLevel !== 0) this.parseToken();\n    }\n\n    if (nestLevel === 0) this.match(')');\n    result.rightDelim = nestLevel === 0 ? ')' : '?';\n    result.body = this.swapAtoms(saveAtoms);\n    return result;\n  }\n  /**\r\n   * Scan a delimiter, e.g. '(', '|', '\\vert', '\\ulcorner'\r\n   *\r\n   * @return The delimiter (as a character or command) or null\r\n   */\n\n\n  scanDelim() {\n    this.matchWhitespace();\n    const token = this.get();\n\n    if (!token) {\n      this.onError({\n        code: 'unexpected-end-of-string'\n      });\n      return null;\n    }\n\n    let delim = '.';\n\n    if (token[0] === '\\\\' || isLiteral(token)) {\n      delim = token;\n    }\n\n    const info = getInfo(delim, 'math', this.macros);\n\n    if (!info) {\n      this.onError({\n        code: 'unknown-command',\n        arg: delim\n      });\n      return null;\n    }\n\n    if (info.mode && !info.mode.includes(this.parseMode)) {\n      this.onError({\n        code: 'unexpected-delimiter',\n        arg: delim\n      });\n      return null;\n    }\n\n    if (info.type === 'mopen' || info.type === 'mclose') {\n      return delim;\n    } // Some symbols are not of type mopen/mclose, but are still\n    // valid delimiters...\n    // '?' is a special delimiter used as a 'placeholder'\n    // (when the closing delimiter is displayed greyed out)\n\n\n    if (/^(\\.|\\?|\\||<|>|\\\\vert|\\\\Vert|\\\\\\||\\\\surd|\\\\uparrow|\\\\downarrow|\\\\Uparrow|\\\\Downarrow|\\\\updownarrow|\\\\Updownarrow|\\\\mid|\\\\mvert|\\\\mVert)$/.test(delim)) {\n      return delim;\n    }\n\n    this.onError({\n      code: 'unexpected-delimiter',\n      arg: delim\n    });\n    return null;\n  }\n  /**\r\n   * Parse a `/left.../right` sequence.\r\n   *\r\n   * Note: the `/middle` command can occur multiple times inside a\r\n   * `/left.../right` sequence, and is handled separately.\r\n   *\r\n   * Return either an atom of type `'leftright'` or null\r\n   */\n\n\n  parseLeftRight() {\n    if (this.match('\\\\right') || this.match('\\\\mright')) {\n      // We have an unbalanced left/right (there's a \\right, but no \\left)\n      this.onError({\n        code: 'unbalanced-braces'\n      });\n      return null;\n    }\n\n    const savedStyle = this.style;\n    let close = '\\\\right';\n\n    if (!this.match('\\\\left')) {\n      if (!this.match('\\\\mleft')) return null;\n      close = '\\\\mright';\n    }\n\n    const leftDelim = this.scanDelim();\n    if (!leftDelim) return null;\n    const saveAtoms = this.swapAtoms([]);\n\n    while (!this.end() && !this.match(close)) {\n      this.parseToken();\n    }\n\n    this.style = savedStyle; // If we've reached the end and there was no `\\right` or\n    // there isn't a valid delimiter after `\\right`, we'll\n    // consider the `\\right` missing and set the `rightDelim` to undefined\n\n    const rightDelim = this.scanDelim();\n    const result = new Atom(this.parseMode, 'leftright', '', this.style);\n    result.leftDelim = leftDelim;\n    result.rightDelim = rightDelim !== null && rightDelim !== void 0 ? rightDelim : undefined;\n    result.inner = close === 'right';\n    result.body = this.swapAtoms(saveAtoms);\n    return result;\n  }\n  /**\r\n   * Parse a subscript/superscript: `^` and `_`.\r\n   *\r\n   * Modify the last atom accordingly.\r\n   *\r\n   */\n\n\n  parseSupSub() {\n    var _a, _b; // No sup/sub in text or command mode.\n\n\n    if (this.parseMode !== 'math') return false; // Apply the subscript/superscript to the last rendered atom.\n    // If none is present (beginning of the list, i.e. `{^2}`,\n    // an empty atom will be created, equivalent to `{{}^2}`\n\n    let result = false;\n    let token = this.peek();\n\n    while (token === '^' || token === '_' || token === \"'\") {\n      const supsub = token === '_' ? 'subscript' : 'superscript';\n\n      if (this.match('^') || this.match('_')) {\n        const arg = this.parseArgument('math');\n\n        if (arg) {\n          const atom = this.lastSubsupAtom();\n          atom[supsub] = ((_a = atom[supsub]) !== null && _a !== void 0 ? _a : []).concat(arg);\n          result = true;\n        }\n      } else if (this.match(\"'\")) {\n        // A single quote (prime) is actually equivalent to a\n        // '^{\\prime}'\n        const base = this.lastSubsupAtom();\n        const atom = new Atom(base.mode, 'mord', '\\u2032');\n        atom.symbol = '\\\\prime';\n        base.superscript = (_b = base.superscript) !== null && _b !== void 0 ? _b : [];\n        base.superscript.push(atom);\n        result = true;\n      }\n\n      token = this.peek();\n    }\n\n    return result;\n  }\n  /**\r\n   * Parse a `\\limits` or `\\nolimits` command.\r\n   *\r\n   * This will change the placement of limits to be either above or below\r\n   * (if `\\limits`) or in the superscript/subscript position (if `\\nolimits`).\r\n   *\r\n   * This overrides the calculation made for the placement, which is usually\r\n   * dependent on the displaystyle (`inlinemath` prefers `\\nolimits`, while\r\n   * `displaymath` prefers `\\limits`).\r\n   */\n\n\n  parseLimits() {\n    // Note: technically, \\limits and \\nolimits are only applicable\n    // after an operator. However, we apply them in all cases. They\n    // will simply be ignored when not applicable (i.e. on a literal)\n    // which is actually consistent with TeX.\n    if (this.match('\\\\limits')) {\n      const lastAtom = this.lastSubsupAtom();\n      lastAtom.limits = 'limits'; // Record that the limits was set through an explicit command\n      // so we can generate the appropriate LaTeX later\n\n      lastAtom.explicitLimits = true;\n      return true;\n    }\n\n    if (this.match('\\\\nolimits')) {\n      const lastAtom = this.lastSubsupAtom();\n      lastAtom.limits = 'nolimits'; // Record that the limits was set through an explicit command\n      // so we can generate the appropriate LaTeX later\n\n      lastAtom.explicitLimits = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  parseArguments(info) {\n    if (!info || !info.params) return [undefined, []];\n    let explicitGroup;\n    const args = [];\n    let i = info.infix ? 2 : 0;\n\n    while (i < info.params.length) {\n      const param = info.params[i]; // Parse an argument\n\n      if (param.isOptional) {\n        args.push(this.parseOptionalArgument(param.type));\n      } else if (param.type.endsWith('*')) {\n        // For example 'math*'.\n        // In this case, indicate that a 'yet-to-be-parsed'\n        // argument (and 'explicit group') is present\n        explicitGroup = param.type.slice(0, -1);\n      } else {\n        const arg = this.parseArgument(param.type);\n\n        if (typeof arg !== 'undefined') {\n          args.push(arg);\n        } else {\n          // Report an error\n          this.onError({\n            code: 'missing-argument'\n          });\n          args.push(this.placeholder());\n        }\n      }\n\n      i += 1;\n    }\n\n    return [explicitGroup, args];\n  }\n  /**\r\n   * Parse a math field, an argument to a function.\r\n   *\r\n   * An argument can either be a single atom or\r\n   * a sequence of atoms enclosed in braces.\r\n   *\r\n   * @param parseMode Temporarily overrides the parser parsemode. For\r\n   * example: `'dimen'`, `'color'`, `'text'`, etc...\r\n   */\n  // parseArgument(parseMode: 'string'): string;\n  // parseArgument(parseMode: 'color'): string;\n\n\n  parseArgument(parseMode) {\n    var _a;\n\n    this.skipFiller();\n    parseMode = parseMode === 'auto' ? this.parseMode : parseMode;\n    let result; // An argument (which is called a 'math field' in TeX)\n    // could be a single character or symbol, as in `\\frac12`\n    // Note that ``\\frac\\sqrt{-1}\\alpha\\beta`` is equivalent to\n    // ``\\frac{\\sqrt}{-1}{\\beta}``\n\n    if (!this.match('<{>')) {\n      if (parseMode === 'delim') {\n        return (_a = this.scanDelim()) !== null && _a !== void 0 ? _a : '.';\n      } else if (/^(math|text)$/.test(parseMode)) {\n        // Parse a single token.\n        const savedParseMode = this.swapParseMode(parseMode);\n        const atom = this.parseSimpleToken();\n        this.swapParseMode(savedParseMode);\n        return atom;\n      }\n    }\n\n    const savedParseMode = this.parseMode;\n    this.parseMode = parseMode;\n    const saveAtoms = this.swapAtoms([]);\n\n    if (parseMode === 'string') {\n      result = this.scanString();\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'balanced-string') {\n      result = this.scanBalancedString();\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'number') {\n      result = this.scanNumber();\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'dimen') {\n      result = this.scanDimen();\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'skip') {\n      result = this.scanSkip();\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'colspec') {\n      result = this.scanColspec();\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'color') {\n      result = this.scanColor() || '#ffffff';\n      this.skipUntilToken('<}>');\n    } else if (parseMode === 'delim') {\n      result = this.scanDelim() || '.';\n      this.skipUntilToken('<}>');\n    } else {\n      console.assert(/^(math|text)$/.test(parseMode), 'Unexpected parse mode: \"' + parseMode + '\"'); // Collect an array of tokens until a balanced \"}\"\n\n      const initialIndex = this.index;\n      let depth = 1;\n\n      do {\n        const token = this.get();\n        if (token === '<}>') depth -= 1;\n        if (token === '<{>') depth += 1;\n      } while (depth > 0 && !this.end());\n\n      result = parseTokens(parseMode, this.tokens.slice(initialIndex, this.index - 1), this.onError, {\n        args: this.args,\n        macros: this.macros,\n        smartFence: this.smartFence,\n        style: this.style,\n        parse: (mode, tokens, options) => {\n          const parser = new Parser(tokens, options.args, options.macros, this.onError);\n          parser.parseMode = mode;\n          parser.style = options.style;\n          result = parser.parse();\n          return [result, tokens.slice(parser.index)];\n        }\n      });\n\n      if (!result) {\n        // No mode-specific result. Try again from the start\n        this.index = initialIndex;\n\n        do {\n          this.atoms = this.atoms.concat(this.parse());\n        } while (!this.match('<}>') && !this.end());\n      }\n    }\n\n    this.parseMode = savedParseMode;\n    const atoms = this.swapAtoms(saveAtoms);\n    return result !== null && result !== void 0 ? result : atoms;\n  }\n\n  parseOptionalArgument(parseMode) {\n    var _a;\n\n    parseMode = parseMode === 'auto' ? this.parseMode : parseMode;\n    this.matchWhitespace();\n    if (!this.match('[')) return null;\n    const savedParseMode = this.parseMode;\n    this.parseMode = parseMode;\n    const saveAtoms = this.swapAtoms();\n    let result;\n\n    while (!this.end() && !this.match(']')) {\n      if (parseMode === 'string') {\n        result = this.scanString();\n      } else if (parseMode === 'number') {\n        result = this.scanNumber();\n      } else if (parseMode === 'dimen') {\n        result = this.scanDimen();\n      } else if (parseMode === 'skip') {\n        result = this.scanSkip();\n      } else if (parseMode === 'colspec') {\n        result = this.scanColspec();\n      } else if (parseMode === 'color') {\n        result = (_a = this.scanColor()) !== null && _a !== void 0 ? _a : '#ffffff';\n      } else if (parseMode === 'bbox') {\n        // The \\bbox command takes a very particular argument:\n        // a comma delimited list of up to three arguments:\n        // a color, a dimension and a string.\n        // Split the string by comma delimited sub-strings, ignoring commas\n        // that may be inside (). For example\"x, rgb(a, b, c)\" would return\n        // ['x', 'rgb(a, b, c)']\n        const list = this.scanString().toLowerCase().trim().split(/,(?![^(]*\\)(?:(?:[^(]*\\)){2})*[^\"]*$)/);\n        const bboxParam = {};\n\n        var _iterator31 = _createForOfIteratorHelper(list),\n            _step31;\n\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            const elem = _step31.value;\n            const color = stringToColor(elem);\n\n            if (color) {\n              bboxParam.backgroundcolor = color;\n            } else {\n              const m = elem.match(/^\\s*([0-9.]+)\\s*([a-z][a-z])/);\n\n              if (m) {\n                bboxParam.padding = convertDimenToEm(m[1], m[2]);\n              } else {\n                const m = elem.match(/^\\s*border\\s*:\\s*(.*)/);\n\n                if (m) {\n                  bboxParam.border = m[1];\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n\n        result = bboxParam;\n      } else {\n        console.assert(parseMode === 'math', 'Unexpected parse mode: \"' + parseMode + '\"');\n        this.atoms = this.atoms.concat(this.parse(token => token === ']'));\n      }\n    }\n\n    this.parseMode = savedParseMode;\n    const atoms = this.swapAtoms(saveAtoms);\n    return result !== null && result !== void 0 ? result : atoms;\n  }\n\n  parseSimpleToken() {\n    const token = this.get();\n    if (!token) return null;\n    let result = null;\n\n    if (token === '<space>') {\n      if (this.parseMode === 'text') {\n        result = new Atom('text', '', ' ', this.style);\n        result.symbol = ' ';\n      }\n    } else if (token[0] === '\\\\') {\n      // COMMAND\n      if (token === '\\\\placeholder') {\n        result = new Atom(this.parseMode, 'placeholder', this.parseArgument('string'), this.style);\n        result.captureSelection = true;\n      } else if (token === '\\\\char') {\n        // \\char has a special syntax and requires a non-braced integer\n        // argument\n        const initialIndex = this.index;\n        let codepoint = Math.floor(this.scanNumber(true));\n\n        if (!isFinite(codepoint) || codepoint < 0 || codepoint > 0x10ffff) {\n          codepoint = 0x2753; // BLACK QUESTION MARK\n        }\n\n        result = new Atom(this.parseMode, this.parseMode === 'math' ? 'mord' : '', String.fromCodePoint(codepoint));\n        result.symbol = '\\\\char';\n        result.latex = '\\\\char' + tokensToString(this.tokens.slice(initialIndex, this.index));\n      } else if (token === '\\\\hskip' || token === '\\\\kern') {\n        // \\hskip and \\kern have a special syntax and requires a non-braced\n        // 'skip' argument\n        const width = this.scanSkip();\n\n        if (isFinite(width)) {\n          result = new Atom(this.parseMode, 'spacing', null, this.style);\n          result.width = width;\n          result.symbol = token;\n          result.latex = token;\n        }\n      } else {\n        result = this.scanMacro(token);\n\n        if (!result) {\n          // This wasn't a macro, so let's see if it's a regular command\n          const info = getInfo(token, this.parseMode, {});\n\n          if (!info) {\n            // An unknown command\n            this.onError({\n              code: 'unknown-command',\n              arg: token\n            });\n            result = new Atom('math', 'error', token);\n            result.symbol = token;\n            result.latex = token;\n            return [result];\n          }\n\n          if (info.mode && !info.mode.includes(this.parseMode)) {\n            // Command invalid in this mode\n            this.onError({\n              code: 'invalid-command',\n              arg: token\n            });\n            result = new Atom('math', 'error', token);\n            result.symbol = token;\n            result.latex = token;\n            return [result];\n          } // Parse the arguments\n          // If explicitGroup is not empty, an explicit group is expected\n          // to follow the command and will be parsed *after* the\n          // command has been processed.\n          // This is used for commands such as \\textcolor{color}{content}\n          // that need to apply the color to the content *after* the\n          // style has been changed.\n          // In definitions, this is indicated with a parameter type\n          // of 'auto*'\n\n\n          const initialIndex = this.index;\n\n          const _this$parseArguments = this.parseArguments(info),\n                _this$parseArguments2 = _slicedToArray(_this$parseArguments, 2),\n                explicitGroup = _this$parseArguments2[0],\n                args = _this$parseArguments2[1];\n\n          if (!args) return null; // Some required arguments were missing...\n\n          if (info.infix) {\n            // Infix commands should be handled in scanImplicitGroup\n            // If we find an infix command here, it's a syntax error\n            // (second infix command in a group) and should be ignored.\n            this.onError({\n              code: 'too-many-infix-commands',\n              arg: token\n            });\n          } else {\n            //  Invoke the parse() function if present\n            if (info.parse) {\n              const attributes = info.parse(token, args);\n\n              if (attributes.type) {\n                // A type was provided: create a new Atom\n                result = new Atom(this.parseMode, info.type, explicitGroup ? this.parseArgument(explicitGroup) : null, _objectSpread(_objectSpread({}, this.style), attributes));\n              } else {\n                // No type provided -> the parse function will modify\n                // the current style rather than create a new Atom.\n                const savedMode = this.parseMode;\n\n                if (attributes.mode) {\n                  // Change to 'text' (or 'math') mode if necessary\n                  this.parseMode = attributes.mode;\n                  delete attributes.mode;\n                }\n\n                if (attributes.mathstyle) {\n                  this.parseMode = 'math';\n                  const atom = new Atom('math', 'mathstyle');\n                  atom.mathstyle = attributes.mathstyle;\n                  this.atoms.push(atom);\n                } // If an explicit group is expected, process it now\n\n\n                if (explicitGroup) {\n                  // Create a temporary style\n                  const saveStyle = this.style;\n                  this.style = _objectSpread(_objectSpread({}, this.style), attributes);\n                  result = this.parseArgument(explicitGroup);\n                  this.style = saveStyle;\n                } else {\n                  // Merge the new style info with the current style\n                  this.style = _objectSpread(_objectSpread({}, this.style), attributes);\n                }\n\n                this.parseMode = savedMode;\n              }\n            } else {\n              // The new atom will inherit the style of this atom\n              // Only override the variant if it is not '' or undefined\n              const style = _objectSpread(_objectSpread({}, this.style), {}, {\n                variant: info.variant || this.style.variant,\n                variantStyle: info.variantStyle || this.style.variantStyle\n              });\n\n              result = new Atom(this.parseMode, info.type || 'mop', info.value || token, style);\n            }\n\n            if (result instanceof Atom && !/^\\\\(llap|rlap|class|cssId)$/.test(token)) {\n              result.symbol = token;\n              const argString = tokensToString(this.tokens.slice(initialIndex, this.index));\n\n              if (argString) {\n                result.latex = result.symbol + argString;\n              }\n\n              if (result.isFunction && this.smartFence) {\n                // The atom was a function that may be followed by\n                // an argument, like `\\sin(`\n                const smartFence = this.scanSmartFence();\n\n                if (smartFence) {\n                  result = [result, smartFence];\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (isLiteral(token)) {\n      // Literal\n      const info = getInfo(token, this.parseMode, this.macros);\n\n      if (info) {\n        const style = _objectSpread({}, this.style);\n\n        result = new Atom(this.parseMode, info.type, info.value || token, style);\n\n        if (info.isFunction) {\n          result.isFunction = true;\n        }\n      } else {\n        result = new Atom(this.parseMode, this.parseMode === 'math' ? 'mord' : '', token, this.style);\n      }\n\n      result.symbol = token;\n      result.latex = unicodeCharToLatex(this.parseMode, token);\n\n      if ((info === null || info === void 0 ? void 0 : info.isFunction) && this.smartFence) {\n        // The atom was a function that may be followed by\n        // an argument, like `f(`.\n        const smartFence = this.scanSmartFence();\n\n        if (smartFence) {\n          result = [result, smartFence];\n        }\n      }\n    } else if (token === '<}>') {\n      this.onError({\n        latex: '',\n        code: 'unbalanced-braces'\n      });\n    } else {\n      this.onError({\n        latex: '',\n        code: 'unexpected-token',\n        arg: token\n      });\n    } // Always return an array of atoms\n\n\n    return result && !isArray(result) ? [result] : result;\n  }\n  /**\r\n   * Attempt to scan the macro name and return an atom list if successful.\r\n   * Otherwise, it wasn't a macro.\r\n   */\n\n\n  scanMacro(macro) {\n    var _a;\n\n    const macroName = macro.slice(1);\n    if (!this.macros || !this.macros[macroName]) return null;\n    const initialIndex = this.index;\n    const args = [];\n    let def;\n    let argCount = 0;\n\n    if (typeof this.macros[macroName] === 'string') {\n      def = this.macros[macroName]; // Let's see if there are arguments in the definition.\n\n      if (/(^|[^\\\\])#1/.test(def)) argCount = 1;\n      if (/(^|[^\\\\])#2/.test(def)) argCount = 2;\n      if (/(^|[^\\\\])#3/.test(def)) argCount = 3;\n      if (/(^|[^\\\\])#4/.test(def)) argCount = 4;\n      if (/(^|[^\\\\])#5/.test(def)) argCount = 5;\n      if (/(^|[^\\\\])#6/.test(def)) argCount = 6;\n      if (/(^|[^\\\\])#7/.test(def)) argCount = 7;\n      if (/(^|[^\\\\])#8/.test(def)) argCount = 8;\n      if (/(^|[^\\\\])#9/.test(def)) argCount = 9;\n    } else {\n      def = this.macros[macroName].def;\n      argCount = this.macros[macroName].args || 0;\n    }\n\n    for (let i = 1; i <= argCount; i++) {\n      // Parse each argument as a string. We don't know yet\n      // what the proper parse mode is, so defer parsing till later\n      // when invoking `parseString`\n      args[i] = this.matchLiteralArg();\n    } // Carry forward the placeholder argument, if any.\n\n\n    args['?'] = (_a = this.args) === null || _a === void 0 ? void 0 : _a['?']; // Group the result of the macro expansion, and set the\n    // captureSelection attribute so that it is handled as an unbreakable\n    // unit\n\n    const atom = new Atom(this.parseMode, 'group', parseString(def, this.parseMode, args, this.macros, false, this.onError));\n    atom.captureSelection = true;\n    atom.symbol = macro;\n    atom.latex = macro + tokensToString(this.tokens.slice(initialIndex, this.index));\n    return atom;\n  }\n  /**\r\n   * Make an atom for the current token or token group and\r\n   * add it to the parser's current atoms\r\n   */\n\n\n  parseToken() {\n    let result = this.parseEnvironment() || this.parseModeShift() || this.parseModeSet() || this.parseGroup() || this.parseLeftRight();\n    if (!result && (this.parseSupSub() || this.parseLimits())) return true;\n    if (!result) result = this.parseSimpleToken(); // If we have an atom to add, push it at the end of the current math list\n    // We could have no atom for tokens that were skipped, a ' ' in math mode\n    // for example\n\n    if (isArray(result)) {\n      this.atoms = this.atoms.concat(result);\n    } else if (result) {\n      this.atoms.push(result);\n    }\n\n    return result !== null;\n  }\n\n}\n/**\r\n * Given a string of LaTeX, return a corresponding math list (array of atoms).\r\n * @param args - If there are any placeholder tokens, e.g.\r\n * `#0`, `#1`, etc... they will be replaced by the value provided by `args`.\r\n * @param smartFence - If true, promote plain fences, e.g. `(`,\r\n * as `\\left...\\right` or `\\mleft...\\mright`\r\n */\n\n\nfunction parseString(s, parseMode, args, macros, smartFence = false, onError) {\n  let atoms = [];\n  const parser = new Parser(tokenize(s, args), args, macros, err => {\n    if (typeof onError === 'function') {\n      onError(_objectSpread(_objectSpread({}, err), {}, {\n        latex: s\n      }));\n    }\n  });\n  parser.parseMode = parseMode || 'math'; // other possible values: 'text', 'color', etc...\n\n  if (smartFence) parser.smartFence = true;\n\n  while (!parser.end()) {\n    const more = parser.parse();\n\n    if (more) {\n      atoms = atoms.concat(more);\n    }\n  }\n\n  return atoms;\n}\n\nvar _a, _b; // The URL of the bundled MathLive library. Used later to locate the `fonts`\n// directory, relative to the library\n// If loaded via a <script> tag, `document.currentScript.src` is this location\n// If loaded via a module (e.g. `import ...`),`import.meta.url` is this location.\n// However, `import.meta` is not supported by WebPack. So, use a super-hacky-alternative\n// to get the URL.\n// See https://github.com/webpack/webpack/issues/6719\n// Adapted from https://jakedeichert.com/blog/2020/02/a-super-hacky-alternative-to-import-meta-url/\n\n\nfunction getFileUrl() {\n  const stackTraceFrames = String(new Error().stack).replace(/^Error.*\\n/, '').split('\\n');\n  if (stackTraceFrames.length === 0) return ''; // 0 = this getFileUrl frame (because the Error is created here)\n  // 1 = the caller of getFileUrl (the file path we want to grab)\n\n  const callerFrame = stackTraceFrames[0]; // Extract the script's complete url\n\n  const m = callerFrame.match(/http.*js/);\n  if (!m) return '';\n  return m[0];\n}\n\nconst gScriptUrl = (_b = (_a = document.currentScript) === null || _a === void 0 ? void 0 : _a.src) !== null && _b !== void 0 ? _b : getFileUrl();\n\nfunction loadFonts(_x, _x2) {\n  return _loadFonts.apply(this, arguments);\n}\n\nfunction _loadFonts() {\n  _loadFonts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fontsDirectory, onError) {\n    var _a, makeFontFace, useStaticFonts, fontFamilies, fontsLoaded, fontsFolder, fonts, loadedFonts;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          makeFontFace = function _makeFontFace(name, source, descriptors = {}) {\n            return new FontFace(name, \"url(\".concat(source, \".woff2) format('woff2'), url(\").concat(source, \".woff) format('woff')\"), descriptors);\n          };\n\n          // If the \"mathlive-fonts.css\" stylesheet is included in the <head> of the\n          // page, it will include a `--ML__static-fonts` variable.\n          // In that case, don't load the fonts dynamically\n          useStaticFonts = (_a = getComputedStyle(document.documentElement).getPropertyValue('--ML__static-fonts')) !== null && _a !== void 0 ? _a : false;\n\n          if (!useStaticFonts) {\n            _context2.next = 4;\n            break;\n          }\n\n          return _context2.abrupt(\"return\");\n\n        case 4:\n          if (!('fonts' in document)) {\n            _context2.next = 25;\n            break;\n          }\n\n          fontFamilies = ['KaTeX_Main', 'KaTeX_Math', 'KaTeX_AMS', 'KaTeX_Caligraphic', 'KaTeX_Fraktur', 'KaTeX_SansSerif', 'KaTeX_Script', 'KaTeX_Size1', 'KaTeX_Size2', 'KaTeX_Size3', 'KaTeX_Size4']; // for (const fontFace of document.fonts.values()) { console.log(fontFace.family)}\n\n          fontsLoaded = false; // Firefox returns true for fonts that are not loaded...\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1252821 🤦‍♂️\n          // So, if on Firefox, always assume that the fonts are not loaded.\n\n          if (!/firefox/i.test(navigator.userAgent)) {\n            try {\n              fontsLoaded = fontFamilies.every(x => document['fonts'].check('16px ' + x));\n            } catch (e) {\n              fontsLoaded = false;\n            }\n          }\n\n          if (fontsLoaded) {\n            _context2.next = 25;\n            break;\n          }\n\n          if (!document.body.classList.contains('ML__fonts-loading')) {\n            _context2.next = 11;\n            break;\n          }\n\n          return _context2.abrupt(\"return\");\n\n        case 11:\n          document.body.classList.add('ML__fonts-loading'); // Locate the `fonts` folder relative to the script URL\n\n          fontsFolder = new URL(fontsDirectory !== null && fontsDirectory !== void 0 ? fontsDirectory : './fonts', gScriptUrl).toString();\n          fonts = [['KaTeX_Main-Regular'], ['KaTeX_Main-BoldItalic', {\n            style: 'italic',\n            weight: 'bold'\n          }], ['KaTeX_Main-Bold', {\n            weight: 'bold'\n          }], ['KaTeX_Main-Italic', {\n            style: 'italic'\n          }], ['KaTeX_Math-Italic', {\n            style: 'italic'\n          }], ['KaTeX_Math-BoldItalic', {\n            style: 'italic',\n            weight: 'bold'\n          }], ['KaTeX_AMS-Regular'], ['KaTeX_Caligraphic-Regular'], ['KaTeX_Caligraphic-Bold', {\n            weight: 'bold'\n          }], ['KaTeX_Fraktur-Regular'], ['KaTeX_Fraktur-Bold', {\n            weight: 'bold'\n          }], ['KaTeX_SansSerif-Regular', {\n            style: 'italic'\n          }], ['KaTeX_SansSerif-Bold', {\n            weight: 'bold'\n          }], ['KaTeX_SansSerif-Italic', {\n            style: 'italic'\n          }], ['KaTeX_Script-Regular'], ['KaTeX_Typewriter-Regular'], ['KaTeX_Size1-Regular'], ['KaTeX_Size2-Regular'], ['KaTeX_Size3-Regular'], ['KaTeX_Size4-Regular']].map(x => makeFontFace(x[0].replace(/-[a-zA-Z]+$/, ''), fontsFolder + '/' + x[0], x[1]));\n          _context2.prev = 14;\n          _context2.next = 17;\n          return Promise.all(fonts.map(x => {\n            try {\n              return x.load();\n            } catch (e) {\n              if (typeof onError === 'function') {\n                onError({\n                  code: 'font-not-found',\n                  arg: e\n                });\n              }\n            }\n\n            return undefined;\n          }));\n\n        case 17:\n          loadedFonts = _context2.sent;\n          // Render them at the same time\n          loadedFonts.forEach(font => document['fonts'].add(font));\n          document.body.classList.remove('ML__fonts-loading');\n          _context2.next = 25;\n          break;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.t0 = _context2[\"catch\"](14);\n          console.error(_context2.t0);\n\n        case 25:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee, null, [[14, 22]]);\n  }));\n  return _loadFonts.apply(this, arguments);\n}\n\nfunction hashCode(s) {\n  let hash = 0;\n\n  if (s.length === 0) {\n    return hash;\n  }\n\n  for (let i = 0; i < s.length; i++) {\n    const char = s.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}\n\nfunction inject(element, css) {\n  var _a, _b;\n\n  if (!css) return null;\n  let root = (_a = element === null || element === void 0 ? void 0 : element.getRootNode()) !== null && _a !== void 0 ? _a : document === null || document === void 0 ? void 0 : document.head;\n  if (!root) return null;\n  if (root === document) root = document.head;\n  const id = hashCode(css).toString(36);\n  const el = root.querySelector(\"style[data-id=\\\"\".concat(id, \"\\\"]\"));\n\n  if (el) {\n    const refCount = parseFloat((_b = el.getAttribute('data-refcount')) !== null && _b !== void 0 ? _b : '0');\n    el.setAttribute('data-refcount', Number(refCount + 1).toString());\n  } else {\n    // Make a new node holding the stylesheet\n    const styleNode = document.createElement('style'); // styleNode.setAttribute('media', 'screen')\n    // styleNode.setAttribute('media', 'only screen and (max-width : 1024px)')\n\n    styleNode.type = 'text/css';\n    styleNode.dataset.id = id;\n    styleNode.dataset.refcount = '1';\n    styleNode.appendChild(document.createTextNode(css));\n    root.appendChild(styleNode);\n  }\n\n  return {\n    release: () => {\n      var _a;\n\n      const el = document.head.querySelector(\"style[data-id=\\\"\".concat(id, \"\\\"]\"));\n\n      if (el) {\n        const refCount = parseFloat((_a = el.getAttribute('data-refcount')) !== null && _a !== void 0 ? _a : '0');\n\n        if (refCount === 1) {\n          el.remove();\n        } else {\n          el.setAttribute('data-refcount', Number(refCount - 1).toString());\n        }\n      }\n    }\n  };\n}\n\nfunction isEmptyMathlist(atoms) {\n  return atoms.length === 0 || atoms.length === 1 && atoms[0].type === 'first';\n}\n\nfunction removeSuggestion(model) {\n  const siblings = model.siblings(); // Remove all `suggestion` atoms\n\n  for (let i = siblings.length - 1; i >= 0; i--) {\n    if (siblings[i].isSuggestion) {\n      siblings.splice(i, 1);\n    }\n  }\n}\n/**\r\n * Clear the verbatim Latex property for the parent node and its parents.\r\n * This will cause the latex value to be re-calculated.\r\n */\n\n\nfunction invalidateVerbatimLatex(model) {\n  let depth = 1;\n  let atom = model.ancestor(depth);\n\n  while (atom) {\n    atom.latex = undefined;\n    depth += 1;\n    atom = model.ancestor(depth);\n  }\n}\n/**\r\n * Ensure that the range is valid and canonical, i.e.\r\n * - start <= end\r\n * - collapsed = start === end\r\n * - start >= 0, end >=0\r\n */\n\n\nfunction normalizeRange(iter, range) {\n  const result = _objectSpread({}, range);\n\n  const lastPosition = iter.lastPosition; // 1. Normalize the start\n\n  if (result.start < 0) {\n    result.start = Math.max(0, lastPosition + result.start + 1);\n  } else if (isNaN(result.start)) {\n    result.start = 0;\n  } else {\n    result.start = Math.min(result.start, lastPosition);\n  } // 2. Normalize the end\n\n\n  if (result.end < 0) {\n    result.end = Math.max(0, lastPosition + result.end + 1);\n  } else if (isNaN(result.end)) {\n    result.end = result.start;\n  } else {\n    result.end = Math.min(result.end, lastPosition);\n  } // 3. Normalize the direction\n\n\n  if (result.start < result.end) {\n    result.direction = 'forward';\n  } else {\n    var _ref = [result.end, result.start];\n    result.start = _ref[0];\n    result.end = _ref[1];\n    result.direction = 'backward';\n  } // 4. Normalize `collapsed`\n\n\n  result.collapsed = result.start === result.end;\n\n  if (result.collapsed) {\n    result.direction = 'none';\n  } // 5. Normalize the depth\n\n\n  if (iter.positions[result.start]) {\n    result.depth = iter.positions[result.start].depth - 1;\n  }\n\n  return result;\n}\n\nfunction pathToString(path, extent) {\n  let result = '';\n\n  var _iterator32 = _createForOfIteratorHelper(path),\n      _step32;\n\n  try {\n    for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n      const segment = _step32.value;\n      result += segment.relation + ':' + segment.offset + '/';\n    }\n  } catch (err) {\n    _iterator32.e(err);\n  } finally {\n    _iterator32.f();\n  }\n\n  if (extent) {\n    result += '#' + extent;\n  }\n\n  return result;\n}\n\nfunction pathFromString(string) {\n  // Reset the path\n  const result = {\n    path: [],\n    extent: 0\n  }; // Parse the selection extent, if present\n\n  const components = string.split('#');\n\n  if (components.length > 1) {\n    result.extent = parseInt(components[1]);\n  } // Parse the segments\n\n\n  const segments = components[0].split('/');\n\n  var _iterator33 = _createForOfIteratorHelper(segments),\n      _step33;\n\n  try {\n    for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n      const segment = _step33.value;\n      const m2 = segment.match(/([^:]*):(.*)/);\n\n      if (m2) {\n        result.path.push({\n          relation: m2[1],\n          offset: parseInt(m2[2])\n        });\n      }\n    }\n  } catch (err) {\n    _iterator33.e(err);\n  } finally {\n    _iterator33.f();\n  }\n\n  return result;\n}\n/**\r\n * Given two paths, return a path representing their common ancestor.\r\n */\n\n\nfunction pathCommonAncestor(p, q) {\n  const result = [];\n  const maxIndex = Math.min(p.length - 1, q.length - 1);\n  let i = 0;\n\n  while (i <= maxIndex && p[i].relation === q[i].relation && p[i].offset === q[i].offset) {\n    result.push(p[i]);\n    i += 1;\n  }\n\n  return result;\n}\n/**\r\n *\r\n * @return 0 if the paths are identical\r\n *  - 1 if they are siblings\r\n *  - >1 if they are not siblings\r\n */\n\n\nfunction pathDistance(p, q) {\n  let result = 0;\n  let i = -1;\n  let done = false;\n\n  while (!done) {\n    i += 1;\n    done = i >= p.length || i >= q.length;\n    done = done || !(p[i].relation === q[i].relation && p[i].offset === q[i].offset);\n  }\n\n  if (i === p.length && i === q.length) {\n    // They're identical\n    result = 0;\n  } else if (i + 1 === p.length && i + 1 === q.length && p[i].relation === q[i].relation) {\n    // They're siblings\n    result = 1;\n  } else {\n    result = 2;\n  }\n\n  return result;\n}\n\nfunction clone(path) {\n  return pathFromString(pathToString(path)).path;\n}\n/**\r\n * Convert an array row/col into an array index.\r\n */\n\n\nfunction arrayIndex(array, rowCol) {\n  let result = 0;\n\n  for (let i = 0; i < rowCol.row; i++) {\n    for (let j = 0; j < array[i].length; j++) {\n      result += 1;\n    }\n  }\n\n  result += rowCol.col;\n  return result;\n}\n/**\r\n * Convert an array index (scalar) to an array row/col.\r\n * @return {object}\r\n * - row: number\r\n * - col: number\r\n */\n\n\nfunction arrayColRow(array, index) {\n  let i;\n\n  if (typeof index === 'string') {\n    const m = index.match(/cell([0-9]*)$/);\n    if (m) i = parseInt(m[1]);\n  } else {\n    i = index;\n  }\n\n  const result = {\n    row: 0,\n    col: 0\n  };\n\n  while (i > 0) {\n    result.col += 1;\n\n    if (!array[result.row] || result.col >= array[result.row].length) {\n      result.col = 0;\n      result.row += 1;\n    }\n\n    i -= 1;\n  }\n\n  return result;\n}\n/**\r\n * Return the array cell corresponding to colrow or null (for example in\r\n * a sparse array)\r\n */\n\n\nfunction arrayCell(array, colrow, addMisingFirstAtom = true) {\n  var _a;\n\n  if (typeof colrow !== 'object') colrow = arrayColRow(array, colrow);\n  let result;\n\n  if (isArray(array[colrow.row])) {\n    result = (_a = array[colrow.row][colrow.col]) !== null && _a !== void 0 ? _a : null;\n  } // If the 'first' math atom is missing, insert it\n\n\n  if (addMisingFirstAtom && result && (result.length === 0 || result[0].type !== 'first')) {\n    result.unshift(new Atom('math', 'first'));\n  }\n\n  return result;\n}\n/**\r\n * Total numbers of cells (include sparse cells) in the array.\r\n */\n\n\nfunction arrayCellCount(array) {\n  let result = 0;\n  let numRows = 0;\n  let numCols = 1;\n\n  var _iterator34 = _createForOfIteratorHelper(array),\n      _step34;\n\n  try {\n    for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n      const row = _step34.value;\n      numRows += 1;\n      if (row.length > numCols) numCols = row.length;\n    }\n  } catch (err) {\n    _iterator34.e(err);\n  } finally {\n    _iterator34.f();\n  }\n\n  result = numRows * numCols;\n  return result;\n}\n/**\r\n * Adjust colRow to point to the next/previous available row\r\n * If no more rows, go to the next/previous column\r\n * If no more columns, return null\r\n */\n\n\nfunction arrayAdjustRow(array, colRow, dir) {\n  const result = _objectSpread({}, colRow);\n\n  result.row += dir;\n\n  if (result.row < 0) {\n    result.col += dir;\n    result.row = array.length - 1;\n    if (result.col < 0) return null;\n\n    while (result.row >= 0 && !arrayCell(array, result)) {\n      result.row -= 1;\n    }\n\n    if (result.row < 0) return null;\n  } else if (result.row >= array.length) {\n    result.col += dir;\n    result.row = 0;\n\n    while (result.row < array.length && !arrayCell(array, result)) {\n      result.row += 1;\n    }\n\n    if (result.row > array.length - 1) return null;\n  }\n\n  return result;\n} // Each entry indicate the font-name (to be used to calculate font metrics)\n// and the CSS classes (for proper markup styling) for each possible\n// variant combinations.\n\n\nconst VARIANTS = {\n  // Handle some special characters which are only available in \"main\" font (not \"math\")\n  main: ['Main-Regular', 'ML__cmr'],\n  'main-italic': ['Main-Italic', 'ML__cmr ML__it'],\n  'main-bold': ['Main-Bold', 'ML__cmr ML__bold'],\n  'main-bolditalic': ['Main-BoldItalic', 'ML__cmr ML_bold ML__it'],\n  normal: ['Main-Regular', 'ML__cmr'],\n  'normal-bold': ['Main-Bold', 'ML__mathbf'],\n  'normal-italic': ['Math-Italic', 'ML__mathit'],\n  'normal-bolditalic': ['Math-BoldItalic', 'ML__mathbfit'],\n  // Extended math symbols, arrows, etc.. at their standard Unicode codepoints\n  ams: ['AMS-Regular', 'ML__ams'],\n  'ams-bold': ['AMS-Regular', 'ML__ams'],\n  'ams-italic': ['AMS-Regular', 'ML__ams'],\n  'ams-bolditalic': ['AMS-Regular', 'ML__ams'],\n  'sans-serif': ['SansSerif-Regular', 'ML__sans'],\n  'sans-serif-bold': ['SansSerif-Regular', 'ML__sans ML__bold'],\n  'sans-serif-italic': ['SansSerif-Regular', 'ML__sans'],\n  'sans-serif-bolditalic': ['SansSerif-Regular', 'ML__sans'],\n  calligraphic: ['Caligraphic-Regular', 'ML__cal'],\n  'calligraphic-bold': ['Caligraphic-Regular', 'ML__cal ML__bold'],\n  'calligraphic-italic': ['Caligraphic-Regular', 'ML__cal ML__it'],\n  'calligraphic-bolditalic': ['Caligraphic-Regular', 'ML__cal ML__bold ML__it'],\n  script: ['Script-Regular', 'ML__script'],\n  'script-bold': ['Script-Regular', 'ML__script ML__bold'],\n  'script-italic': ['Script-Regular', 'ML__script ML__it'],\n  'script-bolditalic': ['Script-Regular', 'ML__script ML__bold ML__it'],\n  fraktur: ['Fraktur-Regular', 'ML__frak'],\n  'fraktur-bold': ['Fraktur-Regular', 'ML__frak'],\n  'fraktur-italic': ['Fraktur-Regular', 'ML__frak'],\n  'fraktur-bolditalic': ['Fraktur-Regular', 'ML__frak'],\n  monospace: ['Typewriter-Regular', 'ML__tt'],\n  'monospace-bold': ['Typewriter-Regular', 'ML__tt ML__bold'],\n  'monospace-italic': ['Typewriter-Regular', 'ML__tt ML__it'],\n  'monospace-bolditalic': ['Typewriter-Regular', 'ML__tt ML__bold ML__it'],\n  // Blackboard characters are 'A-Z' in the AMS font\n  'double-struck': ['AMS-Regular', 'ML__bb'],\n  'double-struck-bold': ['AMS-Regular', 'ML__bb'],\n  'double-struck-italic': ['AMS-Regular', 'ML__bb'],\n  'double-struck-bolditalic': ['AMS-Regular', 'ML__bb']\n};\nconst VARIANT_REPERTOIRE = {\n  'double-struck': /^[A-Z ]$/,\n  script: /^[A-Z ]$/,\n  calligraphic: /^[0-9A-Z ]$/,\n  fraktur: /^[0-9A-Za-z ]$|^[!\"#$%&'()*+,\\-./:;=?[]^’‘]$/,\n  monospace: /^[0-9A-Za-z ]$|^[!\"&'()*+,\\-./:;=?@[\\]^_~\\u0131\\u0237\\u0393\\u0394\\u0398\\u039b\\u039e\\u03A0\\u03A3\\u03A5\\u03A8\\u03a9]$/,\n  'sans-serif': /^[0-9A-Za-z ]$|^[!\"&'()*+,\\-./:;=?@[\\]^_~\\u0131\\u0237\\u0393\\u0394\\u0398\\u039b\\u039e\\u03A0\\u03A3\\u03A5\\u03A8\\u03a9]$/\n};\nconst GREEK_LOWERCASE = /^[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5]$/;\nconst GREEK_UPPERCASE = /^[\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9]$/;\nconst LETTER_SHAPE_RANGES = [/^[a-z]$/, /^[A-Z]$/, GREEK_LOWERCASE, GREEK_UPPERCASE]; // The letterShapeStyle property indicates which characters should be\n// automatically italicized (see LETTER_SHAPE_RANGES)\n\nconst LETTER_SHAPE_MODIFIER = {\n  iso: ['it', 'it', 'it', 'it'],\n  tex: ['it', 'it', 'it', 'up'],\n  french: ['it', 'up', 'up', 'up'],\n  upright: ['up', 'up', 'up', 'up']\n}; // See http://ctan.math.illinois.edu/macros/latex/base/fntguide.pdf\n\nfunction emitLatexMathRun(context, run, expandMacro) {\n  let contextValue = context.variant;\n\n  if (context.variantStyle && context.variantStyle !== 'up') {\n    contextValue += '-' + context.variantStyle;\n  }\n\n  return joinLatex(getPropertyRuns(run, 'color').map(x => {\n    const result = joinLatex(getPropertyRuns(x, 'variant').map(x => {\n      let value = x[0].variant;\n\n      if (x[0].variantStyle && x[0].variantStyle !== 'up') {\n        value += '-' + x[0].variantStyle;\n      } // Check if all the atoms in this run have a base\n      // variant identical to the current variant\n      // If so, we can skip wrapping them\n\n\n      if (x.every(x => {\n        const info = getInfo(x.symbol, context.mode, null);\n\n        if (!info || !(info.variant || info.variantStyle)) {\n          return false;\n        }\n\n        let styledValue = x.variant;\n\n        if (x.variantStyle && x.variantStyle !== 'up') {\n          styledValue += '-' + x.variantStyle;\n        }\n\n        return styledValue === value;\n      })) {\n        return joinLatex(x.map(x => x.toLatex(expandMacro)));\n      }\n\n      let command = '';\n\n      if (value && value !== contextValue) {\n        command = {\n          calligraphic: '\\\\mathcal{',\n          fraktur: '\\\\mathfrak{',\n          'double-struck': '\\\\mathbb{',\n          script: '\\\\mathscr{',\n          monospace: '\\\\mathtt{',\n          'sans-serif': '\\\\mathsf{',\n          normal: '\\\\mathrm{',\n          'normal-italic': '\\\\mathit{',\n          'normal-bold': '\\\\mathbf{',\n          'normal-bolditalic': '\\\\mathbfit{',\n          ams: '',\n          'ams-italic': '\\\\mathit{',\n          'ams-bold': '\\\\mathbf{',\n          'ams-bolditalic': '\\\\mathbfit{',\n          main: '',\n          'main-italic': '\\\\mathit{',\n          'main-bold': '\\\\mathbf{',\n          'main-bolditalic': '\\\\mathbfit{'\n        }[value];\n        console.assert(typeof command !== 'undefined');\n      }\n\n      return command + joinLatex(x.map(x => x.toLatex(expandMacro))) + (command ? '}' : '');\n    }));\n\n    if (x[0].color && (!context || context.color !== x[0].color)) {\n      return '\\\\textcolor{' + colorToString(x[0].color) + '}{' + result + '}';\n    }\n\n    return result;\n  }));\n}\n\nfunction applyStyle$1(atom, style) {\n  // letterShapeStyle will usually be set automatically, except when the\n  // locale cannot be determined, in which case its value will be 'auto'\n  // which we default to 'tex'\n  const letterShapeStyle = style.letterShapeStyle === 'auto' || !style.letterShapeStyle ? 'tex' : style.letterShapeStyle;\n  let variant = style.variant || 'normal';\n  let variantStyle = style.variantStyle || ''; // 1. Remap to \"main\" font some characters that don't exist\n  // in the \"math\" font\n  // There are two fonts that include the roman italic characters, \"main-it\" and \"math\"\n  // They are similar, but the \"math\" font has some different kernings ('f')\n  // and some slightly different character shape. It doesn't include a few\n  // characters, so for those characters, \"main\" has to be used instead\n  // \\imath, \\jmath and \\pound don't exist in \"math\" font,\n  // so use \"main\" italic instead.\n\n  if (variant === 'normal' && !variantStyle && /\\u00a3|\\u0131|\\u0237/.test(atom.body)) {\n    variant = 'main';\n    variantStyle = 'italic';\n  } // 2. If no explicit variant style, auto-italicize some symbols,\n  // depending on the letterShapeStyle\n\n\n  if (variant === 'normal' && !variantStyle && atom.body.length === 1) {\n    LETTER_SHAPE_RANGES.forEach((x, i) => {\n      if (x.test(atom.body) && LETTER_SHAPE_MODIFIER[letterShapeStyle][i] === 'it') {\n        variantStyle = 'italic';\n      }\n    });\n  } // 3. Map the variant + variantStyle to a font\n\n\n  if (variantStyle === 'up') {\n    variantStyle = '';\n  }\n\n  const styledVariant = variantStyle ? variant + '-' + variantStyle : variant;\n  console.assert(VARIANTS[styledVariant]);\n\n  const _VARIANTS$styledVaria = _slicedToArray(VARIANTS[styledVariant], 2),\n        fontName = _VARIANTS$styledVaria[0],\n        classes = _VARIANTS$styledVaria[1]; // 4. If outside the font repertoire, switch to system font\n  // (return NULL to use default metrics)\n\n\n  if (VARIANT_REPERTOIRE[variant] && !VARIANT_REPERTOIRE[variant].test(atom.body)) {\n    // Map to unicode character\n    atom.body = mathVariantToUnicode(atom.body, variant, variantStyle);\n    atom.variant = '';\n    atom.variantStyle = ''; // Return NULL to use default metrics\n\n    return null;\n  } // Lowercase greek letters have an incomplete repertoire (no bold)\n  // so, for \\mathbf to behave correctly, add a 'lcGreek' class.\n\n\n  if (GREEK_LOWERCASE.test(atom.body)) {\n    atom.classes += ' lcGreek';\n  } // 5. Assign classes based on the font\n\n\n  if (classes) {\n    atom.classes += ' ' + classes;\n  }\n\n  return fontName;\n}\n\nregister('math', {\n  emitLatexRun: emitLatexMathRun,\n  applyStyle: applyStyle$1\n});\n\nfunction emitStringTextRun(_context, run, _expandMacro) {\n  let needSpace = false;\n  return joinLatex(run.map(x => {\n    let result = '';\n    let space = '';\n\n    if (x.latex) {\n      result = x.latex;\n    } else if (typeof x.body === 'string') {\n      result = unicodeStringToLatex('text', x.body);\n    } else if (x.symbol) {\n      result = x.symbol.replace(/\\\\/g, '\\\\backslash ');\n    }\n\n    if (needSpace && (!result || /^[a-zA-Z0-9*]/.test(result))) {\n      space = '{}';\n    }\n\n    needSpace = /\\\\[a-zA-Z0-9]+\\*?$/.test(result);\n    return space + result;\n  }));\n}\n\nfunction emitFontShapeTextRun(context, run, expandMacro) {\n  return joinLatex(getPropertyRuns(run, 'fontShape').map(x => {\n    const result = emitStringTextRun(context, x);\n\n    if (x[0].fontShape === 'it') {\n      return '\\\\textit{' + result + '}';\n    }\n\n    if (x[0].fontShape === 'sl') {\n      return '\\\\textsl{' + result + '}';\n    }\n\n    if (x[0].fontShape === 'sc') {\n      return '\\\\textsc{' + result + '}';\n    }\n\n    if (x[0].fontShape === 'n') {\n      return '\\\\textup{' + result + '}';\n    }\n\n    if (x[0].fontShape) {\n      return '\\\\fontshape{' + x[0].fontShape + '}' + result;\n    }\n\n    return result;\n  }));\n}\n\nfunction emitFontSeriesTextRun(context, run, expandMacro) {\n  return joinLatex(getPropertyRuns(run, 'fontSeries').map(x => {\n    const result = emitFontShapeTextRun(context, x);\n\n    if (x[0].fontSeries === 'b') {\n      return '\\\\textbf{' + result + '}';\n    }\n\n    if (x[0].fontSeries === 'l') {\n      return '\\\\textlf{' + result + '}';\n    }\n\n    if (x[0].fontSeries === 'm') {\n      return '\\\\textmd{' + result + '}';\n    }\n\n    if (x[0].fontSeries) {\n      return '\\\\fontseries{' + x[0].fontSeries + '}' + result;\n    }\n\n    return result;\n  }));\n}\n\nfunction emitSizeTextRun(context, run, expandMacro) {\n  return joinLatex(getPropertyRuns(run, 'fontSize').map(x => {\n    const result = emitFontSeriesTextRun(context, x);\n    const command = {\n      size1: 'tiny',\n      size2: 'scriptsize',\n      size3: 'footnotesize',\n      size4: 'small',\n      size5: 'normalsize',\n      size6: 'large',\n      size7: 'Large',\n      size8: 'LARGE',\n      size9: 'huge',\n      size10: 'Huge'\n    }[x[0].fontSize] || '';\n\n    if (command) {\n      return '\\\\' + command + ' ' + result;\n    }\n\n    return result;\n  }));\n}\n\nfunction emitFontFamilyTextRun(context, run, expandMacro) {\n  return joinLatex(getPropertyRuns(run, 'fontFamily').map(x => {\n    const result = emitSizeTextRun(context, x);\n    const command = {\n      roman: 'textrm',\n      monospace: 'texttt',\n      'sans-serif': 'textsf'\n    }[x[0].fontFamily] || '';\n\n    if (command) {\n      return '\\\\' + command + '{' + result + '}';\n    }\n\n    if (x[0].fontFamily) {\n      return '\\\\fontfamily{' + x[0].fontFamily + '}' + result;\n    }\n\n    return result;\n  }));\n}\n\nfunction emitStyledTextRun(context, run, expandMacro) {\n  return emitFontFamilyTextRun(context, run);\n}\n\nfunction emitColorRun(context, run, expandMacro) {\n  return joinLatex(getPropertyRuns(run, 'color').map(x => {\n    const result = emitStyledTextRun(context, x);\n\n    if (x[0].color && x[0].color !== 'none' && (!context || context.color !== x[0].color)) {\n      // If there is a color specified, and it is different\n      // from our context color, output a command\n      return '\\\\textcolor{' + colorToString(x[0].color) + '}{' + result + '}';\n    }\n\n    return result;\n  }));\n}\n\nfunction emitLatexTextRun(context, run, expandMacro) {\n  const result = emitColorRun(context, run);\n  const allAtomsHaveShapeOrSeriesOrFontFamily = run.every(x => x.fontSeries || x.fontShape || x.fontFamily);\n\n  if (!allAtomsHaveShapeOrSeriesOrFontFamily || run[0].mode !== context.mode) {\n    // Wrap in text, only if there isn't a shape or series on\n    // all the atoms, because if so, it will be wrapped in a\n    // \\\\textbf, \\\\textit, etc... and the \\\\text would be redundant\n    return \"\\\\text{\".concat(result, \"}\");\n  }\n\n  return result;\n}\n\nconst TEXT_FONT_CLASS = {\n  roman: '',\n  'sans-serif': 'ML__sans',\n  monospace: 'ML__tt'\n};\n/**\r\n * Return the font-family name\r\n */\n\nfunction applyStyle$2(span, style) {\n  const fontFamily = style.fontFamily;\n\n  if (TEXT_FONT_CLASS[fontFamily]) {\n    span.classes += ' ' + TEXT_FONT_CLASS[fontFamily];\n  } else if (fontFamily) {\n    // Not a well-known family. Use a style.\n    span.setStyle('font-family', fontFamily);\n  }\n\n  if (style.fontShape) {\n    span.classes += ' ' + ({\n      it: 'ML__it',\n      sl: 'ML__shape_sl',\n      sc: 'ML__shape_sc',\n      ol: 'ML__shape_ol'\n    }[style.fontShape] || '');\n  }\n\n  if (style.fontSeries) {\n    const m = style.fontSeries.match(/(.?[lbm])?(.?[cx])?/);\n\n    if (m) {\n      span.classes += ' ' + ({\n        ul: 'ML__series_ul',\n        el: 'ML__series_el',\n        l: 'ML__series_l',\n        sl: 'ML__series_sl',\n        m: '',\n        sb: 'ML__series_sb',\n        b: 'ML__bold',\n        eb: 'ML__series_eb',\n        ub: 'ML__series_ub'\n      }[m[1] || ''] || '');\n      span.classes += ' ' + ({\n        uc: 'ML__series_uc',\n        ec: 'ML__series_ec',\n        c: 'ML__series_c',\n        sc: 'ML__series_sc',\n        n: '',\n        sx: 'ML__series_sx',\n        x: 'ML__series_x',\n        ex: 'ML__series_ex',\n        ux: 'ML__series_ux'\n      }[m[2] || ''] || '');\n    }\n  } // Always use the metrics of 'Main-Regular' in text mode\n\n\n  return 'Main-Regular';\n} // Given an array of tokens, return an array of atoms\n// options.args\n// options.macros\n// options.smartFence\n// options.style\n// options.parser\n\n\nfunction _parse(tokens, error, options) {\n  let result = [];\n  let atom;\n\n  while (tokens.length > 0) {\n    const token = tokens.shift();\n\n    if (token === '<space>') {\n      atom = new Atom('text', '', ' ', options.style);\n      atom.symbol = ' ';\n      result.push(atom);\n    } else if (token[0] === '\\\\') {\n      // Invoke the 'main' parser to handle the command\n      tokens.unshift(token);\n      let atoms;\n\n      var _options$parse = options.parse('text', tokens, options);\n\n      var _options$parse2 = _slicedToArray(_options$parse, 2);\n\n      atoms = _options$parse2[0];\n      tokens = _options$parse2[1];\n      result = [...result, ...atoms];\n    } else if (token === '<$>' || token === '<$$>') {\n      // Mode-shift\n      const subtokens = tokens.slice(0, tokens.findIndex(x => x === token));\n      tokens = tokens.slice(subtokens.length + 1);\n\n      const _options$parse3 = options.parse('math', subtokens, options),\n            _options$parse4 = _slicedToArray(_options$parse3, 1),\n            atoms = _options$parse4[0];\n\n      result = [...result, ...atoms];\n    } else if (token === '<{>' || token === '<}>') ;else {\n      const info = getInfo(token, 'text', options.macros);\n\n      if (!info) {\n        error({\n          code: 'unexpected-token'\n        });\n      } else if (!info.mode || info.mode.includes('text')) {\n        atom = new Atom('text', info ? info.type : '', // @todo: revisit. Use 'text' type?\n        info ? info.value : token, options.style);\n        atom.symbol = token;\n        atom.latex = charToLatex('text', token);\n        result.push(atom);\n      } else {\n        error({\n          code: 'unexpected-token'\n        });\n      }\n    }\n  }\n\n  return [result, tokens];\n}\n\nregister('text', {\n  emitLatexRun: emitLatexTextRun,\n  applyStyle: applyStyle$2,\n  parse: (tokens, error, options) => _parse(tokens, error, options)[0]\n});\n/* eslint-disable */\n\ndefineFunction(['ce', 'pu'], '{chemformula:balanced-string}', null, (name, args) => {\n  const tex = texify.go(mhchemParser.go(args[0], name === '\\\\pu' ? 'pu' : 'ce')); // console.log(tex);\n\n  return {\n    type: 'group',\n    mode: 'chem',\n    body: parseString(tex),\n    latexOpen: '\\\\' + name + '{',\n    latexClose: '}'\n  };\n} // (name, _parent, atom, emit) => {\n//     // let args = '';\n//     // if (typeof atom.index !== 'undefined') {\n//     //     args += `[${emit(atom, atom.index)}]`;\n//     // }\n//     // args += `{${emit(atom, atom.body as Atom[])}}`;\n//     return '';\n// }\n);\n/*************************************************************\r\n *\r\n *  MathJax/extensions/TeX/mhchem.js\r\n *\r\n *  Implements the \\ce command for handling chemical formulas\r\n *  from the mhchem LaTeX package.\r\n *\r\n *  ---------------------------------------------------------------------\r\n *\r\n *  Copyright (c) 2011-2015 The MathJax Consortium\r\n *  Copyright (c) 2015-2018 Martin Hensel\r\n *\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n *  you may not use this file except in compliance with the License.\r\n *  You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *  See the License for the specific language governing permissions and\r\n *  limitations under the License.\r\n */\n//\n// Core parser for mhchem syntax  (recursive)\n//\n\n/** @type {MhchemParser} */\n\nvar mhchemParser = {\n  //\n  // Parses mchem \\ce syntax\n  //\n  // Call like\n  //   go(\"H2O\");\n  //\n  go: function go(input, stateMachine) {\n    if (!input) {\n      return [];\n    }\n\n    if (stateMachine === undefined) {\n      stateMachine = 'ce';\n    }\n\n    var state = '0'; //\n    // String buffers for parsing:\n    //\n    // buffer.a == amount\n    // buffer.o == element\n    // buffer.b == left-side superscript\n    // buffer.p == left-side subscript\n    // buffer.q == right-side subscript\n    // buffer.d == right-side superscript\n    //\n    // buffer.r == arrow\n    // buffer.rdt == arrow, script above, type\n    // buffer.rd == arrow, script above, content\n    // buffer.rqt == arrow, script below, type\n    // buffer.rq == arrow, script below, content\n    //\n    // buffer.text_\n    // buffer.rm\n    // etc.\n    //\n    // buffer.parenthesisLevel == int, starting at 0\n    // buffer.sb == bool, space before\n    // buffer.beginsWithBond == bool\n    //\n    // These letters are also used as state names.\n    //\n    // Other states:\n    // 0 == begin of main part (arrow/operator unlikely)\n    // 1 == next entity\n    // 2 == next entity (arrow/operator unlikely)\n    // 3 == next atom\n    // c == macro\n    //\n\n    /** @type {Buffer} */\n\n    var buffer = {};\n    buffer['parenthesisLevel'] = 0;\n    input = input.replace(/\\n/g, ' ');\n    input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, '-');\n    input = input.replace(/[\\u2026]/g, '...'); //\n    // Looks through mhchemParser.transitions, to execute a matching action\n    // (recursive)\n    //\n\n    var lastInput;\n    var watchdog = 10;\n    /** @type {ParserOutput[]} */\n\n    var output = [];\n\n    while (true) {\n      if (lastInput !== input) {\n        watchdog = 10;\n        lastInput = input;\n      } else {\n        watchdog--;\n      } //\n      // Find actions in transition table\n      //\n\n\n      var machine = mhchemParser.stateMachines[stateMachine];\n      var t = machine.transitions[state] || machine.transitions['*'];\n\n      iterateTransitions: for (var i = 0; i < t.length; i++) {\n        var matches = mhchemParser.patterns.match_(t[i].pattern, input);\n\n        if (matches) {\n          //\n          // Execute actions\n          //\n          var task = t[i].task;\n\n          for (var iA = 0; iA < task.action_.length; iA++) {\n            var o; //\n            // Find and execute action\n            //\n\n            if (machine.actions[task.action_[iA].type_]) {\n              o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n            } else if (mhchemParser.actions[task.action_[iA].type_]) {\n              o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n            } else {\n              throw ['MhchemBugA', 'mhchem bug A. Please report. (' + task.action_[iA].type_ + ')']; // Trying to use non-existing action\n            } //\n            // Add output\n            //\n\n\n            mhchemParser.concatArray(output, o);\n          } //\n          // Set next state,\n          // Shorten input,\n          // Continue with next character\n          //   (= apply only one transition per position)\n          //\n\n\n          state = task.nextState || state;\n\n          if (input.length > 0) {\n            if (!task.revisit) {\n              input = matches.remainder;\n            }\n\n            if (!task.toContinue) {\n              break iterateTransitions;\n            }\n          } else {\n            return output;\n          }\n        }\n      } //\n      // Prevent infinite loop\n      //\n\n\n      if (watchdog <= 0) {\n        throw ['MhchemBugU', 'mhchem bug U. Please report.']; // Unexpected character\n      }\n    }\n  },\n  concatArray: function concatArray(a, b) {\n    if (b) {\n      if (Array.isArray(b)) {\n        for (var iB = 0; iB < b.length; iB++) {\n          a.push(b[iB]);\n        }\n      } else {\n        a.push(b);\n      }\n    }\n  },\n  patterns: {\n    //\n    // Matching patterns\n    // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\n    //\n    patterns: {\n      // property names must not look like integers (\"2\") for correct property traversal order, later on\n      empty: /^$/,\n      else: /^./,\n      else2: /^./,\n      space: /^\\s/,\n      'space A': /^\\s(?=[A-Z\\\\$])/,\n      space$: /^\\s$/,\n      'a-z': /^[a-z]/,\n      x: /^x/,\n      x$: /^x$/,\n      i$: /^i$/,\n      letters: /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n      '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n      'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n      '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n      'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n      digits: /^[0-9]+/,\n      '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n      '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n      '(-)(9.,9)(e)(99)': function e99(input) {\n        var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n\n        if (m && m[0]) {\n          return {\n            match_: m.splice(1),\n            remainder: input.substr(m[0].length)\n          };\n        }\n\n        return null;\n      },\n      '(-)(9)^(-9)': function _(input) {\n        var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/);\n\n        if (m && m[0]) {\n          return {\n            match_: m.splice(1),\n            remainder: input.substr(m[0].length)\n          };\n        }\n\n        return null;\n      },\n      'state of aggregation $': function stateOfAggregation$(input) {\n        // ... or crystal system\n        var a = mhchemParser.patterns.findObserveGroups(input, '', /^\\([a-z]{1,3}(?=[\\),])/, ')', ''); // (aq), (aq,$\\infty$), (aq, sat)\n\n        if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\n          return a;\n        } //  AND end of 'phrase'\n\n\n        var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/); // OR crystal system ($o$) (\\ca$c$)\n\n        if (m) {\n          return {\n            match_: m[0],\n            remainder: input.substr(m[0].length)\n          };\n        }\n\n        return null;\n      },\n      '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n      '{[(': /^(?:\\\\\\{|\\[|\\()/,\n      ')]}': /^(?:\\)|\\]|\\\\\\})/,\n      ', ': /^[,;]\\s*/,\n      ',': /^[,;]/,\n      '.': /^[.]/,\n      '. ': /^([.\\u22C5\\u00B7\\u2022])\\s*/,\n      '...': /^\\.\\.\\.(?=$|[^.])/,\n      '* ': /^([*])\\s*/,\n      '^{(...)}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '^{', '', '', '}');\n      },\n      '^($...$)': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '^', '$', '$', '');\n      },\n      '^a': /^\\^([0-9]+|[^\\\\_])/,\n      '^\\\\x{}{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '^', /^\\\\[a-zA-Z]+\\{/, '}', '', '', '{', '}', '', true);\n      },\n      '^\\\\x{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '^', /^\\\\[a-zA-Z]+\\{/, '}', '');\n      },\n      '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n      '^(-1)': /^\\^(-?\\d+)/,\n      \"'\": /^'/,\n      '_{(...)}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '_{', '', '', '}');\n      },\n      '_($...$)': function _$$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '_', '$', '$', '');\n      },\n      _9: /^_([+\\-]?[0-9]+|[^\\\\])/,\n      '_\\\\x{}{}': function _X(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '_', /^\\\\[a-zA-Z]+\\{/, '}', '', '', '{', '}', '', true);\n      },\n      '_\\\\x{}': function _X(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '_', /^\\\\[a-zA-Z]+\\{/, '}', '');\n      },\n      '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n      '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n      '{}': /^\\{\\}/,\n      '{...}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '', '{', '}', '');\n      },\n      '{(...)}': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '{', '', '', '}');\n      },\n      '$...$': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '', '$', '$', '');\n      },\n      '${(...)}$': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '${', '', '', '}$');\n      },\n      '$(...)$': function $$(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '$', '', '', '$');\n      },\n      '=<>': /^[=<>]/,\n      '#': /^[#\\u2261]/,\n      '+': /^\\+/,\n      '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\n      '-9': /^-(?=[0-9])/,\n      '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n      '-': /^-/,\n      'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n      operator: /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n      arrowUpDown: /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n      '\\\\bond{(...)}': function bond(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\bond{', '', '', '}');\n      },\n      '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n      CMT: /^[CMT](?=\\[)/,\n      '[(...)]': function _(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '[', '', '', ']');\n      },\n      '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n      '\\\\,': /^(?:\\\\[,\\ ;:])/,\n      '\\\\x{}{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '', /^\\\\[a-zA-Z]+\\{/, '}', '', '', '{', '}', '', true);\n      },\n      '\\\\x{}': function x(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '', /^\\\\[a-zA-Z]+\\{/, '}', '');\n      },\n      '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n      '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n      orbital: /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\n      others: /^[\\/~|]/,\n      '\\\\frac{(...)}': function frac(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\frac{', '', '', '}', '{', '', '', '}');\n      },\n      '\\\\overset{(...)}': function overset(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\overset{', '', '', '}', '{', '', '', '}');\n      },\n      '\\\\underset{(...)}': function underset(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\underset{', '', '', '}', '{', '', '', '}');\n      },\n      '\\\\underbrace{(...)}': function underbrace(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\underbrace{', '', '', '}_', '{', '', '', '}');\n      },\n      '\\\\color{(...)}0': function color0(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\color{', '', '', '}');\n      },\n      '\\\\color{(...)}{(...)}1': function color1(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\color{', '', '', '}', '{', '', '', '}');\n      },\n      '\\\\color(...){(...)}2': function color2(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\color', '\\\\', '', /^(?=\\{)/, '{', '', '', '}');\n      },\n      '\\\\ce{(...)}': function ce(input) {\n        return mhchemParser.patterns.findObserveGroups(input, '\\\\ce{', '', '', '}');\n      },\n      oxidation$: /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n      'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n      'roman numeral': /^[IVX]+/,\n      '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n      amount: function amount(input) {\n        var match; // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\n\n        match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n\n        if (match) {\n          return {\n            match_: match[0],\n            remainder: input.substr(match[0].length)\n          };\n        }\n\n        var a = mhchemParser.patterns.findObserveGroups(input, '', '$', '$', '');\n\n        if (a) {\n          // e.g. $2n-1$, $-$\n          match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n\n          if (match) {\n            return {\n              match_: match[0],\n              remainder: input.substr(match[0].length)\n            };\n          }\n        }\n\n        return null;\n      },\n      amount2: function amount2(input) {\n        return this['amount'](input);\n      },\n      '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n      formula$: function formula$(input) {\n        if (input.match(/^\\([a-z]+\\)$/)) {\n          return null;\n        } // state of aggregation = no formula\n\n\n        var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n\n        if (match) {\n          return {\n            match_: match[0],\n            remainder: input.substr(match[0].length)\n          };\n        }\n\n        return null;\n      },\n      uprightEntities: /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n      '/': /^\\s*(\\/)\\s*/,\n      '//': /^\\s*(\\/\\/)\\s*/,\n      '*': /^\\s*[*.]\\s*/\n    },\n    findObserveGroups: function findObserveGroups(input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n      /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\n      var _match = function _match(input, pattern) {\n        if (typeof pattern === 'string') {\n          if (input.indexOf(pattern) !== 0) {\n            return null;\n          }\n\n          return pattern;\n        } else {\n          var match = input.match(pattern);\n\n          if (!match) {\n            return null;\n          }\n\n          return match[0];\n        }\n      };\n      /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\n\n\n      var _findObserveGroups = function _findObserveGroups(input, i, endChars) {\n        var braces = 0;\n\n        while (i < input.length) {\n          var a = input.charAt(i);\n\n          var match = _match(input.substr(i), endChars);\n\n          if (match !== null && braces === 0) {\n            return {\n              endMatchBegin: i,\n              endMatchEnd: i + match.length\n            };\n          } else if (a === '{') {\n            braces++;\n          } else if (a === '}') {\n            if (braces === 0) {\n              throw ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'];\n            } else {\n              braces--;\n            }\n          }\n\n          i++;\n        }\n\n        if (braces > 0) {\n          return null;\n        }\n\n        return null;\n      };\n\n      var match = _match(input, begExcl);\n\n      if (match === null) {\n        return null;\n      }\n\n      input = input.substr(match.length);\n      match = _match(input, begIncl);\n\n      if (match === null) {\n        return null;\n      }\n\n      var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n\n      if (e === null) {\n        return null;\n      }\n\n      var match1 = input.substring(0, endIncl ? e.endMatchEnd : e.endMatchBegin);\n\n      if (!(beg2Excl || beg2Incl)) {\n        return {\n          match_: match1,\n          remainder: input.substr(e.endMatchEnd)\n        };\n      } else {\n        var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n\n        if (group2 === null) {\n          return null;\n        }\n        /** @type {string[]} */\n\n\n        var matchRet = [match1, group2.match_];\n        return {\n          match_: combine ? matchRet.join('') : matchRet,\n          remainder: group2.remainder\n        };\n      }\n    },\n    //\n    // Matching function\n    // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\n    // returns null or {match_:\"a\", remainder:\"bc\"}\n    //\n    match_: function match_(m, input) {\n      var pattern = mhchemParser.patterns.patterns[m];\n\n      if (pattern === undefined) {\n        throw ['MhchemBugP', 'mhchem bug P. Please report. (' + m + ')']; // Trying to use non-existing pattern\n      } else if (typeof pattern === 'function') {\n        return mhchemParser.patterns.patterns[m](input); // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\n      } else {\n        // RegExp\n        var match = input.match(pattern);\n\n        if (match) {\n          var mm;\n\n          if (match[2]) {\n            mm = [match[1], match[2]];\n          } else if (match[1]) {\n            mm = match[1];\n          } else {\n            mm = match[0];\n          }\n\n          return {\n            match_: mm,\n            remainder: input.substr(match[0].length)\n          };\n        }\n\n        return null;\n      }\n    }\n  },\n  //\n  // Generic state machine actions\n  //\n  actions: {\n    'a=': function a(buffer, m) {\n      buffer.a = (buffer.a || '') + m;\n    },\n    'b=': function b(buffer, m) {\n      buffer.b = (buffer.b || '') + m;\n    },\n    'p=': function p(buffer, m) {\n      buffer.p = (buffer.p || '') + m;\n    },\n    'o=': function o(buffer, m) {\n      buffer.o = (buffer.o || '') + m;\n    },\n    'q=': function q(buffer, m) {\n      buffer.q = (buffer.q || '') + m;\n    },\n    'd=': function d(buffer, m) {\n      buffer.d = (buffer.d || '') + m;\n    },\n    'rm=': function rm(buffer, m) {\n      buffer.rm = (buffer.rm || '') + m;\n    },\n    'text=': function text(buffer, m) {\n      buffer.text_ = (buffer.text_ || '') + m;\n    },\n    insert: function insert(buffer, m, a) {\n      return {\n        type_: a\n      };\n    },\n    'insert+p1': function insertP1(buffer, m, a) {\n      return {\n        type_: a,\n        p1: m\n      };\n    },\n    'insert+p1+p2': function insertP1P2(buffer, m, a) {\n      return {\n        type_: a,\n        p1: m[0],\n        p2: m[1]\n      };\n    },\n    copy: function copy(buffer, m) {\n      return m;\n    },\n    rm: function rm(buffer, m) {\n      return {\n        type_: 'rm',\n        p1: m || ''\n      };\n    },\n    text: function text(buffer, m) {\n      return mhchemParser.go(m, 'text');\n    },\n    '{text}': function text(buffer, m) {\n      var ret = ['{'];\n      mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));\n      ret.push('}');\n      return ret;\n    },\n    'tex-math': function texMath(buffer, m) {\n      return mhchemParser.go(m, 'tex-math');\n    },\n    'tex-math tight': function texMathTight(buffer, m) {\n      return mhchemParser.go(m, 'tex-math tight');\n    },\n    bond: function bond(buffer, m, k) {\n      return {\n        type_: 'bond',\n        kind_: k || m\n      };\n    },\n    'color0-output': function color0Output(buffer, m) {\n      return {\n        type_: 'color0',\n        color: m[0]\n      };\n    },\n    ce: function ce(buffer, m) {\n      return mhchemParser.go(m);\n    },\n    '1/2': function _(buffer, m) {\n      /** @type {ParserOutput[]} */\n      var ret = [];\n\n      if (m.match(/^[+\\-]/)) {\n        ret.push(m.substr(0, 1));\n        m = m.substr(1);\n      }\n\n      var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n      n[1] = n[1].replace(/\\$/g, '');\n      ret.push({\n        type_: 'frac',\n        p1: n[1],\n        p2: n[2]\n      });\n\n      if (n[3]) {\n        n[3] = n[3].replace(/\\$/g, '');\n        ret.push({\n          type_: 'tex-math',\n          p1: n[3]\n        });\n      }\n\n      return ret;\n    },\n    '9,9': function _(buffer, m) {\n      return mhchemParser.go(m, '9,9');\n    }\n  },\n  //\n  // createTransitions\n  // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\n  // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\n  //\n  createTransitions: function createTransitions(o) {\n    var pattern, state;\n    /** @type {string[]} */\n\n    var stateArray;\n    var i; //\n    // 1. Collect all states\n    //\n\n    /** @type {Transitions} */\n\n    var transitions = {};\n\n    for (pattern in o) {\n      for (state in o[pattern]) {\n        stateArray = state.split('|');\n        o[pattern][state].stateArray = stateArray;\n\n        for (i = 0; i < stateArray.length; i++) {\n          transitions[stateArray[i]] = [];\n        }\n      }\n    } //\n    // 2. Fill states\n    //\n\n\n    for (pattern in o) {\n      for (state in o[pattern]) {\n        stateArray = o[pattern][state].stateArray || [];\n\n        for (i = 0; i < stateArray.length; i++) {\n          //\n          // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\n          // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\n          //\n\n          /** @type {any} */\n          var p = o[pattern][state];\n\n          if (p.action_) {\n            p.action_ = [].concat(p.action_);\n\n            for (var k = 0; k < p.action_.length; k++) {\n              if (typeof p.action_[k] === 'string') {\n                p.action_[k] = {\n                  type_: p.action_[k]\n                };\n              }\n            }\n          } else {\n            p.action_ = [];\n          } //\n          // 2.b Multi-insert\n          //\n\n\n          var patternArray = pattern.split('|');\n\n          for (var j = 0; j < patternArray.length; j++) {\n            if (stateArray[i] === '*') {\n              // insert into all\n              for (var t in transitions) {\n                transitions[t].push({\n                  pattern: patternArray[j],\n                  task: p\n                });\n              }\n            } else {\n              transitions[stateArray[i]].push({\n                pattern: patternArray[j],\n                task: p\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return transitions;\n  },\n  stateMachines: {}\n}; //\n// Definition of state machines\n//\n\nmhchemParser.stateMachines = {\n  //\n  // \\ce state machines\n  //\n  //#region ce\n  ce: {\n    // main parser\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {\n          action_: 'output'\n        }\n      },\n      else: {\n        '0|1|2': {\n          action_: 'beginsWithBond=false',\n          revisit: true,\n          toContinue: true\n        }\n      },\n      oxidation$: {\n        '0': {\n          action_: 'oxidation-output'\n        }\n      },\n      CMT: {\n        r: {\n          action_: 'rdt=',\n          nextState: 'rt'\n        },\n        rd: {\n          action_: 'rqt=',\n          nextState: 'rdt'\n        }\n      },\n      arrowUpDown: {\n        '0|1|2|as': {\n          action_: ['sb=false', 'output', 'operator'],\n          nextState: '1'\n        }\n      },\n      uprightEntities: {\n        '0|1|2': {\n          action_: ['o=', 'output'],\n          nextState: '1'\n        }\n      },\n      orbital: {\n        '0|1|2|3': {\n          action_: 'o=',\n          nextState: 'o'\n        }\n      },\n      '->': {\n        '0|1|2|3': {\n          action_: 'r=',\n          nextState: 'r'\n        },\n        'a|as': {\n          action_: ['output', 'r='],\n          nextState: 'r'\n        },\n        '*': {\n          action_: ['output', 'r='],\n          nextState: 'r'\n        }\n      },\n      '+': {\n        o: {\n          action_: 'd= kv',\n          nextState: 'd'\n        },\n        'd|D': {\n          action_: 'd=',\n          nextState: 'd'\n        },\n        q: {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'qd|qD': {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        dq: {\n          action_: ['output', 'd='],\n          nextState: 'd'\n        },\n        '3': {\n          action_: ['sb=false', 'output', 'operator'],\n          nextState: '0'\n        }\n      },\n      amount: {\n        '0|2': {\n          action_: 'a=',\n          nextState: 'a'\n        }\n      },\n      'pm-operator': {\n        '0|1|2|a|as': {\n          action_: ['sb=false', 'output', {\n            type_: 'operator',\n            option: '\\\\pm'\n          }],\n          nextState: '0'\n        }\n      },\n      operator: {\n        '0|1|2|a|as': {\n          action_: ['sb=false', 'output', 'operator'],\n          nextState: '0'\n        }\n      },\n      '-$': {\n        'o|q': {\n          action_: ['charge or bond', 'output'],\n          nextState: 'qd'\n        },\n        d: {\n          action_: 'd=',\n          nextState: 'd'\n        },\n        D: {\n          action_: ['output', {\n            type_: 'bond',\n            option: '-'\n          }],\n          nextState: '3'\n        },\n        q: {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        qd: {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'qD|dq': {\n          action_: ['output', {\n            type_: 'bond',\n            option: '-'\n          }],\n          nextState: '3'\n        }\n      },\n      '-9': {\n        '3|o': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '3'\n        }\n      },\n      '- orbital overlap': {\n        o: {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '2'\n        },\n        d: {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '2'\n        }\n      },\n      '-': {\n        '0|1|2': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'beginsWithBond=true', {\n            type_: 'bond',\n            option: '-'\n          }],\n          nextState: '3'\n        },\n        '3': {\n          action_: {\n            type_: 'bond',\n            option: '-'\n          }\n        },\n        a: {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'hyphen'\n          }],\n          nextState: '2'\n        },\n        as: {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, {\n            type_: 'bond',\n            option: '-'\n          }],\n          nextState: '3'\n        },\n        b: {\n          action_: 'b='\n        },\n        o: {\n          action_: {\n            type_: '- after o/d',\n            option: false\n          },\n          nextState: '2'\n        },\n        q: {\n          action_: {\n            type_: '- after o/d',\n            option: false\n          },\n          nextState: '2'\n        },\n        'd|qd|dq': {\n          action_: {\n            type_: '- after o/d',\n            option: true\n          },\n          nextState: '2'\n        },\n        'D|qD|p': {\n          action_: ['output', {\n            type_: 'bond',\n            option: '-'\n          }],\n          nextState: '3'\n        }\n      },\n      amount2: {\n        '1|3': {\n          action_: 'a=',\n          nextState: 'a'\n        }\n      },\n      letters: {\n        '0|1|2|3|a|as|b|p|bp|o': {\n          action_: 'o=',\n          nextState: 'o'\n        },\n        'q|dq': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        },\n        'd|D|qd|qD': {\n          action_: 'o after d',\n          nextState: 'o'\n        }\n      },\n      digits: {\n        o: {\n          action_: 'q=',\n          nextState: 'q'\n        },\n        'd|D': {\n          action_: 'q=',\n          nextState: 'dq'\n        },\n        q: {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        },\n        a: {\n          action_: 'o=',\n          nextState: 'o'\n        }\n      },\n      'space A': {\n        'b|p|bp': {}\n      },\n      space: {\n        a: {\n          nextState: 'as'\n        },\n        '0': {\n          action_: 'sb=false'\n        },\n        '1|2': {\n          action_: 'sb=true'\n        },\n        'r|rt|rd|rdt|rdq': {\n          action_: 'output',\n          nextState: '0'\n        },\n        '*': {\n          action_: ['output', 'sb=true'],\n          nextState: '1'\n        }\n      },\n      '1st-level escape': {\n        '1|2': {\n          action_: ['output', {\n            type_: 'insert+p1',\n            option: '1st-level escape'\n          }]\n        },\n        '*': {\n          action_: ['output', {\n            type_: 'insert+p1',\n            option: '1st-level escape'\n          }],\n          nextState: '0'\n        }\n      },\n      '[(...)]': {\n        'r|rt': {\n          action_: 'rd=',\n          nextState: 'rd'\n        },\n        'rd|rdt': {\n          action_: 'rq=',\n          nextState: 'rdq'\n        }\n      },\n      '...': {\n        'o|d|D|dq|qd|qD': {\n          action_: ['output', {\n            type_: 'bond',\n            option: '...'\n          }],\n          nextState: '3'\n        },\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, {\n            type_: 'insert',\n            option: 'ellipsis'\n          }],\n          nextState: '1'\n        }\n      },\n      '. |* ': {\n        '*': {\n          action_: ['output', {\n            type_: 'insert',\n            option: 'addition compound'\n          }],\n          nextState: '1'\n        }\n      },\n      'state of aggregation $': {\n        '*': {\n          action_: ['output', 'state of aggregation'],\n          nextState: '1'\n        }\n      },\n      '{[(': {\n        'a|as|o': {\n          action_: ['o=', 'output', 'parenthesisLevel++'],\n          nextState: '2'\n        },\n        '0|1|2|3': {\n          action_: ['o=', 'output', 'parenthesisLevel++'],\n          nextState: '2'\n        },\n        '*': {\n          action_: ['output', 'o=', 'output', 'parenthesisLevel++'],\n          nextState: '2'\n        }\n      },\n      ')]}': {\n        '0|1|2|3|b|p|bp|o': {\n          action_: ['o=', 'parenthesisLevel--'],\n          nextState: 'o'\n        },\n        'a|as|d|D|q|qd|qD|dq': {\n          action_: ['output', 'o=', 'parenthesisLevel--'],\n          nextState: 'o'\n        }\n      },\n      ', ': {\n        '*': {\n          action_: ['output', 'comma'],\n          nextState: '0'\n        }\n      },\n      '^_': {\n        // ^ and _ without a sensible argument\n        '*': {}\n      },\n      '^{(...)}|^($...$)': {\n        '0|1|2|as': {\n          action_: 'b=',\n          nextState: 'b'\n        },\n        p: {\n          action_: 'b=',\n          nextState: 'bp'\n        },\n        '3|o': {\n          action_: 'd= kv',\n          nextState: 'D'\n        },\n        q: {\n          action_: 'd=',\n          nextState: 'qD'\n        },\n        'd|D|qd|qD|dq': {\n          action_: ['output', 'd='],\n          nextState: 'D'\n        }\n      },\n      \"^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|'\": {\n        '0|1|2|as': {\n          action_: 'b=',\n          nextState: 'b'\n        },\n        p: {\n          action_: 'b=',\n          nextState: 'bp'\n        },\n        '3|o': {\n          action_: 'd= kv',\n          nextState: 'd'\n        },\n        q: {\n          action_: 'd=',\n          nextState: 'qd'\n        },\n        'd|qd|D|qD': {\n          action_: 'd='\n        },\n        dq: {\n          action_: ['output', 'd='],\n          nextState: 'd'\n        }\n      },\n      '_{(state of aggregation)}$': {\n        'd|D|q|qd|qD|dq': {\n          action_: ['output', 'q='],\n          nextState: 'q'\n        }\n      },\n      '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n        '0|1|2|as': {\n          action_: 'p=',\n          nextState: 'p'\n        },\n        b: {\n          action_: 'p=',\n          nextState: 'bp'\n        },\n        '3|o': {\n          action_: 'q=',\n          nextState: 'q'\n        },\n        'd|D': {\n          action_: 'q=',\n          nextState: 'dq'\n        },\n        'q|qd|qD|dq': {\n          action_: ['output', 'q='],\n          nextState: 'q'\n        }\n      },\n      '=<>': {\n        '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'bond'],\n          nextState: '3'\n        }\n      },\n      '#': {\n        '0|1|2|3|a|as|o': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, {\n            type_: 'bond',\n            option: '#'\n          }],\n          nextState: '3'\n        }\n      },\n      '{}': {\n        '*': {\n          action_: {\n            type_: 'output',\n            option: 1\n          },\n          nextState: '1'\n        }\n      },\n      '{...}': {\n        '0|1|2|3|a|as|b|p|bp': {\n          action_: 'o=',\n          nextState: 'o'\n        },\n        'o|d|D|q|qd|qD|dq': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        }\n      },\n      '$...$': {\n        a: {\n          action_: 'a='\n        },\n        '0|1|2|3|as|b|p|bp|o': {\n          action_: 'o=',\n          nextState: 'o'\n        },\n        'as|o': {\n          action_: 'o='\n        },\n        'q|d|D|qd|qD|dq': {\n          action_: ['output', 'o='],\n          nextState: 'o'\n        }\n      },\n      '\\\\bond{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'bond'],\n          nextState: '3'\n        }\n      },\n      '\\\\frac{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'frac-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\overset{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'overset-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\underset{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'underset-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\underbrace{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'underbrace-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'color-output'],\n          nextState: '3'\n        }\n      },\n      '\\\\color{(...)}0': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'color0-output']\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 2\n          }, 'ce'],\n          nextState: '3'\n        }\n      },\n      '\\\\,': {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'copy'],\n          nextState: '1'\n        }\n      },\n      '\\\\x{}{}|\\\\x{}|\\\\x': {\n        '0|1|2|3|a|as|b|p|bp|o|c0': {\n          action_: ['o=', 'output'],\n          nextState: '3'\n        },\n        '*': {\n          action_: ['output', 'o=', 'output'],\n          nextState: '3'\n        }\n      },\n      others: {\n        '*': {\n          action_: [{\n            type_: 'output',\n            option: 1\n          }, 'copy'],\n          nextState: '3'\n        }\n      },\n      else2: {\n        a: {\n          action_: 'a to o',\n          nextState: 'o',\n          revisit: true\n        },\n        as: {\n          action_: ['output', 'sb=true'],\n          nextState: '1',\n          revisit: true\n        },\n        'r|rt|rd|rdt|rdq': {\n          action_: ['output'],\n          nextState: '0',\n          revisit: true\n        },\n        '*': {\n          action_: ['output', 'copy'],\n          nextState: '3'\n        }\n      }\n    }),\n    actions: {\n      'o after d': function oAfterD(buffer, m) {\n        var ret;\n\n        if ((buffer.d || '').match(/^[0-9]+$/)) {\n          var tmp = buffer.d;\n          buffer.d = undefined;\n          ret = this['output'](buffer);\n          buffer.b = tmp;\n        } else {\n          ret = this['output'](buffer);\n        }\n\n        mhchemParser.actions['o='](buffer, m);\n        return ret;\n      },\n      'd= kv': function dKv(buffer, m) {\n        buffer.d = m;\n        buffer.dType = 'kv';\n      },\n      'charge or bond': function chargeOrBond(buffer, m) {\n        if (buffer['beginsWithBond']) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          mhchemParser.concatArray(ret, this['output'](buffer));\n          mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, '-'));\n          return ret;\n        } else {\n          buffer.d = m;\n        }\n      },\n      '- after o/d': function afterOD(buffer, m, isAfterD) {\n        var c1 = mhchemParser.patterns.match_('orbital', buffer.o || '');\n        var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || '');\n        var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || '');\n        var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || '');\n        var hyphenFollows = m === '-' && (c1 && c1.remainder === '' || c2 || c3 || c4);\n\n        if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n          buffer.o = '$' + buffer.o + '$';\n        }\n        /** @type {ParserOutput[]} */\n\n\n        var ret = [];\n\n        if (hyphenFollows) {\n          mhchemParser.concatArray(ret, this['output'](buffer));\n          ret.push({\n            type_: 'hyphen'\n          });\n        } else {\n          c1 = mhchemParser.patterns.match_('digits', buffer.d || '');\n\n          if (isAfterD && c1 && c1.remainder === '') {\n            mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));\n            mhchemParser.concatArray(ret, this['output'](buffer));\n          } else {\n            mhchemParser.concatArray(ret, this['output'](buffer));\n            mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, '-'));\n          }\n        }\n\n        return ret;\n      },\n      'a to o': function aToO(buffer) {\n        buffer.o = buffer.a;\n        buffer.a = undefined;\n      },\n      'sb=true': function sbTrue(buffer) {\n        buffer.sb = true;\n      },\n      'sb=false': function sbFalse(buffer) {\n        buffer.sb = false;\n      },\n      'beginsWithBond=true': function beginsWithBondTrue(buffer) {\n        buffer['beginsWithBond'] = true;\n      },\n      'beginsWithBond=false': function beginsWithBondFalse(buffer) {\n        buffer['beginsWithBond'] = false;\n      },\n      'parenthesisLevel++': function parenthesisLevel(buffer) {\n        buffer['parenthesisLevel']++;\n      },\n      'parenthesisLevel--': function parenthesisLevel(buffer) {\n        buffer['parenthesisLevel']--;\n      },\n      'state of aggregation': function stateOfAggregation(buffer, m) {\n        return {\n          type_: 'state of aggregation',\n          p1: mhchemParser.go(m, 'o')\n        };\n      },\n      comma: function comma(buffer, m) {\n        var a = m.replace(/\\s*$/, '');\n        var withSpace = a !== m;\n\n        if (withSpace && buffer['parenthesisLevel'] === 0) {\n          return {\n            type_: 'comma enumeration L',\n            p1: a\n          };\n        } else {\n          return {\n            type_: 'comma enumeration M',\n            p1: a\n          };\n        }\n      },\n      output: function output(buffer, m, entityFollows) {\n        // entityFollows:\n        //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\n        //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\n        //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\n\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret;\n\n        if (!buffer.r) {\n          ret = [];\n          if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) ;else {\n            if (buffer.sb) {\n              ret.push({\n                type_: 'entitySkip'\n              });\n            }\n\n            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {\n              buffer.o = buffer.a;\n              buffer.a = undefined;\n            } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n              buffer.o = buffer.a;\n              buffer.d = buffer.b;\n              buffer.q = buffer.p;\n              buffer.a = buffer.b = buffer.p = undefined;\n            } else {\n              if (buffer.o && buffer.dType === 'kv' && mhchemParser.patterns.match_('d-oxidation$', buffer.d || '')) {\n                buffer.dType = 'oxidation';\n              } else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {\n                buffer.dType = undefined;\n              }\n            }\n\n            ret.push({\n              type_: 'chemfive',\n              a: mhchemParser.go(buffer.a, 'a'),\n              b: mhchemParser.go(buffer.b, 'bd'),\n              p: mhchemParser.go(buffer.p, 'pq'),\n              o: mhchemParser.go(buffer.o, 'o'),\n              q: mhchemParser.go(buffer.q, 'pq'),\n              d: mhchemParser.go(buffer.d, buffer.dType === 'oxidation' ? 'oxidation' : 'bd'),\n              dType: buffer.dType\n            });\n          }\n        } else {\n          // r\n\n          /** @type {ParserOutput[]} */\n          var rd;\n\n          if (buffer.rdt === 'M') {\n            rd = mhchemParser.go(buffer.rd, 'tex-math');\n          } else if (buffer.rdt === 'T') {\n            rd = [{\n              type_: 'text',\n              p1: buffer.rd || ''\n            }];\n          } else {\n            rd = mhchemParser.go(buffer.rd);\n          }\n          /** @type {ParserOutput[]} */\n\n\n          var rq;\n\n          if (buffer.rqt === 'M') {\n            rq = mhchemParser.go(buffer.rq, 'tex-math');\n          } else if (buffer.rqt === 'T') {\n            rq = [{\n              type_: 'text',\n              p1: buffer.rq || ''\n            }];\n          } else {\n            rq = mhchemParser.go(buffer.rq);\n          }\n\n          ret = {\n            type_: 'arrow',\n            r: buffer.r,\n            rd: rd,\n            rq: rq\n          };\n        }\n\n        for (var p in buffer) {\n          if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {\n            delete buffer[p];\n          }\n        }\n\n        return ret;\n      },\n      'oxidation-output': function oxidationOutput(buffer, m) {\n        var ret = ['{'];\n        mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));\n        ret.push('}');\n        return ret;\n      },\n      'frac-output': function fracOutput(buffer, m) {\n        return {\n          type_: 'frac-ce',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'overset-output': function oversetOutput(buffer, m) {\n        return {\n          type_: 'overset',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'underset-output': function undersetOutput(buffer, m) {\n        return {\n          type_: 'underset',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'underbrace-output': function underbraceOutput(buffer, m) {\n        return {\n          type_: 'underbrace',\n          p1: mhchemParser.go(m[0]),\n          p2: mhchemParser.go(m[1])\n        };\n      },\n      'color-output': function colorOutput(buffer, m) {\n        return {\n          type_: 'color',\n          color1: m[0],\n          color2: mhchemParser.go(m[1])\n        };\n      },\n      'r=': function r(buffer, m) {\n        buffer.r = m;\n      },\n      'rdt=': function rdt(buffer, m) {\n        buffer.rdt = m;\n      },\n      'rd=': function rd(buffer, m) {\n        buffer.rd = m;\n      },\n      'rqt=': function rqt(buffer, m) {\n        buffer.rqt = m;\n      },\n      'rq=': function rq(buffer, m) {\n        buffer.rq = m;\n      },\n      operator: function operator(buffer, m, p1) {\n        return {\n          type_: 'operator',\n          kind_: p1 || m\n        };\n      }\n    }\n  },\n  a: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {}\n      },\n      '1/2$': {\n        '0': {\n          action_: '1/2'\n        }\n      },\n      else: {\n        '0': {\n          nextState: '1',\n          revisit: true\n        }\n      },\n      '$(...)$': {\n        '*': {\n          action_: 'tex-math tight',\n          nextState: '1'\n        }\n      },\n      ',': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'commaDecimal'\n          }\n        }\n      },\n      else2: {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {}\n  },\n  o: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {}\n      },\n      '1/2$': {\n        '0': {\n          action_: '1/2'\n        }\n      },\n      else: {\n        '0': {\n          nextState: '1',\n          revisit: true\n        }\n      },\n      letters: {\n        '*': {\n          action_: 'rm'\n        }\n      },\n      '\\\\ca': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'circa'\n          }\n        }\n      },\n      '\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'copy'\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '{(...)}': {\n        '*': {\n          action_: '{text}'\n        }\n      },\n      else2: {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {}\n  },\n  text: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '{...}': {\n        '*': {\n          action_: 'text='\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '\\\\greek': {\n        '*': {\n          action_: ['output', 'rm']\n        }\n      },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: ['output', 'copy']\n        }\n      },\n      else: {\n        '*': {\n          action_: 'text='\n        }\n      }\n    }),\n    actions: {\n      output: function output(buffer) {\n        if (buffer.text_) {\n          /** @type {ParserOutput} */\n          var ret = {\n            type_: 'text',\n            p1: buffer.text_\n          };\n\n          for (var p in buffer) {\n            delete buffer[p];\n          }\n\n          return ret;\n        }\n      }\n    }\n  },\n  pq: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {}\n      },\n      'state of aggregation $': {\n        '*': {\n          action_: 'state of aggregation'\n        }\n      },\n      i$: {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      '(KV letters),': {\n        '0': {\n          action_: 'rm',\n          nextState: '0'\n        }\n      },\n      formula$: {\n        '0': {\n          nextState: 'f',\n          revisit: true\n        }\n      },\n      '1/2$': {\n        '0': {\n          action_: '1/2'\n        }\n      },\n      else: {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '{(...)}': {\n        '*': {\n          action_: 'text'\n        }\n      },\n      'a-z': {\n        f: {\n          action_: 'tex-math'\n        }\n      },\n      letters: {\n        '*': {\n          action_: 'rm'\n        }\n      },\n      '-9.,9': {\n        '*': {\n          action_: '9,9'\n        }\n      },\n      ',': {\n        '*': {\n          action_: {\n            type_: 'insert+p1',\n            option: 'comma enumeration S'\n          }\n        }\n      },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': {\n          action_: 'color-output'\n        }\n      },\n      '\\\\color{(...)}0': {\n        '*': {\n          action_: 'color0-output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: 'ce'\n        }\n      },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'copy'\n        }\n      },\n      else2: {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'state of aggregation': function stateOfAggregation(buffer, m) {\n        return {\n          type_: 'state of aggregation subscript',\n          p1: mhchemParser.go(m, 'o')\n        };\n      },\n      'color-output': function colorOutput(buffer, m) {\n        return {\n          type_: 'color',\n          color1: m[0],\n          color2: mhchemParser.go(m[1], 'pq')\n        };\n      }\n    }\n  },\n  bd: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {}\n      },\n      x$: {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      formula$: {\n        '0': {\n          nextState: 'f',\n          revisit: true\n        }\n      },\n      else: {\n        '0': {\n          nextState: '!f',\n          revisit: true\n        }\n      },\n      '-9.,9 no missing 0': {\n        '*': {\n          action_: '9,9'\n        }\n      },\n      '.': {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'electron dot'\n          }\n        }\n      },\n      'a-z': {\n        f: {\n          action_: 'tex-math'\n        }\n      },\n      x: {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'KV x'\n          }\n        }\n      },\n      letters: {\n        '*': {\n          action_: 'rm'\n        }\n      },\n      \"'\": {\n        '*': {\n          action_: {\n            type_: 'insert',\n            option: 'prime'\n          }\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      '{(...)}': {\n        '*': {\n          action_: 'text'\n        }\n      },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': {\n          action_: 'color-output'\n        }\n      },\n      '\\\\color{(...)}0': {\n        '*': {\n          action_: 'color0-output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: 'ce'\n        }\n      },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'copy'\n        }\n      },\n      else2: {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'color-output': function colorOutput(buffer, m) {\n        return {\n          type_: 'color',\n          color1: m[0],\n          color2: mhchemParser.go(m[1], 'bd')\n        };\n      }\n    }\n  },\n  oxidation: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {}\n      },\n      'roman numeral': {\n        '*': {\n          action_: 'roman-numeral'\n        }\n      },\n      '${(...)}$|$(...)$': {\n        '*': {\n          action_: 'tex-math'\n        }\n      },\n      else: {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      'roman-numeral': function romanNumeral(buffer, m) {\n        return {\n          type_: 'roman numeral',\n          p1: m || ''\n        };\n      }\n    }\n  },\n  'tex-math': {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: ['output', 'ce']\n        }\n      },\n      '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'o='\n        }\n      },\n      else: {\n        '*': {\n          action_: 'o='\n        }\n      }\n    }),\n    actions: {\n      output: function output(buffer) {\n        if (buffer.o) {\n          /** @type {ParserOutput} */\n          var ret = {\n            type_: 'tex-math',\n            p1: buffer.o\n          };\n\n          for (var p in buffer) {\n            delete buffer[p];\n          }\n\n          return ret;\n        }\n      }\n    }\n  },\n  'tex-math tight': {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '\\\\ce{(...)}': {\n        '*': {\n          action_: ['output', 'ce']\n        }\n      },\n      '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': {\n          action_: 'o='\n        }\n      },\n      '-|+': {\n        '*': {\n          action_: 'tight operator'\n        }\n      },\n      else: {\n        '*': {\n          action_: 'o='\n        }\n      }\n    }),\n    actions: {\n      'tight operator': function tightOperator(buffer, m) {\n        buffer.o = (buffer.o || '') + '{' + m + '}';\n      },\n      output: function output(buffer) {\n        if (buffer.o) {\n          /** @type {ParserOutput} */\n          var ret = {\n            type_: 'tex-math',\n            p1: buffer.o\n          };\n\n          for (var p in buffer) {\n            delete buffer[p];\n          }\n\n          return ret;\n        }\n      }\n    }\n  },\n  '9,9': {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {}\n      },\n      ',': {\n        '*': {\n          action_: 'comma'\n        }\n      },\n      else: {\n        '*': {\n          action_: 'copy'\n        }\n      }\n    }),\n    actions: {\n      comma: function comma() {\n        return {\n          type_: 'commaDecimal'\n        };\n      }\n    }\n  },\n  //#endregion\n  //\n  // \\pu state machines\n  //\n  //#region pu\n  pu: {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {\n          action_: 'output'\n        }\n      },\n      space$: {\n        '*': {\n          action_: ['output', 'space']\n        }\n      },\n      '{[(|)]}': {\n        '0|a': {\n          action_: 'copy'\n        }\n      },\n      '(-)(9)^(-9)': {\n        '0': {\n          action_: 'number^',\n          nextState: 'a'\n        }\n      },\n      '(-)(9.,9)(e)(99)': {\n        '0': {\n          action_: 'enumber',\n          nextState: 'a'\n        }\n      },\n      space: {\n        '0|a': {}\n      },\n      'pm-operator': {\n        '0|a': {\n          action_: {\n            type_: 'operator',\n            option: '\\\\pm'\n          },\n          nextState: '0'\n        }\n      },\n      operator: {\n        '0|a': {\n          action_: 'copy',\n          nextState: '0'\n        }\n      },\n      '//': {\n        d: {\n          action_: 'o=',\n          nextState: '/'\n        }\n      },\n      '/': {\n        d: {\n          action_: 'o=',\n          nextState: '/'\n        }\n      },\n      '{...}|else': {\n        '0|d': {\n          action_: 'd=',\n          nextState: 'd'\n        },\n        a: {\n          action_: ['space', 'd='],\n          nextState: 'd'\n        },\n        '/|q': {\n          action_: 'q=',\n          nextState: 'q'\n        }\n      }\n    }),\n    actions: {\n      enumber: function enumber(buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n\n        if (m[0] === '+-' || m[0] === '+/-') {\n          ret.push('\\\\pm ');\n        } else if (m[0]) {\n          ret.push(m[0]);\n        }\n\n        if (m[1]) {\n          mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n\n          if (m[2]) {\n            if (m[2].match(/[,.]/)) {\n              mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));\n            } else {\n              ret.push(m[2]);\n            }\n          }\n\n          m[3] = m[4] || m[3];\n\n          if (m[3]) {\n            m[3] = m[3].trim();\n\n            if (m[3] === 'e' || m[3].substr(0, 1) === '*') {\n              ret.push({\n                type_: 'cdot'\n              });\n            } else {\n              ret.push({\n                type_: 'times'\n              });\n            }\n          }\n        }\n\n        if (m[3]) {\n          ret.push('10^{' + m[5] + '}');\n        }\n\n        return ret;\n      },\n      'number^': function number(buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n\n        if (m[0] === '+-' || m[0] === '+/-') {\n          ret.push('\\\\pm ');\n        } else if (m[0]) {\n          ret.push(m[0]);\n        }\n\n        mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n        ret.push('^{' + m[2] + '}');\n        return ret;\n      },\n      operator: function operator(buffer, m, p1) {\n        return {\n          type_: 'operator',\n          kind_: p1 || m\n        };\n      },\n      space: function space() {\n        return {\n          type_: 'pu-space-1'\n        };\n      },\n      output: function output(buffer) {\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret;\n        var md = mhchemParser.patterns.match_('{(...)}', buffer.d || '');\n\n        if (md && md.remainder === '') {\n          buffer.d = md.match_;\n        }\n\n        var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || '');\n\n        if (mq && mq.remainder === '') {\n          buffer.q = mq.match_;\n        }\n\n        if (buffer.d) {\n          buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, '{}^{\\\\circ}C');\n          buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, '{}^{\\\\circ}F');\n        }\n\n        if (buffer.q) {\n          // fraction\n          buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, '{}^{\\\\circ}C');\n          buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, '{}^{\\\\circ}F');\n          var b5 = {\n            d: mhchemParser.go(buffer.d, 'pu'),\n            q: mhchemParser.go(buffer.q, 'pu')\n          };\n\n          if (buffer.o === '//') {\n            ret = {\n              type_: 'pu-frac',\n              p1: b5.d,\n              p2: b5.q\n            };\n          } else {\n            ret = b5.d;\n\n            if (b5.d.length > 1 || b5.q.length > 1) {\n              ret.push({\n                type_: ' / '\n              });\n            } else {\n              ret.push({\n                type_: '/'\n              });\n            }\n\n            mhchemParser.concatArray(ret, b5.q);\n          }\n        } else {\n          // no fraction\n          ret = mhchemParser.go(buffer.d, 'pu-2');\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      }\n    }\n  },\n  'pu-2': {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '*': {\n          action_: 'output'\n        }\n      },\n      '*': {\n        '*': {\n          action_: ['output', 'cdot'],\n          nextState: '0'\n        }\n      },\n      '\\\\x': {\n        '*': {\n          action_: 'rm='\n        }\n      },\n      space: {\n        '*': {\n          action_: ['output', 'space'],\n          nextState: '0'\n        }\n      },\n      '^{(...)}|^(-1)': {\n        '1': {\n          action_: '^(-1)'\n        }\n      },\n      '-9.,9': {\n        '0': {\n          action_: 'rm=',\n          nextState: '0'\n        },\n        '1': {\n          action_: '^(-1)',\n          nextState: '0'\n        }\n      },\n      '{...}|else': {\n        '*': {\n          action_: 'rm=',\n          nextState: '1'\n        }\n      }\n    }),\n    actions: {\n      cdot: function cdot() {\n        return {\n          type_: 'tight cdot'\n        };\n      },\n      '^(-1)': function _(buffer, m) {\n        buffer.rm += '^{' + m + '}';\n      },\n      space: function space() {\n        return {\n          type_: 'pu-space-2'\n        };\n      },\n      output: function output(buffer) {\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret = [];\n\n        if (buffer.rm) {\n          var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || '');\n\n          if (mrm && mrm.remainder === '') {\n            ret = mhchemParser.go(mrm.match_, 'pu');\n          } else {\n            ret = {\n              type_: 'rm',\n              p1: buffer.rm\n            };\n          }\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      }\n    }\n  },\n  'pu-9,9': {\n    transitions: mhchemParser.createTransitions({\n      empty: {\n        '0': {\n          action_: 'output-0'\n        },\n        o: {\n          action_: 'output-o'\n        }\n      },\n      ',': {\n        '0': {\n          action_: ['output-0', 'comma'],\n          nextState: 'o'\n        }\n      },\n      '.': {\n        '0': {\n          action_: ['output-0', 'copy'],\n          nextState: 'o'\n        }\n      },\n      else: {\n        '*': {\n          action_: 'text='\n        }\n      }\n    }),\n    actions: {\n      comma: function comma() {\n        return {\n          type_: 'commaDecimal'\n        };\n      },\n      'output-0': function output0(buffer) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        buffer.text_ = buffer.text_ || '';\n\n        if (buffer.text_.length > 4) {\n          var a = buffer.text_.length % 3;\n\n          if (a === 0) {\n            a = 3;\n          }\n\n          for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\n            ret.push(buffer.text_.substr(i, 3));\n            ret.push({\n              type_: '1000 separator'\n            });\n          }\n\n          ret.push(buffer.text_.substr(0, a));\n          ret.reverse();\n        } else {\n          ret.push(buffer.text_);\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      },\n      'output-o': function outputO(buffer) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        buffer.text_ = buffer.text_ || '';\n\n        if (buffer.text_.length > 4) {\n          var a = buffer.text_.length - 3;\n\n          for (var i = 0; i < a; i += 3) {\n            ret.push(buffer.text_.substr(i, 3));\n            ret.push({\n              type_: '1000 separator'\n            });\n          }\n\n          ret.push(buffer.text_.substr(i));\n        } else {\n          ret.push(buffer.text_);\n        }\n\n        for (var p in buffer) {\n          delete buffer[p];\n        }\n\n        return ret;\n      }\n    }\n  }\n}; //\n// texify: Take MhchemParser output and convert it to TeX\n//\n\n/** @type {Texify} */\n\nvar texify = {\n  go: function go(input, isInner) {\n    // (recursive, max 4 levels)\n    if (!input) {\n      return '';\n    }\n\n    var res = '';\n    var cee = false;\n\n    for (var i = 0; i < input.length; i++) {\n      var inputi = input[i];\n\n      if (typeof inputi === 'string') {\n        res += inputi;\n      } else {\n        res += texify._go2(inputi);\n\n        if (inputi.type_ === '1st-level escape') {\n          cee = true;\n        }\n      }\n    }\n\n    if (!isInner && !cee && res) {\n      res = '{' + res + '}';\n    }\n\n    return res;\n  },\n  _goInner: function _goInner(input) {\n    if (!input) {\n      return input;\n    }\n\n    return texify.go(input, true);\n  },\n  _go2: function _go2(buf) {\n    /** @type {undefined | string} */\n    var res;\n\n    switch (buf.type_) {\n      case 'chemfive':\n        res = '';\n        var b5 = {\n          a: texify._goInner(buf.a),\n          b: texify._goInner(buf.b),\n          p: texify._goInner(buf.p),\n          o: texify._goInner(buf.o),\n          q: texify._goInner(buf.q),\n          d: texify._goInner(buf.d)\n        }; //\n        // a\n        //\n\n        if (b5.a) {\n          if (b5.a.match(/^[+\\-]/)) {\n            b5.a = '{' + b5.a + '}';\n          }\n\n          res += b5.a + '\\\\,';\n        } //\n        // b and p\n        //\n\n\n        if (b5.b || b5.p) {\n          res += '{\\\\vphantom{X}}';\n          res += '^{\\\\hphantom{' + (b5.b || '') + '}}_{\\\\hphantom{' + (b5.p || '') + '}}';\n          res += '{\\\\vphantom{X}}';\n          res += '^{\\\\smash[t]{\\\\vphantom{2}}\\\\mathllap{' + (b5.b || '') + '}}';\n          res += '_{\\\\vphantom{2}\\\\mathllap{\\\\smash[t]{' + (b5.p || '') + '}}}';\n        } //\n        // o\n        //\n\n\n        if (b5.o) {\n          if (b5.o.match(/^[+\\-]/)) {\n            b5.o = '{' + b5.o + '}';\n          }\n\n          res += b5.o;\n        } //\n        // q and d\n        //\n\n\n        if (buf.dType === 'kv') {\n          if (b5.d || b5.q) {\n            res += '{\\\\vphantom{X}}';\n          }\n\n          if (b5.d) {\n            res += '^{' + b5.d + '}';\n          }\n\n          if (b5.q) {\n            res += '_{\\\\smash[t]{' + b5.q + '}}';\n          }\n        } else if (buf.dType === 'oxidation') {\n          if (b5.d) {\n            res += '{\\\\vphantom{X}}';\n            res += '^{' + b5.d + '}';\n          }\n\n          if (b5.q) {\n            res += '{\\\\vphantom{X}}';\n            res += '_{\\\\smash[t]{' + b5.q + '}}';\n          }\n        } else {\n          if (b5.q) {\n            res += '{\\\\vphantom{X}}';\n            res += '_{\\\\smash[t]{' + b5.q + '}}';\n          }\n\n          if (b5.d) {\n            res += '{\\\\vphantom{X}}';\n            res += '^{' + b5.d + '}';\n          }\n        }\n\n        break;\n\n      case 'rm':\n        res = '\\\\mathrm{' + buf.p1 + '}';\n        break;\n\n      case 'text':\n        if (buf.p1.match(/[\\^_]/)) {\n          buf.p1 = buf.p1.replace(' ', '~').replace('-', '\\\\text{-}');\n          res = '\\\\mathrm{' + buf.p1 + '}';\n        } else {\n          res = '\\\\text{' + buf.p1 + '}';\n        }\n\n        break;\n\n      case 'roman numeral':\n        res = '\\\\mathrm{' + buf.p1 + '}';\n        break;\n\n      case 'state of aggregation':\n        res = '\\\\mskip2mu ' + texify._goInner(buf.p1);\n        break;\n\n      case 'state of aggregation subscript':\n        res = '\\\\mskip1mu ' + texify._goInner(buf.p1);\n        break;\n\n      case 'bond':\n        res = texify._getBond(buf.kind_);\n\n        if (!res) {\n          throw ['MhchemErrorBond', 'mhchem Error. Unknown bond type (' + buf.kind_ + ')'];\n        }\n\n        break;\n\n      case 'frac':\n        var c = '\\\\frac{' + buf.p1 + '}{' + buf.p2 + '}';\n        res = '\\\\mathchoice{\\\\textstyle' + c + '}{' + c + '}{' + c + '}{' + c + '}';\n        break;\n\n      case 'pu-frac':\n        var d = '\\\\frac{' + texify._goInner(buf.p1) + '}{' + texify._goInner(buf.p2) + '}';\n        res = '\\\\mathchoice{\\\\textstyle' + d + '}{' + d + '}{' + d + '}{' + d + '}';\n        break;\n\n      case 'tex-math':\n        res = buf.p1 + ' ';\n        break;\n\n      case 'frac-ce':\n        res = '\\\\frac{' + texify._goInner(buf.p1) + '}{' + texify._goInner(buf.p2) + '}';\n        break;\n\n      case 'overset':\n        res = '\\\\overset{' + texify._goInner(buf.p1) + '}{' + texify._goInner(buf.p2) + '}';\n        break;\n\n      case 'underset':\n        res = '\\\\underset{' + texify._goInner(buf.p1) + '}{' + texify._goInner(buf.p2) + '}';\n        break;\n\n      case 'underbrace':\n        res = '\\\\underbrace{' + texify._goInner(buf.p1) + '}_{' + texify._goInner(buf.p2) + '}';\n        break;\n\n      case 'color':\n        res = '{\\\\color{' + buf.color1 + '}{' + texify._goInner(buf.color2) + '}}';\n        break;\n\n      case 'color0':\n        res = '\\\\color{' + buf.color + '}';\n        break;\n\n      case 'arrow':\n        var b6 = {\n          rd: texify._goInner(buf.rd),\n          rq: texify._goInner(buf.rq)\n        };\n\n        var arrow = '\\\\x' + texify._getArrow(buf.r);\n\n        if (b6.rq) {\n          arrow += '[{' + b6.rq + '}]';\n        }\n\n        if (b6.rd) {\n          arrow += '{' + b6.rd + '}';\n        } else {\n          arrow += '{}';\n        }\n\n        res = arrow;\n        break;\n\n      case 'operator':\n        res = texify._getOperator(buf.kind_);\n        break;\n\n      case '1st-level escape':\n        res = buf.p1 + ' '; // &, \\\\\\\\, \\\\hlin\n\n        break;\n\n      case 'space':\n        res = ' ';\n        break;\n\n      case 'entitySkip':\n        res = '~';\n        break;\n\n      case 'pu-space-1':\n        res = '~';\n        break;\n\n      case 'pu-space-2':\n        res = '\\\\mkern3mu ';\n        break;\n\n      case '1000 separator':\n        res = '\\\\mkern2mu ';\n        break;\n\n      case 'commaDecimal':\n        res = '{,}';\n        break;\n\n      case 'comma enumeration L':\n        res = '{' + buf.p1 + '}\\\\mkern6mu ';\n        break;\n\n      case 'comma enumeration M':\n        res = '{' + buf.p1 + '}\\\\mkern3mu ';\n        break;\n\n      case 'comma enumeration S':\n        res = '{' + buf.p1 + '}\\\\mkern1mu ';\n        break;\n\n      case 'hyphen':\n        res = '\\\\text{-}';\n        break;\n\n      case 'addition compound':\n        res = '\\\\,{\\\\cdot}\\\\,';\n        break;\n\n      case 'electron dot':\n        res = '\\\\mkern1mu \\\\bullet\\\\mkern1mu ';\n        break;\n\n      case 'KV x':\n        res = '{\\\\times}';\n        break;\n\n      case 'prime':\n        res = '\\\\prime ';\n        break;\n\n      case 'cdot':\n        res = '\\\\cdot ';\n        break;\n\n      case 'tight cdot':\n        res = '\\\\mkern1mu{\\\\cdot}\\\\mkern1mu ';\n        break;\n\n      case 'times':\n        res = '\\\\times ';\n        break;\n\n      case 'circa':\n        res = '{\\\\sim}';\n        break;\n\n      case '^':\n        res = 'uparrow';\n        break;\n\n      case 'v':\n        res = 'downarrow';\n        break;\n\n      case 'ellipsis':\n        res = '\\\\ldots ';\n        break;\n\n      case '/':\n        res = '/';\n        break;\n\n      case ' / ':\n        res = '\\\\,/\\\\,';\n        break;\n\n      default:\n        throw ['MhchemBugT', 'mhchem bug T. Please report.'];\n      // Missing texify rule or unknown MhchemParser output\n    }\n\n    return res;\n  },\n  _getArrow: function _getArrow(a) {\n    switch (a) {\n      case '->':\n        return 'rightarrow';\n\n      case '\\u2192':\n        return 'rightarrow';\n\n      case '\\u27F6':\n        return 'rightarrow';\n\n      case '<-':\n        return 'leftarrow';\n\n      case '<->':\n        return 'leftrightarrow';\n\n      case '<-->':\n        return 'rightleftarrows';\n\n      case '<=>':\n        return 'rightleftharpoons';\n\n      case '\\u21CC':\n        return 'rightleftharpoons';\n\n      case '<=>>':\n        return 'rightequilibrium';\n\n      case '<<=>':\n        return 'leftequilibrium';\n\n      default:\n        throw ['MhchemBugT', 'mhchem bug T. Please report.'];\n    }\n  },\n  _getBond: function _getBond(a) {\n    switch (a) {\n      case '-':\n        return '{-}';\n\n      case '1':\n        return '{-}';\n\n      case '=':\n        return '{=}';\n\n      case '2':\n        return '{=}';\n\n      case '#':\n        return '{\\\\equiv}';\n\n      case '3':\n        return '{\\\\equiv}';\n\n      case '~':\n        return '{\\\\tripledash}';\n\n      case '~-':\n        return '{\\\\mathrlap{\\\\raisebox{-.1em}{$-$}}\\\\raisebox{.1em}{$\\\\tripledash$}}';\n\n      case '~=':\n        return '{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}';\n\n      case '~--':\n        return '{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}';\n\n      case '-~-':\n        return '{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$-$}}\\\\tripledash}';\n\n      case '...':\n        return '{{\\\\cdot}{\\\\cdot}{\\\\cdot}}';\n\n      case '....':\n        return '{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}';\n\n      case '->':\n        return '{\\\\rightarrow}';\n\n      case '<-':\n        return '{\\\\leftarrow}';\n\n      case '<':\n        return '{<}';\n\n      case '>':\n        return '{>}';\n\n      default:\n        throw ['MhchemBugT', 'mhchem bug T. Please report.'];\n    }\n  },\n  _getOperator: function _getOperator(a) {\n    switch (a) {\n      case '+':\n        return ' {}+{} ';\n\n      case '-':\n        return ' {}-{} ';\n\n      case '=':\n        return ' {}={} ';\n\n      case '<':\n        return ' {}<{} ';\n\n      case '>':\n        return ' {}>{} ';\n\n      case '<<':\n        return ' {}\\\\ll{} ';\n\n      case '>>':\n        return ' {}\\\\gg{} ';\n\n      case '\\\\pm':\n        return ' {}\\\\pm{} ';\n\n      case '\\\\approx':\n        return ' {}\\\\approx{} ';\n\n      case '$\\\\approx$':\n        return ' {}\\\\approx{} ';\n\n      case 'v':\n        return ' \\\\downarrow{} ';\n\n      case '(v)':\n        return ' \\\\downarrow{} ';\n\n      case '^':\n        return ' \\\\uparrow{} ';\n\n      case '(^)':\n        return ' \\\\uparrow{} ';\n\n      default:\n        throw ['MhchemBugT', 'mhchem bug T. Please report.'];\n    }\n  }\n};\n/**\r\n * These shortcut strings are replaced with the corresponding LaTeX expression\r\n * without requiring an escape sequence or command.\r\n */\n\nconst INLINE_SHORTCUTS = {\n  // Primes\n  \"''\": {\n    mode: 'math',\n    value: '^{\\\\doubleprime}'\n  },\n  // Greek letters\n  alpha: '\\\\alpha',\n  delta: '\\\\delta',\n  Delta: '\\\\Delta',\n  pi: {\n    mode: 'math',\n    value: '\\\\pi'\n  },\n  'pi ': {\n    mode: 'text',\n    value: '\\\\pi '\n  },\n  Pi: {\n    mode: 'math',\n    value: '\\\\Pi'\n  },\n  theta: '\\\\theta',\n  Theta: '\\\\Theta',\n  // Letter-like\n  ii: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\imaginaryI'\n  },\n  jj: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\imaginaryJ'\n  },\n  ee: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\exponentialE'\n  },\n  nabla: {\n    mode: 'math',\n    value: '\\\\nabla'\n  },\n  grad: {\n    mode: 'math',\n    value: '\\\\nabla'\n  },\n  del: {\n    mode: 'math',\n    value: '\\\\partial'\n  },\n  '\\u221e': '\\\\infty',\n  // '&infin;': '\\\\infty',\n  // '&#8734;': '\\\\infty',\n  oo: {\n    mode: 'math',\n    after: 'nothing+digit+frac+surd+binop+relop+punct+array+openfence+closefence+space',\n    value: '\\\\infty'\n  },\n  // Big operators\n  '∑': {\n    mode: 'math',\n    value: '\\\\sum'\n  },\n  sum: {\n    mode: 'math',\n    value: '\\\\sum_{#?}^{#?}'\n  },\n  prod: {\n    mode: 'math',\n    value: '\\\\prod_{#?}^{#?}'\n  },\n  sqrt: {\n    mode: 'math',\n    value: '\\\\sqrt{#?}'\n  },\n  // '∫':                    '\\\\int',             // There's a alt-B command for this\n  '∆': {\n    mode: 'math',\n    value: '\\\\differentialD'\n  },\n  '∂': {\n    mode: 'math',\n    value: '\\\\differentialD'\n  },\n  // Functions\n  arcsin: {\n    mode: 'math',\n    value: '\\\\arcsin'\n  },\n  arccos: {\n    mode: 'math',\n    value: '\\\\arccos'\n  },\n  arctan: {\n    mode: 'math',\n    value: '\\\\arctan'\n  },\n  sin: {\n    mode: 'math',\n    value: '\\\\sin'\n  },\n  sinh: {\n    mode: 'math',\n    value: '\\\\sinh'\n  },\n  cos: {\n    mode: 'math',\n    value: '\\\\cos'\n  },\n  cosh: {\n    mode: 'math',\n    value: '\\\\cosh'\n  },\n  tan: {\n    mode: 'math',\n    value: '\\\\tan'\n  },\n  tanh: {\n    mode: 'math',\n    value: '\\\\tanh'\n  },\n  sec: {\n    mode: 'math',\n    value: '\\\\sec'\n  },\n  csc: {\n    mode: 'math',\n    value: '\\\\csc'\n  },\n  cot: {\n    mode: 'math',\n    value: '\\\\cot'\n  },\n  log: {\n    mode: 'math',\n    value: '\\\\log'\n  },\n  ln: {\n    mode: 'math',\n    value: '\\\\ln'\n  },\n  exp: {\n    mode: 'math',\n    value: '\\\\exp'\n  },\n  lim: {\n    mode: 'math',\n    value: '\\\\lim_{#?}'\n  },\n  // Differentials\n  // According to ISO31/XI (ISO 80000-2), differentials should be upright\n  dx: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\differentialD x'\n  },\n  dy: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\differentialD y'\n  },\n  dt: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\differentialD t'\n  },\n  // Logic\n  AA: {\n    mode: 'math',\n    value: '\\\\forall'\n  },\n  EE: {\n    mode: 'math',\n    value: '\\\\exists'\n  },\n  '!EE': {\n    mode: 'math',\n    value: '\\\\nexists'\n  },\n  '&&': {\n    mode: 'math',\n    value: '\\\\land'\n  },\n  // The shortcut for the greek letter \"xi\" is interfering with \"x in\"\n  xin: {\n    mode: 'math',\n    after: 'nothing+text+relop+punct+openfence+space',\n    value: 'x \\\\in'\n  },\n  in: {\n    mode: 'math',\n    after: 'nothing+letter+closefence',\n    value: '\\\\in'\n  },\n  '!in': {\n    mode: 'math',\n    value: '\\\\notin'\n  },\n  // Sets\n  NN: '\\\\N',\n  ZZ: '\\\\Z',\n  QQ: '\\\\Q',\n  RR: '\\\\R',\n  CC: '\\\\C',\n  PP: '\\\\P',\n  // Operators\n  xx: {\n    mode: 'math',\n    value: '\\\\times'\n  },\n  '+-': {\n    mode: 'math',\n    value: '\\\\pm'\n  },\n  // Relational operators\n  '!=': {\n    mode: 'math',\n    value: '\\\\ne'\n  },\n  '>=': {\n    mode: 'math',\n    value: '\\\\ge'\n  },\n  '<=': {\n    mode: 'math',\n    value: '\\\\le'\n  },\n  '<<': {\n    mode: 'math',\n    value: '\\\\ll'\n  },\n  '>>': {\n    mode: 'math',\n    value: '\\\\gg'\n  },\n  '~~': {\n    mode: 'math',\n    value: '\\\\approx'\n  },\n  // More operators\n  '≈': {\n    mode: 'math',\n    value: '\\\\approx'\n  },\n  '?=': {\n    mode: 'math',\n    value: '\\\\questeq'\n  },\n  '÷': {\n    mode: 'math',\n    value: '\\\\div'\n  },\n  '¬': {\n    mode: 'math',\n    value: '\\\\neg'\n  },\n  ':=': {\n    mode: 'math',\n    value: '\\\\coloneq'\n  },\n  '::': {\n    mode: 'math',\n    value: '\\\\Colon'\n  },\n  // Fences\n  '(:': {\n    mode: 'math',\n    value: '\\\\langle'\n  },\n  ':)': {\n    mode: 'math',\n    value: '\\\\rangle'\n  },\n  // More Greek letters\n  beta: '\\\\beta',\n  chi: '\\\\chi',\n  epsilon: '\\\\epsilon',\n  varepsilon: '\\\\varepsilon',\n  eta: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\eta'\n  },\n  'eta ': {\n    mode: 'text',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\eta '\n  },\n  gamma: '\\\\gamma',\n  Gamma: '\\\\Gamma',\n  iota: '\\\\iota',\n  kappa: '\\\\kappa',\n  lambda: '\\\\lambda',\n  Lambda: '\\\\Lambda',\n  mu: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\mu'\n  },\n  'mu ': {\n    mode: 'text',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\mu '\n  },\n  nu: {\n    mode: 'math',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\nu'\n  },\n  'nu ': {\n    mode: 'text',\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\nu '\n  },\n  µ: '\\\\mu',\n  phi: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\phi'\n  },\n  Phi: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\Phi'\n  },\n  varphi: '\\\\varphi',\n  psi: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\psi'\n  },\n  Psi: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\Psi'\n  },\n  rho: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\rho'\n  },\n  sigma: '\\\\sigma',\n  Sigma: '\\\\Sigma',\n  tau: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\tau'\n  },\n  vartheta: '\\\\vartheta',\n  upsilon: '\\\\upsilon',\n  xi: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\xi'\n  },\n  Xi: {\n    after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\n    value: '\\\\Xi'\n  },\n  zeta: '\\\\zeta',\n  omega: '\\\\omega',\n  Omega: '\\\\Omega',\n  Ω: '\\\\omega',\n  // More Logic\n  forall: {\n    mode: 'math',\n    value: '\\\\forall'\n  },\n  exists: {\n    mode: 'math',\n    value: '\\\\exists'\n  },\n  '!exists': {\n    mode: 'math',\n    value: '\\\\nexists'\n  },\n  ':.': {\n    mode: 'math',\n    value: '\\\\therefore'\n  },\n  // MORE FUNCTIONS\n  // 'arg': '\\\\arg',\n  liminf: '\\\\operatorname*{lim~inf}_{#?}',\n  limsup: '\\\\operatorname*{lim~sup}_{#?}',\n  argmin: '\\\\operatorname*{arg~min}_{#?}',\n  argmax: '\\\\operatorname*{arg~max}_{#?}',\n  det: '\\\\det',\n  mod: {\n    mode: 'math',\n    value: '\\\\mod'\n  },\n  max: {\n    mode: 'math',\n    value: '\\\\max'\n  },\n  min: {\n    mode: 'math',\n    value: '\\\\min'\n  },\n  erf: '\\\\operatorname{erf}',\n  erfc: '\\\\operatorname{erfc}',\n  bessel: {\n    mode: 'math',\n    value: '\\\\operatorname{bessel}'\n  },\n  mean: {\n    mode: 'math',\n    value: '\\\\operatorname{mean}'\n  },\n  median: {\n    mode: 'math',\n    value: '\\\\operatorname{median}'\n  },\n  fft: {\n    mode: 'math',\n    value: '\\\\operatorname{fft}'\n  },\n  lcm: {\n    mode: 'math',\n    value: '\\\\operatorname{lcm}'\n  },\n  gcd: {\n    mode: 'math',\n    value: '\\\\operatorname{gcd}'\n  },\n  randomReal: '\\\\operatorname{randomReal}',\n  randomInteger: '\\\\operatorname{randomInteger}',\n  Re: {\n    mode: 'math',\n    value: '\\\\operatorname{Re}'\n  },\n  Im: {\n    mode: 'math',\n    value: '\\\\operatorname{Im}'\n  },\n  // UNITS\n  mm: {\n    mode: 'math',\n    after: 'nothing+digit',\n    value: '\\\\operatorname{mm}'\n  },\n  cm: {\n    mode: 'math',\n    after: 'nothing+digit',\n    value: '\\\\operatorname{cm}'\n  },\n  km: {\n    mode: 'math',\n    after: 'nothing+digit',\n    value: '\\\\operatorname{km}'\n  },\n  kg: {\n    mode: 'math',\n    after: 'nothing+digit',\n    value: '\\\\operatorname{kg}'\n  },\n  // '||':                   '\\\\lor',\n  '...': '\\\\ldots',\n  '+...': '+\\\\cdots',\n  '-...': '-\\\\cdots',\n  '->...': '\\\\to\\\\cdots',\n  '->': '\\\\to',\n  '|->': '\\\\mapsto',\n  '-->': '\\\\longrightarrow',\n  //    '<-':                   '\\\\leftarrow',\n  '<--': '\\\\longleftarrow',\n  '=>': '\\\\Rightarrow',\n  '==>': '\\\\Longrightarrow',\n  // '<=': '\\\\Leftarrow',     // CONFLICTS WITH LESS THAN OR EQUAL\n  '<=>': '\\\\Leftrightarrow',\n  '<->': '\\\\leftrightarrow',\n  '(.)': '\\\\odot',\n  '(+)': '\\\\oplus',\n  '(/)': '\\\\oslash',\n  '(*)': '\\\\otimes',\n  '(-)': '\\\\ominus',\n  // '(-)':                  '\\\\circleddash',\n  '||': '\\\\Vert',\n  '{': '\\\\{',\n  '}': '\\\\}',\n  '*': '\\\\cdot'\n};\n/**\r\n * Return an array of potential shortcuts\r\n */\n\nfunction getInlineShortcutsStartingWith(s, config) {\n  const result = [];\n  const skipDefaultShortcuts = config.overrideDefaultInlineShortcuts;\n\n  for (let i = 0; i <= s.length - 1; i++) {\n    const s2 = s.substring(i);\n\n    if (!skipDefaultShortcuts) {\n      Object.keys(INLINE_SHORTCUTS).forEach(key => {\n        if (key.startsWith(s2) && !result.includes(key)) {\n          result.push(key);\n        }\n      });\n    }\n\n    const customInlineShortcuts = (config === null || config === void 0 ? void 0 : config.inlineShortcuts) ? config.inlineShortcuts : null;\n\n    if (customInlineShortcuts) {\n      Object.keys(customInlineShortcuts).forEach(key => {\n        if (key.startsWith(s2)) {\n          result.push(key);\n        }\n      });\n    }\n  }\n\n  return result;\n}\n/**\r\n *\r\n * @param siblings atoms preceding this potential shortcut\r\n */\n\n\nfunction validateShortcut(siblings, shortcut) {\n  if (!shortcut) return ''; // If it's a simple shortcut (no conditional), it's always valid\n\n  if (typeof shortcut === 'string') return shortcut; // If we have no context, we assume all the shortcuts are valid\n\n  if (!siblings) return shortcut.value;\n  let nothing = false;\n  let letter = false;\n  let digit = false;\n  let isFunction = false;\n  let frac = false;\n  let surd = false;\n  let binop = false;\n  let relop = false;\n  let punct = false;\n  let array = false;\n  let openfence = false;\n  let closefence = false;\n  let text = false;\n  let space = false;\n  let sibling = siblings[siblings.length - 1];\n  let index = siblings.length - 1;\n\n  while (sibling && /msubsup|placeholder/.test(sibling.type)) {\n    index -= 1;\n    sibling = siblings[index];\n  }\n\n  nothing = !sibling || sibling.type === 'first'; // start of a group\n\n  if (sibling) {\n    if (typeof shortcut.mode !== 'undefined' && sibling.mode !== shortcut.mode) {\n      return '';\n    }\n\n    text = sibling.mode === 'text';\n    letter = !text && sibling.type === 'mord' && LETTER.test(sibling.body);\n    digit = !text && sibling.type === 'mord' && /[0-9]+$/.test(sibling.body);\n    isFunction = !text && sibling.isFunction;\n    frac = sibling.type === 'genfrac';\n    surd = sibling.type === 'surd';\n    binop = sibling.type === 'mbin';\n    relop = sibling.type === 'mrel';\n    punct = sibling.type === 'mpunct' || sibling.type === 'minner';\n    array = Boolean(sibling.array);\n    openfence = sibling.type === 'mopen';\n    closefence = sibling.type === 'mclose' || sibling.type === 'leftright';\n    space = sibling.type === 'space';\n  }\n\n  if (typeof shortcut.after !== 'undefined') {\n    // If this is a conditional shortcut, consider the conditions now\n    if (/nothing/.test(shortcut.after) && nothing || /letter/.test(shortcut.after) && letter || /digit/.test(shortcut.after) && digit || /function/.test(shortcut.after) && isFunction || /frac/.test(shortcut.after) && frac || /surd/.test(shortcut.after) && surd || /binop/.test(shortcut.after) && binop || /relop/.test(shortcut.after) && relop || /punct/.test(shortcut.after) && punct || /array/.test(shortcut.after) && array || /openfence/.test(shortcut.after) && openfence || /closefence/.test(shortcut.after) && closefence || /text/.test(shortcut.after) && text || /space/.test(shortcut.after) && space) {\n      return shortcut.value;\n    }\n\n    return '';\n  }\n\n  return shortcut.value;\n}\n/**\r\n *\r\n * @param context - atoms preceding the candidate, potentially used\r\n * to reduce which shortcuts are applicable. If 'null', no restrictions are\r\n * applied.\r\n * @param s - candidate inline shortcuts (e.g. `'pi'`)\r\n * @return A replacement string matching the shortcut (e.g. `'\\pi'`)\r\n */\n\n\nfunction getInlineShortcut(context, s, shortcuts) {\n  var _a;\n\n  return validateShortcut(context, (_a = shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts[s]) !== null && _a !== void 0 ? _a : INLINE_SHORTCUTS[s]);\n}\n/**\r\n * Attempts to parse and interpret a string in an unknown format, possibly\r\n * ASCIIMath and return a canonical LaTeX string.\r\n *\r\n * The format recognized are one of these variations:\r\n * - ASCIIMath: Only supports a subset\r\n * (1/2x)\r\n * 1/2sin x                     -> \\frac {1}{2}\\sin x\r\n * 1/2sinx                      -> \\frac {1}{2}\\sin x\r\n * (1/2sin x (x^(2+1))          // Unbalanced parentheses\r\n * (1/2sin(x^(2+1))             -> \\left(\\frac {1}{2}\\sin \\left(x^{2+1}\\right)\\right)\r\n * alpha + (pi)/(4)             -> \\alpha +\\frac {\\pi }{4}\r\n * x=(-b +- sqrt(b^2 – 4ac))/(2a)\r\n * alpha/beta\r\n * sqrt2 + sqrtx + sqrt(1+a) + sqrt(1/2)\r\n * f(x) = x^2 \"when\" x >= 0\r\n * AA n in QQ\r\n * AA x in RR \",\" |x| > 0\r\n * AA x in RR \",\" abs(x) > 0\r\n *\r\n * - UnicodeMath (generated by Microsoft Word): also only supports a subset\r\n *      - See https://www.unicode.org/notes/tn28/UTN28-PlainTextMath-v3.1.pdf\r\n * √(3&x+1)\r\n * {a+b/c}\r\n * [a+b/c]\r\n * _a^b x\r\n * lim_(n->\\infty) n\r\n * \\iint_(a=0)^\\infty  a\r\n *\r\n * - \"JavaScript Latex\": a variant that is LaTeX, but with escaped backslashes\r\n *  \\\\frac{1}{2} \\\\sin x\r\n */\n\n\nfunction parseMathString(s, options) {\n  if (!s) return ['latex', '']; // Nothing to do if a single character\n\n  if (s.length <= 1) return ['latex', s];\n\n  if (!options || options.format !== 'ASCIIMath') {\n    // This is not explicitly ASCIIMath. Try to infer if this is LaTex...\n    // If the strings is surrounded by `$..$` or `$$..$$`, assumes it is LaTeX\n    const trimedString = s.trim();\n\n    if (trimedString.startsWith('$$') && trimedString.endsWith('$$') || trimedString.startsWith('\\\\[') && trimedString.endsWith('\\\\]') || trimedString.startsWith('\\\\(') && trimedString.endsWith('\\\\)')) {\n      return ['latex', trimedString.substring(2, trimedString.length - 2)];\n    }\n\n    if (trimedString.startsWith('$') && trimedString.endsWith('$')) {\n      return ['latex', trimedString.substring(1, trimedString.length - 1)];\n    } // Replace double-backslash (coming from JavaScript) to a single one\n\n\n    s = s.replace(/\\\\\\\\([^\\s\\n])/g, '\\\\$1');\n\n    if (/\\\\/.test(s)) {\n      // If the string includes a '\\' it's probably a LaTeX string\n      // (that's not completely true, it could be a UnicodeMath string, since\n      // UnicodeMath supports some LaTeX commands. However, we need to pick\n      // one in order to correctly interpret {} (which are argument delimiters\n      // in LaTeX, and are fences in UnicodeMath)\n      return ['latex', s];\n    }\n  }\n\n  s = s.replace(/\\u2061/g, ''); // Remove function application\n\n  s = s.replace(/\\u3016/g, '{'); // WHITE LENTICULAR BRACKET (grouping)\n\n  s = s.replace(/\\u3017/g, '}'); // WHITE LENTICULAR BRACKET (grouping)\n\n  s = s.replace(/([^\\\\])sinx/g, '$1\\\\sin x'); // common typo\n\n  s = s.replace(/([^\\\\])cosx/g, '$1\\\\cos x '); // common typo\n\n  s = s.replace(/\\u2013/g, '-'); // EN-DASH, sometimes used as a minus sign\n\n  return [(options === null || options === void 0 ? void 0 : options.format) || 'ASCIIMath', parseMathExpression(s, options !== null && options !== void 0 ? options : {})];\n}\n\nfunction parseMathExpression(s, options) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  if (!s) return '';\n  let done = false;\n  let m;\n\n  if (!done && (s[0] === '^' || s[0] === '_')) {\n    // Superscript and subscript\n    m = parseMathArgument(s.substr(1), {\n      inlineShortcuts: (_a = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _a !== void 0 ? _a : {},\n      noWrap: true\n    });\n    s = s[0] + '{' + m.match + '}';\n    s += parseMathExpression(m.rest, options);\n    done = true;\n  }\n\n  if (!done) {\n    m = s.match(/^(sqrt|\\u221a)(.*)/);\n\n    if (m) {\n      // Square root\n      m = parseMathArgument(m[2], {\n        inlineShortcuts: (_b = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _b !== void 0 ? _b : {},\n        noWrap: true\n      });\n      const sqrtArgument = m.match || '\\\\placeholder{}';\n      s = '\\\\sqrt{' + sqrtArgument + '}';\n      s += parseMathExpression(m.rest, options);\n      done = true;\n    }\n  }\n\n  if (!done) {\n    m = s.match(/^(\\\\cbrt|\\u221b)(.*)/);\n\n    if (m) {\n      // Cube root\n      m = parseMathArgument(m[2], {\n        inlineShortcuts: (_c = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _c !== void 0 ? _c : {},\n        noWrap: true\n      });\n      const sqrtArgument = m.match || '\\\\placeholder{}';\n      s = '\\\\sqrt[3]{' + sqrtArgument + '}';\n      s += parseMathExpression(m.rest, options);\n      done = true;\n    }\n  }\n\n  if (!done) {\n    m = s.match(/^abs(.*)/);\n\n    if (m) {\n      // Absolute value\n      m = parseMathArgument(m[1], {\n        inlineShortcuts: (_d = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _d !== void 0 ? _d : {},\n        noWrap: true\n      });\n      s = '\\\\left|' + m.match + '\\\\right|';\n      s += parseMathExpression(m.rest, options);\n      done = true;\n    }\n  }\n\n  if (!done) {\n    m = s.match(/^[\"”“](.*?)[\"”“](.*)/);\n\n    if (m) {\n      // Quoted text\n      s = '\\\\text{' + m[1] + '}';\n      s += parseMathExpression(m[2], options);\n      done = true;\n    }\n  }\n\n  if (!done) {\n    m = s.match(/^([^a-zA-Z({[_^\\\\\\s\"]+)(.*)/); // A string of symbols...\n    // Could be a binary or relational operator, etc...\n\n    if (m) {\n      s = paddedShortcut(m[1], options);\n      s += parseMathExpression(m[2], options);\n      done = true;\n    }\n  }\n\n  if (!done && /^(f|g|h)[^a-zA-Z]/.test(s)) {\n    // This could be a function...\n    m = parseMathArgument(s.substring(1), {\n      inlineShortcuts: (_e = options.inlineShortcuts) !== null && _e !== void 0 ? _e : {},\n      noWrap: true\n    });\n\n    if (s[1] === '(') {\n      s = s[0] + '\\\\mleft(' + m.match + '\\\\mright)';\n    } else {\n      s = s[0] + m.match;\n    }\n\n    s += parseMathExpression(m.rest, options);\n    done = true;\n  }\n\n  if (!done) {\n    m = s.match(/^([a-zA-Z]+)(.*)/);\n\n    if (m) {\n      // Some alphabetical string...\n      // Could be a function name (sin) or symbol name (alpha)\n      s = paddedShortcut(m[1], options);\n      s += parseMathExpression(m[2], options);\n      done = true;\n    }\n  }\n\n  if (!done) {\n    m = parseMathArgument(s, {\n      inlineShortcuts: (_f = options.inlineShortcuts) !== null && _f !== void 0 ? _f : {},\n      noWrap: true\n    });\n\n    if (m.match && m.rest[0] === '/') {\n      // Fraction\n      const m2 = parseMathArgument(m.rest.substr(1), {\n        inlineShortcuts: (_g = options.inlineShortcuts) !== null && _g !== void 0 ? _g : {},\n        noWrap: true\n      });\n\n      if (m2.match) {\n        s = '\\\\frac{' + m.match + '}{' + m2.match + '}' + parseMathExpression(m2.rest, options);\n      }\n\n      done = true;\n    } else if (m.match) {\n      if (s[0] === '(') {\n        s = '\\\\left(' + m.match + '\\\\right)' + parseMathExpression(m.rest, options);\n      } else {\n        s = m.match + parseMathExpression(m.rest, options);\n      }\n\n      done = true;\n    }\n  }\n\n  if (!done) {\n    m = s.match(/^(\\s+)(.*)$/); // Whitespace\n\n    if (m) {\n      s = ' ' + parseMathExpression(m[2], options);\n      done = true;\n    }\n  }\n\n  return s;\n}\n/**\r\n * Parse a math argument, as defined by ASCIIMath and UnicodeMath:\r\n * - Either an expression fenced in (), {} or []\r\n * - a number (- sign, digits, decimal point, digits)\r\n * - a single [a-zA-Z] letter (an identifier)\r\n * - a multi-letter shortcut (e.g., pi)\r\n * - a LaTeX command (\\pi) (for UnicodeMath)\r\n * @return\r\n * - match: the parsed (and converted) portion of the string that is an argument\r\n * - rest: the raw, unconverted, rest of the string\r\n */\n\n\nfunction parseMathArgument(s, options) {\n  let match = '';\n  s = s.trim();\n  let rest = s;\n  let lFence = s.charAt(0);\n  let rFence = {\n    '(': ')',\n    '{': '}',\n    '[': ']'\n  }[lFence];\n\n  if (rFence) {\n    // It's a fence\n    let level = 1;\n    let i = 1;\n\n    while (i < s.length && level > 0) {\n      if (s[i] === lFence) level++;\n      if (s[i] === rFence) level--;\n      i++;\n    }\n\n    if (level === 0) {\n      // We've found the matching closing fence\n      if (options.noWrap && lFence === '(') {\n        match = parseMathExpression(s.substring(1, i - 1), options);\n      } else {\n        if (lFence === '{' && rFence === '}') {\n          lFence = '\\\\{';\n          rFence = '\\\\}';\n        }\n\n        match = '\\\\left' + lFence + parseMathExpression(s.substring(1, i - 1), options) + '\\\\right' + rFence;\n      }\n\n      rest = s.substring(i);\n    } else {\n      // Unbalanced fence...\n      match = s.substring(1, i);\n      rest = '';\n    }\n  } else {\n    let m = s.match(/^([a-zA-Z]+)/);\n\n    if (m) {\n      // It's a string of letter, maybe a shortcut\n      let shortcut = getInlineShortcut(null, s, options.inlineShortcuts);\n\n      if (shortcut) {\n        shortcut = shortcut.replace('_{#?}', '');\n        shortcut = shortcut.replace('^{#?}', '');\n        return {\n          match: shortcut,\n          rest: s.substring(shortcut.length)\n        };\n      }\n    }\n\n    m = s.match(/^([a-zA-Z])/);\n\n    if (m) {\n      // It's a single letter\n      return {\n        match: m[1],\n        rest: s.substring(1)\n      };\n    }\n\n    m = s.match(/^(-)?\\d+(\\.\\d*)?/);\n\n    if (m) {\n      // It's a number\n      return {\n        match: m[0],\n        rest: s.substring(m[0].length)\n      };\n    }\n\n    if (!/^\\\\(left|right)/.test(s)) {\n      // It's a LaTeX command (but not a \\left\\right)\n      m = s.match(/^(\\\\[a-zA-Z]+)/);\n\n      if (m) {\n        rest = s.substring(m[1].length);\n        match = m[1];\n      }\n    }\n  }\n\n  return {\n    match: match,\n    rest: rest\n  };\n}\n\nfunction paddedShortcut(s, options) {\n  let result = getInlineShortcut(null, s, options);\n\n  if (result) {\n    result = result.replace('_{#?}', '');\n    result = result.replace('^{#?}', '');\n    result += ' ';\n  } else {\n    result = s;\n  }\n\n  return result;\n}\n\nfunction selectionDidChange(model) {\n  var _a;\n\n  if (typeof ((_a = model.listeners) === null || _a === void 0 ? void 0 : _a.onSelectionDidChange) === 'function' && !model.suppressChangeNotifications) {\n    model.listeners.onSelectionDidChange(model);\n  }\n}\n\nfunction contentDidChange(model) {\n  var _a;\n\n  if (typeof ((_a = model.listeners) === null || _a === void 0 ? void 0 : _a.onContentDidChange) === 'function' && !model.suppressChangeNotifications) {\n    model.listeners.onContentDidChange(model);\n  }\n}\n/*\r\n// type User = { name: string };\r\n\n// interface UserEvents {\r\n//     login(user: User): void;\r\n//     logout(): string;\r\n// }\r\n\ntype Filter<T, Cond, U extends keyof T = keyof T> = {\r\n    [K in U]: T[K] extends Cond ? K : never;\r\n}[U];\r\n\ntype In<T> = T extends (...args: infer U) => any ? U : [];\r\ntype Out<T> = T extends () => infer U ? U : never;\r\n\n// Extract an array type of valid event keys\r\ntype EventKey<T> = Filter<T, Function> & string;\r\n\n// Extract the argument/return types of a valid event\r\ntype Arguments<T> = T extends (...args: infer U) => any ? U : [];\r\ntype Result<T> = T extends () => infer U ? U : never;\r\n\ntype EventIn<T, K extends EventKey<T>> = In<T[K]>;\r\ntype EventOut<T, K extends EventKey<T>> = Out<T[K]> | void;\r\n\nexport type Listener<T, K extends EventKey<T> = EventKey<T>> = (\r\n    ...args: EventIn<T, K>\r\n) => EventOut<T, K>;\r\n\nexport type ListenerMap<T> = Partial<{ [K in EventKey<T>]: Listener<T, K> }>;\r\n\ninterface Emitter<T> {\r\n    on<K extends EventKey<T>>(key: K, fn: Listener<T, K>): typeof fn;\r\n}\r\n\n// import { EventEmitter } from 'events';\r\n// const ee = (new EventEmitter() as unknown) as Emitter<UserEvents>;\r\n\n// ee.on('login', (user: string) => {});\r\n// ee.on('logout', () => {\r\n//     return 'done';\r\n// });\r\n*/\n\n/**\r\n * The atom where the selection starts.\r\n *\r\n * When the selection is extended the anchor remains fixed. The anchor\r\n * could be either before or after the focus.\r\n */\n\n\nfunction getAnchor(model) {\n  if (model.parent().array) {\n    return arrayCell(model.parent().array, model.relation())[model.anchorOffset()];\n  }\n\n  const siblings = model.siblings();\n  return siblings[Math.min(siblings.length - 1, model.anchorOffset())];\n}\n/**\r\n *\r\n * @param  extent the length of the selection\r\n * @return true if the path has actually changed\r\n */\n\n\nfunction setPath(model, inSelection, extent = 0) {\n  let selection; // Convert to a path array if necessary\n\n  if (typeof inSelection === 'string') {\n    selection = pathFromString(inSelection);\n    selection.extent = extent;\n  } else if (isArray(inSelection)) {\n    // need to temporarily change the path of this to use 'sibling()'\n    const newPath = clone(inSelection);\n    const oldPath = model.path;\n    model.path = newPath;\n\n    if (extent === 0 && getAnchor(model).type === 'placeholder') {\n      // select the placeholder\n      newPath[newPath.length - 1].offset = model.anchorOffset() - 1;\n      extent = 1;\n    }\n\n    selection = {\n      path: newPath,\n      extent: extent !== null && extent !== void 0 ? extent : 0\n    };\n    model.path = oldPath;\n  } else {\n    selection = inSelection;\n  }\n\n  const pathChanged = pathDistance(model.path, selection.path) !== 0;\n  const extentChanged = selection.extent !== model.extent;\n\n  if (pathChanged || extentChanged) {\n    if (pathChanged) {\n      adjustPlaceholder(model);\n    }\n\n    model.path = clone(selection.path);\n\n    if (model.siblings().length < model.anchorOffset()) {\n      // The new path is out of bounds.\n      // Reset the path to something valid\n      console.warn('Invalid selection: ' + model.toString() + ' in \"' + model.root.toLatex(false) + '\"');\n      model.path = [{\n        relation: 'body',\n        offset: 0\n      }];\n      model.extent = 0;\n    } else {\n      model.extent = selection.extent;\n    }\n\n    selectionDidChange(model);\n  }\n\n  return pathChanged || extentChanged;\n}\n/**\r\n * When changing the selection, if the former selection is an empty list,\r\n * insert a placeholder if necessary. For example, if in an empty numerator.\r\n */\n\n\nfunction adjustPlaceholder(model) {\n  // Should we insert a placeholder?\n  // Check if we're an empty list that is the child of a fraction\n  const siblings = model.siblings();\n\n  if (siblings && siblings.length <= 1) {\n    let placeholder;\n    const relation = model.relation();\n\n    if (relation === 'numer') {\n      placeholder = 'numerator';\n    } else if (relation === 'denom') {\n      placeholder = 'denominator';\n    } else if (model.parent().type === 'surd' && relation === 'body') {\n      // Surd (roots)\n      placeholder = 'radicand';\n    } else if (model.parent().type === 'overunder' && relation === 'body') {\n      placeholder = 'base';\n    } else if (relation === 'underscript' || relation === 'overscript') {\n      placeholder = 'annotation';\n    }\n\n    if (placeholder) {\n      // ◌ ⬚\n      siblings.splice(1, 0, new Atom('math', 'placeholder', '⬚', getAnchorStyle(model)));\n    }\n  }\n} // @revisit any\n\n\nfunction getAnchorStyle(model) {\n  const anchor = model.extent === 0 ? getAnchor(model) : model.sibling(1);\n  let result;\n\n  if (anchor && anchor.type !== 'first') {\n    if (anchor.type === 'command' || anchor.type === 'composition') {\n      return {};\n    }\n\n    result = {\n      color: anchor.color,\n      backgroundColor: anchor.backgroundColor,\n      fontFamily: anchor.fontFamily,\n      fontShape: anchor.fontShape,\n      fontSeries: anchor.fontSeries,\n      fontSize: anchor.fontSize\n    };\n  }\n\n  let i = 1;\n  let ancestor = model.ancestor(i);\n\n  while (!result && ancestor) {\n    if (ancestor) {\n      result = {\n        color: ancestor.color,\n        backgroundColor: ancestor.backgroundColor,\n        fontFamily: ancestor.fontFamily,\n        fontShape: ancestor.fontShape,\n        fontSeries: ancestor.fontSeries,\n        fontSize: ancestor.fontSize\n      };\n    }\n\n    i += 1;\n    ancestor = model.ancestor(i);\n  }\n\n  return result;\n}\n/**\r\n * Return true if the atom could be a part of a number\r\n * i.e. \"-12354.568\"\r\n */\n\n\nfunction isNumber(atom) {\n  if (!atom) return false;\n  return atom.type === 'mord' && /[0-9.]/.test(atom.body) || atom.type === 'mpunct' && atom.body === ',';\n}\n/**\r\n * Return a `{start:, end:}` for the offsets of the command around the insertion\r\n * point, or null.\r\n * - `start` is the first atom which is of type `command`\r\n * - `end` is after the last atom of type `command`\r\n */\n\n\nfunction getCommandOffsets(model) {\n  const siblings = model.siblings();\n  if (siblings.length <= 1) return null;\n  let start = Math.min(model.endOffset(), siblings.length - 1); // let start = Math.max(0, model.endOffset());\n\n  if (siblings[start].type !== 'command') return null;\n\n  while (start > 0 && siblings[start].type === 'command') start -= 1;\n\n  let end = model.startOffset() + 1;\n\n  while (end <= siblings.length - 1 && siblings[end].type === 'command') {\n    end += 1;\n  }\n\n  if (end > start) {\n    return {\n      start: start + 1,\n      end: end\n    };\n  }\n\n  return null;\n}\n\nfunction setPositionAfterCommitedCommand(model) {\n  const siblings = model.siblings();\n  const command = getCommandOffsets(model);\n  let i = command.start;\n\n  while (i < command.end && !siblings[i].isSuggestion) {\n    i++;\n  }\n\n  setSelectionOffset(model, i - 1);\n}\n\nfunction getAnchorMode(model) {\n  const anchor = selectionIsCollapsed(model) ? getAnchor(model) : model.sibling(1);\n  let result;\n\n  if (anchor) {\n    if (anchor.type === 'command') {\n      return 'command';\n    }\n\n    result = anchor.mode;\n  }\n\n  let i = 1;\n  let ancestor = model.ancestor(i);\n\n  while (!result && ancestor) {\n    if (ancestor) result = ancestor.mode;\n    i += 1;\n    ancestor = model.ancestor(i);\n  }\n\n  return result;\n}\n/**\r\n * Move to the next/previous placeholder or empty child list.\r\n * @return False if no placeholder found and did not move\r\n */\n\n\nfunction leap(model, dir = 1, callHooks = true) {\n  var _a;\n\n  const savedSuppressChangeNotifications = model.suppressChangeNotifications;\n  model.suppressChangeNotifications = true;\n  const oldPath = model.clone();\n  const oldExtent = model.extent;\n  move(model, dir);\n\n  if (getAnchor(model).type === 'placeholder') {\n    // If we're already at a placeholder, move by one more (the placeholder\n    // is right after the insertion point)\n    move(model, dir);\n  } // Candidate placeholders are atom of type 'placeholder'\n  // or empty children list (except for the root: if the root is empty,\n  // it is not a valid placeholder)\n\n\n  const placeholders = filter(model, (atom, iter) => atom.type === 'placeholder' || iter.path.length > 1 && iter.siblings().length === 1, dir); // If no placeholders were found, call handler or move to the next focusable\n  // element in the document\n\n  if (placeholders.length === 0) {\n    // Restore the selection\n    setPath(model, oldPath, oldExtent);\n\n    if (callHooks) {\n      if (((_a = model.hooks) === null || _a === void 0 ? void 0 : _a.tabOut) && model.hooks.tabOut(model, dir > 0 ? 'forward' : 'backward') && document.activeElement) {\n        const tabbable = getTabbableElements();\n        let index = tabbable.indexOf(document.activeElement) + dir;\n        if (index < 0) index = tabbable.length - 1;\n        if (index >= tabbable.length) index = 0;\n        tabbable[index].focus();\n      }\n    }\n\n    model.suppressChangeNotifications = savedSuppressChangeNotifications;\n    return false;\n  } // Set the selection to the next placeholder\n\n\n  setPath(model, placeholders[0]);\n  if (getAnchor(model).type === 'placeholder') setSelectionExtent(model, -1);\n  model.announce('move', oldPath);\n  selectionDidChange(model);\n  model.suppressChangeNotifications = savedSuppressChangeNotifications;\n  return true;\n}\n/**\r\n * Return an array of tabbable elements, approximately in the order a browser\r\n * would (the browsers are inconsistent), which is first by accounting\r\n * for non-null tabIndex, then null tabIndex, then document order of focusable\r\n * elements.\r\n */\n\n\nfunction getTabbableElements() {\n  // const focussableElements = `a[href]:not([disabled]),\n  // button:not([disabled]),\n  // textarea:not([disabled]),\n  // input[type=text]:not([disabled]),\n  // select:not([disabled]),\n  // [contentEditable=\"true\"],\n  // [tabindex]:not([disabled]):not([tabindex=\"-1\"])`;\n  // // Get all the potentially focusable elements\n  // // and exclude (1) those that are invisible (width and height = 0)\n  // // (2) not the active element\n  // // (3) the ancestor of the active element\n  // return Array.prototype.filter.call(\n  //     document.querySelectorAll(focussableElements),\n  //     (element) =>\n  //         ((element.offsetWidth > 0 || element.offsetHeight > 0) &&\n  //             !element.contains(document.activeElement)) ||\n  //         element === document.activeElement\n  // );\n  function tabbable(el) {\n    const regularTabbables = [];\n    const orderedTabbables = [];\n    const candidates = Array.from(el.querySelectorAll(\"input, select, textarea, a[href], button, \\n        [tabindex], audio[controls], video[controls],\\n        [contenteditable]:not([contenteditable=\\\"false\\\"]), details>summary\")).filter(isNodeMatchingSelectorTabbable);\n    candidates.forEach((candidate, i) => {\n      const candidateTabindex = getTabindex(candidate);\n\n      if (candidateTabindex === 0) {\n        regularTabbables.push(candidate);\n      } else {\n        orderedTabbables.push({\n          documentOrder: i,\n          tabIndex: candidateTabindex,\n          node: candidate\n        });\n      }\n    });\n    return orderedTabbables.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map(a => a.node).concat(regularTabbables);\n  }\n\n  function isNodeMatchingSelectorTabbable(el) {\n    if (!isNodeMatchingSelectorFocusable(el) || isNonTabbableRadio(el) || getTabindex(el) < 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function isNodeMatchingSelectorFocusable(node) {\n    if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isHidden(node)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function getTabindex(node) {\n    const tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n    if (!isNaN(tabindexAttr)) {\n      return tabindexAttr;\n    } // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n\n    if (node.contentEditable === 'true') {\n      return 0;\n    } // in Chrome, <audio controls/> and <video controls/> elements get a default\n    //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    //  yet they are still part of the regular tab order; in FF, they get a default\n    //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    //  order, consider their tab index to be 0\n\n\n    if ((node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO') && node.getAttribute('tabindex') === null) {\n      return 0;\n    }\n\n    return node.tabIndex;\n  }\n\n  function isNonTabbableRadio(node) {\n    return node.tagName === 'INPUT' && node.type === 'radio' && !isTabbableRadio(node);\n  }\n\n  function getCheckedRadio(nodes, form) {\n    for (let i = 0; i < nodes.length; i++) {\n      if (nodes[i].checked && nodes[i].form === form) {\n        return nodes[i];\n      }\n    }\n\n    return null;\n  }\n\n  function isTabbableRadio(node) {\n    if (!node.name) {\n      return true;\n    }\n\n    const radioScope = node.form || node.ownerDocument;\n    const radioSet = radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n    const checked = getCheckedRadio(radioSet, node.form);\n    return !checked || checked === node;\n  }\n\n  function isHidden(el) {\n    if (el === document.activeElement || el.contains(document.activeElement)) {\n      return false;\n    }\n\n    if (getComputedStyle(el).visibility === 'hidden') return true; // Note that browsers generally don't consider the bounding rect\n    // as a criteria to determine if an item is focusable, but we want\n    // to exclude the invisible textareas used to capture keyoard input.\n\n    const bounds = el.getBoundingClientRect();\n    if (bounds.width === 0 || bounds.height === 0) return true;\n\n    while (el) {\n      if (getComputedStyle(el).display === 'none') return true;\n      el = el.parentElement;\n    }\n\n    return false;\n  }\n\n  return tabbable(document.body);\n}\n/**\r\n * @param offset\r\n * - &gt;0: index of the child in the group where the selection will start from\r\n * - <0: index counting from the end of the group\r\n * @param extent Number of items in the selection:\r\n * - 0: collapsed selection, single insertion point\r\n * - &gt;0: selection extending _after_ the offset\r\n * - <0: selection extending _before_ the offset\r\n * - `'end'`: selection extending to the end of the group\r\n * - `'start'`: selection extending to the beginning of the group\r\n * @param relation e.g. `'body'`, `'superscript'`, etc...\r\n * @return False if the relation is invalid (no such children)\r\n */\n\n\nfunction setSelectionOffset(model, offset = 0, extent = 0, relation = '') {\n  // If no relation (\"children\", \"superscript\", etc...) is specified\n  // keep the current relation\n  const oldRelation = model.path[model.path.length - 1].relation;\n  if (!relation) relation = oldRelation; // If the relation is invalid, exit and return false\n\n  const parent = model.parent();\n  if (!parent && relation !== 'body') return false;\n  const arrayRelation = relation.startsWith('cell');\n\n  if (!arrayRelation && !parent[relation] || arrayRelation && !parent.array) {\n    return false;\n  }\n\n  const relationChanged = relation !== oldRelation; // Temporarily set the path to the potentially new relation to get the\n  // right siblings\n\n  model.path[model.path.length - 1].relation = relation; // Invoking siblings() will have the side-effect of adding the 'first'\n  // atom if necessary\n  // ... and we want the siblings with the potentially new relation...\n\n  const siblings = model.siblings();\n  const siblingsCount = siblings.length; // Restore the relation\n\n  model.path[model.path.length - 1].relation = oldRelation;\n  const oldExtent = model.extent;\n\n  if (extent === 'end') {\n    extent = siblingsCount - offset - 1;\n  }\n\n  setSelectionExtent(model, extent);\n  const extentChanged = model.extent !== oldExtent;\n  setSelectionExtent(model, oldExtent); // Calculate the new offset, and make sure it is in range\n  // (`setSelectionOffset()` can be called with an offset that greater than\n  // the number of children, for example when doing an up from a\n  // numerator to a smaller denominator, e.g. \"1/(x+1)\".\n\n  if (offset < 0) {\n    offset = siblingsCount + offset;\n  }\n\n  offset = Math.max(0, Math.min(offset, siblingsCount - 1));\n  const oldOffset = model.path[model.path.length - 1].offset;\n  const offsetChanged = oldOffset !== offset;\n\n  if (relationChanged || offsetChanged || extentChanged) {\n    if (relationChanged) {\n      adjustPlaceholder(model);\n    }\n\n    model.path[model.path.length - 1].relation = relation;\n    model.path[model.path.length - 1].offset = offset;\n    setSelectionExtent(model, extent);\n    selectionDidChange(model);\n  }\n\n  return true;\n}\n/**\r\n * Move the anchor to the next permissible atom.\r\n * Used by `move()`.\r\n * Does not send selection change notifications.\r\n */\n\n\nfunction next(model, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  const NEXT_RELATION = {\n    body: 'numer',\n    numer: 'denom',\n    denom: 'index',\n    index: 'overscript',\n    overscript: 'underscript',\n    underscript: 'subscript',\n    subscript: 'superscript'\n  };\n\n  if (model.anchorOffset() === model.siblings().length - 1) {\n    adjustPlaceholder(model); // We've reached the end of this list.\n    // Is there another list to consider?\n\n    let relation = NEXT_RELATION[model.relation()];\n    const parent = model.parent();\n\n    while (relation && !parent[relation]) {\n      relation = NEXT_RELATION[relation];\n    } // We found a new relation/set of siblings...\n\n\n    if (relation) {\n      setSelectionOffset(model, 0, 0, relation);\n      return;\n    } // No more siblings, check if we have a sibling cell in an array\n\n\n    if (model.parent().array) {\n      const maxCellCount = arrayCellCount(model.parent().array);\n      let cellIndex = parseInt(model.relation().match(/cell([0-9]*)$/)[1]) + 1;\n\n      while (cellIndex < maxCellCount) {\n        const cell = arrayCell(model.parent().array, cellIndex); // Some cells could be null (sparse array), so skip them\n\n        if (cell && setSelectionOffset(model, 0, 0, 'cell' + cellIndex)) {\n          return;\n        }\n\n        cellIndex += 1;\n      }\n    } // No more siblings, go up to the parent.\n\n\n    if (model.path.length === 1) {\n      // Invoke handler and perform default if they return true.\n      if (model.suppressChangeNotifications || !((_a = model.hooks) === null || _a === void 0 ? void 0 : _a.moveOut) || model.hooks.moveOut(model, 'forward')) {\n        // We're at the root, so loop back\n        model.path[0].offset = 0;\n      }\n    } else {\n      // We've reached the end of the siblings. If we're a group\n      // with skipBoundary, when exiting, move one past the next atom\n      const skip = !options.iterateAll && model.parent().skipBoundary;\n      model.path.pop();\n\n      if (skip) {\n        next(model, options);\n      }\n    }\n\n    return;\n  } // Still some siblings to go through. Move on to the next one.\n\n\n  setSelectionOffset(model, model.anchorOffset() + 1);\n  const anchor = getAnchor(model); // Dive into its components, if the new anchor is a compound atom,\n  // and allows capture of the selection by its sub-elements\n\n  if (anchor && !anchor.captureSelection) {\n    let relation;\n\n    if (anchor.array) {\n      // Find the first non-empty cell in this array\n      let cellIndex = 0;\n      relation = '';\n      const maxCellCount = arrayCellCount(anchor.array);\n\n      while (!relation && cellIndex < maxCellCount) {\n        // Some cells could be null (sparse array), so skip them\n        if (arrayCell(anchor.array, cellIndex)) {\n          relation = 'cell' + cellIndex.toString();\n        }\n\n        cellIndex += 1;\n      }\n\n      console.assert(relation);\n      model.path.push({\n        relation: relation,\n        offset: 0\n      });\n      setSelectionOffset(model, 0, 0, relation);\n      return;\n    }\n\n    relation = 'body';\n\n    while (relation) {\n      if (isArray(anchor[relation])) {\n        model.path.push({\n          relation: relation,\n          offset: 0\n        });\n        model.insertFirstAtom();\n\n        if (!options.iterateAll && anchor.skipBoundary) {\n          next(model, options);\n        }\n\n        return;\n      }\n\n      relation = NEXT_RELATION[relation];\n    }\n  }\n}\n\nfunction previous(model, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  const PREVIOUS_RELATION = {\n    numer: 'body',\n    denom: 'numer',\n    index: 'denom',\n    overscript: 'index',\n    underscript: 'overscript',\n    subscript: 'underscript',\n    superscript: 'subscript'\n  };\n\n  if (!options.iterateAll && model.anchorOffset() === 1 && model.parent() && model.parent().skipBoundary) {\n    setSelectionOffset(model, 0);\n  }\n\n  if (model.anchorOffset() < 1) {\n    // We've reached the first of these siblings.\n    // Is there another set of siblings to consider?\n    let relation = PREVIOUS_RELATION[model.relation()];\n\n    while (relation && !setSelectionOffset(model, -1, 0, relation)) {\n      relation = PREVIOUS_RELATION[relation];\n    } // Ignore the body of the subsup scaffolding and of\n    // 'mop' atoms (for example, \\sum): their body is not editable.\n\n\n    const parentType = model.parent() ? model.parent().type : 'none';\n\n    if (relation === 'body' && (parentType === 'msubsup' || parentType === 'mop')) {\n      relation = null;\n    } // We found a new relation/set of siblings...\n\n\n    if (relation) return;\n    adjustPlaceholder(model); // No more siblings, check if we have a sibling cell in an array\n\n    if (model.relation().startsWith('cell')) {\n      let cellIndex = parseInt(model.relation().match(/cell([0-9]*)$/)[1]) - 1;\n\n      while (cellIndex >= 0) {\n        const cell = arrayCell(model.parent().array, cellIndex);\n\n        if (cell && setSelectionOffset(model, -1, 0, 'cell' + cellIndex)) {\n          return;\n        }\n\n        cellIndex -= 1;\n      }\n    } // No more siblings, go up to the parent.\n\n\n    if (model.path.length === 1) {\n      // Invoke handler and perform default if they return true.\n      if (model.suppressChangeNotifications || !((_a = model.hooks) === null || _a === void 0 ? void 0 : _a.moveOut) || model.hooks.moveOut(model, 'backward')) {\n        // We're at the root, so loop back\n        model.path[0].offset = model.root.body.length - 1;\n      }\n    } else {\n      model.path.pop();\n      setSelectionOffset(model, model.anchorOffset() - 1);\n    }\n\n    return;\n  } // If the new anchor is a compound atom, dive into its components\n\n\n  const anchor = getAnchor(model); // Only dive in if the atom allows capture of the selection by\n  // its sub-elements\n\n  if (!anchor.captureSelection) {\n    let relation;\n\n    if (anchor.array) {\n      relation = '';\n      const maxCellCount = arrayCellCount(anchor.array);\n      let cellIndex = maxCellCount - 1;\n\n      while (!relation && cellIndex < maxCellCount) {\n        // Some cells could be null (sparse array), so skip them\n        if (arrayCell(anchor.array, cellIndex)) {\n          relation = 'cell' + cellIndex.toString();\n        }\n\n        cellIndex -= 1;\n      }\n\n      cellIndex += 1;\n      console.assert(relation);\n      model.path.push({\n        relation: relation,\n        offset: arrayCell(anchor.array, cellIndex).length - 1\n      });\n      setSelectionOffset(model, -1, 0, relation);\n      return;\n    }\n\n    relation = 'superscript';\n\n    while (relation) {\n      if (isArray(anchor[relation])) {\n        model.path.push({\n          relation: relation,\n          offset: anchor[relation].length - 1\n        });\n        setSelectionOffset(model, -1, 0, relation);\n        return;\n      }\n\n      relation = PREVIOUS_RELATION[relation];\n    }\n  } // There wasn't a component to navigate to, so...\n  // Still some siblings to go through: move on to the previous one.\n\n\n  setSelectionOffset(model, model.anchorOffset() - 1);\n\n  if (!options.iterateAll && model.sibling(0) && model.sibling(0).skipBoundary) {\n    previous(model, options);\n  }\n}\n\nfunction move(model, direction, options) {\n  options = options !== null && options !== void 0 ? options : {\n    extend: false\n  };\n  removeSuggestion(model);\n  const oldPath = model.clone();\n\n  if (direction === 'upward') {\n    up(model, options);\n  } else if (direction === 'downward') {\n    down(model, options);\n  } else {\n    let dist = direction === 'forward' ? 1 : direction === 'backward' ? -1 : direction;\n\n    if (options.extend) {\n      return extend(model, dist);\n    } // const previousParent = model.parent();\n    // const previousRelation = model.relation();\n    // const previousSiblings = model.siblings();\n\n\n    if (dist > 0) {\n      if (collapseSelectionForward(model)) dist--;\n\n      while (dist > 0) {\n        next(model);\n        dist--;\n      }\n    } else if (dist < 0) {\n      if (collapseSelectionBackward(model)) dist++;\n\n      while (dist !== 0) {\n        previous(model);\n        dist++;\n      }\n    } // ** @todo: can't do that without updating the path.\n    // If the siblings list we left was empty, remove the relation\n    // if (previousSiblings.length <= 1) {\n    //     if (['superscript', 'subscript', 'index'].includes(previousRelation)) {\n    //         previousParent[previousRelation] = null;\n    //     }\n    // }\n\n  }\n\n  selectionDidChange(model);\n  model.announce('move', oldPath);\n  return true;\n}\n\nfunction up(model, options) {\n  var _a, _b;\n\n  options = options !== null && options !== void 0 ? options : {\n    extend: false\n  };\n  const extend = (_a = options.extend) !== null && _a !== void 0 ? _a : false;\n  collapseSelectionBackward(model);\n  const relation = model.relation();\n\n  if (relation === 'denom') {\n    if (extend) {\n      model.path.pop();\n      model.path[model.path.length - 1].offset -= 1;\n      setSelectionExtent(model, 1);\n    } else {\n      setSelectionOffset(model, model.anchorOffset(), 0, 'numer');\n    }\n\n    model.announce('moveUp');\n  } else if (model.parent().array) {\n    // In an array\n    let colRow = arrayColRow(model.parent().array, relation);\n    colRow = arrayAdjustRow(model.parent().array, colRow, -1);\n\n    if (colRow && arrayCell(model.parent().array, colRow)) {\n      model.path[model.path.length - 1].relation = 'cell' + arrayIndex(model.parent().array, colRow);\n      setSelectionOffset(model, model.anchorOffset());\n      model.announce('moveUp');\n    } else {\n      move(model, 'backward', options);\n    }\n  } else {\n    model.announce('line');\n\n    if (!model.suppressChangeNotifications && !((_b = model.hooks) === null || _b === void 0 ? void 0 : _b.moveOut(model, 'upward'))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction down(model, options) {\n  var _a, _b;\n\n  options = options !== null && options !== void 0 ? options : {\n    extend: false\n  };\n  const extend = (_a = options.extend) !== null && _a !== void 0 ? _a : false;\n  collapseSelectionForward(model);\n  const relation = model.relation();\n\n  if (relation === 'numer') {\n    if (extend) {\n      model.path.pop();\n      model.path[model.path.length - 1].offset -= 1;\n      setSelectionExtent(model, 1);\n    } else {\n      setSelectionOffset(model, model.anchorOffset(), 0, 'denom');\n    }\n\n    model.announce('moveDown');\n  } else if (model.parent().array) {\n    // In an array\n    let colRow = arrayColRow(model.parent().array, relation);\n    colRow = arrayAdjustRow(model.parent().array, colRow, +1); // @revisit: validate this codepath\n\n    if (colRow && arrayCell(model.parent().array, colRow)) {\n      model.path[model.path.length - 1].relation = 'cell' + arrayIndex(model.parent().array, colRow);\n      setSelectionOffset(model, model.anchorOffset());\n      model.announce('moveDown');\n    } else {\n      move(model, 'forward', options);\n    }\n  } else {\n    model.announce('line');\n\n    if (!model.suppressChangeNotifications && !((_b = model.hooks) === null || _b === void 0 ? void 0 : _b.moveOut(model, 'downward'))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * Change the range of the selection\r\n *\r\n * @param dist - The change (positive or negative) to the extent\r\n * of the selection. The anchor point does not move.\r\n */\n\n\nfunction extend(model, dist) {\n  let offset = model.path[model.path.length - 1].offset;\n  let extent = 0;\n  const oldPath = model.clone();\n  extent = model.extent + dist;\n  const newFocusOffset = offset + extent;\n\n  if (newFocusOffset < 0 && extent !== 0) {\n    // We're trying to extend beyond the first element.\n    // Go up to the parent.\n    if (model.path.length > 1) {\n      model.path.pop(); // model.path[model.path.length - 1].offset -= 1;\n\n      setSelectionExtent(model, -1);\n      selectionDidChange(model);\n      model.announce('move', oldPath);\n      return true;\n    } // @todo exit left extend\n    // If we're at the very beginning, nothing to do.\n\n\n    offset = model.path[model.path.length - 1].offset;\n    extent = model.extent;\n  } else if (newFocusOffset >= model.siblings().length) {\n    // We're trying to extend beyond the last element.\n    // Go up to the parent\n    if (model.path.length > 1) {\n      model.path.pop();\n      model.path[model.path.length - 1].offset -= 1;\n      setSelectionExtent(model, 1);\n      selectionDidChange(model);\n      model.announce('move', oldPath);\n      return true;\n    } // @todo exit right extend\n\n\n    if (selectionIsCollapsed(model)) {\n      offset -= 1;\n    }\n\n    extent -= 1;\n  }\n\n  setSelectionOffset(model, offset, extent);\n  model.announce('move', oldPath);\n  return true;\n}\n/**\r\n * Move the selection focus to the next/previous point of interest.\r\n * A point of interest is an atom of a different type (mbin, mord, etc...)\r\n * than the current focus.\r\n * If `extend` is true, the selection will be extended. Otherwise, it is\r\n * collapsed, then moved.\r\n * @param dir +1 to skip forward, -1 to skip back\r\n */\n\n\nfunction skip(model, dir, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {\n    extend: false\n  };\n  const extend = (_a = options.extend) !== null && _a !== void 0 ? _a : false;\n  dir = dir < 0 ? -1 : +1;\n  const oldPath = model.clone();\n  const siblings = model.siblings();\n  const focus = model.focusOffset();\n  let offset = focus + dir;\n  if (extend) offset = Math.min(Math.max(0, offset), siblings.length - 1);\n\n  if (offset < 0 || offset >= siblings.length) {\n    // If we've reached the end, just move out of the list\n    move(model, dir, options);\n    return;\n  }\n\n  if (siblings[offset] && siblings[offset].mode === 'text') {\n    // We're in a text zone, skip word by word\n    offset = wordBoundaryOffset(model, offset, dir);\n\n    if (offset < 0 && !extend) {\n      setSelectionOffset(model, 0);\n      return;\n    }\n\n    if (offset > siblings.length) {\n      setSelectionOffset(model, siblings.length - 1);\n      move(model, dir, options);\n      return;\n    }\n  } else {\n    const type = siblings[offset] ? siblings[offset].type : '';\n\n    if (type === 'mopen' && dir > 0 || type === 'mclose' && dir < 0) {\n      // We're right before (or after) an opening (or closing)\n      // fence. Skip to the balanced element (in level, but not necessarily in\n      // fence symbol).\n      let level = type === 'mopen' ? 1 : -1;\n      offset += dir > 0 ? 1 : -1;\n\n      while (offset >= 0 && offset < siblings.length && level !== 0) {\n        if (siblings[offset].type === 'mopen') {\n          level += 1;\n        } else if (siblings[offset].type === 'mclose') {\n          level -= 1;\n        }\n\n        offset += dir;\n      }\n\n      if (level !== 0) {\n        // We did not find a balanced element. Just move a little.\n        offset = focus + dir;\n      }\n\n      if (dir > 0) offset = offset - 1;\n    } else {\n      while (siblings[offset] && siblings[offset].mode === 'math' && siblings[offset].type === type) {\n        offset += dir;\n      }\n\n      offset -= dir > 0 ? 1 : 0;\n    }\n  }\n\n  if (extend) {\n    const anchor = model.anchorOffset();\n    setSelectionOffset(model, anchor, offset - anchor);\n  } else {\n    setSelectionOffset(model, offset);\n  }\n\n  model.announce('move', oldPath);\n}\n\nfunction jumpToMathFieldBoundary(model, dir = 1, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {\n    extend: false\n  };\n  dir = dir < 0 ? -1 : +1;\n  const oldPath = model.clone();\n  const path = [{\n    relation: 'body',\n    offset: model.path[0].offset\n  }];\n  let extent;\n\n  if ((_a = !options.extend) !== null && _a !== void 0 ? _a : false) {\n    // Change the anchor to the end/start of the root expression\n    path[0].offset = dir < 0 ? 0 : model.root.body.length - 1;\n    extent = 0;\n  } else {\n    // Don't change the anchor, but update the extent\n    if (dir < 0) {\n      if (path[0].offset > 0) {\n        extent = -path[0].offset;\n      }\n    } else {\n      if (path[0].offset < model.siblings().length - 1) {\n        extent = model.siblings().length - 1 - path[0].offset;\n      }\n    }\n  }\n\n  setPath(model, path, extent);\n  model.announce('move', oldPath);\n  return true;\n}\n/**\r\n * @return The currently selected atoms, or `null` if the\r\n * selection is collapsed\r\n */\n\n\nfunction getSelectedAtoms(model) {\n  if (selectionIsCollapsed(model)) return null;\n  const result = [];\n  const siblings = model.siblings();\n  const firstOffset = model.startOffset() + 1;\n  const lastOffset = model.endOffset() + 1;\n\n  for (let i = firstOffset; i < lastOffset; i++) {\n    if (siblings[i] && siblings[i].type !== 'first') {\n      result.push(siblings[i]);\n    }\n  }\n\n  return result;\n}\n/**\r\n * @return True if `atom` is within the selection range\r\n * @todo: poorly named, since this is specific to the selection, not the math\r\n * field\r\n */\n// export function contains(model: Model, atom) {\n//     if (selectionIsCollapsed(model)) return false;\n//     const siblings = model.siblings();\n//     const firstOffset = model.startOffset();\n//     const lastOffset = model.endOffset();\n//     for (let i = firstOffset; i < lastOffset; i++) {\n//         if (atomContains(siblings[i], atom)) return true;\n//     }\n//     return false;\n// }\n\n/**\r\n * Select all the atoms in the current group, that is all the siblings.\r\n * When the selection is in a numerator, the group is the numerator. When\r\n * the selection is a superscript or subscript, the group is the supsub.\r\n * When the selection is in a text zone, the \"group\" is a word.\r\n */\n\n\nfunction _selectGroup(model) {\n  const siblings = model.siblings();\n\n  if (getAnchorMode(model) === 'text') {\n    let start = model.startOffset();\n    let end = model.endOffset(); //\n\n    while (siblings[start] && siblings[start].mode === 'text' && LETTER_AND_DIGITS.test(siblings[start].body)) {\n      start -= 1;\n    }\n\n    while (siblings[end] && siblings[end].mode === 'text' && LETTER_AND_DIGITS.test(siblings[end].body)) {\n      end += 1;\n    }\n\n    end -= 1;\n\n    if (start >= end) {\n      // No word found. Select a single character\n      setSelectionOffset(model, model.endOffset() - 1, 1);\n      return true;\n    }\n\n    setSelectionOffset(model, start, end - start);\n  } else {\n    // In a math zone, select all the sibling nodes\n    if (model.sibling(0).type === 'mord' && /[0-9,.]/.test(model.sibling(0).body)) {\n      // In a number, select all the digits\n      let start = model.startOffset();\n      let end = model.endOffset(); //\n\n      while (isNumber(siblings[start])) start -= 1;\n\n      while (isNumber(siblings[end])) end += 1;\n\n      end -= 1;\n      setSelectionOffset(model, start, end - start);\n    } else {\n      setSelectionOffset(model, 0, 'end');\n    }\n  }\n\n  return true;\n}\n\nfunction _selectAll(model) {\n  model.path = [{\n    relation: 'body',\n    offset: 0\n  }];\n  return setSelectionOffset(model, 0, 'end');\n}\n/**\r\n * @return {boolean} True if the selection is an insertion point.\r\n */\n\n\nfunction selectionIsCollapsed(model) {\n  return model.extent === 0;\n}\n\nfunction setSelectionExtent(model, extent) {\n  model.extent = extent;\n}\n\nfunction collapseSelectionForward(model) {\n  if (model.extent === 0) return false;\n  setSelectionOffset(model, model.endOffset());\n  return true;\n}\n\nfunction collapseSelectionBackward(model) {\n  if (model.extent === 0) return false;\n  setSelectionOffset(model, model.startOffset());\n  return true;\n}\n\nfunction _moveAfterParent(model) {\n  if (model.path.length > 1) {\n    const oldPath = model.clone();\n    model.path.pop();\n    setSelectionExtent(model, 0);\n    model.announce('move', oldPath);\n    return true;\n  }\n\n  model.announce('plonk');\n  return false;\n}\n/**\r\n * Extend the selection between `from` and `to` nodes.\r\n * Called during dragging.\r\n *\r\n * @param {object} options\r\n * - options.extendToWordBoundary\r\n * @return true if the range was actually changed\r\n */\n\n\nfunction setRange(model, from, to, options = {\n  extendToWordBoundary: false\n}) {\n  // Measure the 'distance' between `from` and `to`\n  const distance = pathDistance(from, to);\n\n  if (distance === 0) {\n    // `from` and `to` are equal.\n    if (options.extendToWordBoundary) {\n      from = wordBoundary(model, from, -1);\n      to = wordBoundary(model, to, +1);\n      return setRange(model, from, to);\n    } // Set the path to a collapsed insertion point\n\n\n    return setPath(model, clone(from), 0);\n  }\n\n  if (distance === 1) {\n    const extent = to[to.length - 1].offset - from[from.length - 1].offset;\n\n    if (options.extendToWordBoundary) {\n      from = wordBoundary(model, from, extent < 0 ? +1 : -1);\n      to = wordBoundary(model, to, extent < 0 ? -1 : +1);\n      return setRange(model, from, to);\n    } // They're siblings, set an extent\n\n\n    return setPath(model, clone(from), extent);\n  } // They're neither identical, not siblings.\n  // Find the common ancestor between the nodes\n\n\n  let commonAncestor = pathCommonAncestor(from, to);\n  const ancestorDepth = commonAncestor.length;\n\n  if (from.length === ancestorDepth || to.length === ancestorDepth || from[ancestorDepth].relation !== to[ancestorDepth].relation) {\n    return setPath(model, commonAncestor, -1);\n  }\n\n  commonAncestor.push(from[ancestorDepth]);\n  commonAncestor = clone(commonAncestor);\n  let extent = to[ancestorDepth].offset - from[ancestorDepth].offset + 1;\n\n  if (extent <= 0) {\n    if (to.length > ancestorDepth + 1) {\n      // axb/c+y -> select from y to x\n      commonAncestor[ancestorDepth].relation = to[ancestorDepth].relation;\n      commonAncestor[ancestorDepth].offset = to[ancestorDepth].offset;\n      commonAncestor[commonAncestor.length - 1].offset -= 1;\n      extent = -extent + 2;\n    } else {\n      // x+(ayb/c) -> select from y to x\n      commonAncestor[ancestorDepth].relation = to[ancestorDepth].relation;\n      commonAncestor[ancestorDepth].offset = to[ancestorDepth].offset;\n      extent = -extent + 1;\n    }\n  } else if (to.length <= from.length) {\n    // axb/c+y -> select from x to y\n    commonAncestor[commonAncestor.length - 1].offset -= 1;\n  } else if (to.length > from.length) {\n    commonAncestor[ancestorDepth].offset -= 1;\n  }\n\n  return setPath(model, commonAncestor, extent);\n}\n/**\r\n * Locate the offset before the insertion point that would indicate\r\n * a good place to select as an implicit argument.\r\n * For example with '1+\\sin(x)', if the insertion point is at the\r\n * end, the implicit arg offset would be after the plus. As a result,\r\n * inserting a fraction after the sin would yield: '1+\\frac{\\sin(c)}{\\placeholder{}}'\r\n */\n\n\nfunction getImplicitArgOffset(model) {\n  const siblings = model.siblings();\n  let result = model.startOffset();\n\n  if (siblings[result].mode === 'text') {\n    while (result >= 1 && siblings[result].mode === 'text') {\n      result--;\n    }\n  } else {\n    // Find the first 'mrel', etc... to the left of the insertion point\n    while (result >= 1 && /^(mord|surd|msubsup|leftright|mop)$/.test(siblings[result].type)) {\n      result--;\n    }\n  }\n\n  return result;\n}\n/**\r\n *\r\n * @param cb - A callback called for each selected atom in the\r\n * mathlist.\r\n */\n\n\nfunction forEachSelected(model, cb, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  options.recursive = (_a = options.recursive) !== null && _a !== void 0 ? _a : false;\n  const siblings = model.siblings();\n  const firstOffset = model.startOffset() + 1;\n  const lastOffset = model.endOffset() + 1;\n\n  if (options.recursive) {\n    for (let i = firstOffset; i < lastOffset; i++) {\n      if (siblings[i] && siblings[i].type !== 'first') {\n        siblings[i].forEach(cb);\n      }\n    }\n  } else {\n    for (let i = firstOffset; i < lastOffset; i++) {\n      if (siblings[i] && siblings[i].type !== 'first') {\n        cb(siblings[i]);\n      }\n    }\n  }\n}\n\nfunction getContentFromSiblings(model, start, end) {\n  const siblings = model.siblings();\n  if (isEmptyMathlist(siblings)) return '';\n\n  if (siblings[0].type === 'first' && start === 0) {\n    start = 1;\n  }\n\n  if (model.parent().type === 'root' && start === 1 && end === siblings.length - 1) {\n    // It's the entire sibling list. Get the parent's latex\n    return model.parent().toLatex(false);\n  }\n\n  let result = '';\n  let i = start;\n\n  while (i <= end) {\n    result += siblings[i].toLatex(false);\n    i++;\n  }\n\n  return result;\n}\n\nfunction wordBoundary(model, path, dir) {\n  dir = dir < 0 ? -1 : +1;\n  const iter = new ModelPrivate();\n  iter.path = clone(path);\n  iter.root = model.root;\n  let i = 0;\n\n  while (iter.sibling(i) && iter.sibling(i).mode === 'text' && LETTER_AND_DIGITS.test(iter.sibling(i).body)) {\n    i += dir;\n  }\n\n  if (!iter.sibling(i)) i -= dir;\n  iter.path[iter.path.length - 1].offset += i;\n  return iter.path;\n}\n/*\r\n * Calculates the offset of the \"next word\".\r\n * This is inspired by the behavior of text editors on macOS, namely:\r\n    blue   yellow\r\n      ^-\r\n         ^-------\r\n * That is:\r\n\n * (1) If starts with an alphanumerical character, find the first alphanumerical\r\n * character which is followed by a non-alphanumerical character\r\n *\r\n * The behavior regarding non-alphanumeric characters is less consistent.\r\n * Here's the behavior we use:\r\n *\r\n *   +=-()_:”     blue\r\n * ^---------\r\n *   +=-()_:”     blue\r\n *      ^---------\r\n *   +=-()_:”blue\r\n *      ^--------\r\n *\r\n * (2) If starts in whitespace, skip whitespace, then find first non-whitespace*\r\n *    followed by whitespace\r\n * (*) Pages actually uses the character class of the first non-whitespace\r\n * encountered.\r\n *\r\n * (3) If starts in a non-whitespace, non alphanumerical character, find the first\r\n *      whitespace\r\n *\r\n */\n\n\nfunction wordBoundaryOffset(model, offset, dir) {\n  dir = dir < 0 ? -1 : +1;\n  const siblings = model.siblings();\n  if (!siblings[offset]) return offset;\n  if (siblings[offset].mode !== 'text') return offset;\n  let result;\n\n  if (LETTER_AND_DIGITS.test(siblings[offset].body)) {\n    // (1) We start with an alphanumerical character\n    let i = offset;\n    let match;\n\n    do {\n      match = siblings[i].mode === 'text' && LETTER_AND_DIGITS.test(siblings[i].body);\n      i += dir;\n    } while (siblings[i] && match);\n\n    result = siblings[i] ? i - 2 * dir : i - dir;\n  } else if (/\\s/.test(siblings[offset].body)) {\n    // (2) We start with whitespace\n    // Skip whitespace\n    let i = offset;\n\n    while (siblings[i] && siblings[i].mode === 'text' && /\\s/.test(siblings[i].body)) {\n      i += dir;\n    }\n\n    if (!siblings[i]) {\n      // We've reached the end\n      result = i - dir;\n    } else {\n      let match = true;\n\n      do {\n        match = siblings[i].mode === 'text' && !/\\s/.test(siblings[i].body);\n        i += dir;\n      } while (siblings[i] && match);\n\n      result = siblings[i] ? i - 2 * dir : i - dir;\n    }\n  } else {\n    // (3)\n    let i = offset; // Skip non-whitespace\n\n    while (siblings[i] && siblings[i].mode === 'text' && !/\\s/.test(siblings[i].body)) {\n      i += dir;\n    }\n\n    result = siblings[i] ? i : i - dir;\n    let match = true;\n\n    while (siblings[i] && match) {\n      match = siblings[i].mode === 'text' && /\\s/.test(siblings[i].body);\n      if (match) result = i;\n      i += dir;\n    }\n\n    result = siblings[i] ? i - 2 * dir : i - dir;\n  }\n\n  return result - (dir > 0 ? 0 : 1);\n}\n/**\r\n * Iterate over each atom in the expression, starting with the focus.\r\n *\r\n * Return an array of all the paths for which the callback predicate\r\n * returned true.\r\n *\r\n * @param {function} cb - A predicate being passed a path and the atom at this\r\n * path. Return true to include the designated atom in the result.\r\n * @param {number} dir - `+1` to iterate forward, `-1` to iterate backward.\r\n * @return The paths (as a string) for all the atoms which the predicate is true\r\n */\n\n\nfunction filter(model, cb, dir = +1) {\n  dir = dir < 0 ? -1 : +1;\n  const result = [];\n  const iter = new ModelPrivate();\n  iter.path = clone(model.path);\n  iter.extent = model.extent;\n  iter.root = model.root;\n\n  if (dir >= 0) {\n    collapseSelectionForward(iter);\n  } else {\n    collapseSelectionBackward(iter);\n    move(iter, 'forward');\n  }\n\n  const initialAnchor = getAnchor(iter);\n\n  do {\n    if (cb(getAnchor(iter), iter)) {\n      result.push(iter.toString());\n    }\n\n    if (dir >= 0) {\n      next(iter, {\n        iterateAll: true\n      });\n    } else {\n      previous(iter, {\n        iterateAll: true\n      });\n    }\n  } while (initialAnchor !== getAnchor(iter));\n\n  return result;\n}\n\nconst DEFAULT_KEYBOARD_LAYOUT = platform() === 'apple' ? {\n  id: 'apple.en-intl',\n  displayName: 'English (international)',\n  platform: 'apple',\n  locale: 'en',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', 'å', 'Å'],\n    KeyB: ['b', 'B', '∫', 'ı'],\n    KeyC: ['c', 'C', 'ç', 'Ç'],\n    KeyD: ['d', 'D', '∂', 'Î'],\n    KeyE: ['e', 'E', '´', '´'],\n    KeyF: ['f', 'F', 'ƒ', 'Ï'],\n    KeyG: ['g', 'G', '©', '˝'],\n    KeyH: ['h', 'H', '˙', 'Ó'],\n    KeyI: ['i', 'I', 'ˆ', 'ˆ'],\n    KeyJ: ['j', 'J', '∆', 'Ô'],\n    KeyK: ['k', 'K', '˚', ''],\n    KeyL: ['l', 'L', '¬', 'Ò'],\n    KeyM: ['m', 'M', 'µ', 'Â'],\n    KeyN: ['n', 'N', '˜', '˜'],\n    KeyO: ['o', 'O', 'ø', 'Ø'],\n    KeyP: ['p', 'P', 'π', '∏'],\n    KeyQ: ['q', 'Q', 'œ', 'Œ'],\n    KeyR: ['r', 'R', '®', '‰'],\n    KeyS: ['s', 'S', 'ß', 'Í'],\n    KeyT: ['t', 'T', '†', 'ˇ'],\n    KeyU: ['u', 'U', '¨', '¨'],\n    KeyV: ['v', 'V', '√', '◊'],\n    KeyW: ['w', 'W', '∑', '„'],\n    KeyX: ['x', 'X', '≈', '˛'],\n    KeyY: ['y', 'Y', '¥', 'Á'],\n    KeyZ: ['z', 'Z', 'Ω', '¸'],\n    Digit1: ['1', '!', '¡', '⁄'],\n    Digit2: ['2', '@', '™', '€'],\n    Digit3: ['3', '#', '£', '‹'],\n    Digit4: ['4', '$', '¢', '›'],\n    Digit5: ['5', '%', '∞', 'ﬁ'],\n    Digit6: ['6', 'ˆ', '§', 'ﬂ'],\n    Digit7: ['7', '&', '¶', '‡'],\n    Digit8: ['8', '*', '•', '°'],\n    Digit9: ['9', '(', 'ª', '·'],\n    Digit0: ['0', ')', 'º', '‚'],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: ['-', '_', '–', '—'],\n    Equal: ['=', '+', '≠', '±'],\n    BracketLeft: ['[', '{', '“', '”'],\n    BracketRight: [']', '}', '‘', '’'],\n    Backslash: ['\\\\', '|', '«', '»'],\n    Semicolon: [';', ':', '…', 'Ú'],\n    Quote: [\"'\", '\"', 'æ', 'Æ'],\n    Backquote: ['`', '˜', '`', '`'],\n    Comma: [',', '<', '≤', '¯'],\n    Period: ['.', '>', '≥', '˘'],\n    Slash: ['/', '?', '÷', '¿'],\n    NumpadDivide: ['/', '/', '/', '/'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    Numpad1: ['1', '1', '1', '1'],\n    Numpad2: ['2', '2', '2', '2'],\n    Numpad3: ['3', '3', '3', '3'],\n    Numpad4: ['4', '4', '4', '4'],\n    Numpad5: ['5', '5', '5', '5'],\n    Numpad6: ['6', '6', '6', '6'],\n    Numpad7: ['7', '7', '7', '7'],\n    Numpad8: ['8', '8', '8', '8'],\n    Numpad9: ['9', '9', '9', '9'],\n    Numpad0: ['0', '0', '0', '0'],\n    NumpadDecimal: ['.', '.', '.', '.'],\n    IntlBackslash: ['§', '±', '§', '±'],\n    NumpadEqual: ['=', '=', '=', '='],\n    AudioVolumeUp: ['', '=', '', '=']\n  }\n} : platform() === 'windows' ? {\n  id: 'windows.en-intl',\n  displayName: 'English (international)',\n  platform: 'windows',\n  locale: 'en',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', 'á', 'Á'],\n    KeyB: ['b', 'B', '', ''],\n    KeyC: ['c', 'C', '©', '¢'],\n    KeyD: ['d', 'D', 'ð', 'Ð'],\n    KeyE: ['e', 'E', 'é', 'É'],\n    KeyF: ['f', 'F', '', ''],\n    KeyG: ['g', 'G', '', ''],\n    KeyH: ['h', 'H', '', ''],\n    KeyI: ['i', 'I', 'í', 'Í'],\n    KeyJ: ['j', 'J', '', ''],\n    KeyK: ['k', 'K', '', ''],\n    KeyL: ['l', 'L', 'ø', 'Ø'],\n    KeyM: ['m', 'M', 'µ', ''],\n    KeyN: ['n', 'N', 'ñ', 'Ñ'],\n    KeyO: ['o', 'O', 'ó', 'Ó'],\n    KeyP: ['p', 'P', 'ö', 'Ö'],\n    KeyQ: ['q', 'Q', 'ä', 'Ä'],\n    KeyR: ['r', 'R', '®', ''],\n    KeyS: ['s', 'S', 'ß', '§'],\n    KeyT: ['t', 'T', 'þ', 'Þ'],\n    KeyU: ['u', 'U', 'ú', 'Ú'],\n    KeyV: ['v', 'V', '', ''],\n    KeyW: ['w', 'W', 'å', 'Å'],\n    KeyX: ['x', 'X', '', ''],\n    KeyY: ['y', 'Y', 'ü', 'Ü'],\n    KeyZ: ['z', 'Z', 'æ', 'Æ'],\n    Digit1: ['1', '!', '¡', '¹'],\n    Digit2: ['2', '@', '²', ''],\n    Digit3: ['3', '#', '³', ''],\n    Digit4: ['4', '$', '¤', '£'],\n    Digit5: ['5', '%', '€', ''],\n    Digit6: ['6', '^', '¼', ''],\n    Digit7: ['7', '&', '½', ''],\n    Digit8: ['8', '*', '¾', ''],\n    Digit9: ['9', '(', '‘', ''],\n    Digit0: ['0', ')', '’', ''],\n    Space: [' ', ' ', '', ''],\n    Minus: ['-', '_', '¥', ''],\n    Equal: ['=', '+', '×', '÷'],\n    BracketLeft: ['[', '{', '«', ''],\n    BracketRight: [']', '}', '»', ''],\n    Backslash: ['\\\\', '|', '¬', '¦'],\n    Semicolon: [';', ':', '¶', '°'],\n    Quote: [\"'\", '\"', '´', '¨'],\n    Backquote: ['`', '~', '', ''],\n    Comma: [',', '<', 'ç', 'Ç'],\n    Period: ['.', '>', '', ''],\n    Slash: ['/', '?', '¿', ''],\n    NumpadDivide: ['/', '/', '', ''],\n    NumpadMultiply: ['*', '*', '', ''],\n    NumpadSubtract: ['-', '-', '', ''],\n    NumpadAdd: ['+', '+', '', ''],\n    IntlBackslash: ['\\\\', '|', '', '']\n  }\n} : {\n  id: 'linux.en',\n  displayName: 'English',\n  platform: 'linux',\n  locale: 'en',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', 'a', 'A'],\n    KeyB: ['b', 'B', 'b', 'B'],\n    KeyC: ['c', 'C', 'c', 'C'],\n    KeyD: ['d', 'D', 'd', 'D'],\n    KeyE: ['e', 'E', 'e', 'E'],\n    KeyF: ['f', 'F', 'f', 'F'],\n    KeyG: ['g', 'G', 'g', 'G'],\n    KeyH: ['h', 'H', 'h', 'H'],\n    KeyI: ['i', 'I', 'i', 'I'],\n    KeyJ: ['j', 'J', 'j', 'J'],\n    KeyK: ['k', 'K', 'k', 'K'],\n    KeyL: ['l', 'L', 'l', 'L'],\n    KeyM: ['m', 'M', 'm', 'M'],\n    KeyN: ['n', 'N', 'n', 'N'],\n    KeyO: ['o', 'O', 'o', 'O'],\n    KeyP: ['p', 'P', 'p', 'P'],\n    KeyQ: ['q', 'Q', 'q', 'Q'],\n    KeyR: ['r', 'R', 'r', 'R'],\n    KeyS: ['s', 'S', 's', 'S'],\n    KeyT: ['t', 'T', 't', 'T'],\n    KeyU: ['u', 'U', 'u', 'U'],\n    KeyV: ['v', 'V', 'v', 'V'],\n    KeyW: ['w', 'W', 'w', 'W'],\n    KeyX: ['x', 'X', 'x', 'X'],\n    KeyY: ['y', 'Y', 'y', 'Y'],\n    KeyZ: ['z', 'Z', 'z', 'Z'],\n    Digit1: ['1', '!', '1', '!'],\n    Digit2: ['2', '@', '2', '@'],\n    Digit3: ['3', '#', '3', '#'],\n    Digit4: ['4', '$', '4', '$'],\n    Digit5: ['5', '%', '5', '%'],\n    Digit6: ['6', '^', '6', '^'],\n    Digit7: ['7', '&', '7', '&'],\n    Digit8: ['8', '*', '8', '*'],\n    Digit9: ['9', '(', '9', '('],\n    Digit0: ['0', ')', '0', ')'],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: ['-', '_', '-', '_'],\n    Equal: ['=', '+', '=', '+'],\n    BracketLeft: ['[', '{', '[', '{'],\n    BracketRight: [']', '}', ']', '}'],\n    Backslash: ['\\\\', '|', '\\\\', '|'],\n    Semicolon: [';', ':', ';', ':'],\n    Quote: [\"'\", '\"', \"'\", '\"'],\n    Backquote: ['`', '~', '`', '~'],\n    Comma: [',', '<', ',', '<'],\n    Period: ['.', '>', '.', '>'],\n    Slash: ['/', '?', '/', '?'],\n    NumpadDivide: ['/', '/', '/', '/'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    Numpad1: ['1', '1', '1', '1'],\n    Numpad2: ['2', '2', '2', '2'],\n    Numpad3: ['3', '3', '3', '3'],\n    Numpad4: ['4', '4', '4', '4'],\n    Numpad5: ['5', '5', '5', '5'],\n    Numpad6: ['6', '6', '6', '6'],\n    Numpad7: ['7', '7', '7', '7'],\n    Numpad8: ['8', '8', '8', '8'],\n    Numpad9: ['9', '9', '9', '9'],\n    Numpad0: ['0', '0', '0', '0'],\n    NumpadDecimal: ['', '.', '', '.'],\n    IntlBackslash: ['<', '>', '|', '¦'],\n    NumpadEqual: ['=', '=', '=', '='],\n    NumpadComma: ['.', '.', '.', '.'],\n    NumpadParenLeft: ['(', '(', '(', '('],\n    NumpadParenRight: [')', ')', ')', ')']\n  }\n};\n/* prettier-ignore */\n\nconst BASE_LAYOUT_MAPPING = {\n  enter: '[Enter]',\n  escape: '[Escape]',\n  backspace: '[Backspace]',\n  tab: '[Tab]',\n  space: '[Space]',\n  pausebreak: '[Pause]',\n  insert: '[Insert]',\n  home: '[Home]',\n  pageup: '[PageUp]',\n  delete: '[Delete]',\n  end: '[End]',\n  pagedown: '[PageDown]',\n  right: '[ArrowRight]',\n  left: '[ArrowLeft]',\n  down: '[ArrowDown]',\n  up: '[ArrowUp]',\n  numpad0: '[Numpad0]',\n  numpad1: '[Numpad1]',\n  numpad2: '[Numpad2]',\n  numpad3: '[Numpad3]',\n  numpad4: '[Numpad4]',\n  numpad5: '[Numpad5]',\n  numpad6: '[Numpad6]',\n  numpad7: '[Numpad7]',\n  numpad8: '[Numpad8]',\n  numpad9: '[Numpad9]',\n  'numpad_divide': '[NumpadDivide]',\n  'numpad_multiply': '[NumpadMultiply]',\n  'numpad_subtract': '[NumpadSubtract]',\n  'numpad_add': '[NumpadAdd]',\n  'numpad_decimal': '[NumpadDecimal]',\n  'numpad_separator': '[NumpadComma]',\n  capslock: '[Capslock]',\n  f1: '[F1]',\n  f2: '[F2]',\n  f3: '[F3]',\n  f4: '[F4]',\n  f5: '[F5]',\n  f6: '[F6]',\n  f7: '[F7]',\n  f8: '[F8]',\n  f9: '[F9]',\n  f10: '[F10]',\n  f11: '[F11]',\n  f12: '[F12]',\n  f13: '[F13]',\n  f14: '[F14]',\n  f15: '[F15]',\n  f16: '[F16]',\n  f17: '[F17]',\n  f18: '[F18]',\n  f19: '[F19]'\n};\nconst gKeyboardLayouts = [];\nlet gKeyboardLayout;\n\nfunction platform() {\n  let result = 'linux';\n\n  if ((navigator === null || navigator === void 0 ? void 0 : navigator.platform) && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\n    if (/^(mac)/i.test(navigator.platform)) {\n      result = 'apple';\n    } else if (/^(win)/i.test(navigator.platform)) {\n      result = 'windows';\n    } else if (/(android)/i.test(navigator.userAgent)) {\n      result = 'linux';\n    } else if (/(iphone)/i.test(navigator.userAgent) || /(ipod)/i.test(navigator.userAgent) || /(ipad)/i.test(navigator.userAgent)) {\n      result = 'apple';\n    } else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\n      result = 'linux';\n    }\n  }\n\n  return result;\n}\n\nfunction register$1(layout) {\n  if (layout.platform === platform()) {\n    gKeyboardLayouts.push(layout);\n  }\n}\n/** Given the current estimated keyboard layout,\r\n *  return the unmodified key for the event.\r\n * For example, on AZERTY option+shift+'A' = 'Æ' -> 'a'\r\n * (event though the code is KeyQ)\r\n */\n// export function getUnmodifiedKey(evt: KeyboardEvent): string {\n//     if (!evt.shiftKey && !evt.altKey) {\n//         return evt.key;\n//     }\n//     // @todo: iterate over the entries for the current layout,\n//     // with the alt+shift modifiers set accordingly\n//     // and find the (first) entry that matches\n//     const layout = gKeyboardLayouts[0] ?? DEFAULT_KEYBOARD_LAYOUT;\n//     const index =\n//         evt.shiftKey && evt.altKey ? 3 : evt.altKey ? 2 : evt.shiftKey ? 1 : 0;\n//     for (const [key, value] of Object.entries(layout.mapping)) {\n//         if (key === evt.code && value[index] === evt.key) {\n//             return value[0];\n//         }\n//     }\n//     // We did not find a perfect match...\n//     // Look for an entry even if the keycode doesn't match...\n//     for (const [, value] of Object.entries(layout.mapping)) {\n//         if (value[index] === evt.key) {\n//             return value[0];\n//         }\n//     }\n//     // Really? Nothing matched?! Just return the key...\n//     return evt.key;\n// }\n\n\nfunction getCodeForKey(k) {\n  var _a, _b;\n\n  const layout = (_a = getActiveKeyboardLayout()) !== null && _a !== void 0 ? _a : DEFAULT_KEYBOARD_LAYOUT;\n\n  for (var _i = 0, _Object$entries = Object.entries(layout.mapping); _i < _Object$entries.length; _i++) {\n    const _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n    if (value[0] === k) return '[' + key + ']';\n    if (value[1] === k) return 'shift+[' + key + ']';\n    if (value[2] === k) return 'alt+[' + key + ']';\n    if (value[3] === k) return 'shift+alt+[' + key + ']';\n  }\n\n  return (_b = BASE_LAYOUT_MAPPING[k]) !== null && _b !== void 0 ? _b : '';\n}\n\nfunction normalizeKeyboardEvent(evt) {\n  if (!evt.code) {\n    // For virtual keyboards (iOS, Android) and Microsoft Edge (!)\n    // the `evt.code`, which represents the physical key pressed, is set\n    // to undefined. In that case, map the virtual key (\"q\") to a\n    // pseudo-hardware key (\"KeyQ\")\n    const mapping = Object.entries(getActiveKeyboardLayout().mapping);\n    let altKey = false;\n    let shiftKey = false;\n    let code;\n\n    for (let index = 0; index < 4; index++) {\n      var _iterator35 = _createForOfIteratorHelper(mapping),\n          _step35;\n\n      try {\n        for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n          const _step35$value = _slicedToArray(_step35.value, 2),\n                key = _step35$value[0],\n                value = _step35$value[1];\n\n          if (value[index] === evt.key) {\n            code = key;\n\n            if (index === 3) {\n              altKey = true;\n              shiftKey = true;\n            } else if (index === 2) {\n              altKey = true;\n            } else if (index === 1) {\n              shiftKey = true;\n            }\n\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator35.e(err);\n      } finally {\n        _iterator35.f();\n      }\n\n      if (code) break;\n    }\n\n    return new KeyboardEvent(evt.type, _objectSpread(_objectSpread({}, evt), {}, {\n      altKey,\n      shiftKey,\n      code\n    }));\n  }\n\n  return new KeyboardEvent(evt.type, evt);\n} // Given this keyboard event, and the `code`, `key` and modifiers\n// in it, increase the score of layouts that do match it.\n// Calling repeatedly this function will improve the accuracy of the\n// keyboard layout estimate.\n\n\nfunction validateKeyboardLayout(evt) {\n  const index = evt.shiftKey && evt.altKey ? 3 : evt.altKey ? 2 : evt.shiftKey ? 1 : 0;\n  if (evt.key === 'Unidentified') return; // Dead keys do not have enough info to validate the keyboard\n  // (we dont' know what char they could produce, only the physical key associated with them )\n\n  if (evt.key === 'Dead') return;\n  const layouts = gKeyboardLayouts.filter(layout => {\n    var _a;\n\n    return ((_a = layout.mapping[evt.code]) === null || _a === void 0 ? void 0 : _a[index]) === evt.key;\n  });\n  if (layouts.length === 0) return; // Increase the score of the layouts that have a mapping compatible with this keyboard event.\n\n  layouts.forEach(x => {\n    x.score += 1;\n  });\n  gKeyboardLayouts.sort((a, b) => b.score - a.score);\n}\n\nfunction setKeyboardLayoutLocale(locale) {\n  gKeyboardLayout = gKeyboardLayouts.find(x => locale.startsWith(x.locale));\n}\n\nfunction getActiveKeyboardLayout() {\n  return gKeyboardLayout !== null && gKeyboardLayout !== void 0 ? gKeyboardLayout : gKeyboardLayouts[0];\n}\n\nregister$1(DEFAULT_KEYBOARD_LAYOUT);\nregister$1({\n  id: 'apple.french',\n  locale: 'fr',\n  displayName: 'French',\n  platform: 'apple',\n  score: 0,\n  mapping: {\n    KeyA: ['q', 'Q', '‡', 'Ω'],\n    KeyB: ['b', 'B', 'ß', '∫'],\n    KeyC: ['c', 'C', '©', '¢'],\n    KeyD: ['d', 'D', '∂', '∆'],\n    KeyE: ['e', 'E', 'ê', 'Ê'],\n    KeyF: ['f', 'F', 'ƒ', '·'],\n    KeyG: ['g', 'G', 'ﬁ', 'ﬂ'],\n    KeyH: ['h', 'H', 'Ì', 'Î'],\n    KeyI: ['i', 'I', 'î', 'ï'],\n    KeyJ: ['j', 'J', 'Ï', 'Í'],\n    KeyK: ['k', 'K', 'È', 'Ë'],\n    KeyL: ['l', 'L', '¬', '|'],\n    KeyM: [',', '?', '∞', '¿'],\n    KeyN: ['n', 'N', '~', 'ı'],\n    KeyO: ['o', 'O', 'œ', 'Œ'],\n    KeyP: ['p', 'P', 'π', '∏'],\n    KeyQ: ['a', 'A', 'æ', 'Æ'],\n    KeyR: ['r', 'R', '®', '‚'],\n    KeyS: ['s', 'S', 'Ò', '∑'],\n    KeyT: ['t', 'T', '†', '™'],\n    KeyU: ['u', 'U', 'º', 'ª'],\n    KeyV: ['v', 'V', '◊', '√'],\n    KeyW: ['z', 'Z', 'Â', 'Å'],\n    KeyX: ['x', 'X', '≈', '⁄'],\n    KeyY: ['y', 'Y', 'Ú', 'Ÿ'],\n    KeyZ: ['w', 'W', '‹', '›'],\n    Digit1: ['&', '1', '', '´'],\n    Digit2: ['é', '2', 'ë', '„'],\n    Digit3: ['\"', '3', '“', '”'],\n    Digit4: [\"'\", '4', '‘', '’'],\n    Digit5: ['(', '5', '{', '['],\n    Digit6: ['§', '6', '¶', 'å'],\n    Digit7: ['è', '7', '«', '»'],\n    Digit8: ['!', '8', '¡', 'Û'],\n    Digit9: ['ç', '9', 'Ç', 'Á'],\n    Digit0: ['à', '0', 'ø', 'Ø'],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: [')', '°', '}', ']'],\n    Equal: ['-', '_', '—', '–'],\n    BracketLeft: ['^', '¨', 'ô', 'Ô'],\n    BracketRight: ['$', '*', '€', '¥'],\n    Backslash: ['`', '£', '@', '#'],\n    Semicolon: ['m', 'M', 'µ', 'Ó'],\n    Quote: ['ù', '%', 'Ù', '‰'],\n    Backquote: ['<', '>', '≤', '≥'],\n    Comma: [';', '.', '…', '•'],\n    Period: [':', '/', '÷', '\\\\'],\n    Slash: ['=', '+', '≠', '±'],\n    NumpadDivide: ['/', '/', '/', '/'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    NumpadDecimal: [',', '.', ',', '.'],\n    IntlBackslash: ['@', '#', '•', 'Ÿ'],\n    NumpadEqual: ['=', '=', '=', '=']\n  }\n});\nregister$1({\n  id: 'apple.spanish',\n  locale: 'es',\n  displayName: 'Spanish ISO',\n  platform: 'apple',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', 'å', 'Å'],\n    KeyB: ['b', 'B', 'ß', ''],\n    KeyC: ['c', 'C', '©', ' '],\n    KeyD: ['d', 'D', '∂', '∆'],\n    KeyE: ['e', 'E', '€', '€'],\n    KeyF: ['f', 'F', 'ƒ', 'ﬁ'],\n    KeyG: ['g', 'G', '', 'ﬂ'],\n    KeyH: ['h', 'H', '™', ' '],\n    KeyI: ['i', 'I', ' ', ' '],\n    KeyJ: ['j', 'J', '¶', '¯'],\n    KeyK: ['k', 'K', '§', 'ˇ'],\n    KeyL: ['l', 'L', ' ', '˘'],\n    KeyM: ['m', 'M', 'µ', '˚'],\n    KeyN: ['n', 'N', ' ', '˙'],\n    KeyO: ['o', 'O', 'ø', 'Ø'],\n    KeyP: ['p', 'P', 'π', '∏'],\n    KeyQ: ['q', 'Q', 'œ', 'Œ'],\n    KeyR: ['r', 'R', '®', ' '],\n    KeyS: ['s', 'S', '∫', ' '],\n    KeyT: ['t', 'T', '†', '‡'],\n    KeyU: ['u', 'U', ' ', ' '],\n    KeyV: ['v', 'V', '√', '◊'],\n    KeyW: ['w', 'W', 'æ', 'Æ'],\n    KeyX: ['x', 'X', '∑', '›'],\n    KeyY: ['y', 'Y', '¥', ' '],\n    KeyZ: ['z', 'Z', 'Ω', '‹'],\n    Digit1: ['1', '!', '|', 'ı'],\n    Digit2: ['2', '\"', '@', '˝'],\n    Digit3: ['3', '·', '#', '•'],\n    Digit4: ['4', '$', '¢', '£'],\n    Digit5: ['5', '%', '∞', '‰'],\n    Digit6: ['6', '&', '¬', ' '],\n    Digit7: ['7', '/', '÷', '⁄'],\n    Digit8: ['8', '(', '“', '‘'],\n    Digit9: ['9', ')', '”', '’'],\n    Digit0: ['0', '=', '≠', '≈'],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: [\"'\", '?', '´', '¸'],\n    Equal: ['¡', '¿', '‚', '˛'],\n    BracketLeft: ['`', '^', '[', 'ˆ'],\n    BracketRight: ['+', '*', ']', '±'],\n    Backslash: ['ç', 'Ç', '}', '»'],\n    Semicolon: ['ñ', 'Ñ', '~', '˜'],\n    Quote: ['´', '¨', '{', '«'],\n    Backquote: ['<', '>', '≤', '≥'],\n    Comma: [',', ';', '„', ''],\n    Period: ['.', ':', '…', '…'],\n    Slash: ['-', '_', '–', '—'],\n    NumpadDivide: ['/', '/', '/', '/'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    Numpad1: ['1', '1', '1', '1'],\n    Numpad2: ['2', '2', '2', '2'],\n    Numpad3: ['3', '3', '3', '3'],\n    Numpad4: ['4', '4', '4', '4'],\n    Numpad5: ['5', '5', '5', '5'],\n    Numpad6: ['6', '6', '6', '6'],\n    Numpad7: ['7', '7', '7', '7'],\n    Numpad8: ['8', '8', '8', '8'],\n    Numpad9: ['9', '9', '9', '9'],\n    Numpad0: ['0', '0', '0', '0'],\n    NumpadDecimal: [',', ',', ',', ','],\n    IntlBackslash: ['º', 'ª', '\\\\', '°']\n  }\n});\nregister$1({\n  id: 'windows.spanish',\n  locale: 'es',\n  displayName: 'Spanish',\n  platform: 'windows',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', '', ''],\n    KeyB: ['b', 'B', '', ''],\n    KeyC: ['c', 'C', '', ''],\n    KeyD: ['d', 'D', '', ''],\n    KeyE: ['e', 'E', '€', ''],\n    KeyF: ['f', 'F', '', ''],\n    KeyG: ['g', 'G', '', ''],\n    KeyH: ['h', 'H', '', ''],\n    KeyI: ['i', 'I', '', ''],\n    KeyJ: ['j', 'J', '', ''],\n    KeyK: ['k', 'K', '', ''],\n    KeyL: ['l', 'L', '', ''],\n    KeyM: ['m', 'M', '', ''],\n    KeyN: ['n', 'N', '', ''],\n    KeyO: ['o', 'O', '', ''],\n    KeyP: ['p', 'P', '', ''],\n    KeyQ: ['q', 'Q', '', ''],\n    KeyR: ['r', 'R', '', ''],\n    KeyS: ['s', 'S', '', ''],\n    KeyT: ['t', 'T', '', ''],\n    KeyU: ['u', 'U', '', ''],\n    KeyV: ['v', 'V', '', ''],\n    KeyW: ['w', 'W', '', ''],\n    KeyX: ['x', 'X', '', ''],\n    KeyY: ['y', 'Y', '', ''],\n    KeyZ: ['z', 'Z', '', ''],\n    Digit1: ['1', '!', '|', ''],\n    Digit2: ['2', '\"', '@', ''],\n    Digit3: ['3', '·', '#', ''],\n    Digit4: ['4', '$', '~', ''],\n    Digit5: ['5', '%', '€', ''],\n    Digit6: ['6', '&', '¬', ''],\n    Digit7: ['7', '/', '', ''],\n    Digit8: ['8', '(', '', ''],\n    Digit9: ['9', ')', '', ''],\n    Digit0: ['0', '=', '', ''],\n    Space: [' ', ' ', '', ''],\n    Minus: [\"'\", '?', '', ''],\n    Equal: ['¡', '¿', '', ''],\n    BracketLeft: ['`', '^', '[', ''],\n    BracketRight: ['+', '*', ']', ''],\n    Backslash: ['ç', 'Ç', '}', ''],\n    Semicolon: ['ñ', 'Ñ', '', ''],\n    Quote: ['´', '¨', '{', ''],\n    Backquote: ['º', 'ª', '\\\\', ''],\n    Comma: [',', ';', '', ''],\n    Period: ['.', ':', '', ''],\n    Slash: ['-', '_', '', ''],\n    NumpadDivide: ['/', '/', '', ''],\n    NumpadMultiply: ['*', '*', '', ''],\n    NumpadSubtract: ['-', '-', '', ''],\n    NumpadAdd: ['+', '+', '', ''],\n    IntlBackslash: ['<', '>', '', '']\n  }\n});\nregister$1({\n  id: 'linux.spanish',\n  locale: 'es',\n  displayName: 'Spanish',\n  platform: 'linux',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', 'æ', 'Æ'],\n    KeyB: ['b', 'B', '”', '’'],\n    KeyC: ['c', 'C', '¢', '©'],\n    KeyD: ['d', 'D', 'ð', 'Ð'],\n    KeyE: ['e', 'E', '€', '¢'],\n    KeyF: ['f', 'F', 'đ', 'ª'],\n    KeyG: ['g', 'G', 'ŋ', 'Ŋ'],\n    KeyH: ['h', 'H', 'ħ', 'Ħ'],\n    KeyI: ['i', 'I', '→', 'ı'],\n    KeyJ: ['j', 'J', '̉', '̛'],\n    KeyK: ['k', 'K', 'ĸ', '&'],\n    KeyL: ['l', 'L', 'ł', 'Ł'],\n    KeyM: ['m', 'M', 'µ', 'º'],\n    KeyN: ['n', 'N', 'n', 'N'],\n    KeyO: ['o', 'O', 'ø', 'Ø'],\n    KeyP: ['p', 'P', 'þ', 'Þ'],\n    KeyQ: ['q', 'Q', '@', 'Ω'],\n    KeyR: ['r', 'R', '¶', '®'],\n    KeyS: ['s', 'S', 'ß', '§'],\n    KeyT: ['t', 'T', 'ŧ', 'Ŧ'],\n    KeyU: ['u', 'U', '↓', '↑'],\n    KeyV: ['v', 'V', '“', '‘'],\n    KeyW: ['w', 'W', 'ł', 'Ł'],\n    KeyX: ['x', 'X', '»', '>'],\n    KeyY: ['y', 'Y', '←', '¥'],\n    KeyZ: ['z', 'Z', '«', '<'],\n    Digit1: ['1', '!', '|', '¡'],\n    Digit2: ['2', '\"', '@', '⅛'],\n    Digit3: ['3', '·', '#', '£'],\n    Digit4: ['4', '$', '~', '$'],\n    Digit5: ['5', '%', '½', '⅜'],\n    Digit6: ['6', '&', '¬', '⅝'],\n    Digit7: ['7', '/', '{', '⅞'],\n    Digit8: ['8', '(', '[', '™'],\n    Digit9: ['9', ')', ']', '±'],\n    Digit0: ['0', '=', '}', '°'],\n    Enter: ['\\r', '\\r', '\\r', '\\r'],\n    Escape: ['\\u001b', '\\u001b', '\\u001b', '\\u001b'],\n    Backspace: ['\\b', '\\b', '\\b', '\\b'],\n    Tab: ['\\t', '', '\\t', ''],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: [\"'\", '?', '\\\\', '¿'],\n    Equal: ['¡', '¿', '̃', '~'],\n    BracketLeft: ['̀', '̂', '[', '̊'],\n    BracketRight: ['+', '*', ']', '̄'],\n    Backslash: ['ç', 'Ç', '}', '̆'],\n    Semicolon: ['ñ', 'Ñ', '~', '̋'],\n    Quote: ['́', '̈', '{', '{'],\n    Backquote: ['º', 'ª', '\\\\', '\\\\'],\n    Comma: [',', ';', '─', '×'],\n    Period: ['.', ':', '·', '÷'],\n    Slash: ['-', '_', '̣', '̇'],\n    NumpadDivide: ['/', '/', '/', '/'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    NumpadEnter: ['\\r', '\\r', '\\r', '\\r'],\n    Numpad1: ['', '1', '', '1'],\n    Numpad2: ['', '2', '', '2'],\n    Numpad3: ['', '3', '', '3'],\n    Numpad4: ['', '4', '', '4'],\n    Numpad5: ['', '5', '', '5'],\n    Numpad6: ['', '6', '', '6'],\n    Numpad7: ['', '7', '', '7'],\n    Numpad8: ['', '8', '', '8'],\n    Numpad9: ['', '9', '', '9'],\n    Numpad0: ['', '0', '', '0'],\n    NumpadDecimal: ['', '.', '', '.'],\n    IntlBackslash: ['<', '>', '|', '¦'],\n    NumpadEqual: ['=', '=', '=', '='],\n    NumpadComma: ['.', '.', '.', '.'],\n    NumpadParenLeft: ['(', '(', '(', '('],\n    NumpadParenRight: [')', ')', ')', ')']\n  }\n});\nregister$1({\n  id: 'linux.french',\n  locale: 'fr',\n  displayName: 'French',\n  platform: 'apple',\n  score: 0,\n  mapping: {\n    KeyA: ['q', 'Q', '@', 'Ω'],\n    KeyB: ['b', 'B', '”', '’'],\n    KeyC: ['c', 'C', '¢', '©'],\n    KeyD: ['d', 'D', 'ð', 'Ð'],\n    KeyE: ['e', 'E', '€', '¢'],\n    KeyF: ['f', 'F', 'đ', 'ª'],\n    KeyG: ['g', 'G', 'ŋ', 'Ŋ'],\n    KeyH: ['h', 'H', 'ħ', 'Ħ'],\n    KeyI: ['i', 'I', '→', 'ı'],\n    KeyJ: ['j', 'J', '̉', '̛'],\n    KeyK: ['k', 'K', 'ĸ', '&'],\n    KeyL: ['l', 'L', 'ł', 'Ł'],\n    KeyM: [',', '?', '́', '̋'],\n    KeyN: ['n', 'N', 'n', 'N'],\n    KeyO: ['o', 'O', 'ø', 'Ø'],\n    KeyP: ['p', 'P', 'þ', 'Þ'],\n    KeyQ: ['a', 'A', 'æ', 'Æ'],\n    KeyR: ['r', 'R', '¶', '®'],\n    KeyS: ['s', 'S', 'ß', '§'],\n    KeyT: ['t', 'T', 'ŧ', 'Ŧ'],\n    KeyU: ['u', 'U', '↓', '↑'],\n    KeyV: ['v', 'V', '“', '‘'],\n    KeyW: ['z', 'Z', '«', '<'],\n    KeyX: ['x', 'X', '»', '>'],\n    KeyY: ['y', 'Y', '←', '¥'],\n    KeyZ: ['w', 'W', 'ł', 'Ł'],\n    Digit1: ['&', '1', '¹', '¡'],\n    Digit2: ['é', '2', '~', '⅛'],\n    Digit3: ['\"', '3', '#', '£'],\n    Digit4: [\"'\", '4', '{', '$'],\n    Digit5: ['(', '5', '[', '⅜'],\n    Digit6: ['-', '6', '|', '⅝'],\n    Digit7: ['è', '7', '`', '⅞'],\n    Digit8: ['_', '8', '\\\\', '™'],\n    Digit9: ['ç', '9', '^', '±'],\n    Digit0: ['à', '0', '@', '°'],\n    Enter: ['\\r', '\\r', '\\r', '\\r'],\n    Escape: ['\\u001b', '\\u001b', '\\u001b', '\\u001b'],\n    Backspace: ['\\b', '\\b', '\\b', '\\b'],\n    Tab: ['\\t', '', '\\t', ''],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: [')', '°', ']', '¿'],\n    Equal: ['=', '+', '}', '̨'],\n    BracketLeft: ['̂', '̈', '̈', '̊'],\n    BracketRight: ['$', '£', '¤', '̄'],\n    Backslash: ['*', 'µ', '̀', '̆'],\n    Semicolon: ['m', 'M', 'µ', 'º'],\n    Quote: ['ù', '%', '̂', '̌'],\n    Backquote: ['²', '~', '¬', '¬'],\n    Comma: [';', '.', '─', '×'],\n    Period: [':', '/', '·', '÷'],\n    Slash: ['!', '§', '̣', '̇'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    NumpadDecimal: ['', '.', '', '.'],\n    IntlBackslash: ['<', '>', '|', '¦']\n  }\n});\nregister$1({\n  id: 'windows.french',\n  locale: 'fr',\n  displayName: 'French',\n  platform: 'windows',\n  score: 0,\n  mapping: {\n    KeyA: ['q', 'Q', '', ''],\n    KeyB: ['b', 'B', '', ''],\n    KeyC: ['c', 'C', '', ''],\n    KeyD: ['d', 'D', '', ''],\n    KeyE: ['e', 'E', '€', ''],\n    KeyF: ['f', 'F', '', ''],\n    KeyG: ['g', 'G', '', ''],\n    KeyH: ['h', 'H', '', ''],\n    KeyI: ['i', 'I', '', ''],\n    KeyJ: ['j', 'J', '', ''],\n    KeyK: ['k', 'K', '', ''],\n    KeyL: ['l', 'L', '', ''],\n    KeyM: [',', '?', '', ''],\n    KeyN: ['n', 'N', '', ''],\n    KeyO: ['o', 'O', '', ''],\n    KeyP: ['p', 'P', '', ''],\n    KeyQ: ['a', 'A', '', ''],\n    KeyR: ['r', 'R', '', ''],\n    KeyS: ['s', 'S', '', ''],\n    KeyT: ['t', 'T', '', ''],\n    KeyU: ['u', 'U', '', ''],\n    KeyV: ['v', 'V', '', ''],\n    KeyW: ['z', 'Z', '', ''],\n    KeyX: ['x', 'X', '', ''],\n    KeyY: ['y', 'Y', '', ''],\n    KeyZ: ['w', 'W', '', ''],\n    Digit1: ['&', '1', '', ''],\n    Digit2: ['é', '2', '~', ''],\n    Digit3: ['\"', '3', '#', ''],\n    Digit4: [\"'\", '4', '{', ''],\n    Digit5: ['(', '5', '[', ''],\n    Digit6: ['-', '6', '|', ''],\n    Digit7: ['è', '7', '`', ''],\n    Digit8: ['_', '8', '\\\\', ''],\n    Digit9: ['ç', '9', '^', ''],\n    Digit0: ['à', '0', '@', ''],\n    Space: [' ', ' ', '', ''],\n    Minus: [')', '°', ']', ''],\n    Equal: ['=', '+', '}', ''],\n    BracketLeft: ['^', '¨', '', ''],\n    BracketRight: ['$', '£', '¤', ''],\n    Backslash: ['*', 'µ', '', ''],\n    Semicolon: ['m', 'M', '', ''],\n    Quote: ['ù', '%', '', ''],\n    Backquote: ['²', '', '', ''],\n    Comma: [';', '.', '', ''],\n    Period: [':', '/', '', ''],\n    Slash: ['!', '§', '', ''],\n    NumpadDivide: ['/', '/', '', ''],\n    NumpadMultiply: ['*', '*', '', ''],\n    NumpadSubtract: ['-', '-', '', ''],\n    NumpadAdd: ['+', '+', '', ''],\n    IntlBackslash: ['<', '>', '', '']\n  }\n});\nregister$1({\n  id: 'windows.german',\n  locale: 'de',\n  displayName: 'German',\n  platform: 'windows',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', '', ''],\n    KeyB: ['b', 'B', '', ''],\n    KeyC: ['c', 'C', '', ''],\n    KeyD: ['d', 'D', '', ''],\n    KeyE: ['e', 'E', '€', ''],\n    KeyF: ['f', 'F', '', ''],\n    KeyG: ['g', 'G', '', ''],\n    KeyH: ['h', 'H', '', ''],\n    KeyI: ['i', 'I', '', ''],\n    KeyJ: ['j', 'J', '', ''],\n    KeyK: ['k', 'K', '', ''],\n    KeyL: ['l', 'L', '', ''],\n    KeyM: ['m', 'M', 'µ', ''],\n    KeyN: ['n', 'N', '', ''],\n    KeyO: ['o', 'O', '', ''],\n    KeyP: ['p', 'P', '', ''],\n    KeyQ: ['q', 'Q', '@', ''],\n    KeyR: ['r', 'R', '', ''],\n    KeyS: ['s', 'S', '', ''],\n    KeyT: ['t', 'T', '', ''],\n    KeyU: ['u', 'U', '', ''],\n    KeyV: ['v', 'V', '', ''],\n    KeyW: ['w', 'W', '', ''],\n    KeyX: ['x', 'X', '', ''],\n    KeyY: ['z', 'Z', '', ''],\n    KeyZ: ['y', 'Y', '', ''],\n    Digit1: ['1', '!', '', ''],\n    Digit2: ['2', '\"', '²', ''],\n    Digit3: ['3', '§', '³', ''],\n    Digit4: ['4', '$', '', ''],\n    Digit5: ['5', '%', '', ''],\n    Digit6: ['6', '&', '', ''],\n    Digit7: ['7', '/', '{', ''],\n    Digit8: ['8', '(', '[', ''],\n    Digit9: ['9', ')', ']', ''],\n    Digit0: ['0', '=', '}', ''],\n    Space: [' ', ' ', '', ''],\n    Minus: ['ß', '?', '\\\\', 'ẞ'],\n    Equal: ['´', '`', '', ''],\n    BracketLeft: ['ü', 'Ü', '', ''],\n    BracketRight: ['+', '*', '~', ''],\n    Backslash: ['#', \"'\", '', ''],\n    Semicolon: ['ö', 'Ö', '', ''],\n    Quote: ['ä', 'Ä', '', ''],\n    Backquote: ['^', '°', '', ''],\n    Comma: [',', ';', '', ''],\n    Period: ['.', ':', '', ''],\n    Slash: ['-', '_', '', ''],\n    NumpadDivide: ['/', '/', '', ''],\n    NumpadMultiply: ['*', '*', '', ''],\n    NumpadSubtract: ['-', '-', '', ''],\n    NumpadAdd: ['+', '+', '', ''],\n    IntlBackslash: ['<', '>', '|', '']\n  }\n});\nregister$1({\n  id: 'apple.german',\n  locale: 'de',\n  displayName: 'German',\n  platform: 'apple',\n  score: 0,\n  mapping: {\n    KeyA: ['a', 'A', 'å', 'Å'],\n    KeyB: ['b', 'B', '∫', '‹'],\n    KeyC: ['c', 'C', 'ç', 'Ç'],\n    KeyD: ['d', 'D', '∂', '™'],\n    KeyE: ['e', 'E', '€', '‰'],\n    KeyF: ['f', 'F', 'ƒ', 'Ï'],\n    KeyG: ['g', 'G', '©', 'Ì'],\n    KeyH: ['h', 'H', 'ª', 'Ó'],\n    KeyI: ['i', 'I', '⁄', 'Û'],\n    KeyJ: ['j', 'J', 'º', 'ı'],\n    KeyK: ['k', 'K', '∆', 'ˆ'],\n    KeyL: ['l', 'L', '@', 'ﬂ'],\n    KeyM: ['m', 'M', 'µ', '˘'],\n    KeyN: ['n', 'N', '~', '›'],\n    KeyO: ['o', 'O', 'ø', 'Ø'],\n    KeyP: ['p', 'P', 'π', '∏'],\n    KeyQ: ['q', 'Q', '«', '»'],\n    KeyR: ['r', 'R', '®', '¸'],\n    KeyS: ['s', 'S', '‚', 'Í'],\n    KeyT: ['t', 'T', '†', '˝'],\n    KeyU: ['u', 'U', '¨', 'Á'],\n    KeyV: ['v', 'V', '√', '◊'],\n    KeyW: ['w', 'W', '∑', '„'],\n    KeyX: ['x', 'X', '≈', 'Ù'],\n    KeyY: ['z', 'Z', 'Ω', 'ˇ'],\n    KeyZ: ['y', 'Y', '¥', '‡'],\n    Digit1: ['1', '!', '¡', '¬'],\n    Digit2: ['2', '\"', '“', '”'],\n    Digit3: ['3', '§', '¶', '#'],\n    Digit4: ['4', '$', '¢', '£'],\n    Digit5: ['5', '%', '[', 'ﬁ'],\n    Digit6: ['6', '&', ']', '^'],\n    Digit7: ['7', '/', '|', '\\\\'],\n    Digit8: ['8', '(', '{', '˜'],\n    Digit9: ['9', ')', '}', '·'],\n    Digit0: ['0', '=', '≠', '¯'],\n    Space: [' ', ' ', ' ', ' '],\n    Minus: ['ß', '?', '¿', '˙'],\n    Equal: ['´', '`', \"'\", '˚'],\n    BracketLeft: ['ü', 'Ü', '•', '°'],\n    BracketRight: ['+', '*', '±', ''],\n    Backslash: ['#', \"'\", '‘', '’'],\n    Semicolon: ['ö', 'Ö', 'œ', 'Œ'],\n    Quote: ['ä', 'Ä', 'æ', 'Æ'],\n    Backquote: ['<', '>', '≤', '≥'],\n    Comma: [',', ';', '∞', '˛'],\n    Period: ['.', ':', '…', '÷'],\n    Slash: ['-', '_', '–', '—'],\n    NumpadDivide: ['/', '/', '/', '/'],\n    NumpadMultiply: ['*', '*', '*', '*'],\n    NumpadSubtract: ['-', '-', '-', '-'],\n    NumpadAdd: ['+', '+', '+', '+'],\n    NumpadDecimal: [',', ',', '.', '.'],\n    IntlBackslash: ['^', '°', '„', '“'],\n    NumpadEqual: ['=', '=', '=', '=']\n  }\n});\nconst DEFAULT_KEYBINDINGS = [{\n  key: 'ctrl+alt+e',\n  command: ['insert', '\\\\text{cmd+alt+e}']\n}, {\n  key: 'cmd+alt+a',\n  command: ['insert', '\\\\text{cmd+alt+a}']\n}, {\n  key: 'ctrl+alt+a',\n  command: ['insert', '\\\\text{ctrl+alt+a}']\n}, {\n  key: 'meta+alt+2',\n  command: ['insert', '\\\\text{meta+alt+2}']\n}, {\n  key: 'ctrl+alt+shift+a',\n  command: ['insert', '\\\\text{ctrl+alt+shift+a}']\n}, // { key: 'meta+alt+@', command: ['insert', '\\\\text{cmd+alt+@}'] },\n{\n  key: 'left',\n  command: 'moveToPreviousChar'\n}, {\n  key: 'right',\n  command: 'moveToNextChar'\n}, {\n  key: 'up',\n  command: 'moveUp'\n}, {\n  key: 'down',\n  command: 'moveDown'\n}, {\n  key: 'shift+[ArrowLeft]',\n  command: 'extendToPreviousChar'\n}, {\n  key: 'shift+[ArrowRight]',\n  command: 'extendToNextChar'\n}, {\n  key: 'shift+[ArrowUp]',\n  command: 'extendUp'\n}, {\n  key: 'shift+[ArrowDown]',\n  command: 'extendDown'\n}, {\n  key: '[Backspace]',\n  command: 'deletePreviousChar'\n}, {\n  key: 'alt+[Delete]',\n  command: 'deletePreviousChar'\n}, {\n  key: '[Delete]',\n  command: 'deleteNextChar'\n}, {\n  key: 'alt+[Backspace]',\n  command: 'deleteNextChar'\n}, {\n  key: 'alt+[ArrowLeft]',\n  command: 'moveToPreviousWord'\n}, {\n  key: 'alt+[ArrowRight]',\n  command: 'moveToNextWord'\n}, {\n  key: 'alt+shift+[ArrowLeft]',\n  command: 'extendToPreviousWord'\n}, {\n  key: 'alt+shift+[ArrowRight]',\n  command: 'extendToNextWord'\n}, {\n  key: 'ctrl+[ArrowLeft]',\n  command: 'moveToGroupStart'\n}, {\n  key: 'ctrl+[ArrowRight]',\n  command: 'moveToGroupEnd'\n}, {\n  key: 'ctrl+shift+[ArrowLeft]',\n  command: 'extendToGroupStart'\n}, {\n  key: 'ctrl+shift+[ArrowRight]',\n  command: 'extendToGroupEnd'\n}, {\n  key: '[Space]',\n  ifMode: 'math',\n  command: 'moveAfterParent'\n}, {\n  key: 'shift+[Space]',\n  ifMode: 'math',\n  command: 'moveBeforeParent'\n}, {\n  key: '[Home]',\n  command: 'moveToMathFieldStart'\n}, {\n  key: 'cmd+[ArrowLeft]',\n  command: 'moveToMathFieldStart'\n}, {\n  key: 'shift+[Home]',\n  command: 'extendToMathFieldStart'\n}, {\n  key: 'cmd+shift+[ArrowLeft]',\n  command: 'extendToMathFieldStart'\n}, {\n  key: '[End]',\n  command: 'moveToMathFieldEnd'\n}, {\n  key: 'cmd+[ArrowRight]',\n  command: 'moveToMathFieldEnd'\n}, {\n  key: 'shift+[End]',\n  command: 'extendToMathFieldEnd'\n}, {\n  key: 'cmd+shift+[ArrowRight]',\n  command: 'extendToMathFieldEnd'\n}, {\n  key: '[Pageup]',\n  command: 'moveToGroupStart'\n}, {\n  key: '[Pagedown]',\n  command: 'moveToGroupEnd'\n}, {\n  key: '[Tab]',\n  ifMode: 'math',\n  command: 'moveToNextPlaceholder'\n}, {\n  key: 'shift+[Tab]',\n  ifMode: 'math',\n  command: 'moveToPreviousPlaceholder'\n}, {\n  key: '[Tab]',\n  ifMode: 'text',\n  command: 'moveToNextPlaceholder'\n}, {\n  key: 'shift+[Tab]',\n  ifMode: 'text',\n  command: 'moveToPreviousPlaceholder'\n}, {\n  key: '[Escape]',\n  ifMode: 'math',\n  command: ['switchMode', 'command']\n}, {\n  key: '\\\\',\n  ifMode: 'math',\n  command: ['switchMode', 'command']\n}, {\n  key: 'alt+[Equal]',\n  ifMode: 'math',\n  command: ['applyStyle', {\n    mode: 'text'\n  }]\n}, {\n  key: 'alt+[Equal]',\n  ifMode: 'text',\n  command: ['applyStyle', {\n    mode: 'math'\n  }]\n}, {\n  key: '[Escape]',\n  ifMode: 'command',\n  command: ['complete', {\n    discard: true\n  }]\n}, {\n  key: '[Tab]',\n  ifMode: 'command',\n  command: ['complete', {\n    acceptSuggestion: true\n  }]\n}, {\n  key: '[Return]',\n  ifMode: 'command',\n  command: 'complete'\n}, {\n  key: '[Enter]',\n  ifMode: 'command',\n  command: 'complete'\n}, {\n  key: 'shift+[Escape]',\n  ifMode: 'command',\n  command: ['complete', {\n    discard: true\n  }]\n}, // this combination, for example in 60% keyboards it is mapped to ~\n{\n  key: '[ArrowDown]',\n  ifMode: 'command',\n  command: 'nextSuggestion'\n}, // { key: 'ios:command:[Tab]', ifMode: 'command',command: 'nextSuggestion' },\n{\n  key: '[ArrowUp]',\n  ifMode: 'command',\n  command: 'previousSuggestion'\n}, {\n  key: 'ctrl+a',\n  ifPlatform: '!macos',\n  command: 'selectAll'\n}, {\n  key: 'cmd+a',\n  command: 'selectAll'\n}, // Rare keys on some extended keyboards\n{\n  key: '[Cut]',\n  command: 'cutToClipboard'\n}, {\n  key: '[Copy]',\n  command: 'copyToClipboard'\n}, {\n  key: '[Paste]',\n  command: 'pasteFromClipboard'\n}, {\n  key: '[Clear]',\n  command: 'deletePreviousChar'\n}, {\n  key: 'ctrl+z',\n  ifPlatform: '!macos',\n  command: 'undo'\n}, {\n  key: 'cmd+z',\n  command: 'undo'\n}, {\n  key: '[Undo]',\n  command: 'undo'\n}, {\n  key: 'ctrl+y',\n  ifPlatform: '!macos',\n  command: 'redo'\n}, {\n  key: 'cmd+shift+y',\n  command: 'redo'\n}, {\n  key: 'ctrl+shift+z',\n  ifPlatform: '!macos',\n  command: 'redo'\n}, {\n  key: 'cmd+shift+z',\n  command: 'redo'\n}, {\n  key: '[Redo]',\n  command: 'redo'\n}, {\n  key: '[EraseEof]',\n  command: 'deleteToGroupEnd'\n}, // EMACS/MACOS BINDINGS\n{\n  key: 'ctrl+b',\n  ifPlatform: 'macos',\n  command: 'moveToPreviousChar'\n}, {\n  key: 'ctrl+f',\n  ifPlatform: 'macos',\n  command: 'moveToNextChar'\n}, {\n  key: 'ctrl+p',\n  ifPlatform: 'macos',\n  command: 'moveUp'\n}, {\n  key: 'ctrl+n',\n  ifPlatform: 'macos',\n  command: 'moveDown'\n}, {\n  key: 'ctrl+a',\n  ifPlatform: 'macos',\n  command: 'moveToMathFieldStart'\n}, {\n  key: 'ctrl+e',\n  ifPlatform: 'macos',\n  command: 'moveToMathFieldEnd'\n}, {\n  key: 'ctrl+shift+b',\n  ifPlatform: 'macos',\n  command: 'extendToPreviousChar'\n}, {\n  key: 'ctrl+shift+f',\n  ifPlatform: 'macos',\n  command: 'extendToNextChar'\n}, {\n  key: 'ctrl+shift+p',\n  ifPlatform: 'macos',\n  command: 'extendUp'\n}, {\n  key: 'ctrl+shift+n',\n  ifPlatform: 'macos',\n  command: 'extendDown'\n}, {\n  key: 'ctrl+shift+a',\n  ifPlatform: 'macos',\n  command: 'extendToMathFieldStart'\n}, {\n  key: 'ctrl+shift+e',\n  ifPlatform: 'macos',\n  command: 'extendToMathFieldEnd'\n}, {\n  key: 'ctrl+alt+b',\n  ifPlatform: 'macos',\n  command: 'moveToPreviousWord'\n}, {\n  key: 'ctrl+alt+f',\n  ifPlatform: 'macos',\n  command: 'moveToNextWord'\n}, {\n  key: 'ctrl+shift+alt+b',\n  ifPlatform: 'macos',\n  command: 'extendToPreviousWord'\n}, {\n  key: 'ctrl+shift+alt+f',\n  ifPlatform: 'macos',\n  command: 'extendToNextWord'\n}, {\n  key: 'ctrl+h',\n  ifPlatform: 'macos',\n  command: 'deletePreviousChar'\n}, {\n  key: 'ctrl+d',\n  ifPlatform: 'macos',\n  command: 'deleteNextChar'\n}, {\n  key: 'ctrl+l',\n  ifPlatform: 'macos',\n  command: 'scrollIntoView'\n}, // { key: 'ctrl+t', ifPlatform: 'macos', command: 'transpose' },\n{\n  key: 'shift+[Quote]',\n  ifMode: 'math',\n  command: ['switchMode', 'text', '', '“']\n}, {\n  key: 'shift+[Quote]',\n  ifMode: 'text',\n  command: ['switchMode', 'math', '”', '']\n}, // WOLFRAM MATHEMATICA BINDINGS\n{\n  key: 'ctrl+[Digit2]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\sqrt{#0}$$']\n}, {\n  key: 'ctrl+[Digit5]',\n  ifMode: 'math',\n  command: 'moveToOpposite'\n}, {\n  key: 'ctrl+[Digit6]',\n  ifMode: 'math',\n  command: 'moveToSuperscript'\n}, {\n  key: 'ctrl+[Minus]',\n  ifMode: 'math',\n  command: 'moveToSubscript'\n}, {\n  key: 'alt+[BracketLeft]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\left\\\\lbrack #0 \\\\right\\\\rbrack$$']\n}, {\n  key: 'alt+shift+[BracketLeft]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\left\\\\lbrace #0 \\\\right\\\\rbrace$$']\n}, {\n  key: 'ctrl+[Return]',\n  ifMode: 'math',\n  command: 'addRowAfter'\n}, {\n  key: 'ctrl+[Enter]',\n  ifMode: 'math',\n  command: 'addRowAfter'\n}, {\n  key: 'cmd+[Return]',\n  ifMode: 'math',\n  command: 'addRowAfter'\n}, {\n  key: 'cmd+[Enter]',\n  ifMode: 'math',\n  command: 'addRowAfter'\n}, {\n  key: 'ctrl+;',\n  ifMode: 'math',\n  command: 'addRowAfter'\n}, {\n  key: 'cmd+;',\n  ifMode: 'math',\n  command: 'addRowAfter'\n}, {\n  key: 'ctrl+shift+;',\n  ifMode: 'math',\n  command: 'addRowBefore'\n}, {\n  key: 'cmd+shift+;',\n  ifMode: 'math',\n  command: 'addRowBefore'\n}, {\n  key: 'ctrl+[Comma]',\n  ifMode: 'math',\n  command: 'addColumnAfter'\n}, {\n  key: 'cmd+[Comma]',\n  ifMode: 'math',\n  command: 'addColumnAfter'\n}, {\n  key: 'ctrl+shift+[Comma]',\n  ifMode: 'math',\n  command: 'addColumnAfter'\n}, {\n  key: 'cmd+shift+[Comma]',\n  ifMode: 'math',\n  command: 'addColumnAfter'\n}, // Excel keybindings:\n// shift+space: select entire row, ctrl+space: select an entire column\n// ctrl+shift++ or ctrl+numpad+\n// ctrl+- to delete a row or columns\n// MATHLIVE BINDINGS\n// { key: 'alt+a', command: ['insert', '$$\\\\theta$$'] },\n{\n  key: 'alt+p',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\pi$$']\n}, {\n  key: 'alt+v',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\sqrt{#0}$$']\n}, {\n  key: 'alt+w',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\sum_{i=#?}^{#?}$$']\n}, // { key: 'alt+b', command: ['insert', '$$\\\\int_{#?}^{#?}$$'] },\n{\n  key: 'alt+u',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\cup$$']\n}, {\n  key: 'alt+n',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\cap$$']\n}, {\n  key: 'alt+o',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\emptyset$$']\n}, {\n  key: 'alt+d',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\differentialD$$']\n}, {\n  key: 'alt+shift+o',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\varnothing$$']\n}, {\n  key: 'alt+shift+d',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\partial$$']\n}, {\n  key: 'alt+shift+p',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\prod_{i=#?}^{#?}$$']\n}, {\n  key: 'alt+shift+u',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\bigcup$$']\n}, {\n  key: 'alt+shift+n',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\bigcap$$']\n}, {\n  key: 'alt+shift+a',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\forall$$']\n}, {\n  key: 'alt+shift+e',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\exists$$']\n}, {\n  key: 'alt+[Digit5]',\n  ifMode: 'math',\n  command: ['insert', '$\\\\infty$$']\n}, {\n  key: 'alt+[Digit6]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\wedge$$']\n}, {\n  key: 'alt+shift+[Digit6]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\vee$$']\n}, {\n  key: 'alt+[Digit9]',\n  ifMode: 'math',\n  command: ['insert', '(']\n}, {\n  key: 'alt+[Digit0]',\n  ifMode: 'math',\n  command: ['insert', ')']\n}, {\n  key: 'alt+shift+[Backslash]',\n  ifMode: 'math',\n  command: ['insert', '|']\n}, {\n  key: 'alt+[Backslash]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\backslash$$']\n}, {\n  key: '/',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\frac{#@}{#?}$$']\n}, {\n  key: 'alt+/',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\/$$']\n}, {\n  key: '[NumpadDivide]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\frac{#@}{#?}$$']\n}, {\n  key: 'alt+[NumpadDivide]',\n  ifMode: 'math',\n  command: ['insert', '\\\\frac{#?}{#@}']\n}, {\n  key: 'shift+[Backquote]',\n  ifMode: 'math',\n  command: ['insert', '$$\\\\~$$']\n}, // Accessibility\n{\n  key: 'alt+shift+k',\n  command: 'toggleKeystrokeCaption'\n}, {\n  key: 'alt+[Space]',\n  command: 'toggleVirtualKeyboard'\n}, // Note: On Mac OS (as of 10.12), there is a bug/behavior that causes\n// a beep to be generated with certain command+control key combinations.\n// The workaround is to create a default binding file to silence them.\n// In ~/Library/KeyBindings/DefaultKeyBinding.dict add these entries:\n\n/*\r\n {\r\n    \"^@\\UF701\" = \"noop:\";\r\n    \"^@\\UF702\" = \"noop:\";\r\n    \"^@\\UF703\" = \"noop:\";\r\n}\r\n*/\n{\n  key: 'ctrl+alt+[ArrowUp]',\n  command: ['speak', 'parent', {\n    withHighlighting: false\n  }]\n}, {\n  key: 'ctrl+alt+[ArrowDown]',\n  command: ['speak', 'all', {\n    withHighlighting: false\n  }]\n}];\n/**\r\n * Most commands can be associated to their keyboard shortcuts from the\r\n * DEFAULT_KEYBINDINGS table above, for example 'speakSelection' -> 'ctrl+KeyR'\r\n * However, those that contain complex commands are more ambiguous.\r\n * For example, '\\sqrt' -> 'math:alt+KeyV'. This table provides the reverse\r\n * mapping for those more complex commands. It is used when displaying\r\n * keybindings for specific commands in the popover.\r\n */\n\nconst REVERSE_KEYBINDINGS = {\n  '\\\\theta': 'alt+q',\n  '\\\\sqrt': ['alt+v', 'ctrl+[Digit2]'],\n  '\\\\pi': 'alt+p',\n  '\\\\prod': 'alt+shift+p',\n  '\\\\sum': 'alt+w',\n  '\\\\int': 'alt+b',\n  '\\\\cup': 'alt+u',\n  '\\\\cap': 'alt+n',\n  '\\\\bigcup': 'alt+shift+u',\n  '\\\\bigcap': 'alt+shift+n',\n  '\\\\forall': 'alt+shift+a',\n  '\\\\exists': 'alt+shift+e',\n  '\\\\infty': 'alt+[Digit5]',\n  '\\\\wedge': 'alt+[Digit5]',\n  '\\\\vee': 'alt+shift+[Digit6]',\n  '\\\\differentialD': 'alt+d',\n  '\\\\partial': 'alt+shift+d',\n  '\\\\frac': 'Slash',\n  '\\\\emptyset': 'alt+o',\n  '\\\\varnothing': 'alt+shift+o',\n  '\\\\~': '~'\n};\n/**\r\n * @param p The platform to test against.\r\n */\n\nfunction matchPlatform(p) {\n  if ((navigator === null || navigator === void 0 ? void 0 : navigator.platform) && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\n    let plat;\n\n    if (/^(mac)/i.test(navigator.platform)) {\n      plat = 'macos';\n    } else if (/^(win)/i.test(navigator.platform)) {\n      plat = 'windows';\n    } else if (/(android)/i.test(navigator.userAgent)) {\n      plat = 'android';\n    } else if (/(iphone)/i.test(navigator.userAgent) || /(ipod)/i.test(navigator.userAgent) || /(ipad)/i.test(navigator.userAgent)) {\n      plat = 'ios';\n    } else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\n      plat = 'chromeos';\n    }\n\n    if (p.startsWith('!') && !p.endsWith(plat)) return true;\n    if (p.endsWith(plat)) return true;\n  }\n\n  return false;\n}\n/**\r\n * Return the selector matching the keystroke.\r\n * The keybindings and keystroke should be in normalized form\r\n * (i.e. using key code, e.g. `[KeyQ]`\r\n *\r\n */\n\n\nfunction getCommandForKeybinding(keybindings, mode, keystroke) {\n  if (keybindings.length === 0) return ''; // Try to match using a virtual keystroke\n\n  for (let i = keybindings.length - 1; i >= 0; i--) {\n    if (keybindings[i].key === keystroke) {\n      if (!keybindings[i].ifMode || keybindings[i].ifMode === mode) {\n        return keybindings[i].command;\n      }\n    }\n  }\n\n  return '';\n}\n\nfunction commandToString(command) {\n  let result = command;\n\n  if (isArray(result)) {\n    if (result.length > 0) {\n      result = result[0] + '(' + result.slice(1).join('') + ')';\n    } else {\n      result = '';\n    }\n  }\n\n  return result;\n}\n\nfunction getKeybindingsForCommand(keybindings, command) {\n  let result = [];\n\n  if (typeof command === 'string') {\n    const candidate = REVERSE_KEYBINDINGS[command];\n\n    if (isArray(candidate)) {\n      result = candidate.slice();\n    } else if (candidate) {\n      result.push(candidate);\n    }\n  } // A command can be either a simple selector, or a selector\n  // with arguments. Normalize it to a string\n\n\n  const normalizedCommand = commandToString(command);\n  const regex = new RegExp('^' + normalizedCommand.replace('\\\\', '\\\\\\\\').replace('|', '\\\\|').replace('*', '\\\\*').replace('$', '\\\\$').replace('^', '\\\\^') + '([^*a-zA-Z]|$)');\n  keybindings.forEach(keybinding => {\n    if (regex.test(commandToString(keybinding.command))) {\n      result.push(keybinding);\n    }\n  });\n  return result.map(getKeybindingMarkup);\n}\n/**\r\n * Return a human readable representation of a shortcut as a markup string\r\n * @revisit\r\n */\n\n\nfunction getKeybindingMarkup(keystroke) {\n  var _a;\n\n  const useSymbol = matchPlatform('macos') || matchPlatform('ios');\n  const segments = keystroke.split('+');\n  let result = '';\n\n  var _iterator36 = _createForOfIteratorHelper(segments),\n      _step36;\n\n  try {\n    for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n      const segment = _step36.value;\n\n      if (!useSymbol && result) {\n        result += '<span class=\"ML__shortcut-join\">+</span>';\n      }\n\n      if (segment.startsWith('Key')) {\n        result += segment.substr(3, 1);\n      } else if (segment.startsWith('Digit')) {\n        result += segment.substr(5, 1);\n      } else {\n        result += (_a = {\n          cmd: '\\u2318',\n          meta: useSymbol ? '\\u2318' : 'command',\n          shift: useSymbol ? '\\u21e7' : 'shift',\n          alt: useSymbol ? '\\u2325' : 'alt',\n          ctrl: useSymbol ? '\\u2303' : 'control',\n          '\\n': useSymbol ? '\\u23ce' : 'return',\n          '[return]': useSymbol ? '\\u23ce' : 'return',\n          '[enter]': useSymbol ? '\\u2324' : 'enter',\n          '[tab]': useSymbol ? '\\u21e5' : 'tab',\n          // 'Esc':          useSymbol ? '\\u238b' : 'esc',\n          '[escape]': 'esc',\n          '[backspace]': useSymbol ? '\\u232b' : 'backspace',\n          '[delete]': useSymbol ? '\\u2326' : 'del',\n          '[pageup]': useSymbol ? '\\u21de' : 'page up',\n          '[pagedown]': useSymbol ? '\\u21df' : 'page down',\n          '[home]': useSymbol ? '\\u2912' : 'home',\n          '[end]': useSymbol ? '\\u2913' : 'end',\n          '[space]': 'space',\n          '[equal]': '=',\n          '[minus]': '-',\n          '[comma]': ',',\n          '[backslash]': '\\\\',\n          '[bracketleft]': '[',\n          '[bracketright]': ']',\n          semicolon: ';',\n          period: '.',\n          comma: ',',\n          minus: '-',\n          equal: '=',\n          quote: \"'\",\n          bracketLeft: '[',\n          bracketRight: ']',\n          backslash: '\\\\',\n          intlbackslash: '\\\\',\n          backquote: '`',\n          slash: '/',\n          numpadmultiply: '* &#128290;',\n          numpaddivide: '/ &#128290;',\n          numpadsubtract: '- &#128290;',\n          numpadadd: '+ &#128290;',\n          numpaddecimal: '. &#128290;',\n          numpadcomma: ', &#128290;',\n          help: 'help',\n          left: '\\u21E0',\n          up: '\\u21E1',\n          right: '\\u21E2',\n          down: '\\u21E3',\n          '[arrowleft]': '\\u21E0',\n          '[arrowup]': '\\u21E1',\n          '[arrowright]': '\\u21E2',\n          '[arrowdown]': '\\u21E3',\n          '[digit0]': '0',\n          '[digit1]': '1',\n          '[digit2]': '2',\n          '[digit3]': '3',\n          '[digit4]': '4',\n          '[digit5]': '5',\n          '[digit6]': '6',\n          '[digit7]': '7',\n          '[digit8]': '8',\n          '[digit9]': '9'\n        }[segment.toLowerCase()]) !== null && _a !== void 0 ? _a : segment.toUpperCase();\n      }\n    }\n  } catch (err) {\n    _iterator36.e(err);\n  } finally {\n    _iterator36.f();\n  }\n\n  return result;\n}\n\nfunction normalizeKeybinding(keybinding) {\n  if (keybinding.ifPlatform && !/^!?(macos|windows|android|ios|chromeos|other)$/.test(keybinding.ifPlatform)) {\n    throw new Error(\"Unexpected platform \\\"\".concat(keybinding.ifPlatform, \"\\\" for keybinding \").concat(keybinding.key));\n  }\n\n  let segments = keybinding.key.split('+');\n  const key = segments.pop();\n  let platform = keybinding.ifPlatform;\n  segments = segments.map(segment => {\n    const x = segment.toLowerCase();\n\n    if (x === 'cmd') {\n      if (platform && platform !== 'macos' && platform !== 'ios') {\n        throw new Error('Unexpected \"cmd\" modifier with platform \"' + platform + '\"');\n      }\n\n      if (!platform) {\n        platform = matchPlatform('ios') ? 'ios' : 'macos';\n      }\n\n      return 'meta';\n    } else if (x === 'win') {\n      if (platform && platform !== 'windows') {\n        throw new Error('Unexpected \"win\" modifier with platform \"' + platform + '\"');\n      }\n\n      platform = 'windows';\n      return 'meta';\n    }\n\n    return x;\n  });\n  if (platform && !matchPlatform(platform)) return undefined;\n\n  if (!/^\\[(.*)\\]$/.test(key)) {\n    // This is not a key code (e.g. `[KeyQ]`) it's a simple key (e.g. `a`)\n    // Convert it to a key code\n    const code = getCodeForKey(key);\n\n    if (!code) {\n      throw new Error('Invalid keybinding key \"' + keybinding.key + '\"');\n    }\n\n    segments = segments.concat(code.split('+'));\n  } else {\n    segments.push(key);\n  }\n\n  return _objectSpread(_objectSpread({}, keybinding), {}, {\n    ifPlatform: platform,\n    key: segments.join('+')\n  });\n}\n/**\r\n * Parse the input keybindings and return them normalized:\r\n * - 'keys' are transformed to 'code' according to the current keyboard layout\r\n * - keybindings that don't apply to the current platform are removed\r\n */\n\n\nfunction normalizeKeybindings(keybindings, onError) {\n  const result = [];\n  const errors = [];\n  keybindings.forEach(x => {\n    try {\n      const keybinding = normalizeKeybinding(x);\n\n      if (keybinding) {\n        result.push(keybinding);\n      }\n    } catch (e) {\n      errors.push(e.message);\n    }\n  });\n\n  if (errors.length > 0) {\n    onError(errors);\n  }\n\n  return result;\n}\n\nfunction on(el, inSelectors, listener, options) {\n  const selectors = inSelectors.split(' ');\n\n  var _iterator37 = _createForOfIteratorHelper(selectors),\n      _step37;\n\n  try {\n    for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n      const sel = _step37.value;\n      const m = sel.match(/(.*):(.*)/);\n\n      if (m) {\n        const options2 = options !== null && options !== void 0 ? options : {};\n\n        if (m[2] === 'active') {\n          options2.passive = false;\n        } else {\n          options2[m[2]] = true;\n        }\n\n        el.addEventListener(m[1], listener, options2);\n      } else {\n        el.addEventListener(sel, listener, options);\n      }\n    }\n  } catch (err) {\n    _iterator37.e(err);\n  } finally {\n    _iterator37.f();\n  }\n}\n\nfunction off(el, inSelectors, listener, options) {\n  const selectors = inSelectors.split(' ');\n\n  var _iterator38 = _createForOfIteratorHelper(selectors),\n      _step38;\n\n  try {\n    for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n      const sel = _step38.value;\n      const m = sel.match(/(.*):(.*)/);\n\n      if (m) {\n        const options2 = options !== null && options !== void 0 ? options : {};\n\n        if (m[2] === 'active') {\n          options2.passive = false;\n        } else {\n          options2[m[2]] = true;\n        }\n\n        el.removeEventListener(m[1], listener, options2);\n      } else {\n        el.removeEventListener(sel, listener, options);\n      }\n    }\n  } catch (err) {\n    _iterator38.e(err);\n  } finally {\n    _iterator38.f();\n  }\n}\n\nfunction getSharedElement(id, cls) {\n  let result = document.getElementById(id);\n\n  if (result) {\n    result.setAttribute('data-refcount', Number(parseInt(result.getAttribute('data-refcount')) + 1).toString());\n  } else {\n    result = document.createElement('div');\n    result.setAttribute('aria-hidden', 'true');\n    result.setAttribute('data-refcount', '1');\n    result.className = cls;\n    result.id = id;\n    document.body.appendChild(result);\n  }\n\n  return result;\n} // @revisit: check the elements are correctly released\n\n\nfunction releaseSharedElement(el) {\n  if (!el) return;\n  const refcount = parseInt(el.getAttribute('data-refcount'));\n\n  if (refcount <= 1) {\n    el.remove();\n  } else {\n    el.setAttribute('data-refcount', Number(refcount - 1).toString());\n  }\n}\n/**\r\n * Checks if the argument is a valid Mathfield.\r\n * After a Mathfield has been destroyed (for example by calling `dispose()`\r\n * the Mathfield is no longer valid. However, there may be some pending\r\n * operations invoked via requestAnimationFrame() for example, that would\r\n * need to ensure the mathfield is still valid by the time they're executed.\r\n */\n\n\nfunction isValidMathfield(mf) {\n  return mf.element && mf.element['mathfield'] === mf;\n}\n/**\r\n * Return the element which has the caret\r\n */\n\n\nfunction findElementWithCaret(el) {\n  var _a, _b;\n\n  return (_b = (_a = el.querySelector('.ML__caret')) !== null && _a !== void 0 ? _a : el.querySelector('.ML__text-caret')) !== null && _b !== void 0 ? _b : el.querySelector('.ML__command-carett');\n}\n/**\r\n * Return the (x,y) client coordinates of the caret\r\n */\n\n\nfunction getCaretPoint(el) {\n  const caret = findElementWithCaret(el);\n\n  if (caret) {\n    const bounds = caret.getBoundingClientRect();\n    const position = {\n      x: bounds.right,\n      y: bounds.bottom,\n      height: bounds.height\n    };\n    return position;\n  }\n\n  return null;\n}\n\nfunction getSelectionBounds(field) {\n  const selectedNodes = field.querySelectorAll('.ML__selected');\n\n  if (selectedNodes && selectedNodes.length > 0) {\n    const selectionRect = {\n      top: Infinity,\n      bottom: -Infinity,\n      left: Infinity,\n      right: -Infinity\n    }; // Calculate the union of the bounds of all the selected spans\n\n    selectedNodes.forEach(node => {\n      const bounds = node.getBoundingClientRect();\n\n      if (bounds.left < selectionRect.left) {\n        selectionRect.left = bounds.left;\n      }\n\n      if (bounds.right > selectionRect.right) {\n        selectionRect.right = bounds.right;\n      }\n\n      if (bounds.bottom > selectionRect.bottom) {\n        selectionRect.bottom = bounds.bottom;\n      }\n\n      if (bounds.top < selectionRect.top) {\n        selectionRect.top = bounds.top;\n      }\n    });\n    const fieldRect = field.getBoundingClientRect();\n    const w = selectionRect.right - selectionRect.left;\n    const h = selectionRect.bottom - selectionRect.top;\n    selectionRect.left = Math.ceil(selectionRect.left - fieldRect.left + field.scrollLeft);\n    selectionRect.right = selectionRect.left + w;\n    selectionRect.top = Math.ceil(selectionRect.top - fieldRect.top);\n    selectionRect.bottom = selectionRect.top + h;\n    return selectionRect;\n  }\n\n  return null;\n}\n/**\r\n * Attach event handlers to an element so that it will react by executing\r\n * a command when pressed.\r\n * `\"command\"` can be:\r\n * - a string, a single selector\r\n * - an array, whose first element is a selector followed by one or more arguments.\r\n * - an object, with the following keys:\r\n *    * 'default': command performed on up, with a down + up sequence with no\r\n *      delay between down and up\r\n *    * 'alt', 'shift', 'altshift' keys: command performed on up with\r\n *      one of these modifiers pressed\r\n *    * 'pressed': command performed on 'down'\r\n *    * 'pressAndHoldStart': command performed after a tap/down followed by a\r\n * delay (optional)\r\n *    * 'pressAndHoldEnd': command performed on up, if there was a delay\r\n *     between down and up, if absent, 'default' is performed\r\n * The value of the keys specify which selector (string\r\n * or array) to perform depending on the keyboard state when the button is\r\n * pressed.\r\n *\r\n * The 'pressed' and 'active' classes will get added to\r\n * the element, as the :hover and :active pseudo-classes are not reliable\r\n * (at least on Chrome Android).\r\n *\r\n */\n\n\nfunction attachButtonHandlers(mathfield, el, command) {\n  if (typeof command === 'object' && (command.default || command.pressed)) {\n    // Attach the default (no modifiers pressed) command to the element\n    if (command.default) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command', JSON.stringify(command.default));\n    }\n\n    if (command.alt) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command-alt', JSON.stringify(command.alt));\n    }\n\n    if (command.altshift) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command-altshift', JSON.stringify(command.altshift));\n    }\n\n    if (command.shift) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command-shift', JSON.stringify(command.shift));\n    } // .pressed: command to perform when the button is pressed (i.e.\n    // on mouse down/touch). Otherwise the command is performed when\n    // the button is released\n\n\n    if (command.pressed) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command-pressed', JSON.stringify(command.pressed));\n    }\n\n    if (command.pressAndHoldStart) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command-pressAndHoldStart', JSON.stringify(command.pressAndHoldStart));\n    }\n\n    if (command.pressAndHoldEnd) {\n      el.setAttribute('data-' + mathfield.options.namespace + 'command-pressAndHoldEnd', JSON.stringify(command.pressAndHoldEnd));\n    }\n  } else {\n    // We need to turn the command into a string to attach it to the dataset\n    // associated with the button (the command could be an array made of a\n    // selector and one or more parameters)\n    el.setAttribute('data-' + mathfield.options.namespace + 'command', JSON.stringify(command));\n  }\n\n  let pressHoldStart;\n  let pressHoldElement;\n  let touchID;\n  let syntheticTarget; // Target while touch move\n\n  let pressAndHoldTimer;\n  on(el, 'mousedown touchstart:passive', ev => {\n    if (ev.type !== 'mousedown' || ev.buttons === 1) {\n      // The primary button was pressed or the screen was tapped.\n      ev.stopPropagation(); // Can't preventDefault() in a passive listener\n\n      if (ev.type !== 'touchstart') {\n        ev.preventDefault();\n      }\n\n      el.classList.add('pressed');\n      pressHoldStart = Date.now(); // Record the ID of the primary touch point for tracking on touchmove\n\n      if (ev.type === 'touchstart') {\n        touchID = ev.changedTouches[0].identifier;\n      } // Parse the JSON to get the command (and its optional arguments)\n      // and perform it immediately\n\n\n      const command = el.getAttribute('data-' + mathfield.options.namespace + 'command-pressed');\n\n      if (command) {\n        mathfield.executeCommand(JSON.parse(command));\n      } // If there is a `press and hold start` command, perform it\n      // after a delay, if we're still pressed by then.\n\n\n      const pressAndHoldStartCommand = el.getAttribute('data-' + mathfield.options.namespace + 'command-pressAndHoldStart');\n\n      if (pressAndHoldStartCommand) {\n        pressHoldElement = el;\n\n        if (pressAndHoldTimer) {\n          clearTimeout(pressAndHoldTimer);\n        }\n\n        pressAndHoldTimer = window.setTimeout(function () {\n          if (el.classList.contains('pressed')) {\n            mathfield.executeCommand(JSON.parse(pressAndHoldStartCommand));\n          }\n        }, 300);\n      }\n    }\n  });\n  on(el, 'mouseleave touchcancel', () => {\n    el.classList.remove('pressed'); // let command = el.getAttribute('data-' + mathfield.config.namespace +\n    //     'command-pressAndHoldEnd');\n    // const now = Date.now();\n    // if (command && now > pressHoldStart + 300) {\n    //     mathfield.executeCommand(JSON.parse(command));\n    // }\n  });\n  on(el, 'touchmove:passive', ev => {\n    // Unlike with mouse tracking, touch tracking only sends events\n    // to the target that was originally tapped on. For consistency,\n    // we want to mimic the behavior of the mouse interaction by\n    // tracking the touch events and dispatching them to potential targets\n    // ev.preventDefault(); // can't preventDefault inside a passive event handler\n    for (let i = 0; i < ev.changedTouches.length; i++) {\n      if (ev.changedTouches[i].identifier === touchID) {\n        // Found a touch matching our primary/tracked touch\n        const target = document.elementFromPoint(ev.changedTouches[i].clientX, ev.changedTouches[i].clientY);\n\n        if (target !== syntheticTarget && syntheticTarget) {\n          syntheticTarget.dispatchEvent(new MouseEvent('mouseleave'), {\n            bubbles: true\n          });\n          syntheticTarget = null;\n        }\n\n        if (target) {\n          syntheticTarget = target;\n          target.dispatchEvent(new MouseEvent('mouseenter', {\n            bubbles: true,\n            buttons: 1\n          }));\n        }\n      }\n    }\n  });\n  on(el, 'mouseenter', ev => {\n    if (ev.buttons === 1) {\n      el.classList.add('pressed');\n    }\n  });\n  on(el, 'mouseup touchend click', ev => {\n    if (syntheticTarget) {\n      ev.stopPropagation();\n      ev.preventDefault();\n      const target = syntheticTarget;\n      syntheticTarget = null;\n      target.dispatchEvent(new MouseEvent('mouseup', {\n        bubbles: true\n      }));\n      return;\n    }\n\n    el.classList.remove('pressed');\n    el.classList.add('active');\n\n    if (ev.type === 'click' && ev.detail !== 0) {\n      // This is a click event triggered by a mouse interaction\n      // (and not a keyboard interaction)\n      // Ignore it, we'll handle the mouseup (or touchend) instead.\n      ev.stopPropagation();\n      ev.preventDefault();\n      return;\n    } // Since we want the active state to be visible for a while,\n    // use a timer to remove it after a short delay\n\n\n    window.setTimeout(function () {\n      el.classList.remove('active');\n    }, 150);\n    let command = el.getAttribute('data-' + mathfield.options.namespace + 'command-pressAndHoldEnd');\n    const now = Date.now(); // If the button has not been pressed for very long or if we were\n    // not the button that started the press and hold, don't consider\n    // it a press-and-hold.\n\n    if (el !== pressHoldElement || now < pressHoldStart + 300) {\n      command = undefined;\n    }\n\n    if (!command && ev.altKey && ev.shiftKey) {\n      command = el.getAttribute('data-' + mathfield.options.namespace + 'command-altshift');\n    }\n\n    if (!command && ev.altKey) {\n      command = el.getAttribute('data-' + mathfield.options.namespace + 'command-alt');\n    }\n\n    if (!command && ev.shiftKey) {\n      command = el.getAttribute('data-' + mathfield.options.namespace + 'command-shift');\n    }\n\n    if (!command) {\n      command = el.getAttribute('data-' + mathfield.options.namespace + 'command');\n    }\n\n    if (command) {\n      // Parse the JSON to get the command (and its optional arguments)\n      // and perform it\n      mathfield.executeCommand(JSON.parse(command));\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  });\n} // A textual description of a LaTeX command.\n// The value can be either a single string, or an array of string\n// in order to provide alternatives or additional context.\n// In that case, the first string in the array should be appropriate\n// to be spoken for accessibility.\n\n\nconst NOTES = {\n  '\\\\text': 'roman text',\n  '\\\\textrm': 'roman text',\n  '\\\\textnormal': 'roman text',\n  '\\\\textit': 'italic text',\n  '\\\\textbf': 'bold text',\n  '\\\\texttt': 'monospaced text',\n  '\\\\textsf': 'sans-serif text',\n  '\\\\mathrm': ['roman', '(upright)'],\n  '\\\\mathbf': 'bold',\n  '\\\\bf': 'bold',\n  '\\\\bold': 'bold',\n  '\\\\mathit': 'italic',\n  '\\\\mathbb': 'blackboard',\n  '\\\\mathscr': 'script',\n  '\\\\mathtt': ['typewriter', '(monospaced)'],\n  '\\\\mathsf': 'sans-serif',\n  '\\\\mathcal': 'caligraphic',\n  '\\\\frak': ['fraktur', '(gothic)'],\n  '\\\\mathfrak': ['fraktur', '(gothic)'],\n  '\\\\textcolor': 'text color',\n  '\\\\color': 'color',\n  '\\\\forall': 'for all',\n  '\\\\exists': 'there exists',\n  '\\\\nexists': 'there does not exist',\n  '\\\\frac': 'fraction',\n  '\\\\dfrac': 'display fraction',\n  '\\\\cfrac': 'continuous fraction',\n  '\\\\tfrac': 'text fraction',\n  '\\\\binom': 'binomial coefficient',\n  '\\\\dbinom': 'display binomial coefficient',\n  '\\\\tbinom': 'text binomial coefficient',\n  '\\\\pdiff': 'partial differential',\n  '\\\\vec': 'vector',\n  '\\\\check': 'caron',\n  '\\\\acute': 'acute',\n  '\\\\breve': 'breve',\n  '\\\\tilde': 'tilde',\n  '\\\\dot': 'dot',\n  '\\\\hat': ['hat', 'circumflex'],\n  '\\\\ddot': 'double dot',\n  '\\\\bar': 'bar',\n  '\\\\prime': 'prime',\n  '\\\\doubleprime': 'double prime',\n  '\\\\varnothing': 'empty set',\n  '\\\\emptyset': 'empty set',\n  '\\\\subseteq': 'subset of or <br>equal to',\n  '\\\\supseteq': 'superset of or <br>equal to',\n  '\\\\supset': 'superset of',\n  '\\\\subset': 'subset of',\n  '\\\\partial': 'partial derivative',\n  '\\\\bigcup': 'union',\n  '\\\\bigcap': 'intersection',\n  '\\\\approx': 'approximately equal to',\n  '\\\\notin': 'not an element of',\n  '\\\\in': ['element of', 'included in'],\n  '\\\\infty': 'infinity',\n  '\\\\land': 'logical and',\n  '\\\\sqrt': 'square root',\n  '\\\\prod': 'product',\n  '\\\\sum': 'summation',\n  '\\\\amalg': ['amalgamation', 'coproduct', 'free product', 'disjoint union'],\n  '\\\\cup': 'union with',\n  '\\\\cap': 'intersection with',\n  '\\\\int': 'integral',\n  '\\\\iint': 'surface integral',\n  '\\\\oint': 'curve integral',\n  '\\\\iiint': 'volume integral',\n  '\\\\iff': 'if and only if',\n  '\\\\ln': 'natural logarithm',\n  '\\\\boldsymbol': 'bold',\n  '\\\\setminus': 'set subtraction',\n  '\\\\stackrel': 'relation with symbol above',\n  '\\\\stackbin': 'operator with symbol above',\n  '\\\\underset': 'symbol with annotation below',\n  '\\\\overset': 'symbol with annotation above',\n  '\\\\hslash': ['h-bar', 'Planck constant'],\n  '\\\\gtrsim': 'greater than or <br>similar to',\n  '\\\\propto': 'proportional to',\n  '\\\\equiv': 'equivalent to',\n  '\\\\!': ['negative thin space', '(-3 mu)'],\n  '\\\\ ': ['space', '(6 mu)'],\n  '\\\\,': ['thin space', '(3 mu)'],\n  '\\\\:': ['medium space', '(4 mu)'],\n  '\\\\;': ['thick space', '(5 mu)'],\n  '\\\\quad': ['1 em space', '(18 mu)'],\n  '\\\\qquad': ['2 em space', '(36 mu)'],\n  '\\\\enskip': ['&#189; em space', '(9 mu)'],\n  '\\\\mp': 'minus or plus',\n  '\\\\pm': 'plus or minus',\n  '\\\\Im': 'Imaginary part of',\n  '\\\\Re': 'Real part of',\n  '\\\\gothicCapitalR': 'Real part of',\n  '\\\\gothicCapitalI': 'Imaginary part part of',\n  '\\\\differentialD': 'differential d',\n  '\\\\aleph': ['aleph', 'infinite cardinal', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Cardinal_number\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\beth': ['beth', 'beth number', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Beth_number\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\gimel': ['gimel', 'gimel function', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Gimel_function\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\O': 'empty set',\n  '\\\\N': 'set of <br>natural numbers',\n  '\\\\Z': 'set of <br>integers',\n  '\\\\Q': 'set of <br>rational numbers',\n  '\\\\C': 'set of <br>complex numbers',\n  '\\\\R': 'set of <br>real numbers',\n  '\\\\P': 'set of <br>prime numbers',\n  '\\\\lesseqqgtr': 'less than, equal to or<br> greater than',\n  '\\\\gnapprox': 'greater than and <br>not approximately',\n  '\\\\lnapprox': 'lesser than and <br>not approximately',\n  '\\\\j': 'dotless j',\n  '\\\\i': 'dotless i',\n  '\\\\cdot': 'centered dot',\n  '\\\\lmoustache': 'left moustache',\n  '\\\\rmoustache': 'right moustache',\n  '\\\\nabla': ['nabla', 'del', 'differential vector operator'],\n  '\\\\square': ['square', 'd’Alembert operator', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/D%27Alembert_operator\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\blacksquare': ['black square', 'end of proof', 'tombstone', 'Halmos symbol'],\n  '\\\\Box': 'end of proof',\n  '\\\\colon': ['such that', 'ratio'],\n  '\\\\coloneq': ['is defined by', 'is assigned'],\n  '\\\\Colon': ['is defined by', 'as'],\n  '\\\\_': ['underbar', 'underscore'],\n  '\\\\ll': 'much less than',\n  '\\\\gg': 'much greater than',\n  '\\\\doteq': 'approximately equal to',\n  '\\\\Doteq': 'approximately equal to',\n  '\\\\doteqdot': 'approximately equal to',\n  '\\\\cong': ['isomorphism of', '(for algebras, modules...)'],\n  '\\\\det': ['determinant of', '(of a matrix)'],\n  '\\\\dotplus': 'Cartesian product algebra',\n  '\\\\otimes': ['tensor product', '(of algebras)', 'Kronecker product', '(of matrices)'],\n  '\\\\oplus': ['direct sum', '(of modules)'],\n  '\\\\lb': 'base-2 logarithm',\n  '\\\\lg': 'base-10 logarithm',\n  '\\\\wp': ['Weierstrass P', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Weierstrass%27s_elliptic_functions\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\wr': ['wreath product', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Wreath_product\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\top': ['tautology', 'Proposition P is universally true'],\n  '\\\\bot': ['contradiction', 'Proposition P is contradictory'],\n  '\\\\mid': ['probability', 'of event A given B'],\n  '\\\\mho': ['Siemens', 'electrical conductance in SI unit', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Siemens_(unit)\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\Longrightarrow': 'implies',\n  '\\\\Longleftrightarrow': 'if, and only if,',\n  '\\\\prec': 'precedes',\n  '\\\\preceq': 'precedes or is equal to',\n  '\\\\succ': 'succeedes',\n  '\\\\succeq': 'succeedes or is equal to',\n  '\\\\perp': ['is perpendicular to', 'is independent of'],\n  '\\\\models': ['entails', 'double-turnstyle, models', 'is a semantic consequence of', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Double_turnstile\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\vdash': ['satisfies', 'turnstyle, assertion sign', 'syntactic inference', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Turnstile_(symbol)\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\implies': ['implies', 'logical consequence'],\n  '\\\\impliedby': ['implied by', 'logical consequence'],\n  '\\\\surd': ['surd', 'root of', 'checkmark'],\n  '\\\\ltimes': ['semi direct product', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\rtimes': ['semi direct product', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\leftthreetimes': ['semi direct product', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\rightthreetimes': ['semi direct product', '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>'],\n  '\\\\divideontimes': ['divide on times'],\n  '\\\\curlywedge': 'nor',\n  '\\\\curlyvee': 'nand',\n  '\\\\simeq': 'is group isomorphic with',\n  '\\\\vartriangleleft': ['is a normal subgroup of', 'is an ideal ring of'],\n  '\\\\circ': ['circle', 'ring', 'function composition'],\n  '\\\\rlap': ['overlap right', '\\\\rlap{x}o'],\n  '\\\\llap': ['overlap left', 'o\\\\llap{/}'],\n  '\\\\colorbox': ['color box', '\\\\colorbox{#fbc0bd}{...}'],\n  '\\\\ast': ['asterisk', 'reflexive closure (as a superscript)'],\n  '\\\\bullet': 'bullet',\n  '\\\\lim': 'limit'\n};\n\nfunction getNote(symbol) {\n  let result = NOTES[symbol] || '';\n\n  if (isArray(result)) {\n    result = result.join('<br>');\n  }\n\n  return result;\n}\n\nfunction latexToMarkup(latex, mf) {\n  const parse = parseString(latex, 'math', null, mf.options.macros);\n  const spans = decompose({\n    mathstyle: MATHSTYLES.displaystyle,\n    macros: mf.options.macros\n  }, parse);\n  const wrapper = makeStruts(makeSpan(spans, 'ML__base'), 'ML__mathlive');\n  return wrapper.toMarkup();\n}\n\nfunction showPopoverWithLatex(mf, latex, displayArrows) {\n  if (!latex || latex.length === 0) {\n    hidePopover(mf);\n    return;\n  }\n\n  const command = latex;\n  const commandMarkup = latexToMarkup(latex, mf);\n  const commandNote = getNote(command);\n  const keybinding = getKeybindingsForCommand(mf.keybindings, command).join('<br>');\n  let template = displayArrows ? '<div class=\"ML__popover__prev-shortcut\" role=\"button\" aria-label=\"Previous suggestion\"><span><span>&#x25B2;</span></span></div>' : '';\n  template += '<span class=\"ML__popover__content\" role=\"button\">';\n  template += '<div class=\"ML__popover__command\">' + commandMarkup + '</div>';\n\n  if (commandNote) {\n    template += '<div class=\"ML__popover__note\">' + commandNote + '</div>';\n  }\n\n  if (keybinding) {\n    template += '<div class=\"ML__popover__shortcut\">' + keybinding + '</div>';\n  }\n\n  template += '</span>';\n  template += displayArrows ? '<div class=\"ML__popover__next-shortcut\" role=\"button\" aria-label=\"Next suggestion\"><span><span>&#x25BC;</span></span></div>' : '';\n  showPopover(mf, template);\n  let el = mf.popover.getElementsByClassName('ML__popover__content');\n\n  if (el && el.length > 0) {\n    attachButtonHandlers(mf, el[0], {\n      default: ['complete', {\n        acceptSuggestion: true\n      }]\n    });\n  }\n\n  el = mf.popover.getElementsByClassName('ML__popover__prev-shortcut');\n\n  if (el && el.length > 0) {\n    attachButtonHandlers(mf, el[0], 'previousSuggestion');\n  }\n\n  el = mf.popover.getElementsByClassName('ML__popover__next-shortcut');\n\n  if (el && el.length > 0) {\n    attachButtonHandlers(mf, el[0], 'nextSuggestion');\n  }\n}\n\nfunction updatePopoverPosition(mf, options) {\n  // Check that the mathfield is still valid\n  // (we're calling ourselves from requestAnimationFrame() and the mathfield\n  // could have gotten destroyed\n  if (!mf.element || mf.element['mathfield'] !== mf) return; // If the popover pane is visible...\n\n  if (mf.popover.classList.contains('is-visible')) {\n    if (options === null || options === void 0 ? void 0 : options.deferred) {\n      // Call ourselves again later, typically after the\n      // rendering/layout of the DOM has been completed\n      window.requestAnimationFrame(() => updatePopoverPosition(mf));\n    } else {\n      if (!getAnchor(mf.model) || getAnchor(mf.model).type !== 'command') {\n        hidePopover(mf);\n      } else {\n        // ... get the caret position\n        const caretPoint = getCaretPoint(mf.field);\n        if (caretPoint) setPopoverPosition(mf, caretPoint);\n      }\n    }\n  }\n}\n\nfunction showPopover(mf, markup) {\n  mf.popover.innerHTML = mf.options.createHTML(markup);\n  const caretPoint = getCaretPoint(mf.field);\n  if (caretPoint) setPopoverPosition(mf, caretPoint);\n  mf.popover.classList.add('is-visible');\n}\n\nfunction setPopoverPosition(mf, position) {\n  // get screen width & height (browser compatibility)\n  const screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n  const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; // get scrollbar size. This would be 0 in mobile device (also no needed).\n\n  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n  const scrollbarHeight = window.innerHeight - document.documentElement.clientHeight;\n  const virtualkeyboardHeight = mf.virtualKeyboardVisible ? mf.virtualKeyboard.element.offsetHeight : 0; // prevent screen overflow horizontal.\n\n  if (position.x + mf.popover.offsetWidth / 2 > screenWidth - scrollbarWidth) {\n    mf.popover.style.left = screenWidth - mf.popover.offsetWidth - scrollbarWidth + 'px';\n  } else if (position.x - mf.popover.offsetWidth / 2 < 0) {\n    mf.popover.style.left = '0';\n  } else {\n    mf.popover.style.left = position.x - mf.popover.offsetWidth / 2 + 'px';\n  } // and position the popover right below or above the caret\n\n\n  if (position.y + mf.popover.offsetHeight + 5 > screenHeight - scrollbarHeight - virtualkeyboardHeight) {\n    mf.popover.classList.add('ML__popover--reverse-direction');\n    mf.popover.style.top = position.y - position.height - mf.popover.offsetHeight - 5 + 'px';\n  } else {\n    mf.popover.classList.remove('ML__popover--reverse-direction');\n    mf.popover.style.top = position.y + 5 + 'px';\n  }\n}\n\nfunction hidePopover(mf) {\n  mf.popover.classList.remove('is-visible');\n}\n\nfunction extractCommandStringAroundInsertionPoint(model, beforeInsertionPointOnly = false) {\n  var _a;\n\n  let result = '';\n  const command = getCommandOffsets(model);\n\n  if (command) {\n    const end = beforeInsertionPointOnly ? model.anchorOffset() + 1 : command.end;\n    const siblings = model.siblings();\n\n    for (let i = command.start; i < end; i++) {\n      // All these atoms are 'command' atom with a body that's\n      // a single character\n      result += (_a = siblings[i].body) !== null && _a !== void 0 ? _a : '';\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param value - If true, decorate the command string around the\r\n * insertion point with an error indicator (red dotted underline). If false,\r\n * remove it.\r\n */\n\n\nfunction decorateCommandStringAroundInsertionPoint(model, hasError) {\n  const command = getCommandOffsets(model);\n\n  if (command) {\n    const siblings = model.siblings();\n\n    for (let i = command.start; i < command.end; i++) {\n      siblings[i].isError = hasError;\n    }\n  }\n}\n\nfunction commitCommandStringBeforeInsertionPoint(model) {\n  const command = getCommandOffsets(model);\n\n  if (command) {\n    const siblings = model.siblings();\n    const anchorOffset = model.anchorOffset() + 1;\n\n    for (let i = command.start; i < anchorOffset; i++) {\n      if (siblings[i]) {\n        siblings[i].isSuggestion = false;\n      }\n    }\n  }\n}\n\nfunction spliceCommandStringAroundInsertionPoint(model, mathlist) {\n  const command = getCommandOffsets(model);\n\n  if (command) {\n    if (!mathlist) {\n      model.siblings().splice(command.start, command.end - command.start);\n      setSelectionOffset(model, command.start - 1, 0);\n    } else {\n      // Array.prototype.splice.apply(\n      //     model.siblings(),\n      //     [command.start, command.end - command.start].concat(mathlist)\n      // );\n      // @revisit\n      model.siblings().splice(command.start, command.end - command.start, ...mathlist);\n      const newPlaceholders = [];\n\n      var _iterator39 = _createForOfIteratorHelper(mathlist),\n          _step39;\n\n      try {\n        for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n          const atom = _step39.value;\n          atom.forEach(x => {\n            if (x.type === 'placeholder') newPlaceholders.push(x);\n          });\n        }\n      } catch (err) {\n        _iterator39.e(err);\n      } finally {\n        _iterator39.f();\n      }\n\n      setSelectionExtent(model, 0); // Set the anchor offset to a reasonable value that can be used by\n      // leap(). In particular, the current offset value may be invalid\n      // if the length of the mathlist is shorter than the name of the command\n\n      model.path[model.path.length - 1].offset = command.start - 1;\n\n      if (newPlaceholders.length === 0 || !leap(model, +1, false)) {\n        setSelectionOffset(model, command.start + mathlist.length - 1);\n      }\n    } // Dispatch notifications\n\n\n    contentDidChange(model);\n  }\n}\n\nfunction removeCommandStringFromAtom(atom) {\n  if (!atom) return;\n\n  if (isArray(atom)) {\n    for (let i = atom.length - 1; i >= 0; i--) {\n      if (atom[i].type === 'command') {\n        atom.splice(i, 1); // i += 1;\n      } else {\n        removeCommandStringFromAtom(atom[i]);\n      }\n    }\n\n    return;\n  }\n\n  removeCommandStringFromAtom(atom.body);\n  removeCommandStringFromAtom(atom.superscript);\n  removeCommandStringFromAtom(atom.subscript);\n  removeCommandStringFromAtom(atom.underscript);\n  removeCommandStringFromAtom(atom.overscript);\n  removeCommandStringFromAtom(atom.numer);\n  removeCommandStringFromAtom(atom.denom);\n  removeCommandStringFromAtom(atom.index);\n\n  if (atom.array) {\n    for (let j = arrayCellCount(atom.array); j >= 0; j--) {\n      removeCommandStringFromAtom(arrayCell(atom.array, j));\n    }\n  }\n}\n\nfunction removeCommandString(model) {\n  const contentWasChanging = model.suppressChangeNotifications;\n  model.suppressChangeNotifications = true;\n  removeCommandStringFromAtom(model.root.body);\n  model.suppressChangeNotifications = contentWasChanging;\n  contentDidChange(model);\n}\n\nconst SPECIAL_OPERATORS = {\n  '\\\\pm': '&#177;',\n  '\\\\times': '&#215;',\n  '\\\\colon': ':',\n  '\\\\vert': '|',\n  '\\\\Vert': '\\u2225',\n  '\\\\mid': '\\u2223',\n  '\\\\lbrace': '{',\n  '\\\\rbrace': '}',\n  '\\\\langle': '\\u27e8',\n  '\\\\rangle': '\\u27e9',\n  '\\\\lfloor': '\\u230a',\n  '\\\\rfloor': '\\u230b',\n  '\\\\lceil': '\\u2308',\n  '\\\\rceil': '\\u2309',\n  '\\\\vec': '&#x20d7;',\n  '\\\\acute': '&#x00b4;',\n  '\\\\grave': '&#x0060;',\n  '\\\\dot': '&#x02d9;',\n  '\\\\ddot': '&#x00a8;',\n  '\\\\tilde': '&#x007e;',\n  '\\\\bar': '&#x00af;',\n  '\\\\breve': '&#x02d8;',\n  '\\\\check': '&#x02c7;',\n  '\\\\hat': '&#x005e;'\n};\n\nfunction xmlEscape(str) {\n  return str // .replace(/&/g, '&amp;')\n  .replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nfunction makeID$1(id, options) {\n  if (!id || !options.generateID) return ''; // Note: the 'extid' attribute is recognized by SRE as an attribute\n  // to be passed to SSML as a <mark> tag.\n\n  return ' extid=\"' + id + '\"';\n}\n\nfunction scanIdentifier(stream, final, options) {\n  let result = false;\n  final = final || stream.atoms.length;\n  let mathML = '';\n  let body = '';\n  let superscript = -1;\n  let subscript = -1;\n  const atom = stream.atoms[stream.index];\n\n  if (stream.index < final && (atom.type === 'mord' || atom.type === 'textord') && '0123456789,.'.indexOf(atom.body) < 0) {\n    body = atomToMathML(atom, options);\n\n    if (atom.superscript) {\n      superscript = stream.index;\n    }\n\n    if (atom.subscript) {\n      subscript = stream.index;\n    }\n\n    stream.index += 1;\n  }\n\n  if (body.length > 0) {\n    result = true; // If there are separate atoms for sub/sup, record them\n\n    if (isSuperscriptAtom(stream)) {\n      superscript = stream.index;\n      stream.index += 1;\n    }\n\n    if (isSubscriptAtom(stream)) {\n      subscript = stream.index;\n      stream.index += 1;\n    }\n\n    if (superscript >= 0 && subscript >= 0) {\n      mathML = '<msubsup>' + body;\n      mathML += toMathML(stream.atoms[subscript].subscript, 0, 0, options).mathML;\n      mathML += toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\n      mathML += '</msubsup>';\n    } else if (superscript >= 0) {\n      mathML = '<msup>' + body;\n\n      if (isSuperscriptAtom(stream)) {\n        // There's another superscript after this one. Maybe double-prime?\n        const sup = toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\n        const sup2 = toMathML(stream.atoms[superscript + 1].superscript, 0, 0, options).mathML;\n\n        if ((sup === '<mi>\\u2032</mi>' || sup === '<mi>&#x2032;</mi>') && (sup2 === '<mi>\\u2032</mi>' || sup2 === '<mi>&#x2032;</mi>')) {\n          mathML += '<mi>&#x2033;</mi>';\n        } else if (sup === '<mi>\\u2032</mi>' || sup === '<mi>&#x2032;</mi>') {\n          mathML += '<mi>&#x2032;</mi>';\n        } else {\n          mathML += sup;\n        }\n      } else {\n        mathML += toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\n      }\n\n      mathML += '</msup>';\n    } else if (subscript >= 0) {\n      mathML = '<msub>' + body;\n      mathML += toMathML(stream.atoms[subscript].subscript, 0, 0, options).mathML;\n      mathML += '</msub>';\n    } else {\n      mathML = body;\n    }\n\n    if ((stream.lastType === 'mi' || stream.lastType === 'mn' || stream.lastType === 'mtext' || stream.lastType === 'fence') && !/^<mo>(.*)<\\/mo>$/.test(mathML)) {\n      mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\n    }\n\n    if (body.endsWith('>f</mi>') || body.endsWith('>g</mi>')) {\n      mathML += '<mo>&x2061;</mo>'; // &ApplyFunction;\n\n      stream.lastType = 'applyfunction';\n    } else {\n      stream.lastType = /^<mo>(.*)<\\/mo>$/.test(mathML) ? 'mo' : 'mi';\n    }\n\n    stream.mathML += mathML;\n  }\n\n  return result;\n}\n/**\r\n * Return true if the current atom is a standalone superscript atom\r\n * i.e. an atom with no content, except of a superscript.\r\n * Superscripts can be encoded either as an attribute on the last atom\r\n * or as a standalone, empty, atom following the one to which it applies.\r\n * @param {object} stream\r\n */\n\n\nfunction isSuperscriptAtom(stream) {\n  return stream.index < stream.atoms.length && stream.atoms[stream.index].superscript && stream.atoms[stream.index].type === 'msubsup';\n}\n\nfunction isSubscriptAtom(stream) {\n  return stream.index < stream.atoms.length && stream.atoms[stream.index].subscript && stream.atoms[stream.index].type === 'msubsup';\n}\n\nfunction indexOfSuperscriptInNumber(stream) {\n  let result = -1;\n  let i = stream.index;\n  let done = false;\n  let found = false;\n\n  while (i < stream.atoms.length && !done && !found) {\n    done = stream.atoms[i].type !== 'mord' || '0123456789,.'.indexOf(stream.atoms[i].body) < 0;\n    found = !done && stream.atoms[i].superscript;\n    i++;\n  }\n\n  if (found) {\n    result = i - 1;\n  }\n\n  return result;\n}\n\nfunction parseSubsup(base, stream, options) {\n  let result = false;\n  let mathML = '';\n  let atom = stream.atoms[stream.index - 1];\n  if (!atom) return false;\n\n  if (!atom.superscript && !atom.subscript) {\n    if (isSuperscriptAtom(stream) || isSubscriptAtom(stream)) {\n      atom = stream.atoms[stream.index];\n      stream.index += 1;\n    }\n  }\n\n  if (!atom) return false;\n\n  if (atom.superscript && atom.subscript) {\n    mathML = '<msubsup>' + base;\n    mathML += toMathML(atom.subscript, 0, 0, options).mathML;\n    mathML += toMathML(atom.superscript, 0, 0, options).mathML;\n    mathML += '</msubsup>';\n  } else if (atom.superscript) {\n    mathML = '<msup>' + base;\n    mathML += toMathML(atom.superscript, 0, 0, options).mathML;\n    mathML += '</msup>';\n  } else if (atom.subscript) {\n    mathML = '<msub>' + base;\n    mathML += toMathML(atom.subscript, 0, 0, options).mathML;\n    mathML += '</msub>';\n  }\n\n  if (mathML.length > 0) {\n    result = true;\n    stream.mathML += mathML;\n    stream.lastType = '';\n  }\n\n  return result;\n}\n\nfunction scanText(stream, final, options) {\n  let result = false;\n  final = final || stream.atoms.length;\n  const initial = stream.index;\n  let mathML = '';\n\n  while (stream.index < final && stream.atoms[stream.index].mode === 'text') {\n    mathML += stream.atoms[stream.index].body ? stream.atoms[stream.index].body : ' ';\n    stream.index += 1;\n  }\n\n  if (mathML.length > 0) {\n    result = true;\n    mathML = '<mtext' + makeID$1(stream.atoms[initial].id, options) + '>' + mathML + '</mtext>';\n    stream.mathML += mathML;\n    stream.lastType = 'mtext';\n  }\n\n  return result;\n}\n\nfunction scanNumber(stream, final, options) {\n  let result = false;\n  final = final || stream.atoms.length;\n  const initial = stream.index;\n  let mathML = '';\n  let superscript = indexOfSuperscriptInNumber(stream);\n\n  if (superscript >= 0 && superscript < final) {\n    final = superscript;\n  }\n\n  while (stream.index < final && stream.atoms[stream.index].type === 'mord' && '0123456789,.'.indexOf(stream.atoms[stream.index].body) >= 0) {\n    mathML += stream.atoms[stream.index].body;\n    stream.index += 1;\n  }\n\n  if (mathML.length > 0) {\n    result = true;\n    mathML = '<mn' + makeID$1(stream.atoms[initial].id, options) + '>' + mathML + '</mn>';\n\n    if (superscript < 0 && isSuperscriptAtom(stream)) {\n      superscript = stream.index;\n      stream.index += 1;\n    }\n\n    if (superscript >= 0) {\n      mathML = '<msup>' + mathML;\n      mathML += toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\n      mathML += '</msup>';\n    }\n\n    stream.mathML += mathML;\n    stream.lastType = 'mn';\n  }\n\n  return result;\n}\n\nfunction scanFence(stream, final, options) {\n  let result = false;\n  final = final || stream.atoms.length;\n  let mathML = '';\n  let lastType = '';\n\n  if (stream.index < final && stream.atoms[stream.index].type === 'mopen') {\n    let found = false;\n    let depth = 0;\n    const openIndex = stream.index;\n    let closeIndex = -1;\n    let index = openIndex + 1;\n\n    while (index < final && !found) {\n      if (stream.atoms[index].type === 'mopen') {\n        depth += 1;\n      } else if (stream.atoms[index].type === 'mclose') {\n        depth -= 1;\n      }\n\n      if (depth === -1) {\n        found = true;\n        closeIndex = index;\n      }\n\n      index += 1;\n    }\n\n    if (found) {\n      // TODO: could add attribute indicating it's a fence (fence=true)\n      mathML = '<mrow>';\n      mathML += toMo(stream.atoms[openIndex], options);\n      mathML += toMathML(stream.atoms, openIndex + 1, closeIndex, options).mathML; // TODO: could add attribute indicating it's a fence (fence=true)\n\n      mathML += toMo(stream.atoms[closeIndex], options);\n      mathML += '</mrow>';\n\n      if (stream.lastType === 'mi' || stream.lastType === 'mn' || stream.lastType === 'mfrac' || stream.lastType === 'fence') {\n        mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\n      }\n\n      stream.index = closeIndex + 1;\n\n      if (parseSubsup(mathML, stream, options)) {\n        result = true;\n        stream.lastType = '';\n        mathML = '';\n      }\n\n      lastType = 'fence';\n    }\n  }\n\n  if (mathML.length > 0) {\n    result = true;\n    stream.mathML += mathML;\n    stream.lastType = lastType;\n  }\n\n  return result;\n}\n\nfunction scanOperator(stream, final, options) {\n  let result = false;\n  final = final || stream.atoms.length;\n  let mathML = '';\n  let lastType = '';\n  const atom = stream.atoms[stream.index];\n\n  if (stream.index < final && (atom.type === 'mbin' || atom.type === 'mrel')) {\n    mathML += atomToMathML(stream.atoms[stream.index], options);\n    stream.index += 1;\n    lastType = 'mo';\n  } else if (stream.index < final && atom.type === 'mop') {\n    // mathML += '<mrow>';\n    if (atom.limits === 'limits' && (atom.superscript || atom.subscript)) {\n      // Operator with limits, e.g. \\sum\n      const op = toMo(atom, options);\n\n      if (atom.superscript && atom.subscript) {\n        // Both superscript and subscript\n        mathML += (atom.limits !== 'nolimits' ? '<munderover>' : '<msubsup>') + op;\n        mathML += toMathML(atom.subscript, 0, 0, options).mathML;\n        mathML += toMathML(atom.superscript, 0, 0, options).mathML;\n        mathML += atom.limits !== 'nolimits' ? '</munderover>' : '</msubsup>';\n      } else if (atom.superscript) {\n        // Superscript only\n        mathML += (atom.limits !== 'nolimits' ? '<mover>' : '<msup>') + op;\n        mathML += toMathML(atom.superscript, 0, 0, options).mathML;\n        mathML += atom.limits !== 'nolimits' ? '</mover>' : '</msup>';\n      } else {\n        // Subscript only\n        mathML += (atom.limits !== 'nolimits' ? '<munder>' : '<msub>') + op;\n        mathML += toMathML(atom.subscript, 0, 0, options).mathML;\n        mathML += atom.limits !== 'nolimits' ? '</munder>' : '</msub>';\n      }\n\n      lastType = 'mo';\n    } else {\n      const atom = stream.atoms[stream.index];\n      const isUnit = atom.symbol === '\\\\operatorname';\n      const op = isUnit ? '<mi class=\"MathML-Unit\"' + makeID$1(atom.id, options) + '>' + toString$1(atom.body) + '</mi>' : toMo(atom, options);\n      mathML += op;\n      stream.index += 1;\n\n      if (parseSubsup(mathML, stream, options)) {\n        result = true;\n        stream.lastType = '';\n        mathML = '';\n      }\n\n      stream.index -= 1;\n\n      if (!isUnit && !/^<mo>(.*)<\\/mo>$/.test(op)) {\n        mathML += '<mo>&#x2061;</mo>'; // APPLY FUNCTION\n        // mathML += scanArgument(stream);\n\n        lastType = 'applyfunction';\n      } else {\n        lastType = isUnit ? 'mi' : 'mo';\n      }\n    } // mathML += '</mrow>';\n\n\n    if ((stream.lastType === 'mi' || stream.lastType === 'mn') && !/^<mo>(.*)<\\/mo>$/.test(mathML)) {\n      mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\n    }\n\n    stream.index += 1;\n  }\n\n  if (mathML.length > 0) {\n    result = true;\n    stream.mathML += mathML;\n    stream.lastType = lastType;\n  }\n\n  return result;\n}\n/**\r\n * Given an atom or an array of atoms, return their MathML representation as\r\n * a string.\r\n * @param {string|Atom|Atom[]} input\r\n * @param initial index of the input to start conversion from\r\n * @param final last index of the input to stop conversion to\r\n */\n\n\nfunction toMathML(input, initial, final, options) {\n  const result = {\n    atoms: input,\n    index: initial !== null && initial !== void 0 ? initial : 0,\n    mathML: '',\n    lastType: ''\n  };\n\n  if (typeof input === 'number' || typeof input === 'boolean') {\n    result.mathML = input.toString();\n  } else if (typeof input === 'string') {\n    result.mathML = input;\n  } else if (input instanceof Atom) {\n    result.mathML = atomToMathML(input, options);\n  } else if (Array.isArray(input)) {\n    let count = 0;\n    final = final ? final : input ? input.length : 0;\n\n    while (result.index < final) {\n      if (scanText(result, final, options) || scanNumber(result, final, options) || scanIdentifier(result, final, options) || scanOperator(result, final, options) || scanFence(result, final, options)) {\n        count += 1;\n      } else if (result.index < final) {\n        let mathML = atomToMathML(result.atoms[result.index], options);\n\n        if (result.lastType === 'mn' && mathML.length > 0 && result.atoms[result.index].type === 'genfrac') {\n          // If this is a fraction preceded by a number (e.g. 2 1/2),\n          // add an \"invisible plus\" (U+0264) character in front of it\n          mathML = '<mo>&#x2064;</mo>' + mathML;\n        }\n\n        if (result.atoms[result.index].type === 'genfrac') {\n          result.lastType = 'mfrac';\n        } else {\n          result.lastType = '';\n        }\n\n        if (mathML.length > 0) {\n          result.mathML += mathML;\n          count += 1;\n        }\n\n        result.index += 1;\n      }\n    } // If there are more than a single element, wrap them in a mrow tag.\n\n\n    if (count > 1) {\n      result.mathML = '<mrow>' + result.mathML + '</mrow>';\n    }\n  }\n\n  return result;\n}\n\nfunction toMo(atom, options) {\n  let result = '';\n  const body = toString$1(atom.body);\n\n  if (body) {\n    result = '<mo' + makeID$1(atom.id, options) + '>' + body + '</mo>';\n  }\n\n  return result;\n}\n\nfunction toString$1(atoms) {\n  if (!atoms) return '';\n  if (typeof atoms === 'string') return xmlEscape(atoms);\n\n  if (!Array.isArray(atoms) && typeof atoms.body === 'string') {\n    return xmlEscape(atoms.body);\n  }\n\n  let result = '';\n\n  var _iterator40 = _createForOfIteratorHelper(atoms),\n      _step40;\n\n  try {\n    for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n      const atom = _step40.value;\n\n      if (typeof atom.body === 'string') {\n        result += atom.body;\n      }\n    }\n  } catch (err) {\n    _iterator40.e(err);\n  } finally {\n    _iterator40.f();\n  }\n\n  return xmlEscape(result);\n}\n/**\r\n * Return a MathML fragment representation of a single atom\r\n *\r\n */\n\n\nfunction atomToMathML(atom, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m; // For named SVG atoms, map to a Unicode char\n\n\n  const SVG_CODE_POINTS = {\n    widehat: '^',\n    widecheck: 'ˇ',\n    widetilde: '~',\n    utilde: '~',\n    overleftarrow: '\\u2190',\n    underleftarrow: '\\u2190',\n    xleftarrow: '\\u2190',\n    overrightarrow: '\\u2192',\n    underrightarrow: '\\u2192',\n    xrightarrow: '\\u2192',\n    underbrace: '\\u23df',\n    overbrace: '\\u23de',\n    overgroup: '\\u23e0',\n    undergroup: '\\u23e1',\n    overleftrightarrow: '\\u2194',\n    underleftrightarrow: '\\u2194',\n    xleftrightarrow: '\\u2194',\n    Overrightarrow: '\\u21d2',\n    xRightarrow: '\\u21d2',\n    overleftharpoon: '\\u21bc',\n    xleftharpoonup: '\\u21bc',\n    overrightharpoon: '\\u21c0',\n    xrightharpoonup: '\\u21c0',\n    xLeftarrow: '\\u21d0',\n    xLeftrightarrow: '\\u21d4',\n    xhookleftarrow: '\\u21a9',\n    xhookrightarrow: '\\u21aa',\n    xmapsto: '\\u21a6',\n    xrightharpoondown: '\\u21c1',\n    xleftharpoondown: '\\u21bd',\n    xrightleftharpoons: '\\u21cc',\n    xleftrightharpoons: '\\u21cb',\n    xtwoheadleftarrow: '\\u219e',\n    xtwoheadrightarrow: '\\u21a0',\n    xlongequal: '=',\n    xtofrom: '\\u21c4',\n    xrightleftarrows: '\\u21c4',\n    xrightequilibrium: '\\u21cc',\n    xleftequilibrium: '\\u21cb'\n  };\n  const SPECIAL_IDENTIFIERS = {\n    '\\\\exponentialE': '&#x02147;',\n    '\\\\imaginaryI': '&#x2148;',\n    '\\\\differentialD': '&#x2146;',\n    '\\\\capitalDifferentialD': '&#x2145;',\n    '\\\\alpha': '&#x03b1;',\n    '\\\\pi': '&#x03c0;',\n    '\\\\infty': '&#x221e;',\n    '\\\\forall': '&#x2200;',\n    '\\\\nexists': '&#x2204;',\n    '\\\\exists': '&#x2203;',\n    '\\\\hbar': '\\u210f',\n    '\\\\cdotp': '\\u22c5',\n    '\\\\ldots': '\\u2026',\n    '\\\\cdots': '\\u22ef',\n    '\\\\ddots': '\\u22f1',\n    '\\\\vdots': '\\u22ee',\n    '\\\\ldotp': '\\u002e'\n  };\n  const MATH_VARIANTS = {\n    cal: 'script',\n    frak: 'fraktur',\n    bb: 'double-struck',\n    scr: 'script',\n    cmtt: 'monospace',\n    cmss: 'sans-serif'\n  };\n  const SPACING = {\n    '\\\\!': -3 / 18,\n    '\\\\ ': 6 / 18,\n    '\\\\,': 3 / 18,\n    '\\\\:': 4 / 18,\n    '\\\\;': 5 / 18,\n    '\\\\enspace': 0.5,\n    '\\\\quad': 1,\n    '\\\\qquad': 2,\n    '\\\\enskip': 0.5\n  };\n  let result = '';\n  let sep = '';\n  let col, row, i;\n  let underscript, overscript, body;\n  let variant = MATH_VARIANTS[atom.fontFamily || atom.font] || '';\n\n  if (variant) {\n    variant = ' mathvariant=\"' + variant + '\"';\n  }\n\n  const command = atom.symbol;\n\n  if (atom.mode === 'text') {\n    result = '<mi' + makeID$1(atom.id, options) + '>' + atom.body + '</mi>';\n  } else {\n    switch (atom.type) {\n      case 'first':\n        break;\n      // nothing to do\n\n      case 'group':\n      case 'root':\n        result = toMathML(atom.body, 0, 0, options).mathML;\n        break;\n\n      case 'array':\n        if (atom.leftDelim && atom.leftDelim !== '.' || atom.rightDelim && atom.rightDelim !== '.') {\n          result += '<mrow>';\n\n          if (atom.leftDelim && atom.leftDelim !== '.') {\n            result += '<mo>' + (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) + '</mo>';\n          }\n        }\n\n        result += '<mtable';\n\n        if (atom.colFormat) {\n          result += ' columnalign=\"';\n\n          for (i = 0; i < atom.colFormat.length; i++) {\n            if (atom.colFormat[i].align) {\n              result += {\n                l: 'left',\n                c: 'center',\n                r: 'right'\n              }[atom.colFormat[i].align] + ' ';\n            }\n          }\n\n          result += '\"';\n        }\n\n        result += '>';\n\n        for (row = 0; row < atom.array.length; row++) {\n          result += '<mtr>';\n\n          for (col = 0; col < atom.array[row].length; col++) {\n            result += '<mtd>' + toMathML(atom.array[row][col], 0, 0, options).mathML + '</mtd>';\n          }\n\n          result += '</mtr>';\n        }\n\n        result += '</mtable>';\n\n        if (atom.leftDelim && atom.leftDelim !== '.' || atom.rightDelim && atom.rightDelim !== '.') {\n          if (atom.rightDelim && atom.rightDelim !== '.') {\n            result += '<mo>' + (SPECIAL_OPERATORS[atom.leftDelim] || atom.rightDelim) + '</mo>';\n          }\n\n          result += '</mrow>';\n        }\n\n        break;\n\n      case 'genfrac':\n        if (atom.leftDelim || atom.rightDelim) {\n          result += '<mrow>';\n        }\n\n        if (atom.leftDelim && atom.leftDelim !== '.') {\n          result += '<mo' + makeID$1(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) + '</mo>';\n        }\n\n        if (atom.hasBarLine) {\n          result += '<mfrac>';\n          result += toMathML(atom.numer, 0, 0, options).mathML || '<mi>&nbsp;</mi>';\n          result += toMathML(atom.denom, 0, 0, options).mathML || '<mi>&nbsp;</mi>';\n          result += '</mfrac>';\n        } else {\n          // No bar line, i.e. \\choose, etc...\n          result += '<mtable' + makeID$1(atom.id, options) + '>';\n          result += '<mtr>' + toMathML(atom.numer, 0, 0, options).mathML + '</mtr>';\n          result += '<mtr>' + toMathML(atom.denom, 0, 0, options).mathML + '</mtr>';\n          result += '</mtable>';\n        }\n\n        if (atom.rightDelim && atom.rightDelim !== '.') {\n          result += '<mo' + makeID$1(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.rightDelim] || atom.rightDelim) + '</mo>';\n        }\n\n        if (atom.leftDelim || atom.rightDelim) {\n          result += '</mrow>';\n        }\n\n        break;\n\n      case 'surd':\n        if (atom.index) {\n          result += '<mroot' + makeID$1(atom.id, options) + '>';\n          result += toMathML(atom.body, 0, 0, options).mathML;\n          result += toMathML(atom.index, 0, 0, options).mathML;\n          result += '</mroot>';\n        } else {\n          result += '<msqrt' + makeID$1(atom.id, options) + '>';\n          result += toMathML(atom.body, 0, 0, options).mathML;\n          result += '</msqrt>';\n        }\n\n        break;\n\n      case 'leftright':\n        // TODO: could add fence=true attribute\n        result = '<mrow>';\n\n        if (atom.leftDelim && atom.leftDelim !== '.') {\n          result += '<mo' + makeID$1(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) + '</mo>';\n        }\n\n        if (atom.body) {\n          result += toMathML(atom.body, 0, 0, options).mathML;\n        }\n\n        if (atom.rightDelim && atom.rightDelim !== '.') {\n          result += '<mo' + makeID$1(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.rightDelim] || atom.rightDelim) + '</mo>';\n        }\n\n        result += '</mrow>';\n        break;\n\n      case 'sizeddelim':\n      case 'delim':\n        result += '<mo separator=\"true\"' + makeID$1(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.delim] || atom.delim) + '</mo>';\n        break;\n\n      case 'accent':\n        result += '<mover accent=\"true\"' + makeID$1(atom.id, options) + '>';\n        result += toMathML(atom.body, 0, 0, options).mathML;\n        result += '<mo>' + (SPECIAL_OPERATORS[command] || atom.accent) + '</mo>';\n        result += '</mover>';\n        break;\n\n      case 'line':\n      case 'overlap':\n        break;\n\n      case 'overunder':\n        overscript = atom.overscript;\n        underscript = atom.underscript;\n\n        if ((atom.svgAbove || overscript) && (atom.svgBelow || underscript)) {\n          body = atom.body;\n        } else if (overscript && overscript.length > 0) {\n          body = atom.body;\n\n          if ((_b = (_a = atom.body) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.underscript) {\n            underscript = atom.body[0].underscript;\n            body = atom.body[0].body;\n          } else if (((_d = (_c = atom.body) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.type) === 'first' && ((_f = (_e = atom.body) === null || _e === void 0 ? void 0 : _e[1]) === null || _f === void 0 ? void 0 : _f.underscript)) {\n            underscript = atom.body[1].underscript;\n            body = atom.body[1].body;\n          }\n        } else if (underscript && underscript.length > 0) {\n          body = atom.body;\n\n          if ((_h = (_g = atom.body) === null || _g === void 0 ? void 0 : _g[0]) === null || _h === void 0 ? void 0 : _h.overscript) {\n            overscript = atom.body[0].overscript;\n            body = atom.body[0].body;\n          } else if (((_k = (_j = atom.body) === null || _j === void 0 ? void 0 : _j[0]) === null || _k === void 0 ? void 0 : _k.type) === 'first' && ((_m = (_l = atom.body) === null || _l === void 0 ? void 0 : _l[1]) === null || _m === void 0 ? void 0 : _m.overscript)) {\n            overscript = atom.body[1].overscript;\n            body = atom.body[1].body;\n          }\n        }\n\n        if ((atom.svgAbove || overscript) && (atom.svgBelow || underscript)) {\n          result += \"<munderover \".concat(variant, \" \").concat(makeID$1(atom.id, options), \">\");\n          result += SVG_CODE_POINTS[atom.svgBody] || toMathML(body, 0, 0, options).mathML;\n          result += SVG_CODE_POINTS[atom.svgBelow] || toMathML(underscript, 0, 0, options).mathML;\n          result += SVG_CODE_POINTS[atom.svgAbove] || toMathML(overscript, 0, 0, options).mathML;\n          result += '</munderover>';\n        } else if (atom.svgAbove || overscript) {\n          result += \"<mover \".concat(variant, \" \").concat(makeID$1(atom.id, options), \">\") + (SVG_CODE_POINTS[atom.svgBody] || toMathML(body, 0, 0, options).mathML);\n          result += SVG_CODE_POINTS[atom.svgAbove] || toMathML(overscript, 0, 0, options).mathML;\n          result += '</mover>';\n        } else if (atom.svgBelow || underscript) {\n          result += \"<munder \".concat(variant, \" \").concat(makeID$1(atom.id, options), \">\") + (SVG_CODE_POINTS[atom.svgBody] || toMathML(body, 0, 0, options).mathML);\n          result += SVG_CODE_POINTS[atom.svgBelow] || toMathML(underscript, 0, 0, options).mathML;\n          result += '</munder>';\n        }\n\n        break;\n\n      case 'placeholder': // no real equivalent in MathML -- will generate a '?'qq\n\n      case 'mord':\n        {\n          result = SPECIAL_IDENTIFIERS[command] || command || (typeof atom.body === 'string' ? atom.body : '');\n          const m = command ? command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/) : null;\n\n          if (m) {\n            // It's a \\char command\n            result = '&#x' + m[1] + ';';\n          } else if (result.length > 0 && result.charAt(0) === '\\\\') {\n            // This is an identifier with no special handling. Use the\n            // Unicode value\n            if (typeof atom.body === 'string' && atom.body.charCodeAt(0) > 255) {\n              result = '&#x' + ('000000' + atom.body.charCodeAt(0).toString(16)).substr(-4) + ';';\n            } else if (typeof atom.body === 'string') {\n              result = atom.body.charAt(0);\n            } else {\n              result = atom.body;\n            }\n          }\n\n          const tag = /\\d/.test(result) ? 'mn' : 'mi';\n          result = '<' + tag + variant + makeID$1(atom.id, options) + '>' + xmlEscape(result) + '</' + tag + '>';\n          break;\n        }\n\n      case 'mbin':\n      case 'mrel':\n      case 'textord':\n      case 'minner':\n        if (command && SPECIAL_IDENTIFIERS[command]) {\n          // Some 'textord' are actually identifiers. Check them here.\n          result = '<mi' + makeID$1(atom.id, options) + '>' + SPECIAL_IDENTIFIERS[command] + '</mi>';\n        } else if (command && SPECIAL_OPERATORS[command]) {\n          result = '<mo' + makeID$1(atom.id, options) + '>' + SPECIAL_OPERATORS[command] + '</mo>';\n        } else {\n          result = toMo(atom, options);\n        }\n\n        break;\n\n      case 'mpunct':\n        result = '<mo separator=\"true\"' + makeID$1(atom.id, options) + '>' + (SPECIAL_OPERATORS[command] || command) + '</mo>';\n        break;\n\n      case 'mop':\n        if (atom.body !== '\\u200b') {\n          // Not ZERO-WIDTH\n          result = '<mo' + makeID$1(atom.id, options) + '>';\n\n          if (command === '\\\\operatorname') {\n            result += atom.body;\n          } else {\n            result += command || atom.body;\n          }\n\n          result += '</mo>';\n        }\n\n        break;\n\n      case 'mathstyle':\n        // TODO: mathstyle is a switch. Need to figure out its scope to properly wrap it around a <mstyle> tag\n        // if (atom.mathstyle === 'displaystyle') {\n        //     result += '<mstyle displaystyle=\"true\">';\n        //     result += '</mstyle>';\n        // } else {\n        //     result += '<mstyle displaystyle=\"false\">';\n        //     result += '</mstyle>';\n        // };\n        break;\n\n      case 'box':\n        result = '<menclose notation=\"box\"';\n\n        if (atom.backgroundcolor) {\n          result += ' mathbackground=\"' + stringToColor(atom.backgroundcolor) + '\"';\n        }\n\n        result += makeID$1(atom.id, options) + '>' + toMathML(atom.body, 0, 0, options).mathML + '</menclose>';\n        break;\n\n      case 'spacing':\n        result += '<mspace width=\"' + (SPACING[command] || 0) + 'em\"/>';\n        break;\n\n      case 'enclose':\n        result = '<menclose notation=\"';\n\n        for (const notation in atom.notation) {\n          if (Object.prototype.hasOwnProperty.call(atom.notation, notation) && atom.notation[notation]) {\n            result += sep + notation;\n            sep = ' ';\n          }\n        }\n\n        result += makeID$1(atom.id, options) + '\">' + toMathML(atom.body, 0, 0, options).mathML + '</menclose>';\n        break;\n\n      case 'space':\n        result += '&nbsp;';\n        break;\n\n      case 'msupsub':\n        break;\n\n      case 'phantom':\n        break;\n\n      case 'composition':\n        break;\n\n      default:\n        console.log('In conversion to MathML, unknown type : ' + atom.type);\n    }\n  }\n\n  return result;\n}\n\nfunction atomsToMathML(atoms, options) {\n  return toMathML(atoms, 0, 0, options).mathML;\n}\n/*\r\n * Return a hash (32-bit integer) representing the content of the mathfield\r\n * (but not the selection state)\r\n */\n\n\nfunction hash(latex) {\n  let result = 0;\n\n  for (let i = 0; i < latex.length; i++) {\n    result = result * 31 + latex.charCodeAt(i);\n    result = result | 0; // Force it to a 32-bit number\n  }\n\n  return Math.abs(result);\n}\n\nfunction requestUpdate(mathfield) {\n  if (!mathfield.dirty) {\n    mathfield.dirty = true;\n    requestAnimationFrame(() => {\n      if (isValidMathfield(mathfield) && mathfield.dirty) {\n        render(mathfield);\n      }\n    });\n  }\n}\n/**\r\n * Lay-out the mathfield and generate the DOM.\r\n *\r\n * This is usually done automatically, but if the font-size, or other geometric\r\n * attributes are modified, outside of MathLive, this function may need to be\r\n * called explicitly.\r\n *\r\n */\n\n\nfunction render(mathfield, renderOptions) {\n  renderOptions = renderOptions !== null && renderOptions !== void 0 ? renderOptions : {};\n  mathfield.dirty = false; //\n  // 1. Stop and reset read aloud state\n  //\n\n  if (!window['mathlive']) {\n    window['mathlive'] = {};\n  } //\n  // 2. Validate selection\n  //\n\n\n  if (!getAnchor(mathfield.model)) {\n    console.warn('Invalid selection, resetting it. ' + pathToString(mathfield.model.path));\n    mathfield.model.path = [{\n      relation: 'body',\n      offset: 0\n    }];\n  } //\n  // 3. Update selection state and blinking cursor (caret)\n  //\n\n\n  mathfield.model.root.forEach(a => {\n    a.caret = '';\n    a.isSelected = false;\n    a.containsCaret = false;\n  });\n  const hasFocus = mathfield.hasFocus();\n\n  if (selectionIsCollapsed(mathfield.model)) {\n    getAnchor(mathfield.model).caret = hasFocus && !mathfield.options.readOnly ? mathfield.mode : '';\n  } else {\n    forEachSelected(mathfield.model, a => {\n      a.isSelected = true;\n    });\n  }\n\n  if (hasFocus && !mathfield.options.readOnly) {\n    let ancestor = mathfield.model.ancestor(1);\n    let i = 1;\n    let done = false;\n\n    while (ancestor && !done) {\n      if (ancestor.type === 'surd' || ancestor.type === 'leftright') {\n        ancestor.containsCaret = true;\n        done = true;\n      }\n\n      i += 1;\n      ancestor = mathfield.model.ancestor(i);\n    }\n  } //\n  // 4. Create spans corresponding to the updated mathlist\n  //\n\n\n  const spans = decompose({\n    mathstyle: MATHSTYLES.displaystyle,\n    letterShapeStyle: mathfield.options.letterShapeStyle,\n    atomIdsSettings: {\n      // Using the hash as a seed for the ID\n      // keeps the IDs the same until the content of the field changes.\n      seed: hash(mathfield.model.root.toLatex(false)),\n      // The `groupNumbers` flag indicates that extra spans should be generated\n      // to represent group of atoms, for example, a span to group\n      // consecutive digits to represent a number.\n      groupNumbers: renderOptions.forHighlighting\n    },\n    smartFence: mathfield.options.smartFence,\n    macros: mathfield.options.macros\n  }, mathfield.model.root); //\n  // 5. Construct struts around the spans\n  //\n\n  const base = makeSpan(spans, 'ML__base');\n  base.attributes = {\n    // Sometimes Google Translate kicks in an attempts to 'translate' math\n    // This doesn't work very well, so turn off translate\n    translate: 'no',\n    // Hint to screen readers to not attempt to read this span\n    // They should use instead the 'aria-label' below.\n    'aria-hidden': 'true'\n  };\n  const wrapper = makeStruts(base, 'ML__mathlive'); //\n  // 6. Generate markup and accessible node\n  //\n\n  mathfield.field.innerHTML = mathfield.options.createHTML(wrapper.toMarkup(0, mathfield.options.horizontalSpacingScale));\n  mathfield.field.classList.toggle('ML__focused', hasFocus && !mathfield.options.readOnly);\n  mathfield.accessibleNode.innerHTML = mathfield.options.createHTML('<math xmlns=\"http://www.w3.org/1998/Math/MathML\">' + atomsToMathML(mathfield.model.root, mathfield.options) + '</math>'); //mathfield.ariaLiveText.textContent = \"\";\n  //\n  // 7. Calculate selection rectangle\n  //\n\n  const selectionRect = getSelectionBounds(mathfield.field);\n\n  if (selectionRect !== null) {\n    const selectionElement = document.createElement('div');\n    selectionElement.classList.add('ML__selection');\n    selectionElement.style.position = 'absolute';\n    selectionElement.style.left = Number(selectionRect.left).toString() + 'px';\n    selectionElement.style.top = Number(selectionRect.top).toString() + 'px';\n    selectionElement.style.width = Number(Math.ceil(selectionRect.right - selectionRect.left)).toString() + 'px';\n    selectionElement.style.height = Number(Math.ceil(selectionRect.bottom - selectionRect.top - 1)).toString() + 'px';\n    mathfield.field.insertBefore(selectionElement, mathfield.field.childNodes[0]);\n  }\n} // @revisit: move to mathfield.vibrate()\n\n\nconst HAPTIC_FEEDBACK_DURATION = 3; // in ms\n\nconst COMMANDS = {};\n\nfunction register$2(commands, options) {\n  options = options !== null && options !== void 0 ? options : {\n    target: 'mathfield',\n    canUndo: false\n  };\n  Object.keys(commands).forEach(selector => {\n    console.assert(!COMMANDS[selector], 'Selector already defined: ', selector);\n    COMMANDS[selector] = _objectSpread(_objectSpread({}, options), {}, {\n      fn: commands[selector]\n    });\n  });\n}\n\nfunction perform(mathfield, command) {\n  var _a;\n\n  if (!command) {\n    return false;\n  }\n\n  let selector;\n  let args = [];\n  let handled = false;\n  let dirty = false;\n\n  if (isArray(command)) {\n    selector = command[0];\n    args = command.slice(1);\n  } else {\n    selector = command;\n  } // Convert kebab case (like-this) to camel case (likeThis).\n\n\n  selector = selector.replace(/-\\w/g, m => m[1].toUpperCase());\n\n  if (((_a = COMMANDS[selector]) === null || _a === void 0 ? void 0 : _a.target) === 'model') {\n    if (/^(delete|transpose|add)/.test(selector)) {\n      if (selector !== 'deletePreviousChar') {\n        mathfield.resetKeystrokeBuffer();\n      }\n    }\n\n    if (/^(delete|transpose|add)/.test(selector) && mathfield.mode !== 'command') {\n      // Update the undo state to account for the current selection\n      mathfield.popUndoStack();\n      mathfield.snapshot();\n    }\n\n    COMMANDS[selector].fn(mathfield.model, ...args);\n\n    if (/^(delete|transpose|add)/.test(selector) && mathfield.mode !== 'command') {\n      mathfield.snapshot();\n    }\n\n    if (/^(delete)/.test(selector) && mathfield.mode === 'command') {\n      const command = extractCommandStringAroundInsertionPoint(mathfield.model);\n      const suggestions = suggest(command);\n\n      if (suggestions.length === 0) {\n        hidePopover(mathfield);\n      } else {\n        showPopoverWithLatex(mathfield, suggestions[0].match, suggestions.length > 1);\n      }\n    }\n\n    dirty = true;\n    handled = true;\n  } else if (COMMANDS[selector]) {\n    dirty = COMMANDS[selector].fn(mathfield, ...args);\n    handled = true;\n  } else {\n    throw Error('Unknown command \"' + selector + '\"');\n  } // If the command changed the selection so that it is no longer\n  // collapsed, or if it was an editing command, reset the inline\n  // shortcut buffer and the user style\n\n\n  if (!selectionIsCollapsed(mathfield.model) || /^(transpose|paste|complete|((moveToNextChar|moveToPreviousChar|extend).*))_$/.test(selector)) {\n    mathfield.resetKeystrokeBuffer();\n    mathfield.style = {};\n  } // Render the mathlist\n\n\n  if (dirty) {\n    requestUpdate(mathfield);\n  }\n\n  return handled;\n}\n/**\r\n * Perform a command, but:\r\n * * focus the mathfield\r\n * * provide haptic and audio feedback\r\n * This is used by the virtual keyboard when command keys (delete, arrows, etc..)\r\n * are pressed.\r\n */\n\n\nfunction _performWithFeedback(mathfield, selector) {\n  // @revisit: have a registry of commands -> sound\n  mathfield.focus();\n\n  if (mathfield.options.keypressVibration && (navigator === null || navigator === void 0 ? void 0 : navigator.vibrate)) {\n    navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\n  } // Convert kebab case to camel case.\n\n\n  selector = selector.replace(/-\\w/g, m => m[1].toUpperCase());\n\n  if (selector === 'moveToNextPlaceholder' || selector === 'moveToPreviousPlaceholder' || selector === 'complete') {\n    if (mathfield.returnKeypressSound) {\n      mathfield.returnKeypressSound.load();\n      mathfield.returnKeypressSound.play().catch(err => console.warn(err));\n    } else if (mathfield.keypressSound) {\n      mathfield.keypressSound.load();\n      mathfield.keypressSound.play().catch(err => console.warn(err));\n    }\n  } else if (selector === 'deletePreviousChar' || selector === 'deleteNextChar' || selector === 'deletePreviousWord' || selector === 'deleteNextWord' || selector === 'deleteToGroupStart' || selector === 'deleteToGroupEnd' || selector === 'deleteToMathFieldStart' || selector === 'deleteToMathFieldEnd') {\n    if (mathfield.deleteKeypressSound) {\n      mathfield.deleteKeypressSound.load();\n      mathfield.deleteKeypressSound.play().catch(err => console.warn(err));\n    } else if (mathfield.keypressSound) {\n      mathfield.keypressSound.load();\n      mathfield.keypressSound.play().catch(err => console.warn(err));\n    }\n  } else if (mathfield.keypressSound) {\n    mathfield.keypressSound.load();\n    mathfield.keypressSound.play().catch(err => console.warn(err));\n  }\n\n  return mathfield.executeCommand(selector);\n}\n\nregister$2({\n  performWithFeedback: (mathfield, command) => _performWithFeedback(mathfield, command)\n});\n/**\r\n * Join all the cells at the indicated row into a single mathlist\r\n */\n\nfunction arrayJoinColumns(row, separator = ',', style) {\n  if (!row) return [];\n  let result = [];\n  let sep;\n\n  var _iterator41 = _createForOfIteratorHelper(row),\n      _step41;\n\n  try {\n    for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n      let cell = _step41.value;\n\n      if (cell && cell.length > 0 && cell[0].type === 'first') {\n        // Remove the 'first' atom, if present\n        cell = cell.slice(1);\n      }\n\n      if (cell && cell.length > 0) {\n        if (sep) {\n          result.push(sep);\n        } else {\n          sep = new Atom('math', 'mpunct', separator, style);\n        }\n\n        result = result.concat(cell);\n      }\n    }\n  } catch (err) {\n    _iterator41.e(err);\n  } finally {\n    _iterator41.f();\n  }\n\n  return result;\n}\n/**\r\n * Join all the rows into a single atom list\r\n */\n\n\nfunction arrayJoinRows(array, separators = [';', ','], style) {\n  let result = [];\n  let sep;\n\n  var _iterator42 = _createForOfIteratorHelper(array),\n      _step42;\n\n  try {\n    for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n      const row = _step42.value;\n\n      if (sep) {\n        result.push(sep);\n      } else {\n        sep = new Atom('math', 'mpunct', separators[0], style);\n      }\n\n      result = result.concat(arrayJoinColumns(row, separators[1]));\n    }\n  } catch (err) {\n    _iterator42.e(err);\n  } finally {\n    _iterator42.f();\n  }\n\n  return result;\n}\n/**\r\n * Return the number of non-empty cells in that column\r\n */\n\n\nfunction arrayColumnCellCount(array, col) {\n  let result = 0;\n  const colRow = {\n    col: col,\n    row: 0\n  };\n\n  while (colRow.row < array.length) {\n    const cell = arrayCell(array, colRow);\n\n    if (cell && cell.length > 0) {\n      let cellLen = cell.length;\n      if (cell[0].type === 'first') cellLen -= 1;\n\n      if (cellLen > 0) {\n        result += 1;\n      }\n    }\n\n    colRow.row += 1;\n  }\n\n  return result;\n}\n/**\r\n * Remove the indicated column from the array\r\n */\n\n\nfunction arrayRemoveColumn(array, col) {\n  let row = 0;\n\n  while (row < array.length) {\n    if (array[row][col]) {\n      array[row].splice(col, 1);\n    }\n\n    row += 1;\n  }\n}\n/**\r\n * Remove the indicated row from the array\r\n */\n\n\nfunction arrayRemoveRow(array, row) {\n  array.splice(row, 1);\n}\n/**\r\n * Return the first non-empty cell, row by row\r\n */\n\n\nfunction arrayFirstCellByRow(array) {\n  const colRow = {\n    col: 0,\n    row: 0\n  };\n\n  while (colRow.row < array.length && !arrayCell(array, colRow)) {\n    colRow.row += 1;\n  }\n\n  return arrayCell(array, colRow) ? 'cell' + arrayIndex(array, colRow) : '';\n}\n/**\r\n * Internal primitive to add a column/row in a matrix\r\n */\n\n\nfunction addCell(model, where) {\n  // This command is only applicable if we're in an array\n  const parent = model.parent();\n\n  if (parent && parent.type === 'array' && isArray(parent.array)) {\n    const relation = model.relation();\n\n    if (parent.array) {\n      const colRow = arrayColRow(parent.array, relation);\n\n      if (where === 'after row' || where === 'before row') {\n        // Insert a row\n        colRow.col = 0;\n        colRow.row = colRow.row + (where === 'after row' ? 1 : 0);\n        parent.array.splice(colRow.row, 0, [[]]);\n      } else {\n        // Insert a column\n        colRow.col += where === 'after column' ? 1 : 0;\n        parent.array[colRow.row].splice(colRow.col, 0, []);\n      }\n\n      const cellIndex = arrayIndex(parent.array, colRow);\n      model.path.pop();\n      model.path.push({\n        relation: 'cell' + cellIndex.toString(),\n        offset: 0\n      });\n      model.insertFirstAtom();\n    }\n  }\n}\n\nfunction convertParentToArray(model) {\n  var _a;\n\n  const parent = model.parent();\n\n  if (parent.type === 'leftright') {\n    parent.type = 'array';\n    const envName = (_a = {\n      '(': 'pmatrix',\n      '\\\\lbrack': 'bmatrix',\n      '\\\\lbrace': 'cases'\n    }[parent.leftDelim]) !== null && _a !== void 0 ? _a : 'matrix';\n    const env = getEnvironmentDefinition(envName);\n    const array = [[parent.body]];\n    Object.assign(parent, env.parser(envName, [], array));\n    parent.mode = getAnchorMode(model);\n    parent.environmentName = envName;\n    parent.array = array;\n    parent.rowGaps = [0];\n    delete parent.body;\n    model.path[model.path.length - 1].relation = 'cell0';\n  } // Note: could also be a group, or we could be a subscript or an\n  // underscript (for multi-valued conditions on a \\sum, for example)\n  // Or if at root, this could be a 'align*' environment\n\n}\n\nfunction addRowAfter(model) {\n  convertParentToArray(model);\n  addCell(model, 'after row');\n  contentDidChange(model);\n  return true;\n}\n\nfunction addRowBefore(model) {\n  convertParentToArray(model);\n  addCell(model, 'before row');\n  contentDidChange(model);\n  return true;\n}\n\nfunction addColumnAfter(model) {\n  convertParentToArray(model);\n  addCell(model, 'after column');\n  contentDidChange(model);\n  return true;\n}\n\nfunction addColumnBefore(model) {\n  convertParentToArray(model);\n  addCell(model, 'before column');\n  contentDidChange(model);\n  return true;\n}\n\nregister$2({\n  addRowAfter: addRowAfter,\n  addColumnAfter: addColumnAfter,\n  addRowBefore: addRowBefore,\n  addColumnBefore: addColumnBefore\n}, {\n  target: 'model',\n  category: 'array-edit'\n});\n/**\r\n * @param dir If the selection is not collapsed, and dir is\r\n * negative, delete backwards, starting with the anchor atom.\r\n * That is, delete(-1) will delete only the anchor atom.\r\n * If dir = 0, delete only if the selection is not collapsed\r\n */\n\nfunction delete_(model, dir = 0) {\n  const contentWasChanging = model.suppressChangeNotifications;\n  model.suppressChangeNotifications = true;\n  dir = dir < 0 ? -1 : dir > 0 ? +1 : dir;\n  removeSuggestion(model);\n\n  if (model.parent().array) {\n    if (dir < 0 && model.startOffset() === 0) {\n      const array = model.parent().array;\n\n      if (arrayFirstCellByRow(array) === model.relation()) {\n        // (1) First cell:\n        // delete array, replace it with linearized content\n        const atoms = arrayJoinRows(array);\n        model.path.pop();\n        model.siblings().splice(model.anchorOffset(), 1, ...atoms);\n        setSelectionOffset(model, model.anchorOffset() - 1, atoms.length);\n      } else {\n        const colRow = arrayColRow(array, model.relation());\n\n        if (colRow.col === 0) {\n          // (2) First (non-empty) column (but not first row):\n          // Move to the end of the last cell of the previous row\n          const dest = arrayAdjustRow(array, colRow, -1);\n          dest.col = array[dest.row].length - 1;\n          model.path[model.path.length - 1].relation = 'cell' + arrayIndex(array, dest);\n          const destLength = array[dest.row][dest.col].length; // (2.1) Linearize it and merge it with last cell of previous row\n          // (note that atoms could be empty if there are no non-empty\n          // cells left in the row)\n\n          const atoms = arrayJoinColumns(array[colRow.row]);\n          array[dest.row][dest.col] = array[dest.row][dest.col].concat(atoms);\n          setSelectionOffset(model, destLength - 1, atoms.length); // (2.2) Remove row\n\n          arrayRemoveRow(array, colRow.row);\n        } else {\n          // (3) Non-first column\n          // (3.1) If column is empty, remove it\n          if (arrayColumnCellCount(array, colRow.col) === 0) {\n            arrayRemoveColumn(array, colRow.col);\n            colRow.col -= 1;\n            model.path[model.path.length - 1].relation = 'cell' + arrayIndex(array, colRow);\n            const destCell = array[colRow.row][colRow.col];\n            setSelectionOffset(model, destCell.length - 1, 0);\n          } // (3.2) merge cell with cell in previous column\n\n        }\n      } // Dispatch notifications\n\n\n      model.suppressChangeNotifications = contentWasChanging;\n      selectionDidChange(model);\n      contentDidChange(model);\n      return;\n    }\n  }\n\n  const siblings = model.siblings();\n\n  if (!selectionIsCollapsed(model)) {\n    // There is a selection extent. Delete all the atoms within it.\n    const first = model.startOffset() + 1;\n    const last = model.endOffset() + 1;\n    model.announce('deleted', null, siblings.slice(first, last));\n    siblings.splice(first, last - first); // Adjust the anchor\n\n    setSelectionOffset(model, first - 1);\n  } else {\n    const anchorOffset = model.anchorOffset();\n\n    if (dir < 0) {\n      if (anchorOffset !== 0) {\n        // We're not at the begining of the sibling list.\n        // If the previous sibling is a compound (fractions, group),\n        // just move into it, otherwise delete it\n        const sibling = model.sibling(0);\n\n        if (sibling.type === 'leftright') {\n          sibling.rightDelim = '?';\n          move(model, 'backward');\n        } else if (!sibling.captureSelection && /^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(sibling.type)) {\n          move(model, 'backward');\n        } else {\n          model.announce('deleted', null, siblings.slice(anchorOffset, anchorOffset + 1));\n          siblings.splice(anchorOffset, 1);\n          setSelectionOffset(model, anchorOffset - 1);\n        }\n      } else {\n        // We're at the beginning of the sibling list.\n        // Delete what comes before\n        const relation = model.relation();\n\n        if (relation === 'superscript' || relation === 'subscript') {\n          const supsub = model.parent()[relation].filter(atom => atom.type !== 'placeholder' && atom.type !== 'first');\n          model.parent()[relation] = null;\n          model.path.pop(); // Array.prototype.splice.apply(\n          //     model.siblings(),\n          //     [model.anchorOffset(), 0].concat(supsub)\n          // );\n          // @revisit\n\n          model.siblings().splice(model.anchorOffset(), 0, ...supsub);\n          setSelectionOffset(model, model.anchorOffset() - 1);\n          model.announce('deleted: ' + relation);\n        } else if (relation === 'denom') {\n          // Fraction denominator\n          const numer = model.parent().numer.filter(atom => atom.type !== 'placeholder' && atom.type !== 'first');\n          const denom = model.parent().denom.filter(atom => atom.type !== 'placeholder' && atom.type !== 'first');\n          model.path.pop(); // Array.prototype.splice.apply(\n          //     model.siblings(),\n          //     [model.anchorOffset(), 1].concat(denom)\n          // );\n          // @revisit\n\n          model.siblings().splice(model.anchorOffset(), 1, ...denom); // Array.prototype.splice.apply(\n          //     model.siblings(),\n          //     [model.anchorOffset(), 0].concat(numer)\n          // );\n          // @revisit\n\n          model.siblings().splice(model.anchorOffset(), 0, ...numer);\n          setSelectionOffset(model, model.anchorOffset() + numer.length - 1);\n          model.announce('deleted: denominator');\n        } else if (relation === 'body') {\n          const body = model.siblings().filter(atom => atom.type !== 'placeholder');\n\n          if (model.path.length > 1) {\n            body.shift(); // Remove the 'first' atom\n\n            model.path.pop();\n            model.siblings().splice(model.anchorOffset(), 1, ...body);\n            setSelectionOffset(model, model.anchorOffset() - 1);\n            model.announce('deleted: root');\n          }\n        } else {\n          move(model, 'backward');\n          deleteChar(model, -1);\n        }\n      }\n    } else if (dir > 0) {\n      if (anchorOffset !== siblings.length - 1) {\n        if (/^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(model.sibling(1).type)) {\n          move(model, 'forward');\n        } else {\n          model.announce('deleted', null, siblings.slice(anchorOffset + 1, anchorOffset + 2));\n          siblings.splice(anchorOffset + 1, 1);\n        }\n      } else {\n        // We're at the end of the sibling list, delete what comes next\n        const relation = model.relation();\n\n        if (relation === 'numer') {\n          const numer = model.parent().numer.filter(atom => atom.type !== 'placeholder' && atom.type !== 'first');\n          const denom = model.parent().denom.filter(atom => atom.type !== 'placeholder' && atom.type !== 'first');\n          model.path.pop(); // Array.prototype.splice.apply(\n          //     model.siblings(),\n          //     [model.anchorOffset(), 1].concat(denom)\n          // );\n          // Array.prototype.splice.apply(\n          //     model.siblings(),\n          //     [model.anchorOffset(), 0].concat(numer)\n          // );\n          // @revisit\n\n          model.siblings().splice(model.anchorOffset(), 1, ...denom);\n          model.siblings().splice(model.anchorOffset(), 0, ...numer);\n          setSelectionOffset(model, model.anchorOffset() + numer.length - 1);\n          model.announce('deleted: numerator');\n        } else {\n          move(model, 'forward');\n          deleteChar(model, -1);\n        }\n      }\n    }\n  } // Something has been deleted and the parent latex is no longer valid\n\n\n  invalidateVerbatimLatex(model); // Dispatch notifications\n\n  model.suppressChangeNotifications = contentWasChanging;\n  selectionDidChange(model);\n  contentDidChange(model);\n}\n/**\r\n * Delete sibling atoms\r\n */\n\n\nfunction deleteAtoms(model, count) {\n  if (count > 0) {\n    model.siblings().splice(model.anchorOffset() + 1, count);\n  } else {\n    model.siblings().splice(model.anchorOffset() + count + 1, -count);\n    setSelectionOffset(model, model.anchorOffset() + count);\n  }\n}\n/**\r\n * Delete the selection, or multiple characters\r\n */\n\n\nfunction deleteChar(model, count = 0) {\n  if (count === 0) {\n    delete_(model, 0);\n  } else if (count > 0) {\n    while (count > 0) {\n      delete_(model, +1);\n      count--;\n    }\n  } else {\n    while (count < 0) {\n      delete_(model, -1);\n      count++;\n    }\n  }\n\n  return true;\n}\n\nfunction applyStyleToUnstyledAtoms(atom, style) {\n  if (!atom || !style) return;\n\n  if (isAtomArray(atom)) {\n    // Apply styling options to each atom\n    atom.forEach(x => applyStyleToUnstyledAtoms(x, style));\n  } else if (typeof atom === 'object') {\n    if (!atom.color && !atom.backgroundColor && !atom.fontFamily && !atom.fontShape && !atom.fontSeries && !atom.fontSize) {\n      atom.applyStyle(style);\n      applyStyleToUnstyledAtoms(atom.body, style);\n      applyStyleToUnstyledAtoms(atom.numer, style);\n      applyStyleToUnstyledAtoms(atom.denom, style);\n      applyStyleToUnstyledAtoms(atom.index, style);\n      applyStyleToUnstyledAtoms(atom.overscript, style);\n      applyStyleToUnstyledAtoms(atom.underscript, style);\n      applyStyleToUnstyledAtoms(atom.subscript, style);\n      applyStyleToUnstyledAtoms(atom.superscript, style);\n    }\n  }\n}\n/**\r\n * Apply a style (color, background) to the selection.\r\n *\r\n * If the style is already applied to the selection, remove it. If the selection\r\n * has the style partially applied (i.e. only some sections), remove it from\r\n * those sections, and apply it to the entire selection.\r\n */\n\n\nfunction applyStyle$3(model, style) {\n  // No selection, nothing to do.\n  if (selectionIsCollapsed(model)) return false;\n\n  function everyStyle(property, value) {\n    let result = true;\n    forEachSelected(model, x => {\n      result = result && x[property] === value;\n    }, {\n      recursive: true\n    });\n    return result;\n  }\n\n  if (style.color && everyStyle('color', style.color)) {\n    // If the selection already has this color, turn it off\n    style.color = 'none';\n  }\n\n  if (style.backgroundColor && everyStyle('backgroundColor', style.backgroundColor)) {\n    // If the selection already has this color, turn it off\n    style.backgroundColor = 'none';\n  }\n\n  if (style.fontFamily && everyStyle('fontFamily', style.fontFamily)) {\n    // If the selection already has this font family, turn it off\n    style.fontFamily = 'none';\n  }\n\n  if (style.series) style.fontSeries = style.series;\n\n  if (style.fontSeries && everyStyle('fontSeries', style.fontSeries)) {\n    // If the selection already has this series (weight), turn it off\n    style.fontSeries = 'auto';\n  }\n\n  if (style.shape) style.fontShape = style.shape;\n\n  if (style.fontShape && everyStyle('fontShape', style.fontShape)) {\n    // If the selection already has this shape (italic), turn it off\n    style.fontShape = 'auto';\n  }\n\n  if (style.size) style.fontSize = style.size;\n\n  if (style.fontSize && everyStyle('fontSize', style.fontSize)) {\n    // If the selection already has this size, reset it to default size\n    style.fontSize = 'size5';\n  }\n\n  forEachSelected(model, x => x.applyStyle(style), {\n    recursive: true\n  });\n  contentDidChange(model);\n  return true;\n}\n/**\r\n * Normalize the model by adding 'first' atoms where necessary.\r\n * This function modifies the model in place.\r\n */\n\n\nfunction normalizeModel(model) {\n  model.root.forEach(x => {\n    if (Array.isArray(x.body) && (x.body.length === 0 || x.body[0].type !== 'first')) {\n      x.body.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.superscript && (x.superscript.length === 0 || x.superscript[0].type !== 'first')) {\n      x.superscript.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.subscript && (x.subscript.length === 0 || x.subscript[0].type !== 'first')) {\n      x.subscript.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.overscript && (x.overscript.length === 0 || x.overscript[0].type !== 'first')) {\n      x.overscript.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.underscript && (x.underscript.length === 0 || x.underscript[0].type !== 'first')) {\n      x.underscript.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.numer && (x.numer.length === 0 || x.numer[0].type !== 'first')) {\n      x.numer.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.denom && (x.denom.length === 0 || x.denom[0].type !== 'first')) {\n      x.denom.unshift(new Atom(x.mode, 'first'));\n    }\n\n    if (x.index && (x.index.length === 0 || x.index[0].type !== 'first')) {\n      x.index.unshift(new Atom(x.mode, 'first'));\n    }\n  });\n}\n\nfunction insert(model, s, options) {\n  var _a, _b, _c, _d; // Try to insert a smart fence.\n\n\n  if (!((_a = options.smartFence) !== null && _a !== void 0 ? _a : false)) {\n    // When smartFence is turned off, only do a \"smart\" fence insert\n    // if we're inside a `leftright`, at the last char\n    const parent = model.parent();\n\n    if ((parent === null || parent === void 0 ? void 0 : parent.type) === 'leftright' && parent.rightDelim === '?' && model.endOffset() === model.siblings().length - 1 && /^[)}\\]|]$/.test(s)) {\n      parent.rightDelim = s;\n      move(model, 'forward');\n      normalizeModel(model);\n      contentDidChange(model);\n      return;\n    }\n  } else if (insertSmartFence(model, s, options.style)) {\n    normalizeModel(model);\n    return;\n  }\n\n  const suppressChangeNotifications = model.suppressChangeNotifications;\n\n  if (options.suppressChangeNotifications) {\n    model.suppressChangeNotifications = true;\n  }\n\n  const contentWasChanging = model.suppressChangeNotifications;\n  model.suppressChangeNotifications = true;\n  if (!options.insertionMode) options.insertionMode = 'replaceSelection';\n  if (!options.selectionMode) options.selectionMode = 'placeholder';\n  if (!options.format) options.format = 'auto';\n  options.macros = (_b = options.macros) !== null && _b !== void 0 ? _b : model.options.macros;\n  const mode = options.mode || getAnchorMode(model);\n  let mathlist; // Save the content of the selection, if any\n\n  const args = [makeRoot('math', getSelectedAtoms(model)).toLatex(false)]; // If a placeholder was specified, use it\n\n  const placeholder = (_c = options.placeholder) !== null && _c !== void 0 ? _c : '\\\\placeholder{}';\n  args['?'] = placeholder; // Delete any selected items\n\n  if (options.insertionMode === 'replaceSelection' && !selectionIsCollapsed(model)) {\n    deleteChar(model);\n  } else if (options.insertionMode === 'replaceAll') {\n    model.root.body = [];\n    model.root.latex = '';\n    model.path = [{\n      relation: 'body',\n      offset: 0\n    }];\n    model.extent = 0;\n  } else if (options.insertionMode === 'insertBefore') {\n    collapseSelectionBackward(model);\n  } else if (options.insertionMode === 'insertAfter') {\n    collapseSelectionForward(model);\n  } // Delete any placeholders before or after the insertion point\n\n\n  const siblings = model.siblings();\n  const firstOffset = model.startOffset();\n\n  if (firstOffset + 1 < siblings.length && siblings[firstOffset + 1] && siblings[firstOffset + 1].type === 'placeholder') {\n    deleteChar(model, 1);\n  } else if (firstOffset > 0 && siblings[firstOffset] && siblings[firstOffset].type === 'placeholder') {\n    deleteChar(model, -1);\n  }\n\n  if (mode === 'math' && options.format === 'ASCIIMath') {\n    var _parseMathString = parseMathString(s, {\n      format: 'ASCIIMath'\n    });\n\n    var _parseMathString2 = _slicedToArray(_parseMathString, 2);\n\n    s = _parseMathString2[1];\n    mathlist = parseString(s, 'math', null, options === null || options === void 0 ? void 0 : options.macros, false, model.listeners.onError); // Simplify result.\n\n    simplifyParen(model, mathlist);\n  } else if (mode !== 'text' && (options.format === 'auto' || options.format === 'latex')) {\n    if (mode === 'command') {\n      // Short-circuit the tokenizer and parser if in command mode\n      mathlist = [];\n\n      var _iterator43 = _createForOfIteratorHelper(s),\n          _step43;\n\n      try {\n        for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n          const c = _step43.value;\n\n          if (COMMAND_MODE_CHARACTERS.test(c)) {\n            mathlist.push(new Atom('command', 'command', c));\n          }\n        }\n      } catch (err) {\n        _iterator43.e(err);\n      } finally {\n        _iterator43.f();\n      }\n    } else if (s === '\\u001b') {\n      // Insert an 'esc' character triggers the command mode\n      mathlist = [new Atom('command', 'command', '\\\\')];\n    } else {\n      if (options.format === 'auto') {\n        var _parseMathString3 = parseMathString(s);\n\n        var _parseMathString4 = _slicedToArray(_parseMathString3, 2);\n\n        options.format = _parseMathString4[0];\n        s = _parseMathString4[1];\n      }\n\n      if (args[0]) {\n        // There was a selection, we'll use it for #@\n        s = s.replace(/(^|[^\\\\])#@/g, '$1#0');\n      } else if (/(^|[^\\\\])#@/.test(s)) {\n        // If we're inserting a latex fragment that includes a #@ argument\n        // substitute the preceding `mord`s or text mode atoms for it (implicit argument)\n        const offset = getImplicitArgOffset(model);\n        s = s.replace(/(^|[^\\\\])#@/g, '$1' + getContentFromSiblings(model, offset + 1, model.startOffset())); // Delete the implicit argument\n\n        deleteAtoms(model, offset - model.startOffset());\n      } else {\n        // No selection, no 'mord' before. Let's make '#@' a placeholder.\n        s = s.replace(/(^|[^\\\\])#@/g, '$1#?');\n      } // If the whole string is bracketed by a mode shift command, remove it\n\n\n      if (/^\\$\\$(.*)\\$\\$$/.test(s)) {\n        s = s.substring(2, s.length - 2);\n      }\n\n      if (!args[0]) args[0] = placeholder;\n      mathlist = parseString(s, mode, args, options.macros, (_d = options.smartFence) !== null && _d !== void 0 ? _d : false, model.listeners.onError); // Simplify result.\n\n      if (options.format !== 'latex') {\n        simplifyParen(model, mathlist);\n      }\n    }\n  } else if (mode === 'text' || options.format === 'text') {\n    // Map special TeX characters to alternatives\n    // Must do this one first, since other replacements include backslash\n    s = s.replace(/\\\\/g, '\\\\textbackslash ');\n    s = s.replace(/#/g, '\\\\#');\n    s = s.replace(/\\$/g, '\\\\$');\n    s = s.replace(/%/g, '\\\\%');\n    s = s.replace(/&/g, '\\\\&'); // s = s.replace(/:/g, '\\\\colon');     // text colon?\n    // s = s.replace(/\\[/g, '\\\\lbrack');\n    // s = s.replace(/]/g, '\\\\rbrack');\n\n    s = s.replace(/_/g, '\\\\_');\n    s = s.replace(/{/g, '\\\\textbraceleft ');\n    s = s.replace(/}/g, '\\\\textbraceright ');\n    s = s.replace(/\\^/g, '\\\\textasciicircum ');\n    s = s.replace(/~/g, '\\\\textasciitilde ');\n    s = s.replace(/£/g, '\\\\textsterling ');\n    mathlist = parseString(s, 'text', args, options.macros, false, model.listeners.onError);\n  } // Something has been inserted, and the parent's verbatim latex is no longer valid\n\n\n  invalidateVerbatimLatex(model); // Some atoms may already have a style (for example if there was an\n  // argument, i.e. the selection, that this was applied to).\n  // So, don't apply style to atoms that are already styled, but *do*\n  // apply it to newly created atoms that have no style yet.\n\n  applyStyleToUnstyledAtoms(mathlist, options.style); // Insert the mathlist at the position following the anchor\n\n  const parent = model.parent();\n\n  if (options.format !== 'latex' && model.options.removeExtraneousParentheses && parent && parent.type === 'leftright' && parent.leftDelim === '(' && isEmptyMathlist(parent.body) && mathlist && mathlist.length === 1 && mathlist[0].type === 'genfrac') {\n    // If the insert is fraction inside a lefright, remove the leftright\n    model.path.pop();\n    model.siblings()[model.anchorOffset()] = mathlist[0];\n  } else {\n    if (options.format === 'latex' && args.length === 1 && !args[0]) {\n      // If we are given a latex string with no arguments, store it verbatim\n      // Caution: we can only do this if the toLatex() for this parent\n      // would return an empty string. If the latex is generated using other\n      // properties than parent.body, for example by adding '\\left.' and\n      // '\\right.' with a 'leftright' type, we can't use this shortcut.\n      if (parent.type === 'root' && isEmptyMathlist(parent.body)) {\n        parent.latex = s;\n      }\n    }\n\n    model.siblings().splice(model.anchorOffset() + 1, 0, ...mathlist);\n  } // If needed, make sure there's a first atom in the siblings list\n\n\n  normalizeModel(model); // Prepare to dispatch notifications\n  // (for selection changes, then content change)\n\n  model.suppressChangeNotifications = contentWasChanging; // Update the anchor's location\n\n  if (options.selectionMode === 'placeholder') {\n    // Move to the next placeholder\n    const newPlaceholders = [];\n\n    var _iterator44 = _createForOfIteratorHelper(mathlist),\n        _step44;\n\n    try {\n      for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n        const atom = _step44.value;\n        atom.forEach(x => {\n          if (x.type === 'placeholder') newPlaceholders.push(x);\n        });\n      }\n    } catch (err) {\n      _iterator44.e(err);\n    } finally {\n      _iterator44.f();\n    }\n\n    if (newPlaceholders.length === 0 || !leap(model, +1, false)) {\n      // No placeholder found, move to right after what we just inserted\n      setSelectionOffset(model, model.anchorOffset() + mathlist.length); // model.path[model.path.length - 1].offset += mathlist.length;\n    } else {\n      model.announce('move'); // should have placeholder selected\n    }\n  } else if (options.selectionMode === 'before') ;else if (options.selectionMode === 'after') {\n    setSelectionOffset(model, model.anchorOffset() + mathlist.length);\n  } else if (options.selectionMode === 'item') {\n    setSelectionOffset(model, model.anchorOffset(), mathlist.length);\n  }\n\n  contentDidChange(model);\n  model.suppressChangeNotifications = suppressChangeNotifications;\n}\n/**\r\n * Create, remove or update a composition atom at the current location\r\n */\n\n\nfunction updateComposition(model, s) {\n  const anchor = getAnchor(model); // We're creating or updating a composition\n\n  if (anchor.type === 'composition') {\n    // Composition already in progress, update it\n    anchor.body = s;\n  } else {\n    // No composition yet, create one\n    // Remove previous caret\n    const caret = anchor.caret;\n    anchor.caret = ''; // Create 'composition' atom, with caret\n\n    const atom = new Atom(anchor.mode, 'composition', s);\n    atom.caret = caret;\n    model.siblings().splice(model.anchorOffset() + 1, 0, atom); //Move cursor one past the composition zone\n\n    model.path[model.path.length - 1].offset += 1;\n  }\n}\n/**\r\n * Remve the composition zone\r\n */\n\n\nfunction removeComposition(model) {\n  const anchor = getAnchor(model);\n\n  if (anchor.type === 'composition') {\n    model.siblings().splice(model.anchorOffset(), 1);\n    model.path[model.path.length - 1].offset -= 1;\n  }\n}\n\nfunction removeParen(list) {\n  if (!list) return undefined;\n\n  if (list.length === 1 && list[0].type === 'leftright' && list[0].leftDelim === '(') {\n    list = list[0].body;\n  }\n\n  return list;\n}\n/**\r\n * If it's a fraction with a parenthesized numerator or denominator\r\n * remove the parentheses\r\n *\r\n */\n\n\nfunction simplifyParen(model, atoms) {\n  if (atoms && model.options.removeExtraneousParentheses) {\n    for (let i = 0; atoms[i]; i++) {\n      if (atoms[i].type === 'leftright' && atoms[i].leftDelim === '(') {\n        if (isAtomArray(atoms[i].body)) {\n          let genFracCount = 0;\n          let genFracIndex = 0;\n          let nonGenFracCount = 0;\n\n          for (let j = 0; atoms[i].body[j]; j++) {\n            if (atoms[i].body[j].type === 'genfrac') {\n              genFracCount++;\n              genFracIndex = j;\n            }\n\n            if (atoms[i].body[j].type !== 'first') {\n              nonGenFracCount++;\n            }\n          }\n\n          if (nonGenFracCount === 0 && genFracCount === 1) {\n            // This is a single frac inside a leftright: remove the leftright\n            atoms[i] = atoms[i].body[genFracIndex];\n          }\n        }\n      }\n    }\n\n    atoms.forEach(atom => {\n      if (atom.type === 'genfrac') {\n        simplifyParen(model, atom.numer);\n        simplifyParen(model, atom.denom);\n        atom.numer = removeParen(atom.numer);\n        atom.denom = removeParen(atom.denom);\n      }\n\n      if (atom.superscript) {\n        simplifyParen(model, atom.superscript);\n        atom.superscript = removeParen(atom.superscript);\n      }\n\n      if (atom.subscript) {\n        simplifyParen(model, atom.subscript);\n        atom.subscript = removeParen(atom.subscript);\n      }\n\n      if (atom.underscript) {\n        simplifyParen(model, atom.underscript);\n        atom.underscript = removeParen(atom.underscript);\n      }\n\n      if (atom.overscript) {\n        simplifyParen(model, atom.overscript);\n        atom.overscript = removeParen(atom.overscript);\n      }\n\n      if (atom.index) {\n        simplifyParen(model, atom.index);\n        atom.index = removeParen(atom.index);\n      }\n\n      if (atom.type === 'surd') {\n        simplifyParen(model, atom.body);\n        atom.body = removeParen(atom.body);\n      } else if (isAtomArray(atom.body)) {\n        simplifyParen(model, atom.body);\n      }\n\n      if (atom.array) {\n        for (let i = arrayCellCount(atom.array); i >= 0; i--) {\n          simplifyParen(model, arrayCell(atom.array, i));\n        }\n      }\n    });\n  }\n} // const MATCHING_FENCE = {\n//     '\\\\lbrace': ['\\\\rbrace'],\n//     '(': [')', ']', '\\\\rbrack'],\n//     // For (open/closed) intervals\n//     '\\\\rbrack': [')', ']', '\\\\rbrack', '[', '\\\\lbrack'],\n//     '\\\\lbrack': [')', ']', '\\\\rbrack', '[', '\\\\lbrack'],\n// };\n\n/**\r\n * Insert a smart fence '(', '{', '[', etc...\r\n * If not handled (because `fence` wasn't a fence), return false.\r\n */\n\n\nfunction insertSmartFence(model, fence, style) {\n  const parent = model.parent();\n  let delims = parent.type === 'leftright' ? parent.leftDelim + parent.rightDelim : '';\n  if (delims === '\\\\lbrace\\\\rbrace') delims = '{}';\n  if (delims === '\\\\{\\\\}') delims = '{}'; //\n  // 1. Are we inserting a middle fence?\n  // ...as in {...|...}\n  //\n\n  if (delims === '{}' && /\\||\\\\vert|\\\\Vert|\\\\mvert|\\\\mid/.test(fence)) {\n    insert(model, '\\\\,\\\\middle' + fence + '\\\\, ', {\n      mode: 'math',\n      format: 'latex',\n      style: style\n    });\n    return true;\n  } // Normalize some fences.\n  // Note that '{' and '}' are not valid braces.\n  // They should be '\\{' or '\\lbrace' and '\\}' or '\\rbrace'\n\n\n  if (fence === '{' || fence === '\\\\{') fence = '\\\\lbrace';\n  if (fence === '}' || fence === '\\\\}') fence = '\\\\rbrace';\n  if (fence === '[') fence = '\\\\lbrack';\n  if (fence === ']') fence = '\\\\rbrack'; //\n  // 2. Is it an open fence?\n  //\n\n  const rDelim = RIGHT_DELIM[fence];\n\n  if (rDelim && !(parent.type === 'leftright' && parent.leftDelim === '|')) {\n    // We have a valid open fence as input\n    let s = '';\n    const collapsed = selectionIsCollapsed(model) || getAnchor(model).type === 'placeholder';\n\n    if (model.sibling(0).isFunction) {\n      // We're before a function (e.g. `\\sin`, or 'f'):  this is an\n      // argument list.\n      // Use `\\mleft...\\mright'.\n      s = '\\\\mleft' + fence + '\\\\mright';\n    } else {\n      s = '\\\\left' + fence + '\\\\right';\n    }\n\n    s += collapsed ? '?' : rDelim;\n    let content = [];\n\n    if (collapsed) {\n      content = model.siblings().splice(model.anchorOffset() + 1, model.siblings().length);\n    }\n\n    insert(model, s, {\n      mode: 'math',\n      format: 'latex',\n      style: style\n    });\n\n    if (collapsed) {\n      // Move everything that was after the anchor into the leftright\n      model.sibling(0).body = content;\n      move(model, 'backward');\n    }\n\n    return true;\n  } //\n  // 3. Is it a close fence?\n  //\n\n\n  let lDelim;\n  Object.keys(RIGHT_DELIM).forEach(delim => {\n    if (fence === RIGHT_DELIM[delim]) lDelim = delim;\n  });\n\n  if (lDelim) {\n    // We found the matching open fence, so it was a valid close fence.\n    // Note that `lDelim` may not match `fence`. That's OK.\n    // If we're the last atom inside a 'leftright',\n    // update the parent\n    if (parent && parent.type === 'leftright' && model.endOffset() === model.siblings().length - 1) {\n      parent.rightDelim = fence;\n      move(model, 'forward');\n      contentDidChange(model);\n      return true;\n    } // If we have a `leftright` sibling to our left\n    // with an indeterminate right fence,\n    // move what's between us and the `leftright` inside the `leftright`\n\n\n    const siblings = model.siblings();\n    let i;\n\n    for (i = model.endOffset(); i >= 0; i--) {\n      if (siblings[i].type === 'leftright' && siblings[i].rightDelim === '?') {\n        break;\n      }\n    }\n\n    if (i >= 0) {\n      siblings[i].rightDelim = fence;\n      siblings[i].body = siblings[i].body.concat(siblings.slice(i + 1, model.endOffset() + 1));\n      siblings.splice(i + 1, model.endOffset() - i);\n      setSelectionOffset(model, i);\n      contentDidChange(model);\n      return true;\n    } // If we're inside a `leftright`, but not the last atom,\n    // and the `leftright` right delim is indeterminate\n    // adjust the body (put everything after the insertion point outside)\n\n\n    if (parent && parent.type === 'leftright' && parent.rightDelim === '?') {\n      parent.rightDelim = fence;\n      const tail = siblings.slice(model.endOffset() + 1);\n      siblings.splice(model.endOffset() + 1);\n      model.path.pop(); // Array.prototype.splice.apply(\n      //     model.siblings(),\n      //     [model.endOffset() + 1, 0].concat(tail)\n      // );\n      // @revisit: veryfiy this does the right thing\n\n      model.siblings().splice(model.endOffset() + 1, 0, ...tail);\n      contentDidChange(model);\n      return true;\n    } // Is our grand-parent a 'leftright'?\n    // If `\\left(\\frac{1}{x|}\\right?` with the caret at `|`\n    // go up to the 'leftright' and apply it there instead\n\n\n    const grandparent = model.ancestor(2);\n\n    if (grandparent && grandparent.type === 'leftright' && grandparent.rightDelim === '?' && model.endOffset() === siblings.length - 1) {\n      move(model, 'forward');\n      return insertSmartFence(model, fence, style);\n    } // Meh... We couldn't find a matching open fence. Just insert the\n    // closing fence as a regular character\n\n\n    return false;\n  }\n\n  return false;\n}\n\nclass PositionIterator {\n  constructor(root) {\n    this.positions = [];\n    this.root = root;\n    const model = new ModelPrivate();\n    model.root = root;\n    normalizeModel(model);\n\n    do {\n      this.positions.push({\n        path: model.toString(),\n        atom: getCurrentAtom(model),\n        depth: model.path.length\n      });\n    } while (nextPosition(model));\n  }\n\n  at(index) {\n    return this.positions[index];\n  }\n\n  find(atom) {\n    for (let i = 0; i < this.positions.length; i++) {\n      if (this.positions[i].atom === atom) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  get lastPosition() {\n    return this.positions.length - 1;\n  }\n\n  paths(indexes) {\n    return indexes.map(i => this.at(i).path);\n  }\n\n}\n\nfunction nextPosition(model) {\n  const NEXT_RELATION = {\n    body: 'numer',\n    numer: 'denom',\n    denom: 'index',\n    index: 'overscript',\n    overscript: 'underscript',\n    underscript: 'subscript',\n    subscript: 'superscript'\n  };\n\n  if (model.anchorOffset() === model.siblings(false).length - 1) {\n    // We've reached the end of this list.\n    // Is there another list to consider?\n    let relation = NEXT_RELATION[model.relation()];\n    const parent = model.parent();\n\n    while (relation && !parent[relation]) {\n      relation = NEXT_RELATION[relation];\n    } // We found a new relation/set of siblings...\n\n\n    if (relation) {\n      setPosition(model, 0, relation);\n      return true;\n    } // No more siblings, check if we have a sibling cell in an array\n\n\n    if (model.parent().array) {\n      const maxCellCount = arrayCellCount(model.parent().array);\n      let cellIndex = parseInt(model.relation().match(/cell([0-9]*)$/)[1]) + 1;\n\n      while (cellIndex < maxCellCount) {\n        const cell = arrayCell(model.parent().array, cellIndex, false); // Some cells could be null (sparse array), so skip them\n\n        if (cell && setPosition(model, 0, 'cell' + cellIndex)) {\n          return true;\n        }\n\n        cellIndex += 1;\n      }\n    } // No more siblings, go up to the parent.\n\n\n    if (model.path.length === 1) {\n      // We're already at the top: nowhere else to go\n      return false;\n    } // We've reached the end of the siblings.\n\n\n    model.path.pop();\n    return true;\n  } // Still some siblings to go through. Move on to the next one.\n\n\n  setPosition(model, model.anchorOffset() + 1);\n  const anchor = getCurrentAtom(model); // Dive into its components, if the new anchor is a compound atom,\n  // and allows capture of the selection by its sub-elements\n\n  if (anchor && !anchor.captureSelection) {\n    let relation;\n\n    if (anchor.array) {\n      // Find the first non-empty cell in this array\n      let cellIndex = 0;\n      relation = '';\n      const maxCellCount = arrayCellCount(anchor.array);\n\n      while (!relation && cellIndex < maxCellCount) {\n        // Some cells could be null (sparse array), so skip them\n        if (arrayCell(anchor.array, cellIndex, false)) {\n          relation = 'cell' + cellIndex.toString();\n        }\n\n        cellIndex += 1;\n      }\n\n      console.assert(relation);\n      model.path.push({\n        relation: relation,\n        offset: 0\n      });\n      setPosition(model, 0, relation);\n      return true;\n    }\n\n    relation = 'body';\n\n    while (relation) {\n      if (isArray(anchor[relation])) {\n        model.path.push({\n          relation: relation,\n          offset: 0\n        });\n        return true;\n      }\n\n      relation = NEXT_RELATION[relation];\n    }\n  }\n\n  return true;\n}\n\nfunction setPosition(model, offset = 0, relation = '') {\n  // If no relation (\"children\", \"superscript\", etc...) is specified\n  // keep the current relation\n  const oldRelation = model.path[model.path.length - 1].relation;\n  if (!relation) relation = oldRelation; // If the relation is invalid, exit and return false\n\n  const parent = model.parent();\n  if (!parent && relation !== 'body') return false;\n  const arrayRelation = relation.startsWith('cell');\n\n  if (!arrayRelation && !parent[relation] || arrayRelation && !parent.array) {\n    return false;\n  } // Temporarily set the path to the potentially new relation to get the\n  // right siblings\n\n\n  model.path[model.path.length - 1].relation = relation;\n  const siblings = model.siblings(false);\n  const siblingsCount = siblings.length; // Restore the relation\n\n  model.path[model.path.length - 1].relation = oldRelation; // Calculate the new offset, and make sure it is in range\n  // (`setSelectionOffset()` can be called with an offset greater than\n  // the number of children, for example when doing an up from a\n  // numerator to a smaller denominator, e.g. \"1/(x+1)\".\n\n  if (offset < 0) {\n    offset = siblingsCount + offset;\n  }\n\n  offset = Math.max(0, Math.min(offset, siblingsCount - 1));\n  model.path[model.path.length - 1].relation = relation;\n  model.path[model.path.length - 1].offset = offset;\n  return true;\n}\n\nfunction getCurrentAtom(model) {\n  if (model.parent().array) {\n    return arrayCell(model.parent().array, model.relation())[model.anchorOffset()];\n  }\n\n  const siblings = model.siblings(false);\n  return siblings[Math.min(siblings.length - 1, model.anchorOffset())];\n}\n\nclass ModelPrivate {\n  constructor(options, listeners, hooks, target) {\n    this.options = _objectSpread({\n      mode: 'math',\n      removeExtraneousParentheses: false\n    }, options);\n    this.root = makeRoot(this.options.mode);\n    this.path = [{\n      relation: 'body',\n      offset: 0\n    }];\n    this.extent = 0;\n    this.setListeners(listeners);\n    this.setHooks(hooks);\n    this.mathfield = target;\n    this.suppressChangeNotifications = false;\n  }\n\n  clone() {\n    const result = new ModelPrivate(this.options, this.listeners, this.hooks, this.mathfield);\n    result.root = this.root;\n    result.path = clone(this.path);\n    return result;\n  }\n\n  setListeners(listeners) {\n    this.listeners = listeners;\n  }\n\n  setHooks(hooks) {\n    this.hooks = {\n      announce: (hooks === null || hooks === void 0 ? void 0 : hooks.announce) ? hooks.announce : (_target, _command, _modelBefore, _atoms) => {\n        return;\n      },\n      moveOut: (hooks === null || hooks === void 0 ? void 0 : hooks.moveOut) ? hooks.moveOut : () => {\n        return true;\n      },\n      tabOut: (hooks === null || hooks === void 0 ? void 0 : hooks.tabOut) ? hooks.tabOut : () => {\n        return true;\n      }\n    };\n  }\n\n  get selection() {\n    const anchor = getAnchor(this);\n    let focus = undefined;\n\n    if (this.parent().array) {\n      focus = arrayCell(this.parent().array, this.relation())[this.focusOffset()];\n    } else {\n      const siblings = this.siblings();\n      focus = siblings[Math.min(siblings.length - 1, this.focusOffset())];\n    }\n\n    const iter = new PositionIterator(this.root);\n    return [normalizeRange(iter, {\n      start: iter.find(anchor),\n      end: iter.find(focus)\n    })];\n  }\n\n  set selection(value) {\n    setSelection(this, value);\n  }\n\n  get lastPosition() {\n    const iter = new PositionIterator(this.root);\n    return iter.lastPosition;\n  }\n\n  announce(command, // @revisit: be more explicit\n  modelBefore, atoms = []) {\n    this.hooks.announce(this.mathfield, command, modelBefore, atoms);\n  }\n  /**\r\n   * Return a string representation of the selection.\r\n   * @todo This is a bad name for this function, since it doesn't return\r\n   * a representation of the content, which one might expect...\r\n   *\r\n   * Note: Not private: used by filter\r\n   *\r\n   */\n\n\n  toString() {\n    return pathToString(this.path, this.extent);\n  }\n  /**\r\n   * Note: used by model-utils, so not private.\r\n   * @return array of children of the parent\r\n   */\n\n\n  siblings(addMisingFirstAtom = true) {\n    var _a;\n\n    if (this.path.length === 0) return [];\n    let siblings;\n\n    if (this.parent().array) {\n      siblings = arrayCell(this.parent().array, this.relation());\n    } else {\n      siblings = (_a = this.parent()[this.relation()]) !== null && _a !== void 0 ? _a : [];\n      if (typeof siblings === 'string') siblings = [];\n    } // If the 'first' atom is missing, insert it\n\n\n    if (addMisingFirstAtom && (siblings.length === 0 || siblings[0].type !== 'first')) {\n      siblings.unshift(new Atom(this.parent().mode, 'first'));\n    }\n\n    return siblings;\n  }\n\n  anchorOffset() {\n    return this.path.length > 0 ? this.path[this.path.length - 1].offset : 0;\n  }\n\n  focusOffset() {\n    return this.path.length > 0 ? this.path[this.path.length - 1].offset + this.extent : 0;\n  }\n  /**\r\n   *  True if the entire group is selected\r\n   */\n\n\n  groupIsSelected() {\n    return this.startOffset() === 0 && this.endOffset() >= this.siblings().length - 1;\n  }\n  /**\r\n   * Offset of the first atom included in the selection\r\n   * i.e. `=1` => selection starts with and includes first atom\r\n   * With expression _x=_ and atoms :\r\n   * - 0: _<first>_\r\n   * - 1: _x_\r\n   * - 2: _=_\r\n   *\r\n   * - if caret is before _x_:  `start` = 0, `end` = 0\r\n   * - if caret is after _x_:   `start` = 1, `end` = 1\r\n   * - if _x_ is selected:      `start` = 1, `end` = 2\r\n   * - if _x=_ is selected:   `start` = 1, `end` = 3\r\n   * Note: accessed by model-selection, not private\r\n   */\n\n\n  startOffset() {\n    return Math.min(this.focusOffset(), this.anchorOffset());\n  }\n  /**\r\n   * Offset of the first atom not included in the selection\r\n   * i.e. max value of `siblings.length`\r\n   * `endOffset - startOffset = extent`\r\n   *\r\n   * Note: accessed by model-selection, not private\r\n   */\n\n\n  endOffset() {\n    return Math.max(this.focusOffset(), this.anchorOffset());\n  }\n  /**\r\n   * Sibling, relative to `anchor`\r\n   * `sibling(0)` = start of selection\r\n   * `sibling(-1)` = sibling immediately left of start offset\r\n   */\n\n\n  sibling(offset) {\n    return this.siblings()[this.startOffset() + offset];\n  } // @revisit: move ancestor, and anything related to the selection to model-selection\n\n  /**\r\n   * Note: used by model-utils, so not private.\r\n   * @param ancestor distance from self to ancestor.\r\n   * - `ancestor` = 0: self\r\n   * - `ancestor` = 1: parent\r\n   * - `ancestor` = 2: grand-parent\r\n   * - etc...\r\n   */\n\n\n  ancestor(ancestor) {\n    // If the requested ancestor goes beyond what's available,\n    // return null\n    if (ancestor > this.path.length) return null; // Start with the root\n\n    let result = this.root; // Iterate over the path segments, selecting the appropriate\n\n    for (let i = 0; i < this.path.length - ancestor; i++) {\n      const segment = this.path[i];\n\n      if (result.array) {\n        result = arrayCell(result.array, segment.relation)[segment.offset];\n      } else if (!result[segment.relation]) {\n        // There is no such relation... (the path got out of sync with the tree)\n        return null;\n      } else {\n        // Make sure the 'first' atom has been inserted, otherwise\n        // the segment.offset might be invalid\n        if (result[segment.relation].length === 0 || result[segment.relation][0].type !== 'first') {\n          result[segment.relation].unshift(new Atom(result[segment.relation][0].mode, 'first'));\n        }\n\n        const offset = Math.min(segment.offset, result[segment.relation].length - 1);\n        result = result[segment.relation][offset];\n      }\n    }\n\n    return result;\n  }\n\n  parent() {\n    return this.ancestor(1);\n  }\n\n  relation() {\n    return this.path.length > 0 ? this.path[this.path.length - 1].relation : '';\n  }\n  /**\r\n   * If necessary, insert a `first` atom in the sibling list.\r\n   * If there's already a `first` atom, do nothing.\r\n   * The `first` atom is used as a 'placeholder' to hold the blinking caret when\r\n   * the caret is positioned at the very beginning of the mathlist.\r\n   */\n\n\n  insertFirstAtom() {\n    this.siblings();\n  }\n\n}\n\nfunction setSelection(model, value) {\n  // @todo: for now, only consider the first range\n  const range = Array.isArray(value) ? value[0] : value; // Normalize the range\n\n  const iter = new PositionIterator(model.root);\n  if (!range.direction) range.direction = 'forward';\n\n  if (range.start < 0 || range.start > iter.lastPosition) {\n    range.start = iter.lastPosition;\n  }\n\n  if (typeof range.end === 'undefined') range.end = range.start;\n\n  if (range.end < 0 || range.end > iter.lastPosition) {\n    range.end = iter.lastPosition;\n  }\n\n  let anchorPath;\n\n  if (range.direction === 'backward') {\n    anchorPath = iter.at(range.end).path;\n  } else {\n    anchorPath = iter.at(range.start).path;\n  }\n\n  setPath(model, anchorPath, range.end - range.start);\n}\n/**\r\n * Switch the cursor to the superscript and select it. If there is no subscript\r\n * yet, create one.\r\n */\n\n\nfunction _moveToSuperscript(model) {\n  collapseSelectionForward(model);\n\n  if (!getAnchor(model).superscript) {\n    if (getAnchor(model).subscript) {\n      getAnchor(model).superscript = [new Atom(model.parent().mode, 'first')];\n    } else {\n      const sibling = model.sibling(1);\n\n      if (sibling === null || sibling === void 0 ? void 0 : sibling.superscript) {\n        model.path[model.path.length - 1].offset += 1;\n      } else if (sibling === null || sibling === void 0 ? void 0 : sibling.subscript) {\n        model.path[model.path.length - 1].offset += 1;\n        getAnchor(model).superscript = [new Atom(model.parent().mode, 'first')];\n      } else {\n        if (getAnchor(model).limits !== 'limits') {\n          model.siblings().splice(model.anchorOffset() + 1, 0, new Atom(model.parent().mode, 'msubsup', '\\u200b', getAnchorStyle(model)));\n          model.path[model.path.length - 1].offset += 1;\n        }\n\n        getAnchor(model).superscript = [new Atom(model.parent().mode, 'first')];\n      }\n    }\n  }\n\n  model.path.push({\n    relation: 'superscript',\n    offset: 0\n  });\n\n  _selectGroup(model);\n\n  return true;\n}\n/**\r\n * Switch the cursor to the subscript and select it. If there is no subscript\r\n * yet, create one.\r\n */\n\n\nfunction _moveToSubscript(model) {\n  collapseSelectionForward(model);\n\n  if (!getAnchor(model).subscript) {\n    if (getAnchor(model).superscript) {\n      getAnchor(model).subscript = [new Atom(model.parent().mode, 'first')];\n    } else {\n      const sibling = model.sibling(1);\n\n      if (sibling === null || sibling === void 0 ? void 0 : sibling.subscript) {\n        model.path[model.path.length - 1].offset += 1;\n      } else if (sibling === null || sibling === void 0 ? void 0 : sibling.superscript) {\n        model.path[model.path.length - 1].offset += 1;\n        getAnchor(model).subscript = [new Atom(model.parent().mode, 'first')];\n      } else {\n        if (getAnchor(model).limits !== 'limits') {\n          model.siblings().splice(model.anchorOffset() + 1, 0, new Atom(model.parent().mode, 'msubsup', '\\u200b', getAnchorStyle(model)));\n          model.path[model.path.length - 1].offset += 1;\n        }\n\n        getAnchor(model).subscript = [new Atom(model.parent().mode, 'first')];\n      }\n    }\n  }\n\n  model.path.push({\n    relation: 'subscript',\n    offset: 0\n  });\n\n  _selectGroup(model);\n\n  return true;\n}\n/**\r\n * If cursor is currently in:\r\n * - superscript: move to subscript, creating it if necessary\r\n * - subscript: move to superscript, creating it if necessary\r\n * - numerator: move to denominator\r\n * - denominator: move to numerator\r\n * - otherwise: move to superscript\r\n */\n\n\nregister$2({\n  moveToOpposite: model => {\n    const OPPOSITE_RELATIONS = {\n      superscript: 'subscript',\n      subscript: 'superscript',\n      denom: 'numer',\n      numer: 'denom'\n    };\n    const oppositeRelation = OPPOSITE_RELATIONS[model.relation()];\n\n    if (!oppositeRelation) {\n      _moveToSuperscript(model);\n    }\n\n    if (!model.parent()[oppositeRelation]) {\n      // Don't have children of the opposite relation yet\n      // Add them\n      model.parent()[oppositeRelation] = [new Atom(model.parent().mode, 'first')];\n    }\n\n    setSelectionOffset(model, 0, 'end', oppositeRelation);\n    return true;\n  },\n  moveBeforeParent: model => {\n    if (model.path.length > 1) {\n      model.path.pop();\n      setSelectionOffset(model, model.anchorOffset() - 1);\n      return true;\n    }\n\n    model.announce('plonk');\n    return false;\n  },\n  moveAfterParent: model => _moveAfterParent(model),\n  moveToNextPlaceholder: model => leap(model, +1),\n  moveToPreviousPlaceholder: model => leap(model, -1),\n  moveToNextChar: model => move(model, 'forward'),\n  moveToPreviousChar: model => move(model, 'backward'),\n  moveUp: model => move(model, 'upward'),\n  moveDown: model => move(model, 'downward'),\n  moveToNextWord: model => skip(model, +1),\n  moveToPreviousWord: model => skip(model, -1),\n  moveToGroupStart: model => setSelectionOffset(model, 0),\n  moveToGroupEnd: model => setSelectionOffset(model, -1),\n  moveToMathFieldStart: model => jumpToMathFieldBoundary(model, -1),\n  moveToMathFieldEnd: model => jumpToMathFieldBoundary(model, +1),\n  moveToSuperscript: model => _moveToSuperscript(model),\n  moveToSubscript: model => _moveToSubscript(model)\n}, {\n  target: 'model',\n  category: 'selection-anchor'\n});\nregister$2({\n  selectGroup: model => _selectGroup(model),\n  selectAll: model => _selectAll(model),\n  extendToNextChar: model => extend(model, +1),\n  extendToPreviousChar: model => extend(model, -1),\n  extendToNextWord: model => skip(model, +1, {\n    extend: true\n  }),\n  extendToPreviousWord: model => skip(model, -1, {\n    extend: true\n  }),\n  extendUp: model => move(model, 'upward', {\n    extend: true\n  }),\n  extendDown: model => move(model, 'downward', {\n    extend: true\n  }),\n\n  /**\r\n   * Extend the selection until the next boundary is reached. A boundary\r\n   * is defined by an atom of a different type (mbin, mord, etc...)\r\n   * than the current focus. For example, in \"1234+x=y\", if the focus is between\r\n   * \"1\" and \"2\", invoking `extendToNextBoundary_` would extend the selection\r\n   * to \"234\".\r\n   */\n  extendToNextBoundary: model => skip(model, +1, {\n    extend: true\n  }),\n\n  /**\r\n   * Extend the selection until the previous boundary is reached. A boundary\r\n   * is defined by an atom of a different type (mbin, mord, etc...)\r\n   * than the current focus. For example, in \"1+23456\", if the focus is between\r\n   * \"5\" and \"6\", invoking `extendToPreviousBoundary` would extend the selection\r\n   * to \"2345\".\r\n   */\n  extendToPreviousBoundary: model => skip(model, -1, {\n    extend: true\n  }),\n  extendToGroupStart: model => {\n    setSelectionExtent(model, -model.anchorOffset());\n    return true;\n  },\n  extendToGroupEnd: model => {\n    setSelectionExtent(model, model.siblings().length - model.anchorOffset());\n    return true;\n  },\n  extendToMathFieldStart: model => jumpToMathFieldBoundary(model, -1, {\n    extend: true\n  }),\n  extendToMathFieldEnd: model => jumpToMathFieldBoundary(model, +1, {\n    extend: true\n  })\n}, {\n  target: 'model',\n  category: 'selection-extend'\n});\nregister$2({\n  deleteAll: model => {\n    _selectAll(model);\n\n    return deleteChar(model);\n  },\n  deleteNextChar: model => deleteChar(model, +1),\n  deletePreviousChar: model => deleteChar(model, -1),\n  deleteNextWord: model => {\n    skip(model, +1, {\n      extend: true\n    });\n    return deleteChar(model);\n  },\n  deletePreviousWord: model => {\n    skip(model, -1, {\n      extend: true\n    });\n    return deleteChar(model);\n  },\n  deleteToGroupStart: model => {\n    setSelectionExtent(model, -model.anchorOffset());\n    return deleteChar(model);\n  },\n  deleteToGroupEnd: model => {\n    jumpToMathFieldBoundary(model, -1, {\n      extend: true\n    });\n    return deleteChar(model);\n  },\n  deleteToMathFieldStart: model => {\n    jumpToMathFieldBoundary(model, -1, {\n      extend: true\n    });\n    return deleteChar(model);\n  },\n  deleteToMathFieldEnd: model => {\n    jumpToMathFieldBoundary(model, +1, {\n      extend: true\n    });\n    return deleteChar(model);\n  }\n}, {\n  target: 'model',\n  category: 'delete'\n});\n/**\r\n * This modules handles low-level keyboard events and normalize them across\r\n * browsers.\r\n *\r\n * See https://dvcs.w3.org/hg/d4e/raw-file/tip/key-event-test.html\r\n * (also at https://w3c.github.io/uievents/tools/key-event-viewer.html)\r\n *\r\n *\r\n * - **KeyboardEvent.key** (the printable value associated with the key or a string\r\n * for special keys)\r\n *  https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\n *  https://www.w3.org/TR/uievents-key/\r\n *\r\n * - **KeyboardEvent.code** (the physical key being pressed. On an AZERTY keyboard\r\n * the key labelled \"A\" is KeyQ)\r\n *  https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values\r\n *  https://www.w3.org/TR/uievents-code/\r\n *\r\n * Note:\r\n * - `charCode`, `keyCode` and `which` are deprecated\r\n *\r\n * For background, see this info regarding keybinding in VSCode:\r\n * - https://github.com/microsoft/vscode/tree/master/src/vs/workbench/services/keybinding\r\n * - https://github.com/microsoft/vscode/wiki/Keybinding-Issues\r\n */\n\nconst PRINTABLE_KEYCODE = ['Backquote', 'Digit0', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Minus', 'Equal', 'IntlYen', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'IntlBackslash', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'IntlRo', 'Space', 'Numpad0', 'Numpad1', 'Numpad2', 'Numpad3', 'Numpad4', 'Numpad5', 'Numpad6', 'Numpad7', 'Numpad8', 'Numpad9', 'NumpadAdd', 'NumpadComma', 'NumpadDecimal', 'NumpadDivide', 'NumpadEqual', 'NumpadHash', 'NumpadMultiply', 'NumpadParenLeft', 'NumpadParenRight', 'NumpadStar', 'NumpadSubstract'];\n\nfunction mightProducePrintableCharacter(evt) {\n  if (evt.ctrlKey || evt.metaKey) {\n    // ignore ctrl/cmd-combination but not shift/alt-combinations\n    return false;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n\n\n  if (evt.key === 'Dead') return false; // When issued via a composition, the `code` field is empty\n\n  if (evt.code === '') return true;\n  return PRINTABLE_KEYCODE.indexOf(evt.code) >= 0;\n}\n/**\r\n * Create a normalized representation of a keyboard event,\r\n * i.e., key code and modifier keys. For example:\r\n * - `ctrl+Shift+alt+[KeyF]`\r\n *\r\n * Note: the key code corresponds to a physical key, e.g. 'KeyQ' is\r\n * the key labeled 'A' on a French keyboard\r\n *\r\n */\n\n\nfunction keyboardEventToString(evt) {\n  evt = normalizeKeyboardEvent(evt);\n  const modifiers = [];\n  if (evt.ctrlKey) modifiers.push('ctrl');\n  if (evt.metaKey) modifiers.push('meta');\n  if (evt.altKey) modifiers.push('alt');\n  if (evt.shiftKey) modifiers.push('shift'); // If no modifiers, simply return the key name\n\n  if (modifiers.length === 0) return '[' + evt.code + ']';\n  modifiers.push('[' + evt.code + ']');\n  return modifiers.join('+');\n}\n/**\r\n * Setup to capture the keyboard events from a `TextArea` and redispatch them to\r\n * handlers.\r\n *\r\n * In general, commands (arrows, delete, etc..) should be handled\r\n * in the `keystroke()` handler while text input should be handled in\r\n * `typedtext()`.\r\n *\r\n * @param {HTMLElement} textarea A `TextArea` element that will capture the keyboard\r\n * events. While this element will usually be a `TextArea`, it could be any\r\n * element that is focusable and can receive keyboard events.\r\n * @param {Object.<string, any>} handlers\r\n * @param {function} handlers.keystroke invoked on a key down event, including\r\n * for special keys such as ESC, arrow keys, tab, etc... and their variants\r\n * with modifiers.\r\n * @param {function} handlers.typedtext invoked on a keypress or other events\r\n * when a key corresponding to a character has been pressed. This include `a-z`,\r\n * `0-9`, `{}`, `^_()`, etc...\r\n * This does not include arrow keys, tab, etc... but does include 'space'\r\n * When a 'character' key is pressed, both `keystroke()` and `typedtext()` will\r\n * be invoked. When a control/function key is pressed, only `keystroke()` will\r\n * be invoked. In some cases, for example when using input methods or entering\r\n * emoji, only `typedtext()` will be invoked.\r\n */\n\n\nfunction delegateKeyboardEvents(textarea, handlers) {\n  let keydownEvent = null;\n  let keypressEvent = null;\n  let compositionInProgress = false;\n  let focusInProgress = false;\n  let blurInProgress = false; // This callback is invoked after a keyboard event has been processed\n  // by the textarea\n\n  let callbackTimeoutID;\n\n  function defer(cb) {\n    clearTimeout(callbackTimeoutID);\n    callbackTimeoutID = setTimeout(() => {\n      clearTimeout(callbackTimeoutID);\n      cb();\n    });\n  }\n\n  function handleTypedText() {\n    // Some browsers (Firefox, Opera) fire a keypress event for commands\n    // such as cmd+C where there might be a non-empty selection.\n    // We need to ignore these.\n    if (textarea.selectionStart !== textarea.selectionEnd) return;\n    const text = textarea.value;\n    textarea.value = '';\n    if (text.length > 0) handlers.typedText(text);\n  }\n\n  const target = textarea;\n  target.addEventListener('keydown', e => {\n    // \"Process\" key indicates commit of IME session (on Firefox)\n    // It's handled with compositionEnd so it can be safely ignored\n    if (compositionInProgress || e.key === 'Process' || e.code === 'CapsLock' || /(Control|Meta|Alt|Shift)(Left|Right)/.test(e.code)) {\n      keydownEvent = null;\n      return;\n    }\n\n    keydownEvent = e;\n    keypressEvent = null;\n\n    if (!handlers.keystroke(keyboardEventToString(e), e)) {\n      keydownEvent = null;\n      textarea.value = '';\n    }\n  }, true);\n  target.addEventListener('keypress', e => {\n    if (compositionInProgress) return; // If this is not the first keypress after a keydown, that is,\n    // if this is a repeated keystroke, call the keystroke handler.\n\n    if (!compositionInProgress) {\n      if (keydownEvent && keypressEvent) {\n        handlers.keystroke(keyboardEventToString(keydownEvent), keydownEvent);\n      }\n\n      keypressEvent = e;\n      defer(handleTypedText);\n    }\n  }, true);\n  target.addEventListener('keyup', () => {\n    if (compositionInProgress) return; // If we've received a keydown, but no keypress, check what's in the\n    // textarea field.\n\n    if (keydownEvent && !keypressEvent) {\n      handleTypedText();\n    }\n  }, true);\n  target.addEventListener('paste', ev => {\n    // In some cases (Linux browsers), the text area might not be focused\n    // when doing a middle-click paste command.\n    textarea.focus();\n    textarea.value = '';\n    handlers.paste(ev);\n  }, true);\n  target.addEventListener('cut', () => {\n    handlers.cut();\n  }, true);\n  target.addEventListener('copy', ev => {\n    handlers.copy(ev);\n  }, true);\n  target.addEventListener('blur', _ev => {\n    if (blurInProgress || focusInProgress) return;\n    blurInProgress = true;\n    keydownEvent = null;\n    keypressEvent = null;\n    if (handlers.blur) handlers.blur();\n    blurInProgress = false;\n  }, true);\n  target.addEventListener('focus', _ev => {\n    if (blurInProgress || focusInProgress) return;\n    focusInProgress = true;\n    if (handlers.focus) handlers.focus();\n    focusInProgress = false;\n  }, true);\n  target.addEventListener('compositionstart', ev => {\n    compositionInProgress = true;\n    textarea.value = '';\n    if (handlers.compositionStart) handlers.compositionStart(ev.data);\n  }, true);\n  target.addEventListener('compositionupdate', ev => {\n    if (!compositionInProgress) return;\n    if (handlers.compositionUpdate) handlers.compositionUpdate(ev.data);\n  }, true);\n  target.addEventListener('compositionend', ev => {\n    textarea.value = '';\n    if (!compositionInProgress) return;\n    compositionInProgress = false;\n    if (handlers.compositionEnd) handlers.compositionEnd(ev.data);\n  }, true); // The `input` handler gets called when the field is changed,\n  // but no other relevant events have been triggered\n  // for example with emoji input...\n\n  target.addEventListener('input', ev => {\n    if (compositionInProgress) return; // If this was an `input` event sent as a result of a commit of\n    // IME, ignore it.\n    // (This is what FireFox does, even though the spec says it shouldn't happen)\n    // See https://github.com/w3c/uievents/issues/202\n\n    if (ev.inputType === 'insertCompositionText') return; // Paste is handled in paste handler\n\n    if (ev.inputType === 'insertFromPaste') {\n      ev.preventDefault();\n      ev.stopPropagation();\n      return;\n    }\n\n    defer(handleTypedText);\n  });\n  return {\n    cancelComposition: () => {\n      const savedBlur = handlers.blur;\n      const savedFocus = handlers.focus;\n      handlers.blur = null;\n      handlers.focus = null;\n      textarea.blur();\n      textarea.focus();\n      handlers.blur = savedBlur;\n      handlers.focus = savedFocus;\n    },\n    blur: () => {\n      if (typeof textarea.blur === 'function') {\n        textarea.blur();\n      }\n    },\n    focus: () => {\n      if (typeof textarea.blur === 'function') {\n        textarea.focus();\n      }\n    },\n    hasFocus: () => {\n      return deepActiveElement(document) === textarea;\n    },\n    setValue: value => {\n      if (value) {\n        textarea.value = value; // The textarea may be a span (on mobile, for example), so check that\n        // it has a select() before calling it.\n\n        if (deepActiveElement(document) === textarea && textarea.select) {\n          textarea.select();\n        }\n      } else {\n        textarea.value = '';\n        textarea.setAttribute('aria-label', '');\n      }\n    },\n    setAriaLabel: value => {\n      textarea.setAttribute('aria-label', 'after: ' + value);\n    },\n    moveTo: (x, y) => {\n      textarea.style.top = y + 'px';\n      textarea.style.left = x + 'px';\n    }\n  };\n}\n\nfunction deepActiveElement(root = document) {\n  var _a, _b;\n\n  if ((_b = (_a = root.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement) {\n    return deepActiveElement(root.activeElement.shadowRoot);\n  }\n\n  return root.activeElement;\n}\n\nfunction eventToChar(evt) {\n  var _a;\n\n  if (!evt) return '';\n  let result;\n\n  if (evt.key === 'Unidentified') {\n    // On Android, the evt.key seems to always be 'Unidentified'.\n    // Get the value entered in the event target\n    if (evt.target) {\n      result = evt.target['value'];\n    }\n  }\n\n  result = (_a = result !== null && result !== void 0 ? result : evt.key) !== null && _a !== void 0 ? _a : evt.code;\n\n  if (/^(Dead|Return|Enter|Tab|Escape|Delete|PageUp|PageDown|Home|End|Help|ArrowLeft|ArrowRight|ArrowUp|ArrowDown)$/.test(result)) {\n    result = '';\n  }\n\n  return result;\n}\n\nclass UndoManager {\n  constructor(model) {\n    this.maximumDepth = 1000; // Maximum number of undo/redo states\n\n    this.record = false;\n    this.canCoalesce = false;\n    this.model = model;\n    this.reset();\n  }\n\n  reset() {\n    this.stack = [];\n    this.index = -1;\n  }\n\n  startRecording() {\n    this.record = true;\n  }\n\n  canUndo() {\n    return this.index > 0;\n  }\n\n  canRedo() {\n    return this.index !== this.stack.length - 1;\n  }\n\n  undo(options) {\n    if (this.canUndo()) {\n      if (typeof (options === null || options === void 0 ? void 0 : options.onUndoStateWillChange) === 'function') {\n        options.onUndoStateWillChange(this.model.mathfield, 'undo');\n      }\n\n      this.restore(this.stack[this.index - 1], options);\n      this.index -= 1;\n\n      if (options && typeof options.onUndoStateDidChange === 'function') {\n        options.onUndoStateDidChange(this.model.mathfield, 'undo');\n      }\n\n      this.canCoalesce = false;\n    }\n  }\n\n  redo(options) {\n    if (this.canRedo()) {\n      if (typeof (options === null || options === void 0 ? void 0 : options.onUndoStateWillChange) === 'function') {\n        options.onUndoStateWillChange(this.model.mathfield, 'redo');\n      }\n\n      this.index += 1;\n      this.restore(this.stack[this.index], options);\n\n      if (options && typeof options.onUndoStateDidChange === 'function') {\n        options.onUndoStateDidChange(this.model.mathfield, 'redo');\n      }\n\n      this.canCoalesce = false;\n    }\n  }\n\n  pop() {\n    if (this.canUndo()) {\n      this.index -= 1;\n      this.stack.pop();\n    }\n  }\n  /**\r\n   * Push a snapshot of the content and selection of the mathfield onto the\r\n   * undo stack so that it can potentially be reverted to later.\r\n   */\n\n\n  snapshot(options) {\n    if (!this.record) return;\n\n    if (typeof (options === null || options === void 0 ? void 0 : options.onUndoStateWillChange) === 'function') {\n      options.onUndoStateWillChange(this.model.mathfield, 'snapshot');\n    } // Drop any entries that are part of the redo stack\n\n\n    this.stack.splice(this.index + 1, this.stack.length - this.index - 1); // Add a new entry\n\n    this.stack.push({\n      latex: this.model.root.toLatex(false),\n      selection: this.model.selection\n    });\n    this.index++; // If we've reached the maximum number of undo operations, forget the\n    // oldest one.\n\n    if (this.stack.length > this.maximumDepth) {\n      this.stack.shift();\n    }\n\n    if (options && typeof options.onUndoStateDidChange === 'function') {\n      options.onUndoStateDidChange(this.model.mathfield, 'snapshot');\n    }\n\n    this.canCoalesce = false;\n  }\n\n  snapshotAndCoalesce(options) {\n    if (this.canCoalesce) {\n      this.pop();\n    }\n\n    this.snapshot(options);\n    this.canCoalesce = true;\n  }\n  /**\r\n   * Return an object capturing the state of the content and selection of the\r\n   * mathfield. Pass this object to restore() to reset the value of the math\r\n   * field to this saved value. This does not affect the undo stack.\r\n   */\n\n\n  save() {\n    return {\n      latex: this.model.root.toLatex(false),\n      selection: this.model.selection\n    };\n  }\n  /**\r\n   * Set the content and selection of the mathfield to a value previously\r\n   * captured with save() or stored in the undo stack.\r\n   * This does not affect the undo stack.\r\n   */\n\n\n  restore(state, options) {\n    const wasSuppressing = this.model.suppressChangeNotifications;\n\n    if (typeof options.suppressChangeNotifications !== 'undefined') {\n      this.model.suppressChangeNotifications = options.suppressChangeNotifications;\n    } // Restore the content\n\n\n    insert(this.model, state ? state.latex : '', _objectSpread(_objectSpread({}, options), {}, {\n      format: 'latex',\n      mode: 'math',\n      insertionMode: 'replaceAll',\n      selectionMode: 'after',\n      smartFence: false\n    })); // Restore the selection\n\n    this.model.selection = state ? state.selection : [{\n      start: 0\n    }];\n    this.model.suppressChangeNotifications = wasSuppressing;\n  }\n\n}\n\nconst SPECIAL_IDENTIFIERS = {\n  '\\u2212': '-',\n  '-': '-',\n  '\\\\alpha': 'alpha',\n  '\\\\beta': 'beta',\n  '\\\\gamma': 'gamma',\n  '\\\\delta': 'delta',\n  '\\\\epsilon': 'epsilon',\n  '\\\\varepsilon': 'varepsilon',\n  '\\\\zeta': 'zeta',\n  '\\\\eta': 'eta',\n  '\\\\theta': 'theta',\n  '\\\\vartheta': 'vartheta',\n  '\\\\iota': 'iota',\n  '\\\\kappa': 'kappa',\n  '\\\\lambda': 'lambda',\n  '\\\\mu': 'mu',\n  '\\\\nu': 'nu',\n  '\\\\xi': 'xi',\n  '\\\\pi': 'pi',\n  '\\\\rho': 'rho',\n  '\\\\sigma': 'sigma',\n  '\\\\tau': 'tau',\n  '\\\\upsilon': 'upsilon',\n  '\\\\phi': 'phi',\n  '\\\\varphi': 'varphi',\n  '\\\\chi': 'chi',\n  '\\\\psi': 'psi',\n  '\\\\omega': 'omega',\n  '\\\\Gamma': 'Gamma',\n  '\\\\Delta': 'Delta',\n  '\\\\Theta': 'Theta',\n  '\\\\Lambda': 'Lambda',\n  '\\\\Xi': 'Xi',\n  '\\\\Pi': 'Pi',\n  '\\\\Sigma': 'Sigma',\n  '\\\\Phi': 'Phi',\n  '\\\\Psi': 'Psi',\n  '\\\\Omega': 'Omega'\n};\nconst SPECIAL_OPERATORS$1 = {\n  '\\\\pm': '+-',\n  '\\\\times': 'xx',\n  '\\\\colon': ':',\n  '\\\\vert': '|',\n  '\\\\Vert': '||',\n  '\\\\mid': '|',\n  '\\\\lbrace': '{',\n  '\\\\rbrace': '}',\n  '\\\\langle': '(:',\n  '\\\\rangle': ':)'\n};\n\nfunction atomToAsciiMath(atom) {\n  if (!atom) return '';\n\n  if (isArray(atom)) {\n    let result = '';\n    if (atom.length === 0) return '';\n    if (atom[0].type === 'first') atom = atom.slice(1);\n    if (atom.length === 0) return '';\n\n    if (atom[0].mode === 'text') {\n      // Text mode... put it in (ASCII) quotes\n      let i = 0;\n      result = '\"';\n\n      while (atom[i] && atom[i].mode === 'text') {\n        result += atom[i].body;\n        i++;\n      }\n\n      result += '\"' + atomToAsciiMath(atom.slice(i));\n    } else if (atom[0].mode === 'math') {\n      let i = 0;\n\n      while (atom[i] && atom[i].mode === 'math') {\n        result += atomToAsciiMath(atom[i]);\n        i++;\n      }\n\n      result += atomToAsciiMath(atom.slice(i));\n    } else {\n      console.warn('toASCIIMath: Unexpected mode');\n    }\n\n    return result.trim();\n  }\n\n  if (atom.mode === 'text') {\n    return '\"' + atom.body + '\"'; // text -- add in (ASCII) quotes\n  }\n\n  let result = '';\n  const command = atom.symbol;\n  let m;\n\n  switch (atom.type) {\n    case 'group':\n    case 'root':\n      result = atomToAsciiMath(atom.body);\n      break;\n\n    case 'array':\n      break;\n\n    case 'genfrac':\n      if (atom.leftDelim || atom.rightDelim) {\n        result += atom.leftDelim === '.' || !atom.leftDelim ? '{:' : atom.leftDelim;\n      }\n\n      if (atom.hasBarLine) {\n        result += '(';\n        result += atomToAsciiMath(atom.numer);\n        result += ')/(';\n        result += atomToAsciiMath(atom.denom);\n        result += ')';\n      } else {\n        // No bar line, i.e. \\choose, etc...\n        result += '(' + atomToAsciiMath(atom.numer) + '),';\n        result += '(' + atomToAsciiMath(atom.denom) + ')';\n      }\n\n      if (atom.leftDelim || atom.rightDelim) {\n        result += atom.rightDelim === '.' || !atom.rightDelim ? '{:' : atom.rightDelim;\n      }\n\n      break;\n\n    case 'surd':\n      if (atom.index) {\n        result += 'root(' + atomToAsciiMath(atom.index) + ')(' + atomToAsciiMath(atom.body) + ')';\n      } else {\n        result += 'sqrt(' + atomToAsciiMath(atom.body) + ')';\n      }\n\n      break;\n\n    case 'leftright':\n      result += atom.leftDelim === '.' || !atom.leftDelim ? '{:' : atom.leftDelim;\n      result += atomToAsciiMath(atom.body);\n      result += atom.rightDelim === '.' || !atom.rightDelim ? ':}' : atom.rightDelim;\n      break;\n\n    case 'sizeddelim':\n    case 'delim':\n      // result += '<mo separator=\"true\"' + makeID(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.delim] || atom.delim) + '</mo>';\n      break;\n\n    case 'overlap':\n      break;\n\n    case 'overunder':\n      break;\n\n    case 'mord':\n      // @todo, deal with some special identifiers: \\alpha, etc...\n      result = SPECIAL_IDENTIFIERS[command] || command || (typeof atom.body === 'string' ? atom.body : '');\n      if (result[0] === '\\\\') result = String(result);\n      m = command ? command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/) : null;\n\n      if (m) {\n        // It's a \\char command\n        result = String.fromCharCode(parseInt('0x' + m[1]));\n      } else if (result.length > 0 && result.charAt(0) === '\\\\') {\n        // atom is an identifier with no special handling. Use the\n        // Unicode value\n        if (typeof atom.body === 'string') {\n          result = atom.body.charAt(0);\n        } else {\n          result = atom.symbol;\n        }\n      } // result = '<mi' + variant + makeID(atom.id, options) + '>' + xmlEscape(result) + '</mi>';\n\n\n      break;\n\n    case 'mbin':\n    case 'mrel':\n    case 'textord':\n    case 'minner':\n      if (command && SPECIAL_IDENTIFIERS[command]) {\n        // Some 'textord' are actually identifiers. Check them here.\n        result = SPECIAL_IDENTIFIERS[command];\n      } else if (command && SPECIAL_OPERATORS$1[command]) {\n        result = SPECIAL_OPERATORS$1[command];\n      } else {\n        result = atom.body;\n      }\n\n      break;\n\n    case 'mopen':\n    case 'mclose':\n      result += atom.body;\n      break;\n\n    case 'mpunct':\n      result = SPECIAL_OPERATORS$1[command] || command;\n      break;\n\n    case 'mop':\n      if (atom.body !== '\\u200b') {\n        // Not ZERO-WIDTH\n        result = '';\n\n        if (command === '\\\\operatorname') {\n          result += atomToAsciiMath(atom.body);\n        } else {\n          result += atom.body || command;\n        }\n\n        result += ' ';\n      }\n\n      break;\n\n    case 'mathstyle':\n      break;\n\n    case 'box':\n      break;\n\n    case 'spacing':\n      break;\n\n    case 'enclose':\n      break;\n\n    case 'space':\n      result = ' ';\n      break;\n  } // Subscripts before superscripts (according to the ASCIIMath spec)\n\n\n  if (atom.subscript) {\n    result += '_';\n    const arg = atomToAsciiMath(atom.subscript);\n\n    if (arg.length > 1 && !/^(-)?\\d+(\\.\\d*)?$/.test(arg)) {\n      result += '(' + arg + ')';\n    } else {\n      result += arg;\n    }\n  }\n\n  if (atom.superscript) {\n    result += '^';\n    const arg = atomToAsciiMath(atom.superscript);\n\n    if (arg.length > 1 && !/^(-)?\\d+(\\.\\d*)?$/.test(arg)) {\n      result += '(' + arg + ')';\n    } else {\n      result += arg;\n    }\n  }\n\n  return result;\n}\n\nconst STRINGS = {\n  en: {\n    'keyboard.tooltip.functions': 'Functions',\n    'keyboard.tooltip.symbols': 'Symbols',\n    'keyboard.tooltip.greek': 'Greek Letters',\n    'keyboard.tooltip.command': 'LaTeX Command Mode',\n    'keyboard.tooltip.numeric': 'Numeric',\n    'keyboard.tooltip.roman': 'Roman Letters',\n    'tooltip.copy to clipboard': 'Copy to Clipboard',\n    'tooltip.redo': 'Redo',\n    'tooltip.toggle virtual keyboard': 'Toggle Virtual Keyboard',\n    'tooltip.undo': 'Undo'\n  },\n  ar: {\n    'keyboard.tooltip.functions': 'مهام',\n    'keyboard.tooltip.symbols': 'حرف او رمز',\n    'keyboard.tooltip.greek': 'حروف يونانية',\n    'keyboard.tooltip.command': 'حالة تلقي الأوامر اللاتك',\n    'keyboard.tooltip.numeric': 'الرقمية',\n    'keyboard.tooltip.roman': 'رموز الاحرف الرومانية',\n    'tooltip.copy to clipboard': 'نسخ إلى الحافظة',\n    'tooltip.redo': 'الإعادة',\n    'tooltip.toggle virtual keyboard': 'تبديل لوحة المفاتيح الإفتراضية',\n    'tooltip.undo': 'إلغاء'\n  },\n  de: {\n    'keyboard.tooltip.functions': 'Funktionen',\n    'keyboard.tooltip.symbols': 'Symbole',\n    'keyboard.tooltip.greek': 'Griechische Buchstaben',\n    'keyboard.tooltip.command': 'LaTeX-Befehlsmodus',\n    'keyboard.tooltip.numeric': 'Numerisch',\n    'keyboard.tooltip.roman': 'Römische Buchstaben',\n    'tooltip.copy to clipboard': 'In die Zwischenablage kopieren',\n    'tooltip.redo': 'Wiederholen',\n    'tooltip.toggle virtual keyboard': 'Virtuelle Tastatur umschalten',\n    'tooltip.undo': 'Widerrufen'\n  },\n  el: {\n    'keyboard.tooltip.functions': 'συναρτήσεις',\n    'keyboard.tooltip.symbols': 'σύμβολα',\n    'keyboard.tooltip.greek': 'ελληνικά γράμματα',\n    'keyboard.tooltip.command': 'Λειτουργία εντολών LaTeX',\n    'keyboard.tooltip.numeric': 'Αριθμητικός',\n    'keyboard.tooltip.roman': 'Ρωμαϊκά γράμματα',\n    'tooltip.copy to clipboard': 'Αντιγραφή στο πρόχειρο',\n    'tooltip.redo': 'Ξανακάνω',\n    'tooltip.toggle virtual keyboard': 'Εναλλαγή εικονικού πληκτρολογίου',\n    'tooltip.undo': 'Ξεκάνω'\n  },\n  es: {\n    'keyboard.tooltip.functions': 'Funciones',\n    'keyboard.tooltip.symbols': 'Símbolos',\n    'keyboard.tooltip.greek': 'Letras griegas',\n    'keyboard.tooltip.command': 'Modo Comando LaTeX',\n    'keyboard.tooltip.numeric': 'Numérico',\n    'keyboard.tooltip.roman': 'Letras romanas',\n    'tooltip.copy to clipboard': 'Copiar al portapapeles',\n    'tooltip.redo': 'Rehacer',\n    'tooltip.toggle virtual keyboard': 'Alternar teclado virtual',\n    'tooltip.undo': 'Deshacer'\n  },\n  fa: {\n    'keyboard.tooltip.functions': 'توابع',\n    'keyboard.tooltip.symbols': 'نمادها',\n    'keyboard.tooltip.greek': 'حروف یونانی',\n    'keyboard.tooltip.command': 'حالت دستور لاتک',\n    'keyboard.tooltip.numeric': 'عددی',\n    'keyboard.tooltip.roman': 'حروف رومی',\n    'tooltip.copy to clipboard': 'کپی به کلیپبورد',\n    'tooltip.redo': 'بازگشت به بعد',\n    'tooltip.toggle virtual keyboard': 'نمایش/نهفتن کیبورد مجازی',\n    'tooltip.undo': 'بازگشت به قبل'\n  },\n  fr: {\n    'keyboard.tooltip.functions': 'Fonctions',\n    'keyboard.tooltip.symbols': 'Symboles',\n    'keyboard.tooltip.greek': 'Lettres grecques',\n    'keyboard.tooltip.command': 'Mode de commandes LaTeX',\n    'keyboard.tooltip.numeric': 'Numérique',\n    'keyboard.tooltip.roman': 'Lettres romaines',\n    'tooltip.copy to clipboard': 'Copier dans le presse-papiers',\n    'tooltip.redo': 'Rétablir',\n    'tooltip.toggle virtual keyboard': 'Afficher/Masquer le clavier virtuel',\n    'tooltip.undo': 'Annuler'\n  },\n  it: {\n    'keyboard.tooltip.functions': 'Funzioni',\n    'keyboard.tooltip.symbols': 'Simboli',\n    'keyboard.tooltip.greek': 'Lettere greche',\n    'keyboard.tooltip.command': 'Modalità di comando LaTeX',\n    'keyboard.tooltip.numeric': 'Numerico',\n    'keyboard.tooltip.roman': 'Lettere romane',\n    'tooltip.copy to clipboard': 'Copia negli appunti',\n    'tooltip.redo': 'Rifare',\n    'tooltip.toggle virtual keyboard': 'Attiva / disattiva la tastiera virtuale',\n    'tooltip.undo': 'Disfare'\n  },\n  ja: {\n    'keyboard.tooltip.functions': '関数',\n    'keyboard.tooltip.symbols': 'シンボル',\n    'keyboard.tooltip.greek': 'ギリシャ文字',\n    'keyboard.tooltip.command': 'LaTeXコマンドモード',\n    'keyboard.tooltip.numeric': '数値',\n    'keyboard.tooltip.roman': 'ローマ字',\n    'tooltip.copy to clipboard': 'クリップボードにコピー',\n    'tooltip.redo': 'やり直し',\n    'tooltip.toggle virtual keyboard': '仮想キーボードの切り替え',\n    'tooltip.undo': '元に戻す'\n  },\n  pl: {\n    'keyboard.tooltip.functions': 'Funkcje',\n    'keyboard.tooltip.symbols': 'Symbolika',\n    'keyboard.tooltip.greek': 'Litery greckie',\n    'keyboard.tooltip.command': 'Tryb poleceń LaTeX',\n    'keyboard.tooltip.numeric': 'Numeryczne',\n    'keyboard.tooltip.roman': 'Litery rzymskie',\n    'tooltip.copy to clipboard': 'Kopiuj do Schowka',\n    'tooltip.redo': 'Przywróć',\n    'tooltip.toggle virtual keyboard': 'Przełącz wirtualną klawiaturę',\n    'tooltip.undo': 'Cofnij'\n  },\n  ru: {\n    'keyboard.tooltip.functions': 'Функции',\n    'keyboard.tooltip.symbols': 'Символы',\n    'keyboard.tooltip.greek': 'Греческие буквы',\n    'keyboard.tooltip.command': 'Режим командной строки LaTeX',\n    'keyboard.tooltip.numeric': 'числовой',\n    'keyboard.tooltip.roman': 'Латинские буквы',\n    'tooltip.copy to clipboard': 'Скопировать в буфер обмена',\n    'tooltip.redo': 'переделывать',\n    'tooltip.toggle virtual keyboard': 'Переключить виртуальную клавиатуру',\n    'tooltip.undo': 'расстегивать'\n  }\n}; // import { Keys } from '../types-utils';\n\nconst l10n = {};\n\nl10n.plural = function (value, s, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  options.type = (_a = options.type) !== null && _a !== void 0 ? _a : 'cardinal';\n  const language = l10n.locale.substring(0, 2);\n  const rules = options.type === 'ordinal' ? l10n._ordinal : l10n._cardinal;\n  let rule = options.type === 'ordinal' ? l10n._ordinalPluralCategories.indexOf(rules.select(value)) : l10n._cardinalPluralCategories.indexOf(rules.select(value));\n  let result;\n  if (l10n.strings[l10n.locale]) result = l10n.strings[l10n.locale][s];\n  if (!result && l10n.strings[language]) result = l10n.strings[language][s];\n\n  if (!result) {\n    result = l10n.strings['en'][s];\n    if (!result) result = s;\n\n    if (options.type === 'ordinal') {\n      rule = l10n._ordinalPluralCategories.indexOf(l10n._ordinalEnglish.select(value));\n    } else {\n      rule = l10n._cardinalPluralCategories.indexOf(l10n._cardinalEnglish.select(value));\n    }\n  }\n\n  return result.split(';')[rule] || result.split(';')[0];\n};\n/*\r\n * Two forms for this function:\r\n * - merge(locale, strings)\r\n * Merge a dictionary of keys -> values for the specified locale\r\n * - merge(strings)\r\n * Merge a dictionary of locale code -> dictionary of keys -> values\r\n *\r\n */\n\n\nl10n.merge = function (locale, strings) {\n  if (locale && strings) {\n    const savedLocale = l10n._locale;\n    l10n.locale = locale; // Load the necessary json file\n\n    l10n.strings[locale] = _objectSpread(_objectSpread({}, l10n.strings[locale]), strings);\n    l10n.locale = savedLocale;\n  } else if (locale && !strings) {\n    Object.keys(locale).forEach(l => l10n.merge(l, locale[l]));\n  }\n}; // Add getter and setter for the _locale property of l10n\n\n\nObject.defineProperty(l10n, 'locale', {\n  set(locale) {\n    l10n._locale = locale;\n    l10n._ordinal = null;\n    l10n._cardinal = null;\n  },\n\n  get() {\n    var _a; // Use the browser defined language as the default language,\n    // \"english\" if not running in a browser (node.js)\n\n\n    if (!l10n._locale) {\n      // Use the setter, which will load the necessary .json files.\n      l10n._locale = (_a = navigator === null || navigator === void 0 ? void 0 : navigator.language.slice(0, 5)) !== null && _a !== void 0 ? _a : 'en';\n    }\n\n    return l10n._locale;\n  }\n\n});\nObject.defineProperty(l10n, 'ordinal', {\n  get() {\n    if (!l10n._ordinal) {\n      l10n._ordinalEnglish = new Intl.PluralRules('en', {\n        type: 'ordinal'\n      });\n      l10n._ordinalEnglishPluralCategories = l10n._ordinalEnglish.resolvedOptions().pluralCategories;\n      l10n._ordinal = new Intl.PluralRules(l10n.locale, {\n        type: 'ordinal'\n      });\n      l10n._ordinalPluralCategories = l10n._ordinal.resolvedOptions().pluralCategories; //    \"zero\", \"one\", \"two\", \"few\", \"many\" and \"other\"\n    }\n\n    return l10n._ordinal;\n  }\n\n});\nObject.defineProperty(l10n, 'cardinal', {\n  get() {\n    if (!l10n._cardinal) {\n      l10n._cardinalEnglish = new Intl.PluralRules('en', {\n        type: 'cardinal'\n      });\n      l10n._cardinalEnglishPluralCategories = l10n._cardinalEnglish.resolvedOptions().pluralCategories;\n      l10n._cardinal = new Intl.PluralRules(l10n.locale, {\n        type: 'cardinal'\n      });\n      l10n._cardinalPluralCategories = l10n._ordinal.resolvedOptions().pluralCategories;\n    }\n\n    return l10n._cardinal;\n  }\n\n});\nl10n.strings = STRINGS;\n\nfunction localize(s) {\n  const language = l10n.locale.substring(0, 2);\n  let result = ''; // Attempt to find a match for the current locale\n\n  if (l10n.strings[l10n.locale]) result = l10n.strings[l10n.locale][s]; // If none is found, attempt to find a match for the language\n\n  if (!result && l10n.strings[language]) result = l10n.strings[language][s]; // If none is found, try english\n\n  if (!result) result = l10n.strings['en'][s]; // If that didn't work, use the key...\n\n  if (!result) result = s;\n  return result;\n}\n\nfunction insertSuggestion(model, s, l) {\n  removeSuggestion(model);\n  const mathlist = []; // Make a mathlist from the string argument with the `suggestion` property set\n\n  const subs = s.substr(l);\n\n  var _iterator45 = _createForOfIteratorHelper(subs),\n      _step45;\n\n  try {\n    for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n      const c = _step45.value;\n      const atom = new Atom('command', 'command', c);\n      atom.isSuggestion = true;\n      mathlist.push(atom);\n    } // Splice in the mathlist after the insertion point, but don't change the\n    // insertion point\n\n  } catch (err) {\n    _iterator45.e(err);\n  } finally {\n    _iterator45.f();\n  }\n\n  Array.prototype.splice.apply(model.siblings(), [model.anchorOffset() + 1, 0].concat(mathlist));\n}\n/**\r\n * When in command mode, insert the select command and return to math mode\r\n * If escape is true, the command is discared.\r\n * @param options.discard if true, the command is discarded and the\r\n * mode switched back to math\r\n * @param options.acceptSuggestion if true, accept the suggestion to\r\n * complete the command. Otherwise, only use what has been entered so far.\r\n */\n\n\nfunction complete(mathfield, options) {\n  options = options !== null && options !== void 0 ? options : {\n    acceptSuggestion: false\n  };\n  hidePopover(mathfield);\n\n  if (options.discard) {\n    spliceCommandStringAroundInsertionPoint(mathfield.model, null);\n    mathfield.switchMode('math');\n    return true;\n  }\n\n  const command = extractCommandStringAroundInsertionPoint(mathfield.model, !options.acceptSuggestion);\n\n  if (command) {\n    if (command === '\\\\(' || command === '\\\\)') {\n      spliceCommandStringAroundInsertionPoint(mathfield.model, []);\n      insert(mathfield.model, command.slice(1), {\n        mode: mathfield.mode\n      });\n    } else {\n      // We'll assume we want to insert in math mode\n      // (commands are only available in math mode)\n      mathfield.switchMode('math'); // Interpret the input as LaTeX code\n\n      const mathlist = parseString(command, 'math', null, mathfield.options.macros);\n\n      if (mathlist) {\n        spliceCommandStringAroundInsertionPoint(mathfield.model, mathlist);\n      } else {\n        decorateCommandStringAroundInsertionPoint(mathfield.model, true);\n      }\n    }\n\n    mathfield.snapshot();\n    mathfield.model.announce('replacement');\n    return true;\n  }\n\n  return false;\n}\n\nfunction updateSuggestion(mathfield) {\n  setPositionAfterCommitedCommand(mathfield.model);\n  removeSuggestion(mathfield.model);\n  const command = extractCommandStringAroundInsertionPoint(mathfield.model);\n  const suggestions = suggest(command);\n\n  if (suggestions.length === 0) {\n    hidePopover(mathfield);\n    decorateCommandStringAroundInsertionPoint(mathfield.model, true);\n  } else {\n    const index = mathfield.suggestionIndex % suggestions.length;\n    const l = command.length - suggestions[index].match.length;\n\n    if (l !== 0) {\n      insertSuggestion(mathfield.model, suggestions[index].match, l);\n    }\n\n    showPopoverWithLatex(mathfield, suggestions[index].match, suggestions.length > 1);\n  }\n\n  requestUpdate(mathfield);\n  return true;\n}\n\nfunction nextSuggestion(mathfield) {\n  mathfield.suggestionIndex += 1; // The modulo of the suggestionIndex is used to determine which suggestion\n  // to display, so no need to worry about rolling over.\n\n  updateSuggestion(mathfield);\n  return false;\n}\n\nfunction previousSuggestion(mathfield) {\n  mathfield.suggestionIndex -= 1;\n\n  if (mathfield.suggestionIndex < 0) {\n    // We're rolling over\n    // Get the list of suggestions, so we can know how many there are\n    // Not very efficient, but simple.\n    removeSuggestion(mathfield.model);\n    const command = extractCommandStringAroundInsertionPoint(mathfield.model);\n    const suggestions = suggest(command);\n    mathfield.suggestionIndex = suggestions.length - 1;\n  }\n\n  updateSuggestion(mathfield);\n  return false;\n}\n\nregister$2({\n  complete: complete,\n  nextSuggestion: nextSuggestion,\n  previousSuggestion: previousSuggestion\n}, {\n  target: 'mathfield',\n  category: 'autocomplete'\n}); // Markup\n// Two common flavor of markups: SSML and 'mac'. The latter is only available\n// when using the native TTS synthesizer on Mac OS.\n// Use SSML in the production rules below. The markup will either be striped\n// off or replaced with the 'mac' markup as necessary.\n//\n// SSML                                             Mac\n// ----                                             ----\n// <emphasis>WORD</emphasis>                        [[emph +]]WORD\n// <break time=\"150ms\"/>                            [[slc 150]]\n// <say-as interpret-as=\"character\">A</say-as>      [[char LTRL] A [[char NORM]]\n// https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/SpeechSynthesisProgrammingGuide/FineTuning/FineTuning.html#//apple_ref/doc/uid/TP40004365-CH5-SW3\n// https://pdfs.semanticscholar.org/8887/25b82b8dbb45dd4dd69b36a65f092864adb0.pdf\n// \"<audio src='non_existing_file.au'>File could not be played.</audio>\"\n// \"I am now <prosody rate='+0.06'>speaking 6% faster.</prosody>\"\n\nconst PRONUNCIATION = {\n  '\\\\alpha': 'alpha ',\n  '\\\\mu': 'mew ',\n  '\\\\sigma': 'sigma ',\n  '\\\\pi': 'pie ',\n  '\\\\imaginaryI': 'eye ',\n  '\\\\sum': 'Summation ',\n  '\\\\prod': 'Product ',\n  a: '<phoneme alphabet=\"ipa\" ph=\"eɪ\">a</phoneme>',\n  A: 'capital <phoneme alphabet=\"ipa\" ph=\"eɪ\">A</phoneme>',\n  '+': 'plus ',\n  '-': 'minus ',\n  ';': '<break time=\"150ms\"/> semi-colon <break time=\"150ms\"/>',\n  ',': '<break time=\"150ms\"/> comma  <break time=\"150ms\"/>',\n  '|': '<break time=\"150ms\"/>Vertical bar<break time=\"150ms\"/>',\n  '(': '<break time=\"150ms\"/>Open paren. <break time=\"150ms\"/>',\n  ')': '<break time=\"150ms\"/> Close paren. <break time=\"150ms\"/>',\n  '=': 'equals ',\n  '<': 'is less than ',\n  '\\\\lt': 'is less than ',\n  '<=': 'is less than or equal to ',\n  '\\\\le': 'is less than or equal to ',\n  '\\\\gt': 'is greater than ',\n  '>': 'is greater than ',\n  '\\\\ge': 'is greater than or equal to ',\n  '\\\\geq': 'is greater than or equal to ',\n  '\\\\leq': 'is less than or equal to ',\n  '!': 'factorial ',\n  '\\\\sin': 'sine ',\n  '\\\\cos': 'cosine ',\n  '\\u200b': '',\n  '\\u2212': 'minus ',\n  ':': '<break time=\"150ms\"/> such that <break time=\"200ms\"/> ',\n  '\\\\colon': '<break time=\"150ms\"/> such that <break time=\"200ms\"/> ',\n  '\\\\hbar': 'etch bar ',\n  '\\\\iff': '<break time=\"200ms\"/>if, and only if, <break time=\"200ms\"/>',\n  '\\\\Longleftrightarrow': '<break time=\"200ms\"/>if, and only if, <break time=\"200ms\"/>',\n  '\\\\land': 'and ',\n  '\\\\lor': 'or ',\n  '\\\\neg': 'not ',\n  '\\\\div': 'divided by ',\n  '\\\\forall': 'for all ',\n  '\\\\exists': 'there exists ',\n  '\\\\nexists': 'there does not exists ',\n  '\\\\in': 'element of ',\n  '\\\\N': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">n</say-as>',\n  '\\\\C': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">c</say-as>',\n  '\\\\Z': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">z</say-as>',\n  '\\\\Q': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">q</say-as>',\n  '\\\\infty': 'infinity ',\n  '\\\\nabla': 'nabla ',\n  '\\\\partial': 'partial derivative of ',\n  '\\\\cdots': 'dot dot dot ',\n  '\\\\Rightarrow': 'implies ',\n  '\\\\lbrace': '<break time=\"150ms\"/>open brace<break time=\"150ms\"/>',\n  '\\\\{': '<break time=\"150ms\"/>open brace<break time=\"150ms\"/>',\n  '\\\\rbrace': '<break time=\"150ms\"/>close brace<break time=\"150ms\"/>',\n  '\\\\}': '<break time=\"150ms\"/>close brace<break time=\"150ms\"/>',\n  '\\\\langle': '<break time=\"150ms\"/>left angle bracket<break time=\"150ms\"/>',\n  '\\\\rangle': '<break time=\"150ms\"/>right angle bracket<break time=\"150ms\"/>',\n  '\\\\lfloor': '<break time=\"150ms\"/>open floor<break time=\"150ms\"/>',\n  '\\\\rfloor': '<break time=\"150ms\"/>close floor<break time=\"150ms\"/>',\n  '\\\\lceil': '<break time=\"150ms\"/>open ceiling<break time=\"150ms\"/>',\n  '\\\\rceil': '<break time=\"150ms\"/>close ceiling<break time=\"150ms\"/>',\n  '\\\\vert': '<break time=\"150ms\"/>vertical bar<break time=\"150ms\"/>',\n  '\\\\mvert': '<break time=\"150ms\"/>divides<break time=\"150ms\"/>',\n  '\\\\lvert': '<break time=\"150ms\"/>left vertical bar<break time=\"150ms\"/>',\n  '\\\\rvert': '<break time=\"150ms\"/>right vertical bar<break time=\"150ms\"/>',\n  // '\\\\lbrack':\t\t'left bracket',\n  // '\\\\rbrack':\t\t'right bracket',\n  '\\\\lbrack': '<break time=\"150ms\"/> open square bracket <break time=\"150ms\"/>',\n  '\\\\rbrack': '<break time=\"150ms\"/> close square bracket <break time=\"150ms\"/>',\n  // need to add code to detect singluar/plural. Until then spoken as plural since that is vastly more common\n  // note: need to worry about intervening &InvisibleTimes;.\n  // note: need to also do this when in numerator of fraction and number preceeds fraction\n  // note: need to do this for <msup>\n  mm: 'millimeters',\n  cm: 'centimeters',\n  km: 'kilometers',\n  kg: 'kilograms'\n};\n\nfunction getSpokenName(latex) {\n  let result = '';\n\n  if (latex.charAt(0) === '\\\\') {\n    result = ' ' + latex.replace('\\\\', '') + ' ';\n  }\n\n  return result;\n}\n\nfunction platform$1(p) {\n  let result = 'other';\n\n  if ((navigator === null || navigator === void 0 ? void 0 : navigator.platform) && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\n    if (/^(mac)/i.test(navigator.platform)) {\n      result = 'mac';\n    } else if (/^(win)/i.test(navigator.platform)) {\n      result = 'win';\n    } else if (/(android)/i.test(navigator.userAgent)) {\n      result = 'android';\n    } else if (/(iphone)/i.test(navigator.userAgent) || /(ipod)/i.test(navigator.userAgent) || /(ipad)/i.test(navigator.userAgent)) {\n      result = 'ios';\n    } else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\n      result = 'chromeos';\n    }\n  }\n\n  return result === p ? p : '!' + p;\n}\n\nfunction isAtomic(atoms) {\n  let count = 0;\n\n  if (isAtomArray(atoms)) {\n    var _iterator46 = _createForOfIteratorHelper(atoms),\n        _step46;\n\n    try {\n      for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n        const atom = _step46.value;\n\n        if (atom.type !== 'first') {\n          count += 1;\n        }\n      }\n    } catch (err) {\n      _iterator46.e(err);\n    } finally {\n      _iterator46.f();\n    }\n  }\n\n  return count === 1;\n}\n\nfunction atomicID(atoms) {\n  if (isAtomArray(atoms)) {\n    var _iterator47 = _createForOfIteratorHelper(atoms),\n        _step47;\n\n    try {\n      for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n        const atom = _step47.value;\n\n        if (atom.type !== 'first' && atom.id) {\n          return atom.id.toString();\n        }\n      }\n    } catch (err) {\n      _iterator47.e(err);\n    } finally {\n      _iterator47.f();\n    }\n  }\n\n  return '';\n}\n\nfunction atomicValue(atoms) {\n  let result = '';\n\n  if (isAtomArray(atoms)) {\n    var _iterator48 = _createForOfIteratorHelper(atoms),\n        _step48;\n\n    try {\n      for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n        const atom = _step48.value;\n\n        if (atom.type !== 'first' && typeof atom.body === 'string') {\n          result += atom.body;\n        }\n      }\n    } catch (err) {\n      _iterator48.e(err);\n    } finally {\n      _iterator48.f();\n    }\n  }\n\n  return result;\n}\n\nfunction atomToSpeakableFragment(mode, atom, options) {\n  function letter(c) {\n    let result = '';\n\n    if (!options.textToSpeechMarkup) {\n      if (/[a-z]/.test(c)) {\n        result += \" '\" + c.toUpperCase() + \"'\";\n      } else if (/[A-Z]/.test(c)) {\n        result += \" 'capital \" + c.toUpperCase() + \"'\";\n      } else {\n        result += c;\n      }\n    } else {\n      if (/[a-z]/.test(c)) {\n        result += ' <say-as interpret-as=\"character\">' + c + '</say-as>';\n      } else if (/[A-Z]/.test(c)) {\n        result += String('capital ' + c.toLowerCase());\n      } else {\n        result += c;\n      }\n    }\n\n    return result;\n  }\n\n  function emph(s) {\n    return '<emphasis>' + s + '</emphasis>';\n  }\n\n  if (!atom) return '';\n  let result = '';\n\n  if (isAtomArray(atom)) {\n    let isInDigitRun = false; // need to group sequence of digits\n\n    let isInTextRun = false; // need to group text\n\n    for (let i = 0; i < atom.length; i++) {\n      if (atom[i].mode !== 'text') {\n        isInTextRun = false;\n      }\n\n      if (i < atom.length - 2 && atom[i].type === 'mopen' && atom[i + 2].type === 'mclose' && atom[i + 1].type === 'mord') {\n        result += ' of ';\n        result += emph(atomToSpeakableFragment(mode, atom[i + 1], options));\n        i += 2;\n      } else if (atom[i].mode === 'text') {\n        if (isInTextRun) {\n          result += atom[i].body ? atom[i].body : ' ';\n        } else {\n          isInTextRun = true;\n          result += atomToSpeakableFragment('text', atom[i], options);\n        } // '.' and ',' should only be allowed if prev/next entry is a digit\n        // However, if that isn't the case, this still works because 'toSpeakableFragment' is called in either case.\n        // Note: the first char in a digit/text run potentially needs to have a 'mark', hence the call to 'toSpeakableFragment'\n\n      } else if (atom[i].type === 'mord' && /[0123456789,.]/.test(atom[i].body)) {\n        if (isInDigitRun) {\n          result += atom[i].body;\n        } else {\n          isInDigitRun = true;\n          result += atomToSpeakableFragment(mode, atom[i], options);\n        }\n      } else {\n        isInDigitRun = false;\n        result += atomToSpeakableFragment(mode, atom[i], options);\n      }\n    }\n  } else if (atom.mode === 'text') {\n    if (atom.id && mode === 'math') {\n      result += '<mark name=\"' + atom.id.toString() + '\"/>';\n    }\n\n    result += atom.body;\n  } else {\n    if (atom.id && mode === 'math') {\n      result += '<mark name=\"' + atom.id.toString() + '\"/>';\n    }\n\n    let numer = '';\n    let denom = '';\n    let body = '';\n    let supsubHandled = false;\n\n    switch (atom.type) {\n      case 'group':\n      case 'root':\n        result += atomToSpeakableFragment('math', atom.body, options);\n        break;\n\n      case 'genfrac':\n        numer = atomToSpeakableFragment('math', atom.numer, options);\n        denom = atomToSpeakableFragment('math', atom.denom, options);\n\n        if (isAtomic(atom.numer) && isAtomic(atom.denom)) {\n          const COMMON_FRACTIONS = {\n            '1/2': ' half ',\n            '1/3': ' one third ',\n            '2/3': ' two third',\n            '1/4': ' one quarter ',\n            '3/4': ' three quarter ',\n            '1/5': ' one fifth ',\n            '2/5': ' two fifths ',\n            '3/5': ' three fifths ',\n            '4/5': ' four fifths ',\n            '1/6': ' one sixth ',\n            '5/6': ' five sixths ',\n            '1/8': ' one eight ',\n            '3/8': ' three eights ',\n            '5/8': ' five eights ',\n            '7/8': ' seven eights ',\n            '1/9': ' one ninth ',\n            '2/9': ' two ninths ',\n            '4/9': ' four ninths ',\n            '5/9': ' five ninths ',\n            '7/9': ' seven ninths ',\n            '8/9': ' eight ninths '\n          };\n          const commonFraction = COMMON_FRACTIONS[atomicValue(atom.numer) + '/' + atomicValue(atom.denom)];\n\n          if (commonFraction) {\n            result = commonFraction;\n          } else {\n            result += numer + ' over ' + denom;\n          }\n        } else {\n          result += ' the fraction <break time=\"150ms\"/>' + numer + ', over <break time=\"150ms\"/>' + denom + '.<break time=\"150ms\"/> End fraction.<break time=\"150ms\"/>';\n        }\n\n        break;\n\n      case 'surd':\n        body = atomToSpeakableFragment('math', atom.body, options);\n\n        if (!atom.index) {\n          if (isAtomic(atom.body)) {\n            result += ' the square root of ' + body + ' , ';\n          } else {\n            result += ' the square root of <break time=\"200ms\"/>' + body + '. <break time=\"200ms\"/> End square root';\n          }\n        } else {\n          let index = atomToSpeakableFragment('math', atom.index, options);\n          index = index.trim();\n          const index2 = index.replace(/<mark([^/]*)\\/>/g, '');\n\n          if (index2 === '3') {\n            result += ' the cube root of <break time=\"200ms\"/>' + body + '. <break time=\"200ms\"/> End cube root';\n          } else if (index2 === 'n') {\n            result += ' the nth root of <break time=\"200ms\"/>' + body + '. <break time=\"200ms\"/> End root';\n          } else {\n            result += ' the root with index: <break time=\"200ms\"/>' + index + ', of <break time=\"200ms\"/>' + body + '. <break time=\"200ms\"/> End root';\n          }\n        }\n\n        break;\n\n      case 'leftright':\n        result += PRONUNCIATION[atom.leftDelim] || atom.leftDelim;\n        result += atomToSpeakableFragment('math', atom.body, options);\n        result += PRONUNCIATION[atom.rightDelim] || atom.rightDelim;\n        break;\n\n      case 'rule':\n        // @todo\n        break;\n\n      case 'overunder':\n        // @todo\n        break;\n\n      case 'overlap':\n        // @todo\n        break;\n\n      case 'placeholder':\n        result += 'placeholder ' + atom.body;\n        break;\n\n      case 'delim':\n      case 'sizeddelim':\n      case 'mord':\n      case 'minner':\n      case 'mbin':\n      case 'mrel':\n      case 'mpunct':\n      case 'mopen':\n      case 'mclose':\n      case 'textord':\n        {\n          const command = atom.symbol;\n\n          if (command === '\\\\mathbin' || command === '\\\\mathrel' || command === '\\\\mathopen' || command === '\\\\mathclose' || command === '\\\\mathpunct' || command === '\\\\mathord' || command === '\\\\mathinner') {\n            result = atomToSpeakableFragment(mode, atom.body, options);\n            break;\n          }\n\n          let atomValue = atom.body;\n          let latexValue = atom.symbol;\n\n          if (atom.type === 'delim' || atom.type === 'sizeddelim') {\n            atomValue = latexValue = atom.delim;\n          }\n\n          if (mode === 'text') {\n            result += atomValue;\n          } else {\n            if (atom.type === 'mbin') {\n              result += '<break time=\"150ms\"/>';\n            }\n\n            if (atomValue) {\n              const value = PRONUNCIATION[atomValue] || (latexValue ? PRONUNCIATION[latexValue.trim()] : '');\n\n              if (value) {\n                result += ' ' + value;\n              } else {\n                const spokenName = latexValue ? getSpokenName(latexValue.trim()) : '';\n                result += spokenName ? spokenName : letter(atomValue);\n              }\n            } else {\n              result += atomToSpeakableFragment('math', atom.body, options);\n            }\n\n            if (atom.type === 'mbin') {\n              result += '<break time=\"150ms\"/>';\n            }\n          }\n\n          break;\n        }\n\n      case 'mop':\n        // @todo\n        if (atom.body !== '\\u200b') {\n          // Not ZERO-WIDTH\n          const trimLatex = atom.symbol;\n\n          if (trimLatex === '\\\\sum') {\n            if (atom.superscript && atom.subscript) {\n              let sup = atomToSpeakableFragment('math', atom.superscript, options);\n              sup = sup.trim();\n              let sub = atomToSpeakableFragment('math', atom.subscript, options);\n              sub = sub.trim();\n              result += ' the summation from <break time=\"200ms\"/>' + sub + '<break time=\"200ms\"/> to  <break time=\"200ms\"/>' + sup + '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\n              supsubHandled = true;\n            } else if (atom.subscript) {\n              let sub = atomToSpeakableFragment('math', atom.subscript, options);\n              sub = sub.trim();\n              result += ' the summation from <break time=\"200ms\"/>' + sub + '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\n              supsubHandled = true;\n            } else {\n              result += ' the summation of';\n            }\n          } else if (trimLatex === '\\\\prod') {\n            if (atom.superscript && atom.subscript) {\n              let sup = atomToSpeakableFragment('math', atom.superscript, options);\n              sup = sup.trim();\n              let sub = atomToSpeakableFragment('math', atom.subscript, options);\n              sub = sub.trim();\n              result += ' the product from <break time=\"200ms\"/>' + sub + '<break time=\"200ms\"/> to <break time=\"200ms\"/>' + sup + '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\n              supsubHandled = true;\n            } else if (atom.subscript) {\n              let sub = atomToSpeakableFragment('math', atom.subscript, options);\n              sub = sub.trim();\n              result += ' the product from <break time=\"200ms\"/>' + sub + '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\n              supsubHandled = true;\n            } else {\n              result += ' the product  of ';\n            }\n          } else if (trimLatex === '\\\\int') {\n            if (atom.superscript && atom.subscript) {\n              let sup = atomToSpeakableFragment('math', atom.superscript, options);\n              sup = sup.trim();\n              let sub = atomToSpeakableFragment('math', atom.subscript, options);\n              sub = sub.trim();\n              result += ' the integral from <break time=\"200ms\"/>' + emph(sub) + '<break time=\"200ms\"/> to <break time=\"200ms\"/>' + emph(sup) + ' <break time=\"200ms\"/> of ';\n              supsubHandled = true;\n            } else {\n              result += ' the integral of <break time=\"200ms\"/> ';\n            }\n          } else if (typeof atom.body === 'string') {\n            const value = PRONUNCIATION[atom.body] || PRONUNCIATION[atom.symbol];\n\n            if (value) {\n              result += value;\n            } else {\n              result += ' ' + atom.body;\n            }\n          } else if (atom.symbol) {\n            if (atom.symbol[0] === '\\\\') {\n              result += ' ' + atom.symbol.substr(1);\n            } else {\n              result += ' ' + atom.symbol;\n            }\n          }\n        }\n\n        break;\n\n      case 'enclose':\n        body = atomToSpeakableFragment('math', atom.body, options);\n\n        if (isAtomic(atom.body)) {\n          result += ' crossed out ' + body + ' , ';\n        } else {\n          result += ' crossed out ' + body + '. End cross out';\n        }\n\n        break;\n    }\n\n    if (!supsubHandled && atom.superscript) {\n      let sup = atomToSpeakableFragment(mode, atom.superscript, options);\n      sup = sup.trim();\n      const sup2 = sup.replace(/<[^>]*>/g, '');\n\n      if (isAtomic(atom.superscript)) {\n        if (mode === 'math') {\n          const id = atomicID(atom.superscript);\n\n          if (id) {\n            result += '<mark name=\"' + id + '\"/>';\n          }\n        }\n\n        if (sup2 === '\\u2032') {\n          result += ' prime ';\n        } else if (sup2 === '2') {\n          result += ' squared ';\n        } else if (sup2 === '3') {\n          result += ' cubed ';\n        } else if (isNaN(parseInt(sup2))) {\n          result += ' to the ' + sup + '; ';\n        } else {\n          result += ' to the <say-as interpret-as=\"ordinal\">' + sup2 + '</say-as> power; ';\n        }\n      } else {\n        if (isNaN(parseInt(sup2))) {\n          result += ' raised to the ' + sup + '; ';\n        } else {\n          result += ' raised to the <say-as interpret-as=\"ordinal\">' + sup2 + '</say-as> power; ';\n        }\n      }\n    }\n\n    if (!supsubHandled && atom.subscript) {\n      let sub = atomToSpeakableFragment('math', atom.subscript, options);\n      sub = sub.trim();\n\n      if (isAtomic(atom.subscript)) {\n        result += ' sub ' + sub;\n      } else {\n        result += ' subscript ' + sub + '. End subscript. ';\n      }\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param  atoms The atoms to represent as speakable text.\r\n */\n\n\nfunction atomToSpeakableText(atoms, speechOptions) {\n  var _a;\n\n  const options = _objectSpread(_objectSpread({}, speechOptions), {}, {\n    textToSpeechRulesOptions: _objectSpread({}, speechOptions.textToSpeechRulesOptions)\n  });\n\n  if (window['sre'] && options.textToSpeechRules === 'sre') {\n    const mathML = atomsToMathML(atoms, options);\n\n    if (mathML) {\n      if (options.textToSpeechMarkup) {\n        options.textToSpeechRulesOptions = (_a = options.textToSpeechRulesOptions) !== null && _a !== void 0 ? _a : {};\n        options.textToSpeechRulesOptions.markup = options.textToSpeechMarkup;\n\n        if (options.textToSpeechRulesOptions.markup === 'ssml') {\n          options.textToSpeechRulesOptions.markup = 'ssml_step';\n        }\n\n        options.textToSpeechRulesOptions.rate = options.speechEngineRate;\n      }\n\n      if (options.textToSpeechRulesOptions) {\n        window['sre'].System.getInstance().setupEngine(options.textToSpeechRulesOptions);\n      }\n\n      return window['sre'].System.getInstance().toSpeech(mathML);\n    }\n\n    return '';\n  }\n\n  let result = atomToSpeakableFragment('math', atoms, options);\n\n  if (options.textToSpeechMarkup === 'ssml') {\n    let prosody = '';\n\n    if (options.speechEngineRate) {\n      prosody = '<prosody rate=\"' + options.speechEngineRate + '\">';\n    }\n\n    result = \"<?xml version=\\\"1.0\\\"?><speak version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\" xml:lang=\\\"en-US\\\">\" + '<amazon:auto-breaths>' + prosody + '<p><s>' + result + '</s></p>' + (prosody ? '</prosody>' : '') + '</amazon:auto-breaths>' + '</speak>';\n  } else if (options.textToSpeechMarkup === 'mac' && platform$1('mac') === 'mac') {\n    // Convert SSML to Mac markup\n    result = result.replace(/<mark([^/]*)\\/>/g, '').replace(/<emphasis>/g, '[[emph+]]').replace(/<\\/emphasis>/g, '').replace(/<break time=\"([0-9]*)ms\"\\/>/g, '[[slc $1]]').replace(/<say-as[^>]*>/g, '').replace(/<\\/say-as>/g, '');\n  } else {\n    // If no markup was requested, or 'mac' markup, but we're not on a mac,\n    // remove any that we may have\n    // Strip out the SSML markup\n    result = result.replace(/<[^>]*>/g, '').replace(/\\s{2,}/g, ' ');\n  }\n\n  return result;\n}\n\nfunction speakableText(speechOptions, prefix, atoms) {\n  const options = _objectSpread(_objectSpread({}, speechOptions), {}, {\n    textToSpeechMarkup: '',\n    textToSpeechRulesOptions: _objectSpread(_objectSpread({}, speechOptions.textToSpeechRulesOptions), {}, {\n      markup: 'none'\n    })\n  });\n\n  return prefix + atomToSpeakableText(atoms, options);\n}\n/**\r\n *\r\n * Speak some part of the expression, either with or without synchronized highlighting.\r\n *\r\n * @param speakOptions.withHighlighting - If true, synchronized\r\n * highlighting of speech will happen (if possible). Default is false.\r\n */\n// @revisit: register 'speak' command with mathfield (to get access to SpeechOptions, which need to be passed down)\n\n\nregister$2({\n  speak: (mathfield, scope, options) => {\n    return _speak(mathfield, scope, options);\n  }\n}, {\n  target: 'mathfield',\n  category: 'speech'\n});\n\nfunction _speak(mathfield, scope, speakOptions) {\n  speakOptions = speakOptions !== null && speakOptions !== void 0 ? speakOptions : {\n    withHighlighting: false\n  };\n\n  function getAtoms(mathfield, scope) {\n    let result = null;\n\n    switch (scope) {\n      case 'all':\n        result = mathfield.model.root;\n        break;\n\n      case 'selection':\n        if (!selectionIsCollapsed(mathfield.model)) {\n          result = getSelectedAtoms(mathfield.model);\n        }\n\n        break;\n\n      case 'left':\n        {\n          const siblings = mathfield.model.siblings();\n          const last = mathfield.model.startOffset();\n\n          if (last >= 1) {\n            result = [];\n\n            for (let i = 1; i <= last; i++) {\n              result.push(siblings[i]);\n            }\n          }\n\n          break;\n        }\n\n      case 'right':\n        {\n          const siblings = mathfield.model.siblings();\n          const first = mathfield.model.endOffset() + 1;\n\n          if (first <= siblings.length - 1) {\n            result = [];\n\n            for (let i = first; i <= siblings.length - 1; i++) {\n              result.push(siblings[i]);\n            }\n          }\n\n          break;\n        }\n\n      case 'group':\n        result = mathfield.model.siblings();\n        break;\n\n      case 'parent':\n        {\n          const parent = mathfield.model.parent();\n\n          if (parent && parent.type !== 'root') {\n            result = mathfield.model.parent();\n          }\n\n          break;\n        }\n    }\n\n    return result;\n  }\n\n  function getFailedSpeech(scope) {\n    let result = '';\n\n    switch (scope) {\n      case 'all':\n        console.log('Internal failure: speak all failed');\n        break;\n\n      case 'selection':\n        result = 'no selection';\n        break;\n\n      case 'left':\n        result = 'at start';\n        break;\n\n      case 'right':\n        result = 'at end';\n        break;\n\n      case 'group':\n        console.log('Internal failure: speak group failed');\n        break;\n\n      case 'parent':\n        result = 'no parent';\n        break;\n\n      default:\n        console.log('unknown speak_ param value: \"' + scope + '\"');\n        break;\n    }\n\n    return result;\n  }\n\n  const atoms = getAtoms(mathfield, scope);\n\n  if (atoms === null) {\n    mathfield.options.speakHook(getFailedSpeech(scope), mathfield.options);\n    return false;\n  }\n\n  const options = _objectSpread({}, mathfield.options);\n\n  if (speakOptions.withHighlighting || options.speechEngine === 'amazon') {\n    options.textToSpeechMarkup = window['sre'] && options.textToSpeechRules === 'sre' ? 'ssml_step' : 'ssml';\n  }\n\n  const text = atomToSpeakableText(atoms, options);\n\n  if (speakOptions.withHighlighting) {\n    window['mathlive'].readAloudMathField = mathfield;\n    render(mathfield, {\n      forHighlighting: true\n    });\n\n    if (mathfield.options.readAloudHook) {\n      mathfield.options.readAloudHook(mathfield.field, text, mathfield.options);\n    }\n  } else {\n    if (mathfield.options.speakHook) {\n      mathfield.options.speakHook(text, options);\n    }\n  }\n\n  return false;\n}\n\nfunction defaultSpeakHook(text, config) {\n  if (!config && window && window['mathlive']) {\n    config = window['mathlive'].config;\n  }\n\n  config = config !== null && config !== void 0 ? config : {};\n\n  if (!config.speechEngine || config.speechEngine === 'local') {\n    // On ChromeOS: chrome.accessibilityFeatures.spokenFeedback\n    // See also https://developer.chrome.com/apps/tts\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    if (window) {\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.log('Speak: ', text);\n    }\n  } else if (config.speechEngine === 'amazon') {\n    if (!window || !window['AWS']) {\n      console.warn('AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk');\n    } else {\n      const polly = new window['AWS'].Polly({\n        apiVersion: '2016-06-10'\n      });\n      const params = {\n        OutputFormat: 'mp3',\n        VoiceId: config.speechEngineVoice,\n        Engine: ['Amy', 'Emma', 'Brian', 'Ivy', 'Joanna', 'Kendra', 'Kimberly', 'Salli', 'Joey', 'Justin', 'Matthew'].includes(config.speechEngineVoice) ? 'neural' : 'standard',\n        // SampleRate: '24000',\n        Text: text,\n        TextType: 'ssml'\n      }; // https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Polly.html#synthesizeSpeech-property\n\n      polly.synthesizeSpeech(params, function (err, data) {\n        if (err) {\n          console.warn('polly.synthesizeSpeech() error:', err, err.stack); // announce('plonk');\n        } else if (data === null || data === void 0 ? void 0 : data.AudioStream) {\n          const uInt8Array = new Uint8Array(data.AudioStream);\n          const blob = new Blob([uInt8Array.buffer], {\n            type: 'audio/mpeg'\n          });\n          const url = URL.createObjectURL(blob);\n          const audioElement = new Audio(url);\n          audioElement.play().catch(err => console.log(err));\n        } else {\n          console.log('polly.synthesizeSpeech():' + data);\n        }\n      }); // Can call AWS.Request() on the result of synthesizeSpeech()\n    }\n  } else if (config.speechEngine === 'google') {\n    console.warn('The Google speech engine is not supported yet. Please come again.'); // @todo: implement support for Google Text-to-Speech API,\n    // using config.speechEngineToken, config.speechEngineVoice and\n    // config.speechEngineAudioConfig\n    // curl -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) \\\n    //   -H \"Content-Type: application/json; charset=utf-8\" \\\n    //   --data \"{\n    //     'input':{\n    //       'text':'Android is a mobile operating system developed by Google,\n    //          based on the Linux kernel and designed primarily for\n    //          touchscreen mobile devices such as smartphones and tablets.'\n    //     },\n    //     'voice':{\n    //       'languageCode':'en-gb',\n    //       'name':'en-GB-Standard-A',\n    //       'ssmlGender':'FEMALE'\n    //     },\n    //     'audioConfig':{\n    //       'audioEncoding':'MP3'\n    //     }\n    //   }\" \"https://texttospeech.googleapis.com/v1beta1/text:synthesize\" > synthesize-text.txt\n  }\n}\n/**\r\n * Announce a change in selection or content via the aria-live region.\r\n *\r\n * @param action The action that invoked the change.\r\n * @param oldModel The previous value of the model before the change.\r\n */\n\n\nfunction defaultAnnounceHook(mathfield, action, oldModel, atoms) {\n  //** Fix: the focus is the end of the selection, so it is before where we want it\n  let liveText = ''; // const action = moveAmount > 0 ? \"right\" : \"left\";\n\n  if (action === 'plonk') {\n    // Use this sound to indicate (minor) errors, for\n    // example when a action has no effect.\n    if (mathfield.plonkSound) {\n      mathfield.plonkSound.load();\n      mathfield.plonkSound.play().catch(err => console.warn(err));\n    } // As a side effect, reset the keystroke buffer\n\n\n    mathfield.resetKeystrokeBuffer();\n  } else if (action === 'delete') {\n    liveText = speakableText(mathfield.options, 'deleted: ', atoms); //*** FIX: could also be moveUp or moveDown -- do something different like provide context???\n  } else if (action === 'focus' || /move/.test(action)) {\n    //*** FIX -- should be xxx selected/unselected */\n    liveText = (selectionIsCollapsed(mathfield.model) ? '' : 'selected: ') + nextAtomSpeechText(mathfield, oldModel);\n  } else if (action === 'replacement') {\n    // announce the contents\n    liveText = speakableText(mathfield.options, '', mathfield.model.sibling(0));\n  } else if (action === 'line') {\n    // announce the current line -- currently that's everything\n    mathfield.accessibleNode.innerHTML = mathfield.options.createHTML('<math xmlns=\"http://www.w3.org/1998/Math/MathML\">' + atomsToMathML(mathfield.model.root, mathfield.options) + '</math>');\n    liveText = speakableText(mathfield.options, '', mathfield.model.root);\n    mathfield.keyboardDelegate.setAriaLabel('after: ' + liveText);\n    /*** FIX -- testing hack for setting braille ***/\n    // mathfield.accessibleNode.focus();\n    // console.log(\"before sleep\");\n    // sleep(1000).then(() => {\n    //     mathfield.textarea.focus();\n    //     console.log(\"after sleep\");\n    // });\n  } else {\n    liveText = atoms ? speakableText(mathfield.options, action + ' ', atoms) : action;\n  } // aria-live regions are only spoken when it changes; force a change by\n  // alternately using nonbreaking space or narrow nonbreaking space\n\n\n  const ariaLiveChangeHack = /\\u00a0/.test(mathfield.ariaLiveText.textContent) ? ' \\u202f ' : ' \\u00a0 ';\n  mathfield.ariaLiveText.textContent = liveText + ariaLiveChangeHack; // this.textarea.setAttribute('aria-label', liveText + ariaLiveChangeHack);\n}\n/* Returns the speech text of the next atom after the selection or\r\n *   an 'end of' phrasing based on what structure we are at the end of\r\n */\n// @revisit. Currently this = MathfieldPrivate, but it looks like model is enough\n\n\nfunction nextAtomSpeechText(mathfield, oldModel) {\n  function relation(parent, leaf) {\n    const EXPR_NAME = {\n      //    'array': 'should not happen',\n      numer: 'numerator',\n      denom: 'denominator',\n      index: 'index',\n      body: 'parent',\n      subscript: 'subscript',\n      superscript: 'superscript'\n    };\n    const PARENT_NAME = {\n      enclose: 'cross out',\n      leftright: 'fence',\n      surd: 'square root',\n      root: 'math field'\n    };\n    return leaf.relation === 'body' ? PARENT_NAME[parent.type] : EXPR_NAME[leaf.relation];\n  }\n\n  const oldPath = oldModel ? oldModel.path : [];\n  const path = mathfield.model.path;\n  const leaf = path[path.length - 1];\n  let result = '';\n\n  while (oldPath.length > path.length) {\n    result += 'out of ' + relation(oldModel.parent(), oldPath[oldPath.length - 1]) + '; ';\n    oldPath.pop();\n  }\n\n  if (!selectionIsCollapsed(mathfield.model)) {\n    return speakableText(mathfield.options, '', getSelectedAtoms(mathfield.model));\n  } // announce start of denominator, etc\n\n\n  const relationName = relation(mathfield.model.parent(), leaf);\n\n  if (leaf.offset === 0) {\n    result += (relationName ? 'start of ' + relationName : 'unknown') + ': ';\n  }\n\n  const atom = mathfield.model.sibling(Math.max(1, mathfield.model.extent));\n\n  if (atom) {\n    result += speakableText(mathfield.options, '', atom);\n  } else if (leaf.offset !== 0) {\n    // don't say both start and end\n    result += relationName ? 'end of ' + relationName : 'unknown';\n  }\n\n  return result;\n}\n\nconst AUDIO_FEEDBACK_VOLUME = 0.5; // from 0.0 to 1.0\n\nconst NO_OP_LISTENER = () => {\n  return;\n};\n\nfunction loadSound(sound) {\n  if (typeof sound === 'string') {\n    const result = new Audio();\n    result.preload = 'none';\n    result.src = sound;\n    result.volume = AUDIO_FEEDBACK_VOLUME;\n    return result;\n  }\n\n  return sound;\n}\n\nfunction unloadSound(sound) {\n  if (sound instanceof HTMLAudioElement) {\n    sound.pause();\n    sound.removeAttribute('src');\n    sound.load();\n  }\n}\n\nfunction update(current, updates) {\n  const result = get(current, Object.keys(current));\n  Object.keys(updates).forEach(key => {\n    var _a, _b, _c;\n\n    switch (key) {\n      case 'scriptDepth':\n        if (isArray(updates.scriptDepth)) {\n          result.scriptDepth = [updates.scriptDepth[0], updates.scriptDepth[1]];\n        } else if (typeof updates.scriptDepth === 'number') {\n          result.scriptDepth = [updates.scriptDepth, updates.scriptDepth];\n        } else {\n          throw Error('Unexpected value for scriptDepth');\n        }\n\n        break;\n\n      case 'namespace':\n        // Validate the namespace (used for `data-` attributes)\n        if (!/^[a-z]*[-]?$/.test(updates.namespace)) {\n          throw Error('namespace must be a string of lowercase characters only');\n        }\n\n        if (!/-$/.test(updates.namespace)) {\n          result.namespace = updates.namespace + '-';\n        } else {\n          result.namespace = updates.namespace;\n        }\n\n        break;\n\n      case 'locale':\n        result.locale = updates.locale === 'auto' ? (_a = navigator === null || navigator === void 0 ? void 0 : navigator.language.slice(0, 5)) !== null && _a !== void 0 ? _a : 'en' : updates.locale;\n        l10n.locale = result.locale;\n        break;\n\n      case 'strings':\n        l10n.merge(updates.strings);\n        result.strings = l10n.strings;\n        break;\n\n      case 'virtualKeyboardLayout':\n        if (updates.virtualKeyboardLayout === 'auto') {\n          result.virtualKeyboardLayout = (_b = {\n            fr: 'azerty',\n            be: 'azerty',\n            al: 'qwertz',\n            ba: 'qwertz',\n            cz: 'qwertz',\n            de: 'qwertz',\n            hu: 'qwertz',\n            sk: 'qwertz',\n            ch: 'qwertz'\n          }[l10n.locale.substring(0, 2)]) !== null && _b !== void 0 ? _b : 'qwerty';\n        } else {\n          result.virtualKeyboardLayout = updates.virtualKeyboardLayout;\n        }\n\n        break;\n\n      case 'virtualKeyboardMode':\n        {\n          const isTouchDevice = (_c = window.matchMedia) === null || _c === void 0 ? void 0 : _c.call(window, '(any-pointer: coarse)').matches;\n\n          if (updates.virtualKeyboardMode === 'auto') {\n            result.virtualKeyboardMode = isTouchDevice ? 'onfocus' : 'off';\n          } else {\n            result.virtualKeyboardMode = updates.virtualKeyboardMode;\n          }\n        }\n        break;\n\n      case 'letterShapeStyle':\n        if (updates.letterShapeStyle === 'auto') {\n          // Letter shape style (locale dependent)\n          if (l10n.locale.substring(0, 2) === 'fr') {\n            result.letterShapeStyle = 'french';\n          } else {\n            result.letterShapeStyle = 'tex';\n          }\n        } else {\n          result.letterShapeStyle = updates.letterShapeStyle;\n        }\n\n        break;\n\n      case 'plonkSound':\n        unloadSound(result.plonkSound);\n        result.plonkSound = loadSound(updates.plonkSound);\n        break;\n\n      case 'keypressSound':\n        unloadSound(result.keypressSound);\n\n        if (typeof updates.keypressSound === 'string') {\n          const sound = loadSound(updates.keypressSound);\n          result.keypressSound = {\n            delete: sound,\n            return: sound,\n            spacebar: sound,\n            default: sound\n          };\n        } else if (updates.keypressSound instanceof HTMLAudioElement) {\n          result.keypressSound = {\n            delete: updates.keypressSound,\n            return: updates.keypressSound,\n            spacebar: updates.keypressSound,\n            default: updates.keypressSound\n          };\n        } else {\n          if (!updates.keypressSound.default) {\n            throw Error('Missing keypressSound.default');\n          }\n\n          result.keypressSound = _objectSpread({}, updates.keypressSound);\n\n          if (!result.keypressSound.return) {\n            result.keypressSound.return = updates.keypressSound.default;\n          }\n\n          if (!result.keypressSound.spacebar) {\n            result.keypressSound.spacebar = updates.keypressSound.default;\n          }\n\n          if (!result.keypressSound.delete) {\n            result.keypressSound.delete = updates.keypressSound.default;\n          }\n        }\n\n        break;\n\n      case 'onBlur':\n      case 'onFocus':\n      case 'onContentWillChange':\n      case 'onContentDidChange':\n      case 'onSelectionWillChange':\n      case 'onSelectionDidChange':\n      case 'onUndoStateWillChange':\n      case 'onUndoStateDidChange':\n      case 'onModeChange':\n      case 'onCommit':\n      case 'onVirtualKeyboardToggle':\n      case 'onReadAloudStatus':\n      case 'onError':\n        if (updates[key] === null) {\n          result[key] = NO_OP_LISTENER;\n        } else if (typeof updates[key] !== 'function') {\n          throw Error(key + ' must be a function or null');\n        }\n\n        result[key] = updates[key];\n        break;\n\n      default:\n        if (isArray(updates[key])) {\n          result[key] = [...updates[key]];\n        } else if (typeof updates[key] === 'object') {\n          result[key] = _objectSpread({}, updates[key]);\n        } else {\n          result[key] = updates[key];\n        }\n\n    }\n  }); // @revisit 1.0: for backward compatibility, interprets the overrideDefaultInlineShortcuts\n  // property\n\n  if (typeof updates.overrideDefaultInlineShortcuts !== 'undefined') {\n    if (updates.overrideDefaultInlineShortcuts) {\n      result.inlineShortcuts = updates.inlineShortcuts;\n    } else {\n      result.inlineShortcuts = _objectSpread(_objectSpread({}, INLINE_SHORTCUTS), updates.inlineShortcuts);\n    }\n  }\n\n  return result;\n}\n\nfunction get(config, keys) {\n  let resolvedKeys;\n\n  if (typeof keys === 'string') {\n    resolvedKeys = [keys];\n  } else if (typeof keys === 'undefined') {\n    resolvedKeys = Object.keys(config);\n  } else {\n    resolvedKeys = keys;\n  }\n\n  const result = {};\n  resolvedKeys.forEach(x => {\n    if (isArray(result[x])) {\n      result[x] = [...result[x]];\n    } else if (typeof result[x] === 'object') {\n      result[x] = _objectSpread({}, result[x]);\n    } else {\n      result[x] = config[x];\n    }\n  }); // If requested a single key, return its value\n\n  if (typeof keys === 'string') {\n    return result[keys];\n  }\n\n  return result;\n}\n\nfunction getDefault() {\n  return {\n    namespace: '',\n    substituteTextArea: undefined,\n    readOnly: false,\n    createHTML: s => s,\n    fontsDirectory: './fonts',\n    defaultMode: 'math',\n    macros: MACROS,\n    horizontalSpacingScale: 1.0,\n    letterShapeStyle: 'auto',\n    smartMode: false,\n    smartFence: true,\n    smartSuperscript: true,\n    scriptDepth: [Infinity, Infinity],\n    removeExtraneousParentheses: true,\n    ignoreSpacebarInMathMode: true,\n    locale: l10n.locale,\n    strings: l10n.strings,\n    keybindings: DEFAULT_KEYBINDINGS,\n    overrideDefaultInlineShortcuts: false,\n    inlineShortcuts: {},\n    inlineShortcutTimeout: 0,\n    virtualKeyboardToggleGlyph: \"<span style=\\\"width: 21px; margin-top: 4px;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 576 512\\\"><path d=\\\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\\\"/></svg></span>\",\n    virtualKeyboardMode: 'auto',\n    virtualKeyboards: 'all',\n    virtualKeyboardLayout: 'auto',\n    customVirtualKeyboardLayers: {},\n    customVirtualKeyboards: {},\n    virtualKeyboardTheme: /android|cros/i.test(navigator === null || navigator === void 0 ? void 0 : navigator.userAgent) ? 'material' : 'apple',\n    keypressVibration: true,\n    keypressSound: null,\n    plonkSound: null,\n    textToSpeechRules: 'mathlive',\n    textToSpeechMarkup: '',\n    textToSpeechRulesOptions: {},\n    speechEngine: 'local',\n    speechEngineVoice: 'Joanna',\n    speechEngineRate: '100%',\n    speakHook: NO_OP_LISTENER,\n    readAloudHook: NO_OP_LISTENER,\n    onAnnounce: defaultAnnounceHook,\n    onKeystroke: () => true,\n    onMoveOutOf: () => true,\n    onTabOutOf: () => true,\n    onBlur: NO_OP_LISTENER,\n    onFocus: NO_OP_LISTENER,\n    onContentWillChange: NO_OP_LISTENER,\n    onContentDidChange: NO_OP_LISTENER,\n    onSelectionWillChange: NO_OP_LISTENER,\n    onSelectionDidChange: NO_OP_LISTENER,\n    onUndoStateWillChange: NO_OP_LISTENER,\n    onUndoStateDidChange: NO_OP_LISTENER,\n    onModeChange: NO_OP_LISTENER,\n    onVirtualKeyboardToggle: NO_OP_LISTENER,\n    onReadAloudStatus: NO_OP_LISTENER,\n    onCommit: NO_OP_LISTENER,\n    onError: () => {\n      return;\n    }\n  };\n}\n/**\r\n * Convert the atoms before the anchor to 'text' mode\r\n * @param count - how many atoms back to look at\r\n * @param {function} until - callback to indicate when to stop\r\n * @private\r\n */\n\n\nfunction convertLastAtomsToText(mathfield, count, until) {\n  if (typeof count === 'function') {\n    until = count;\n    count = Infinity;\n  }\n\n  if (typeof count === 'undefined') {\n    count = Infinity;\n  }\n\n  let i = 0;\n  let done = false;\n\n  while (!done) {\n    const atom = mathfield.model.sibling(i);\n    done = count === 0 || !atom || atom.mode !== 'math' || !(/mord|textord|mpunct/.test(atom.type) || atom.type === 'mop' && /[a-zA-Z]+/.test(atom.body)) || Boolean(atom.superscript) || Boolean(atom.subscript) || until && !until(atom);\n\n    if (!done) {\n      atom.applyStyle({\n        mode: 'text'\n      });\n      atom.symbol = atom.body;\n      atom.latex = '';\n    }\n\n    i -= 1;\n    count -= 1;\n  }\n\n  contentDidChange(mathfield.model);\n}\n/**\r\n * Convert the atoms before the anchor to 'math' mode 'mord'\r\n * @param {number} count - how many atoms back to look at\r\n * @param {function} until - callback to indicate when to stop\r\n * @private\r\n */\n\n\nfunction convertLastAtomsToMath(mathfield, count, until) {\n  if (typeof count === 'function') {\n    until = count;\n    count = Infinity;\n  }\n\n  if (typeof count === 'undefined') {\n    count = Infinity;\n  }\n\n  let i = 0;\n  let done = false;\n\n  while (!done) {\n    const atom = mathfield.model.sibling(i);\n    done = count === 0 || !atom || atom.mode !== 'text' || atom.body === ' ' || until && !until(atom);\n\n    if (!done) {\n      atom.applyStyle({\n        mode: 'math'\n      });\n    }\n\n    i -= 1;\n    count -= 1;\n  }\n\n  removeIsolatedSpace(mathfield);\n  contentDidChange(mathfield.model);\n}\n/**\r\n * Going backwards from the anchor, if a text zone consisting of a single\r\n * space character is found (i.e. it is surrounded by math zone),\r\n * remove it.\r\n */\n\n\nfunction removeIsolatedSpace(mathfield) {\n  let i = 0;\n\n  while (mathfield.model.sibling(i) && mathfield.model.sibling(i).mode === 'math') {\n    i -= 1;\n  } // If the atom before the last one converted is a\n  // text mode space, preceded by a math mode atom,\n  // remove the space\n\n\n  if (mathfield.model.sibling(i) && mathfield.model.sibling(i).mode === 'text' && mathfield.model.sibling(i).body === ' ' && (!mathfield.model.sibling(i - 1) || mathfield.model.sibling(i - 1).mode === 'math')) {\n    mathfield.model.siblings().splice(i - 1, 1);\n    contentDidChange(mathfield.model); // We need to adjust the selection after doing some surgery on the atoms list\n    // But we don't want to receive selection notification changes\n    // which could have a side effect of changing the mode :(\n\n    const save = mathfield.model.suppressChangeNotifications;\n    mathfield.model.suppressChangeNotifications = true;\n    setSelectionOffset(mathfield.model, mathfield.model.anchorOffset() - 1);\n    mathfield.model.suppressChangeNotifications = save;\n  }\n}\n/**\r\n * Return the characters before anchor that could potentially be turned\r\n * into text mode.\r\n * This excludes things like 'mop' (e.g. \\sin)\r\n */\n\n\nfunction getTextBeforeAnchor(mathfield) {\n  // Going backwards, accumulate\n  let result = '';\n  let i = 0;\n  let done = false;\n\n  while (!done) {\n    const atom = mathfield.model.sibling(i);\n    done = !(atom && (atom.mode === 'text' && !atom.type || atom.mode === 'math' && /mord|textord|mpunct/.test(atom.type)));\n\n    if (!done) {\n      result = atom.body + result;\n    }\n\n    i -= 1;\n  }\n\n  return result;\n}\n/**\r\n * Consider whether to switch mode give the content before the anchor\r\n * and the character being input\r\n *\r\n * @param keystroke\r\n * @param evt - a Event corresponding to the keystroke\r\n * @return true if the mode should change\r\n */\n\n\nfunction smartMode(mathfield, keystroke, evt) {\n  if (mathfield.smartModeSuppressed) {\n    return false;\n  }\n\n  if (mathfield.model.endOffset() < mathfield.model.siblings().length - 1) {\n    return false;\n  }\n\n  if (!evt || !mightProducePrintableCharacter(evt)) {\n    return false;\n  }\n\n  const c = eventToChar(evt);\n\n  if (!selectionIsCollapsed(mathfield.model)) {\n    // There is a selection\n    if (mathfield.mode === 'text') {\n      if (/[/_^]/.test(c)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  const context = getTextBeforeAnchor(mathfield) + c;\n\n  if (mathfield.mode === 'text') {\n    // We're in text mode. Should we switch to math?\n    if (keystroke === 'Esc' || /[/\\\\]/.test(c)) {\n      // If this is a command for a fraction,\n      // or the '\\' command mode key\n      // switch to 'math'\n      return true;\n    }\n\n    if (/[\\^_]/.test(c)) {\n      // If this is a superscript or subscript\n      // switch to 'math'\n      if (/(^|\\s)[a-zA-Z][^_]$/.test(context)) {\n        // If left hand context is a single letter,\n        // convert it to math\n        convertLastAtomsToMath(mathfield, 1);\n      }\n\n      return true;\n    } // If this is a closing matching fence\n    // switch to 'math' mode\n\n\n    const lFence = {\n      ')': '(',\n      '}': '{',\n      ']': '['\n    }[c];\n\n    if (lFence && mathfield.model.parent() && mathfield.model.parent().type === 'leftright' && mathfield.model.parent().leftDelim === lFence) {\n      return true;\n    }\n\n    if (/(^|[^a-zA-Z])(a|I)[ ]$/.test(context)) {\n      // Single letters that are valid words in the current language\n      // Do nothing. @todo: localization\n      return false;\n    }\n\n    if (/[\\$\\xA2-\\xA5\\u0E3F\\u20A1\\u20A4\\u20A7-\\u20A9\\u20AC\\u20B1\\u20B9\\u20BA]/.test(c)) {\n      // A currency symbol.\n      // Switch to math mode\n      return true;\n    }\n\n    if (/(^|[^a-zA-Z'’])[a-zA-Z][ ]$/.test(context)) {\n      // An isolated letter, followed by a space:\n      // Convert the letter to math, stay in text mode.\n      convertLastAtomsToMath(mathfield, 1);\n      return false;\n    }\n\n    if (/[^0-9]\\.[^0-9\\s]$/.test(context)) {\n      // A period followed by something other than space or a digit\n      // and not preceded by a digit.\n      // We thought this was a text period, but turns out it's not\n      // Turn it into a \\cdot\n      convertLastAtomsToMath(mathfield, 1);\n      const atom = mathfield.model.sibling(0);\n      atom.body = '⋅'; // centered dot\n\n      atom.variant = 'normal'; // @revisit. Was 'auto'. Check for proper conversion.\n\n      atom.symbol = '\\\\cdot';\n      atom.latex = '';\n      return true;\n    }\n\n    if (/(^|\\s)[a-zA-Z][^a-zA-Z]$/.test(context)) {\n      // Single letter (x), followed by a non-letter (>, =...)\n      convertLastAtomsToMath(mathfield, 1);\n      return true;\n    }\n\n    if (/\\.[0-9]$/.test(context)) {\n      // If the new character is a digit,\n      // and it was preceded by a dot (which may have been converted\n      // to text)\n      // turn the dot back into 'math'\n      convertLastAtomsToMath(mathfield, 1);\n      return true;\n    }\n\n    if (/[(][0-9+\\-.]$/.test(context)) {\n      // An open paren followed by a number\n      // Turn the paren back to math and switch.\n      convertLastAtomsToMath(mathfield, 1);\n      return true;\n    }\n\n    if (/[(][a-z][,;]$/.test(context)) {\n      // An open paren followed by a single letter, then a \",\" or \";\"\n      // Turn the paren back and letter to math and switch.\n      convertLastAtomsToMath(mathfield, 2);\n      return true;\n    } // The tests above can look behind and change what had previously\n    // been entered. Now, let's just look at the typed character.\n\n\n    if (/[0-9+\\-=><*|]$/.test(c)) {\n      // If this new character looks like a number,\n      // or a relational operator (=, <, >)\n      // or a \"*\" or \"|\"\n      // (note that <=, >=, etc... are handled separately as shortcuts)\n      // switch to 'math'\n      removeIsolatedSpace(mathfield);\n      return true;\n    }\n  } else {\n    // We're in math mode. Should we switch to text?\n    if (keystroke === '[Space]') {\n      convertLastAtomsToText(mathfield, undefined, a => /[a-z][:,;.]$/.test(a.body));\n      return true;\n    }\n\n    if (/[a-zA-Z]{3,}$/.test(context) && !/(dxd|abc|xyz|uvw)$/.test(context)) {\n      // A sequence of three characters\n      // (except for some exceptions)\n      // Convert them to text.\n      convertLastAtomsToText(mathfield, undefined, a => /[a-zA-Z]/.test(a.body));\n      return true;\n    }\n\n    if (/(^|\\W)(if|If)$/i.test(context)) {\n      // @todo localization\n      convertLastAtomsToText(mathfield, 1);\n      return true;\n    }\n\n    if (/(\\u0393|\\u0394|\\u0398|\\u039B|\\u039E|\\u03A0|\\u03A3|\\u03A5|\\u03A6|\\u03A8|\\u03A9|[\\u03B1-\\u03C9]|\\u03D1|\\u03D5|\\u03D6|\\u03F1|\\u03F5){3,}$/.test(context) && !/(αβγ)$/.test(context)) {\n      // A sequence of three *greek* characters\n      // (except for one exception)\n      // Convert them to text.\n      convertLastAtomsToText(mathfield, undefined, a => /(:|,|;|(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])|\\u0393|\\u0394|\\u0398|\\u039B|\\u039E|\\u03A0|\\u03A3|\\u03A5|\\u03A6|\\u03A8|\\u03A9|[\\u03B1-\\u03C9]|\\u03D1|\\u03D5|\\u03D6|\\u03F1|\\u03F5)/.test(a.body));\n      return true;\n    }\n\n    if (c === '?') {\n      // If the last character is a question mark,\n      // turn it to 'text'\n      return true;\n    }\n\n    if (c === '.' && !/[0-9-+]\\.$/.test(context)) {\n      // A period after something other than a digit (or minus)\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction showKeystroke(mathfield, keystroke) {\n  const vb = mathfield.keystrokeCaption;\n\n  if (vb && mathfield.keystrokeCaptionVisible) {\n    const bounds = mathfield.element.getBoundingClientRect();\n    vb.style.left = bounds.left + 'px';\n    vb.style.top = bounds.top - 64 + 'px';\n    vb.innerHTML = mathfield.options.createHTML('<span>' + (getKeybindingMarkup(keystroke) || keystroke) + '</span>' + vb.innerHTML);\n    vb.style.visibility = 'visible';\n    setTimeout(function () {\n      if (vb.childNodes.length > 0) {\n        vb.removeChild(vb.childNodes[vb.childNodes.length - 1]);\n      }\n\n      if (vb.childNodes.length === 0) {\n        vb.style.visibility = 'hidden';\n      }\n    }, 3000);\n  }\n}\n/**\r\n * @param evt - An Event corresponding to the keystroke.\r\n */\n\n\nfunction onKeystroke(mathfield, keystroke, evt) {\n  // 1. Update the keybindings according to the current keyboard layout\n  // 1.1 Possibly update the current keyboard layout based on this event\n  validateKeyboardLayout(evt);\n  const activeLayout = getActiveKeyboardLayout();\n\n  if (mathfield.keyboardLayout !== activeLayout.id) {\n    // console.log('Switching to keyboard layout ' + activeLayout.id);\n    mathfield.keyboardLayout = activeLayout.id;\n    mathfield.keybindings = normalizeKeybindings(mathfield.options.keybindings, e => {\n      if (typeof mathfield.options.onError === 'function') {\n        mathfield.options.onError({\n          code: 'invalid-keybinding',\n          arg: e.join('\\n')\n        });\n      }\n\n      console.log(e.join('\\n'));\n    });\n  } // 2. Display the keystroke in the keystroke panel (if visible)\n\n\n  showKeystroke(mathfield, keystroke); // 3. Reset the timer for the keystroke buffer reset\n\n  clearTimeout(mathfield.keystrokeBufferResetTimer); // 4. Give a chance to the custom keystroke handler to intercept the event\n\n  if (mathfield.options.onKeystroke && !mathfield.options.onKeystroke(mathfield, keystroke, evt)) {\n    if (evt === null || evt === void 0 ? void 0 : evt.preventDefault) {\n      evt.preventDefault();\n      evt.stopPropagation();\n    }\n\n    return false;\n  } // 5. Let's try to find a matching shortcut or command\n\n\n  let shortcut;\n  let stateIndex;\n  let selector;\n  let resetKeystrokeBuffer = false; // 5.1 Check if the keystroke, prefixed with the previously typed keystrokes,\n  // would match a long shortcut (i.e. '~~')\n  // Ignore the key if command or control is pressed (it may be a keybinding,\n  // see 5.3)\n\n  if (mathfield.mode !== 'command' && (!evt || !evt.ctrlKey && !evt.metaKey)) {\n    if (keystroke === '[Backspace]') {\n      // Special case for backspace\n      mathfield.keystrokeBuffer = mathfield.keystrokeBuffer.slice(0, -1);\n      mathfield.keystrokeBufferStates.pop();\n      mathfield.resetKeystrokeBuffer({\n        defer: true\n      });\n    } else if (!mightProducePrintableCharacter(evt)) {\n      // It was a non-alpha character (PageUp, End, etc...)\n      mathfield.resetKeystrokeBuffer();\n    } else {\n      const c = eventToChar(evt); // Find the longest substring that matches a shortcut\n\n      const candidate = mathfield.keystrokeBuffer + c;\n      let i = 0;\n\n      while (!shortcut && i < candidate.length) {\n        let siblings;\n\n        if (mathfield.keystrokeBufferStates[i]) {\n          const iter = new ModelPrivate();\n          iter.root = makeRoot('math', parseString(mathfield.keystrokeBufferStates[i].latex, mathfield.options.defaultMode, null, mathfield.options.macros));\n          normalizeModel(iter);\n          iter.selection = mathfield.keystrokeBufferStates[i].selection;\n          siblings = iter.siblings();\n        } else {\n          siblings = mathfield.model.siblings();\n        }\n\n        shortcut = getInlineShortcut(siblings, candidate.slice(i), mathfield.options.inlineShortcuts);\n        i += 1;\n      }\n\n      stateIndex = mathfield.keystrokeBufferStates.length - (candidate.length - i);\n      mathfield.keystrokeBuffer += c;\n      mathfield.keystrokeBufferStates.push(mathfield.getUndoRecord());\n\n      if (getInlineShortcutsStartingWith(candidate, mathfield.options).length <= 1) {\n        resetKeystrokeBuffer = true;\n      } else {\n        mathfield.resetKeystrokeBuffer({\n          defer: true\n        });\n      }\n    }\n  } // 5.2. Should we switch mode?\n  // Need to check this before determing if there's a valid shortcut\n  // since if we switch to math mode, we may want to apply the shortcut\n  // e.g. \"slope = rise/run\"\n\n\n  if (mathfield.options.smartMode) {\n    const previousMode = mathfield.mode;\n\n    if (shortcut) {\n      // If we found a shortcut (e.g. \"alpha\"),\n      // switch to math mode and insert it\n      mathfield.mode = 'math';\n    } else if (smartMode(mathfield, keystroke, evt)) {\n      mathfield.mode = {\n        math: 'text',\n        text: 'math'\n      }[mathfield.mode];\n      selector = '';\n    } // Notify of mode change\n\n\n    if (mathfield.mode !== previousMode && typeof mathfield.options.onModeChange === 'function') {\n      mathfield.options.onModeChange(mathfield, mathfield.mode);\n    }\n  } // 5.3 Check if this matches a keybinding\n  // Need to check this **after** checking for inline shortcuts because\n  // shift+backquote is a keybinding that inserts \"\\~\"\", but \"~~\" is a\n  // shortcut for \"\\approx\" and needs to have priority over shift+backquote\n\n\n  if (!shortcut && !selector) {\n    selector = getCommandForKeybinding(mathfield.keybindings, mathfield.mode, keystroke);\n  }\n\n  if (!shortcut && !selector && (keystroke === '[Enter]' || keystroke === '[Return]')) {\n    // No matching keybinding: trigger a commit\n    if (typeof mathfield.options.onCommit === 'function') {\n      mathfield.options.onCommit(mathfield);\n\n      if (evt === null || evt === void 0 ? void 0 : evt.preventDefault) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n\n      return false;\n    }\n  } // No shortcut :( We're done.\n\n\n  if (!shortcut && !selector) {\n    return true;\n  }\n\n  if (mathfield.options.readOnly && selector[0] === 'insert') {\n    return true;\n  } //\n  // 6. Perform the action matching this selector or insert the shortcut\n  //\n  //\n  // 6.1 Remove any error indicator (wavy underline) on the current command\n  // sequence (if there are any)\n  //\n\n\n  decorateCommandStringAroundInsertionPoint(mathfield.model, false); //\n  // 6.2 If we have a `moveAfterParent` selector (usually triggered with\n  // `spacebar), and we're at the end of a smart fence, close the fence with\n  // an empty (.) right delimiter\n  //\n\n  const parent = mathfield.model.parent();\n\n  if (selector === 'moveAfterParent' && parent && parent.type === 'leftright' && mathfield.model.endOffset() === mathfield.model.siblings().length - 1 && mathfield.options.smartFence && insertSmartFence(mathfield.model, '.', mathfield.style)) {\n    // Pressing the space bar (moveAfterParent selector) when at the end\n    // of a potential smartFence will close it as a semi-open fence\n    selector = '';\n    requestUpdate(mathfield); // Re-render the closed smartFence\n  } //\n  // 6.3 If this is the Spacebar and we're just before or right after\n  // a text zone, insert the space inside the text zone\n  //\n\n\n  if (mathfield.mode === 'math' && keystroke === '[Spacebar]' && !shortcut) {\n    const nextSibling = mathfield.model.sibling(1);\n    const previousSibling = mathfield.model.sibling(-1);\n\n    if (nextSibling && nextSibling.mode === 'text' || previousSibling && previousSibling.mode === 'text') {\n      insert(mathfield.model, ' ', {\n        mode: 'text'\n      });\n    }\n  } //\n  // 6.4 If there's a selector, perform it.\n  //\n\n\n  if (selector) {\n    mathfield.executeCommand(selector);\n  } else if (shortcut) {\n    //\n    // 6.5 Cancel the (upcoming) composition\n    // This is to prevent starting a composition when the keyboard event\n    // has already been handled.\n    // Example: alt+U -> \\cup, but could also be diaeresis deak key (¨) which\n    // starts a composition\n    //\n    mathfield.keyboardDelegate.cancelComposition(); //\n    // 6.6 Insert the shortcut\n    // If the shortcut is a mandatory escape sequence (\\}, etc...)\n    // don't make it undoable, this would result in syntactically incorrect\n    // formulas\n    //\n\n    const style = _objectSpread(_objectSpread({}, getAnchorStyle(mathfield.model)), mathfield.style);\n\n    if (!/^(\\\\{|\\\\}|\\\\[|\\\\]|\\\\@|\\\\#|\\\\$|\\\\%|\\\\^|\\\\_|\\\\backslash)$/.test(shortcut)) {\n      // To enable the substitution to be undoable,\n      // insert the character before applying the substitution\n      const saveMode = mathfield.mode;\n      insert(mathfield.model, eventToChar(evt), {\n        suppressChangeNotifications: true,\n        mode: mathfield.mode,\n        style: style\n      }); // Create a snapshot with the inserted character\n\n      mathfield.snapshotAndCoalesce(); // Revert to the state before the beginning of the shortcut\n      // (restore doesn't change the undo stack)\n\n      mathfield.restoreToUndoRecord(mathfield.keystrokeBufferStates[stateIndex]);\n      mathfield.mode = saveMode;\n    }\n\n    const save = mathfield.model.suppressChangeNotifications;\n    mathfield.model.suppressChangeNotifications = true; // Insert the substitute, possibly as a smart fence\n\n    insert(mathfield.model, shortcut, {\n      format: 'latex',\n      mode: mathfield.mode,\n      style: style,\n      smartFence: true\n    }); // Check if as a result of the substitution there is now an isolated\n    // (text mode) space (surrounded by math). In which case, remove it.\n\n    removeIsolatedSpace(mathfield); // Switch (back) to text mode if the shortcut ended with a space\n\n    if (shortcut.endsWith(' ')) {\n      mathfield.mode = 'text';\n      insert(mathfield.model, ' ', {\n        mode: 'text',\n        style: style\n      });\n    }\n\n    mathfield.model.suppressChangeNotifications = save;\n    contentDidChange(mathfield.model);\n    selectionDidChange(mathfield.model);\n    mathfield.snapshot();\n    mathfield.dirty = true; // Mark the field as dirty. It will get rendered in scrollIntoView()\n\n    mathfield.model.announce('replacement'); // If we're done with the shortcuts (found a unique one), reset it.\n\n    if (resetKeystrokeBuffer) {\n      mathfield.resetKeystrokeBuffer();\n    }\n  } //\n  // 7. Make sure the insertion point is scrolled into view\n  //\n\n\n  mathfield.scrollIntoView(); //\n  // 8. Keystroke has been handled, if it wasn't caught in the default\n  // case, so prevent propagation\n  //\n\n  if (evt === null || evt === void 0 ? void 0 : evt.preventDefault) {\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  return false;\n}\n/**\r\n * This handler is invoked when text has been typed, pasted in or input with\r\n * an input method. As a result, `text` can be a sequence of characters to\r\n * be inserted.\r\n * @param {string} text\r\n * @param {object} options\r\n * @param {boolean} options.focus - If true, the mathfield will be focused\r\n * @param {boolean} options.feedback - If true, provide audio and haptic feedback\r\n * @param {boolean} options.simulateKeystroke - If true, generate some synthetic\r\n * keystrokes (useful to trigger inline shortcuts, for example)\r\n * @param {boolean} options.commandMode - If true, switch to command mode if\r\n * necessary, then insert text\r\n * @private\r\n */\n\n\nfunction onTypedText(mathfield, text, options) {\n  if (mathfield.options.readOnly) {\n    mathfield.model.announce('plonk');\n    return;\n  }\n\n  options = options !== null && options !== void 0 ? options : {}; // Focus, then provide audio and haptic feedback\n\n  if (options.focus) {\n    mathfield.focus();\n  }\n\n  if (options.feedback) {\n    if (mathfield.options.keypressVibration && (navigator === null || navigator === void 0 ? void 0 : navigator.vibrate)) {\n      navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\n    }\n\n    if (mathfield.keypressSound) {\n      mathfield.keypressSound.load();\n      mathfield.keypressSound.play().catch(err => console.warn(err));\n    }\n  }\n\n  if (options.commandMode && mathfield.mode !== 'command') {\n    mathfield.switchMode('command');\n  } // Remove any error indicator on the current command sequence\n  // (if there is one)\n\n\n  decorateCommandStringAroundInsertionPoint(mathfield.model, false);\n\n  if (options.simulateKeystroke) {\n    // for (const c of text) {\n    const c = text.charAt(0);\n    const ev = new KeyboardEvent('keypress', {\n      key: c\n    });\n\n    if (!onKeystroke(mathfield, c, ev)) {\n      return;\n    } // }\n\n  } // Insert the specified text at the current insertion point.\n  // If the selection is not collapsed, the content will be deleted first.\n\n\n  let popoverText = '';\n  let displayArrows = false;\n\n  const style = _objectSpread(_objectSpread({}, getAnchorStyle(mathfield.model)), mathfield.style); // Decompose the string into an array of graphemes.\n  // This is necessary to correctly process what is displayed as a single\n  // glyph (a grapheme) but which is composed of multiple Unicode\n  // codepoints. This is the case in particular for some emojis, such as\n  // those with a skin tone modifier, the country flags emojis or\n  // compound emojis such as the professional emojis, including the\n  // David Bowie emoji: 👨🏻‍🎤\n\n\n  const graphemes = splitGraphemes(text);\n\n  var _iterator49 = _createForOfIteratorHelper(graphemes),\n      _step49;\n\n  try {\n    for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n      const c = _step49.value;\n\n      if (mathfield.mode === 'command') {\n        removeSuggestion(mathfield.model);\n        mathfield.suggestionIndex = 0;\n        const command = extractCommandStringAroundInsertionPoint(mathfield.model);\n        const suggestions = suggest(command + c);\n        displayArrows = suggestions.length > 1;\n\n        if (suggestions.length === 0) {\n          insert(mathfield.model, c, {\n            mode: 'command'\n          });\n\n          if (/^\\\\[a-zA-Z\\\\*]+$/.test(command + c)) {\n            // This looks like a command name, but not a known one\n            decorateCommandStringAroundInsertionPoint(mathfield.model, true);\n          }\n\n          hidePopover(mathfield);\n        } else {\n          insert(mathfield.model, c, {\n            mode: 'command'\n          });\n\n          if (suggestions[0].match !== command + c) {\n            insertSuggestion(mathfield.model, suggestions[0].match, -suggestions[0].match.length + command.length + 1);\n          }\n\n          popoverText = suggestions[0].match;\n        }\n      } else if (mathfield.mode === 'math') {\n        // Some characters are mapped to commands. Handle them here.\n        // This is important to handle synthetic text input and\n        // non-US keyboards, on which, fop example, the '^' key is\n        // not mapped to  'Shift-Digit6'.\n        const selector = {\n          '^': 'moveToSuperscript',\n          _: 'moveToSubscript',\n          ' ': 'moveAfterParent'\n        }[c];\n\n        if (selector) {\n          if (selector === 'moveToSuperscript') {\n            if (superscriptDepth(mathfield) >= mathfield.options.scriptDepth[1]) {\n              mathfield.model.announce('plonk');\n              return;\n            }\n          } else if (selector === 'moveToSubscript') {\n            if (subscriptDepth(mathfield) >= mathfield.options.scriptDepth[0]) {\n              mathfield.model.announce('plonk');\n              return;\n            }\n          }\n\n          mathfield.executeCommand(selector);\n        } else {\n          if (mathfield.options.smartSuperscript && mathfield.model.relation() === 'superscript' && /[0-9]/.test(c) && mathfield.model.siblings().filter(x => x.type !== 'first').length === 0) {\n            // We are inserting a digit into an empty superscript\n            // If smartSuperscript is on, insert the digit, and\n            // exit the superscript.\n            insert(mathfield.model, c, {\n              mode: 'math',\n              style: style\n            });\n\n            _moveAfterParent(mathfield.model);\n          } else {\n            insert(mathfield.model, c, {\n              mode: 'math',\n              style: style,\n              smartFence: mathfield.options.smartFence\n            });\n          }\n        }\n      } else if (mathfield.mode === 'text') {\n        insert(mathfield.model, c, {\n          mode: 'text',\n          style: style\n        });\n      }\n    }\n  } catch (err) {\n    _iterator49.e(err);\n  } finally {\n    _iterator49.f();\n  }\n\n  if (mathfield.mode !== 'command') {\n    mathfield.snapshotAndCoalesce();\n  } // Mark the mathfield dirty\n  // (it will get rendered in scrollIntoView())\n\n\n  mathfield.dirty = true; // Make sure the insertion point is visible\n\n  mathfield.scrollIntoView(); // Since the location of the popover depends on the position of the caret\n  // only show the popover after the formula has been rendered and the\n  // position of the caret calculated\n\n  showPopoverWithLatex(mathfield, popoverText, displayArrows);\n}\n\nfunction superscriptDepth(mathfield) {\n  let result = 0;\n  let i = 0;\n  let atom = mathfield.model.ancestor(i);\n  let wasSuperscript = false;\n\n  while (atom) {\n    if (atom.superscript || atom.subscript) {\n      result += 1;\n    }\n\n    if (atom.superscript) {\n      wasSuperscript = true;\n    } else if (atom.subscript) {\n      wasSuperscript = false;\n    }\n\n    i += 1;\n    atom = mathfield.model.ancestor(i);\n  }\n\n  return wasSuperscript ? result : 0;\n}\n\nfunction subscriptDepth(mathfield) {\n  let result = 0;\n  let i = 0;\n  let atom = mathfield.model.ancestor(i);\n  let wasSubscript = false;\n\n  while (atom) {\n    if (atom.superscript || atom.subscript) {\n      result += 1;\n    }\n\n    if (atom.superscript) {\n      wasSubscript = false;\n    } else if (atom.subscript) {\n      wasSubscript = true;\n    }\n\n    i += 1;\n    atom = mathfield.model.ancestor(i);\n  }\n\n  return wasSubscript ? result : 0;\n}\n\nregister$2({\n  undo: mathfield => {\n    complete(mathfield); // Undo to the previous state\n\n    mathfield.undo();\n    return true;\n  },\n  redo: mathfield => {\n    complete(mathfield);\n    mathfield.redo();\n    return true;\n  },\n  scrollIntoView: mathfield => {\n    mathfield.scrollIntoView();\n    return true;\n  },\n  scrollToStart: mathfield => {\n    mathfield.field.scroll(0, 0);\n    return true;\n  },\n  scrollToEnd: mathfield => {\n    const fieldBounds = mathfield.field.getBoundingClientRect();\n    mathfield.field.scroll(fieldBounds.left - window.scrollX, 0);\n    return true;\n  },\n  enterCommandMode: mathfield => {\n    mathfield.switchMode('command');\n    return true;\n  },\n  toggleKeystrokeCaption: mathfield => {\n    mathfield.keystrokeCaptionVisible = !mathfield.keystrokeCaptionVisible;\n    mathfield.keystrokeCaption.innerHTML = '';\n\n    if (!mathfield.keystrokeCaptionVisible) {\n      mathfield.keystrokeCaption.style.visibility = 'hidden';\n    }\n\n    return false;\n  },\n  switchMode: (mathfield, mode) => {\n    mathfield.switchMode(mode);\n    return true;\n  },\n  insert: (mathfield, s, options) => mathfield.insert(s, options),\n  typedText: (mathfield, text) => {\n    onTypedText(mathfield, text);\n    return true;\n  },\n  commit: mathfield => {\n    if (typeof mathfield.options.onCommit === 'function') {\n      mathfield.options.onCommit(mathfield);\n    }\n\n    return true;\n  }\n});\n\nfunction applyStyle$4(mathfield, inStyle) {\n  mathfield.resetKeystrokeBuffer();\n  const style = validateStyle(inStyle);\n\n  if (style.mode) {\n    // There's a mode ('text', 'math', 'command') change\n    if (selectionIsCollapsed(mathfield.model)) {\n      // Nothing selected\n      mathfield.switchMode(style.mode);\n    } else {\n      // Convert the selection from one mode to another\n      const previousMode = mathfield.mode;\n      const targetMode = (getAnchorMode(mathfield.model) || mathfield.options.defaultMode) === 'math' ? 'text' : 'math';\n      let convertedSelection = mathfield.getValue(mathfield.selection, 'ASCIIMath');\n\n      if (targetMode === 'math' && /^\"[^\"]+\"$/.test(convertedSelection)) {\n        convertedSelection = convertedSelection.slice(1, -1);\n      }\n\n      mathfield.insert(convertedSelection, {\n        mode: targetMode,\n        selectionMode: 'item',\n        format: targetMode === 'text' ? 'text' : 'ASCIIMath'\n      });\n      mathfield.mode = targetMode;\n\n      if (mathfield.model.groupIsSelected()) {\n        // The entire group was selected. Adjust parent mode if\n        // appropriate\n        const parent = mathfield.model.parent();\n\n        if (parent && (parent.type === 'group' || parent.type === 'root')) {\n          parent.mode = targetMode;\n        }\n      } // Notify of mode change\n\n\n      if (mathfield.mode !== previousMode && typeof mathfield.options.onModeChange === 'function') {\n        mathfield.options.onModeChange(mathfield, mathfield.mode);\n      }\n    }\n\n    delete style.mode;\n  }\n\n  if (selectionIsCollapsed(mathfield.model)) {\n    // No selection, let's update the 'current' style\n    if (mathfield.style.fontSeries && style.fontSeries === mathfield.style.fontSeries) {\n      style.fontSeries = 'auto';\n    }\n\n    if (style.fontShape && style.fontShape === mathfield.style.fontShape) {\n      style.fontShape = 'auto';\n    }\n\n    if (style.color && style.color === mathfield.style.color) {\n      style.color = 'none';\n    }\n\n    if (style.backgroundColor && style.backgroundColor === mathfield.style.backgroundColor) {\n      style.backgroundColor = 'none';\n    }\n\n    if (style.fontSize && style.fontSize === mathfield.style.fontSize) {\n      style.fontSize = 'auto';\n    }\n\n    mathfield.style = _objectSpread(_objectSpread({}, mathfield.style), style); // This style will be used the next time an atom is inserted\n  } else {\n    // Change the style of the selection\n    applyStyle$3(mathfield.model, style);\n    mathfield.snapshot();\n  }\n\n  return true;\n}\n\nregister$2({\n  applyStyle: applyStyle$4\n}, {\n  target: 'mathfield'\n});\n/**\r\n * Validate a style specification object\r\n */\n\nfunction validateStyle(style) {\n  const result = {};\n\n  if (typeof style.mode === 'string') {\n    result.mode = style.mode.toLowerCase();\n    console.assert(result.mode === 'math' || result.mode === 'text' || result.mode === 'command');\n  }\n\n  if (typeof style.color === 'string') {\n    result.color = style.color;\n  }\n\n  if (typeof style.backgroundColor === 'string') {\n    result.backgroundColor = style.backgroundColor;\n  }\n\n  if (typeof style.fontFamily === 'string') {\n    result.fontFamily = style.fontFamily;\n  }\n\n  if (typeof style.series === 'string') {\n    result.fontSeries = style.series;\n  }\n\n  if (typeof style.fontSeries === 'string') {\n    result.fontSeries = style.fontSeries.toLowerCase();\n  }\n\n  if (result.fontSeries) {\n    result.fontSeries = {\n      bold: 'b',\n      medium: 'm',\n      normal: 'm'\n    }[result.fontSeries] || result.fontSeries;\n  }\n\n  if (typeof style.shape === 'string') {\n    result.fontShape = style.shape;\n  }\n\n  if (typeof style.fontShape === 'string') {\n    result.fontShape = style.fontShape.toLowerCase();\n  }\n\n  if (result.fontShape) {\n    result.fontShape = {\n      italic: 'it',\n      up: 'n',\n      upright: 'n',\n      normal: 'n'\n    }[result.fontShape] || result.fontShape;\n  }\n\n  if (typeof style.size === 'string') {\n    result.fontSize = style.size;\n  } else if (typeof style.size === 'number') {\n    result.fontSize = 'size' + Math.min(0, Math.max(10, style.size));\n  }\n\n  if (typeof style.fontSize === 'string') {\n    result.fontSize = style.fontSize.toLowerCase();\n  }\n\n  if (result.fontSize) {\n    result.fontSize = {\n      tiny: 'size1',\n      scriptsize: 'size2',\n      footnotesize: 'size3',\n      small: 'size4',\n      normal: 'size5',\n      normalsize: 'size5',\n      large: 'size6',\n      Large: 'size7',\n      LARGE: 'size8',\n      huge: 'size9',\n      Huge: 'size10'\n    }[result.fontSize] || result.fontSize;\n  }\n\n  return result;\n}\n\nfunction onPaste(mathfield, ev) {\n  let text = ''; // Try to get a MathJSON data type\n\n  const json = ev.clipboardData.getData('application/json');\n\n  if (json) {\n    try {\n      text = _astToLatex(json, {});\n    } catch (e) {\n      text = '';\n    }\n  } // If that didn't work, try some plain text\n\n\n  if (!text) {\n    text = ev.clipboardData.getData('text/plain');\n  }\n\n  if (text) {\n    insert(mathfield.model, text, {\n      smartFence: mathfield.options.smartFence,\n      mode: 'math'\n    });\n    requestUpdate(mathfield);\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  return true;\n}\n\nfunction onCut(mathfield) {\n  // Clearing the selection will have the side effect of clearing the\n  // content of the textarea. However, the textarea value is what will\n  // be copied to the clipboard, so defer the clearing of the selection\n  // to later, after the cut operation has been handled.\n  setTimeout(function () {\n    mathfield.$clearSelection();\n    requestUpdate(mathfield);\n  }.bind(mathfield), 0);\n  return true;\n}\n\nfunction onCopy(mathfield, e) {\n  if (selectionIsCollapsed(mathfield.model)) {\n    e.clipboardData.setData('text/plain', '$$' + mathfield.getValue('latex-expanded') + '$$');\n    e.clipboardData.setData('application/json', mathfield.getValue('json'));\n    e.clipboardData.setData('application/xml', mathfield.getValue('mathML'));\n  } else {\n    e.clipboardData.setData('text/plain', '$$' + mathfield.getValue(mathfield.selection, 'latex-expanded') + '$$');\n    e.clipboardData.setData('application/json', mathfield.getValue(mathfield.selection, 'json'));\n    e.clipboardData.setData('application/xml', mathfield.getValue(mathfield.selection, 'mathML'));\n  } // Prevent the current document selection from being written to the clipboard.\n\n\n  e.preventDefault();\n}\n\nregister$2({\n  copyToClipboard: mathfield => {\n    mathfield.focus(); // If the selection is empty, select the entire field before\n    // copying it.\n\n    if (selectionIsCollapsed(mathfield.model)) {\n      mathfield.select();\n    }\n\n    document.execCommand('copy');\n    return false;\n  },\n  cutToClipboard: mathfield => {\n    mathfield.focus();\n    document.execCommand('cut');\n    return true;\n  },\n  pasteFromClipboard: mathfield => {\n    mathfield.focus();\n    document.execCommand('paste');\n    return true;\n  }\n}, {\n  target: 'mathfield',\n  category: 'clipboard'\n});\nlet gLastTap;\nlet gTapCount = 0;\n\nfunction onPointerDown(mathfield, evt) {\n  const that = mathfield;\n  let anchor;\n  let trackingPointer = false;\n  let trackingWords = false;\n  let dirty = false; // If a mouse button other than the main one was pressed, return.\n  // On iOS 12.4 Safari and Firefox on Android (which do not support\n  // PointerEvent) the touchstart event is sent with event.buttons = 0\n  // which for a mouse event would normally be an\n  // invalid button. Accept this button 0.\n\n  if (evt.buttons !== 1 && evt.buttons !== 0) {\n    return;\n  }\n\n  let scrollLeft = false;\n  let scrollRight = false; // Note: evt['touches'] is for touchstart (when PointerEvent is not supported)\n\n  const anchorX = evt['touches'] ? evt['touches'][0].clientX : evt.clientX;\n  const anchorY = evt['touches'] ? evt['touches'][0].clientY : evt.clientY;\n  const anchorTime = Date.now();\n  const scrollInterval = setInterval(() => {\n    if (scrollLeft) {\n      that.field.scroll({\n        top: 0,\n        left: that.field.scrollLeft - 16\n      });\n    } else if (scrollRight) {\n      that.field.scroll({\n        top: 0,\n        left: that.field.scrollLeft + 16\n      });\n    }\n  }, 32);\n\n  function endPointerTracking(evt) {\n    if (window.PointerEvent) {\n      off(that.field, 'pointermove', onPointerMove);\n      off(that.field, 'pointerup pointercancel', endPointerTracking); // off(window, 'pointermove', onPointerMove);\n      // off(window, 'pointerup blur', endPointerTracking);\n\n      that.field.releasePointerCapture(evt.pointerId);\n    } else {\n      off(that.field, 'touchmove', onPointerMove);\n      off(that.field, 'touchcancel touchend', endPointerTracking);\n      off(window, 'mousemove', onPointerMove);\n      off(window, 'mouseup blur', endPointerTracking);\n    }\n\n    trackingPointer = false;\n    clearInterval(scrollInterval);\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  function onPointerMove(evt) {\n    const x = evt['touches'] ? evt['touches'][0].clientX : evt.clientX;\n    const y = evt['touches'] ? evt['touches'][0].clientY : evt.clientY; // Ignore events that are within small spatial and temporal bounds\n    // of the pointer down\n\n    const hysteresis = evt.pointerType === 'touch' ? 20 : 5;\n\n    if (Date.now() < anchorTime + 500 && Math.abs(anchorX - x) < hysteresis && Math.abs(anchorY - y) < hysteresis) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      return;\n    }\n\n    const fieldBounds = that.field.getBoundingClientRect();\n    scrollRight = x > fieldBounds.right;\n    scrollLeft = x < fieldBounds.left;\n    let actualAnchor = anchor;\n\n    if (window.PointerEvent) {\n      if (!evt.isPrimary) {\n        actualAnchor = pathFromPoint(that, evt.clientX, evt.clientY, {\n          bias: 0\n        });\n      }\n    } else {\n      if (evt['touches'] && evt['touches'].length === 2) {\n        actualAnchor = pathFromPoint(that, evt['touches'][1].clientX, evt['touches'][1].clientY, {\n          bias: 0\n        });\n      }\n    }\n\n    const focus = pathFromPoint(that, x, y, {\n      bias: x <= anchorX ? x === anchorX ? 0 : -1 : +1\n    });\n\n    if (focus && setRange(that.model, actualAnchor, focus, {\n      extendToWordBoundary: trackingWords\n    })) {\n      // Re-render if the range has actually changed\n      requestUpdate(mathfield);\n    } // Prevent synthetic mouseMove event when this is a touch event\n\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  } // Calculate the tap count\n\n\n  if (gLastTap && Math.abs(gLastTap.x - anchorX) < 5 && Math.abs(gLastTap.y - anchorY) < 5 && Date.now() < gLastTap.time + 500) {\n    gTapCount += 1;\n    gLastTap.time = anchorTime;\n  } else {\n    gLastTap = {\n      x: anchorX,\n      y: anchorY,\n      time: anchorTime\n    };\n    gTapCount = 1;\n  }\n\n  const bounds = mathfield.field.getBoundingClientRect();\n\n  if (anchorX >= bounds.left && anchorX <= bounds.right && anchorY >= bounds.top && anchorY <= bounds.bottom) {\n    // Focus the mathfield\n    if (!mathfield.hasFocus()) {\n      dirty = true;\n      mathfield.keyboardDelegate.focus();\n    } // Clicking or tapping the field resets the keystroke buffer and\n    // smart mode\n\n\n    mathfield.resetKeystrokeBuffer();\n    mathfield.smartModeSuppressed = false;\n    const wrapperBounds = mathfield.field.querySelector('.ML__mathlive').getBoundingClientRect();\n\n    if (anchorX > wrapperBounds.right) {\n      // If outside the bounds of the rendered formula,\n      // set the anchor to the last element of the root\n      anchor = [{\n        relation: 'body',\n        offset: mathfield.model.root.body.length - 1\n      }];\n    } else {\n      anchor = pathFromPoint(mathfield, anchorX, anchorY, {\n        bias: 0\n      });\n    }\n\n    if (anchor) {\n      // Set a `tracking` class to avoid triggering the hover of the virtual\n      // keyboard toggle, for example\n      mathfield.element.classList.add('tracking');\n\n      if (evt.shiftKey) {\n        // Extend the selection if the shift-key is down\n        setRange(mathfield.model, mathfield.model.path, anchor);\n        anchor = clone(mathfield.model.path);\n        anchor[anchor.length - 1].offset -= 1;\n      } else {\n        setPath(mathfield.model, anchor, 0);\n      } // The selection has changed, so we'll need to re-render\n\n\n      dirty = true; // Reset any user-specified style\n\n      mathfield.style = {}; // evt.detail contains the number of consecutive clicks\n      // for double-click, triple-click, etc...\n      // (note that evt.detail is not set when using pointerEvent)\n\n      if (evt.detail === 3 || gTapCount > 2) {\n        endPointerTracking(evt);\n\n        if (evt.detail === 3 || gTapCount === 3) {\n          // This is a triple-click\n          _selectAll(mathfield.model);\n        }\n      } else if (!trackingPointer) {\n        trackingPointer = true;\n\n        if (window.PointerEvent) {\n          on(that.field, 'pointermove', onPointerMove);\n          on(that.field, 'pointerup pointercancel', endPointerTracking);\n          that.field.setPointerCapture(evt.pointerId);\n        } else {\n          on(window, 'blur', endPointerTracking);\n\n          if (evt['touches']) {\n            // This is a touchstart event (and PointerEvent is not supported)\n            // To receive the subsequent touchmove/touch, need to\n            // listen to this evt.target.\n            // This was a touch event\n            on(evt.target, 'touchmove', onPointerMove);\n            on(evt.target, 'touchcancel touchend', endPointerTracking);\n          } else {\n            on(window, 'mousemove', onPointerMove);\n            on(window, 'mouseup', endPointerTracking);\n          }\n        }\n\n        if (evt.detail === 2 || gTapCount === 2) {\n          // This is a double-click\n          trackingWords = true;\n\n          _selectGroup(mathfield.model);\n        }\n      }\n    }\n  } else {\n    gLastTap = null;\n  }\n\n  if (dirty) {\n    requestUpdate(mathfield);\n  } // Prevent the browser from handling, in particular when this is a\n  // touch event prevent the synthetic mouseDown event from being generated\n\n\n  evt.preventDefault();\n}\n/**\r\n * Return a tuple of an element and a distance from point (x, y)\r\n */\n\n\nfunction nearestElementFromPoint(el, x, y) {\n  let result = {\n    element: null,\n    distance: Number.POSITIVE_INFINITY\n  }; // This element may not have a matching atom, but its children might\n\n  let considerChildren = true;\n\n  if (el.getAttribute('data-atom-id')) {\n    result.element = el; // Calculate the (square of the) distance to the rectangle\n\n    const r = el.getBoundingClientRect();\n    const dx = x - (r.left + r.right) / 2;\n    const dy = y - (r.top + r.bottom) / 2;\n    result.distance = dx * dx + dy * dy; // Only consider children if the target is inside the (horizontal)\n    // bounds of the element.\n    // This avoid searching the numerator/denominator when a fraction\n    // is the last element in the formula.\n\n    considerChildren = x >= r.left && x <= r.right;\n  }\n\n  if (considerChildren && el.children) {\n    var _iterator50 = _createForOfIteratorHelper(el.children),\n        _step50;\n\n    try {\n      for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n        const child = _step50.value;\n        const nearest = nearestElementFromPoint(child, x, y);\n\n        if (nearest.element && nearest.distance <= result.distance) {\n          result = nearest;\n        }\n      }\n    } catch (err) {\n      _iterator50.e(err);\n    } finally {\n      _iterator50.f();\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param options.bias  if 0, the midpoint of the bounding box\r\n * is considered to return the sibling. If <0, the left sibling is\r\n * favored, if >0, the right sibling\r\n */\n\n\nfunction pathFromPoint(mathfield, x, y, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  options.bias = (_a = options.bias) !== null && _a !== void 0 ? _a : 0; // Try to find the deepest element that is near the point that was\n  // clicked on (the point could be outside of the element)\n\n  const nearest = nearestElementFromPoint(mathfield.field, x, y);\n  const el = nearest.element;\n  const id = el ? el.getAttribute('data-atom-id') : null;\n  if (!id) return undefined; // Let's find the atom that has a matching ID with the element that\n  // was clicked on (or near)\n\n  const paths = filter(mathfield.model, atom => {\n    // If the atom allows children to be selected, match only if\n    // the ID of  the atom matches the one we're looking for.\n    if (!atom.captureSelection) {\n      return atom.id === id;\n    } // If the atom does not allow children to be selected\n    // (captureSelection === true), the element matches if any of\n    // its children has an ID that matches.\n\n\n    let found = false;\n    atom.forEach(x => {\n      if (x.id === id) found = true;\n    });\n    return found;\n  });\n  if (!paths || paths.length === 0) return undefined; // (There should be exactly one atom that matches this ID...)\n  // Set the result to the path to this atom\n\n  const result = pathFromString(paths[0]).path;\n\n  if (options.bias === 0) {\n    // If the point clicked is to the left of the vertical midline,\n    // adjust the path to *before* the atom (i.e. after the\n    // preceding atom)\n    const bounds = el.getBoundingClientRect();\n\n    if (x < bounds.left + bounds.width / 2 && !el.classList.contains('ML__placeholder')) {\n      result[result.length - 1].offset = Math.max(0, result[result.length - 1].offset - 1);\n    }\n  } else if (options.bias < 0) {\n    result[result.length - 1].offset = Math.min(mathfield.model.siblings().length - 1, Math.max(0, result[result.length - 1].offset + options.bias));\n  }\n\n  return result;\n}\n\nvar css_248z = \".ML__keyboard{--keyboard-background:rgba(209,213,217,0.97);--keyboard-text:#000;--keyboard-text-active:var(--primary,hsl(var(--hue,212),40%,50%));--keyboard-background-border:#ddd;--keycap-background:#fff;--keycap-background-active:#e5e5e5;--keycap-background-border:#e5e6e9;--keycap-background-border-bottom:#8d8f92;--keycap-text:#000;--keycap-text-active:#fff;--keycap-secondary-text:#000;--keycap-modifier-background:#b9bdc7;--keycap-modifier-border:#c5c9d0;--keycap-modifier-border-bottom:#989da6;--keyboard-alternate-background:#fff;--keyboard-alternate-background-active:#e5e5e5;--keyboard-alternate-text:#000;position:fixed;left:0;bottom:-267px;width:100vw;z-index:var(--keyboard-zindex,105);padding-top:5px;transform:translate(0);opacity:0;visibility:hidden;transition:.28s cubic-bezier(0,0,.2,1);transition-property:transform,opacity;-webkit-backdrop-filter:grayscale(50%);backdrop-filter:grayscale(50%);background-color:var(--keyboard-background);border:1px solid var(--keyboard-background-border);font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:16px;font-weight:400;margin:0;text-shadow:none;box-sizing:border-box;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.ML__keyboard.is-visible{transform:translateY(-267px);opacity:1;visibility:visible;transition-timing-function:cubic-bezier(.4,0,1,1)}.ML__keyboard .tex{font-family:KaTeX_Main,Cambria Math,Asana Math,OpenSymbol,Symbola,STIX,Times,serif!important}.ML__keyboard .tex-math{font-family:KaTeX_Math,Cambria Math,Asana Math,OpenSymbol,Symbola,STIX,Times,serif!important}.ML__keyboard .tt{font-family:IBM Plex Mono,Source Code Pro,Consolas,Roboto Mono,Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Courier,monospace!important;font-size:30px;font-weight:400}.ML__keyboard.alternate-keys{visibility:hidden;max-width:286px;background-color:var(--keyboard-alternate-background);text-align:center;border-radius:6px;position:fixed;bottom:auto;top:0;box-sizing:content-box;transform:none;z-index:calc(var(--keyboard-zindex, 105) + 1);display:flex;flex-direction:row;justify-content:center;align-content:center;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);transition:none}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys{max-width:320px}}.ML__keyboard.alternate-keys.is-visible{visibility:visible}.ML__keyboard.alternate-keys ul{list-style:none;margin:3px;padding:0;display:flex;flex-flow:row wrap-reverse;justify-content:center}.ML__keyboard.alternate-keys ul>li{display:flex;flex-flow:column;align-items:center;justify-content:center;font-size:30px;height:70px;width:70px;box-sizing:border-box;margin:0;background:transparent;border:1px solid transparent;border-radius:5px;pointer-events:all;color:var(--keyboard-alternate-text);fill:currentColor}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys ul>li{font-size:24px;height:50px;width:50px}}.ML__keyboard.alternate-keys ul>li.active,.ML__keyboard.alternate-keys ul>li.pressed,.ML__keyboard.alternate-keys ul>li:hover{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);background:var(--keyboard-alternate-background-active);color:var(--keyboard-text-active)}.ML__keyboard.alternate-keys ul>li.small{font-size:18px}.ML__keyboard.alternate-keys ul>li.small-button{width:42px;height:42px;margin:2px;background:#fbfbfb}.ML__keyboard.alternate-keys ul>li.small-button:hover{background:var(--keyboard-alternate-background-active)}.ML__keyboard.alternate-keys ul>li.box>div,.ML__keyboard.alternate-keys ul>li.box>span{border:1px dashed rgba(0,0,0,.24)}.ML__keyboard.alternate-keys ul>li .warning{min-height:60px;min-width:60px;background:#cd0030;color:#fff;padding:5px;display:flex;align-items:center;justify-content:center;border-radius:5px}.ML__keyboard.alternate-keys ul>li .warning.active,.ML__keyboard.alternate-keys ul>li .warning.pressed,.ML__keyboard.alternate-keys ul>li .warning:hover{background:red}.ML__keyboard.alternate-keys ul>li .warning svg{width:50px;height:50px}.ML__keyboard.alternate-keys ul>li aside{font-size:12px;line-height:12px;opacity:.78;padding-top:2px}.ML__keyboard>div.keyboard-layer{display:none;outline:none}.ML__keyboard>div.keyboard-layer.is-visible{display:flex;flex-flow:column}.ML__keyboard>div>div.keyboard-toolbar{align-self:center;display:flex;flex-flow:row;justify-content:space-between;width:736px}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard>div>div.keyboard-toolbar{width:556px}}@media only screen and (max-width:767px){.ML__keyboard>div>div.keyboard-toolbar{width:365px;max-width:100vw}}.ML__keyboard>div>div.keyboard-toolbar svg{height:20px;width:20px}@media only screen and (max-width:767px){.ML__keyboard>div>div.keyboard-toolbar svg{height:13px;width:17px}}.ML__keyboard>div>div.keyboard-toolbar>.left{position:relative;display:flex;justify-content:flex-start;flex-flow:row}.ML__keyboard>div>div.keyboard-toolbar>.right{display:flex;justify-content:flex-end;flex-flow:row}.ML__keyboard>div>div.keyboard-toolbar>div>div{display:flex;align-items:baseline;justify-content:center;pointer-events:all;color:var(--keyboard-text);fill:currentColor;background:0;font-size:110%;cursor:pointer;min-height:0;padding:4px 10px;margin:7px 4px 6px;box-shadow:none;border:none;border-bottom:2px solid transparent}.ML__keyboard>div>div.keyboard-toolbar>div>div.disabled.pressed svg,.ML__keyboard>div>div.keyboard-toolbar>div>div.disabled:hover svg,.ML__keyboard>div>div.keyboard-toolbar>div>div.disabled svg{color:var(--keyboard-text);opacity:.2}@media only screen and (max-width:414px){.ML__keyboard>div>div.keyboard-toolbar>div>div{font-size:100%;padding:0 6px 0 0}}@media only screen and (max-width:767px){.ML__keyboard>div>div.keyboard-toolbar>div>div{padding-left:4px;padding-right:4px;font-size:90%}}.ML__keyboard>div>div.keyboard-toolbar>div>div.active,.ML__keyboard>div>div.keyboard-toolbar>div>div.pressed,.ML__keyboard>div>div.keyboard-toolbar>div>div:active,.ML__keyboard>div>div.keyboard-toolbar>div>div:hover{color:var(--keyboard-text-active)}.ML__keyboard>div>div.keyboard-toolbar>div>div.selected{color:var(--keyboard-text-active);border-bottom:2px solid var(--keyboard-text-active);margin-bottom:8px;padding-bottom:0}.ML__keyboard div .rows{border:0;border-collapse:separate;clear:both;margin:auto;display:flex;flex-flow:column;align-items:center}.ML__keyboard div .rows>ul{list-style:none;height:40px;margin:0 0 3px;padding:0}.ML__keyboard div .rows>ul>li{display:flex;flex-flow:column;align-items:center;justify-content:center;width:34px;margin-right:2px;height:40px;box-sizing:border-box;padding:8px 0;vertical-align:top;text-align:center;float:left;color:var(--keycap-text);fill:currentColor;font-size:20px;background:var(--keycap-background);border:1px solid var(--keycap-background-border);border-bottom-color:var(--keycap-background-border-bottom);border-radius:5px;pointer-events:all;position:relative;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ML__keyboard div .rows>ul>li:last-child{margin-right:0}.ML__keyboard div .rows>ul>li.small{font-size:16px}.ML__keyboard div .rows>ul>li.tt{color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.bottom{justify-content:flex-end}.ML__keyboard div .rows>ul>li.left{align-items:flex-start;padding-left:4px}.ML__keyboard div .rows>ul>li.right{align-items:flex-end;padding-right:4px}.ML__keyboard div .rows>ul>li svg{width:20px;height:20px}.ML__keyboard div .rows>ul>li .warning{height:25px;width:25px;min-height:25px;min-width:25px;background:#cd0030;color:#fff;border-radius:100%;padding:5px;display:flex;align-items:center;justify-content:center;margin-bottom:-2px}.ML__keyboard div .rows>ul>li .warning svg{width:16px;height:16px}@media only screen and (max-width:768px){.ML__keyboard div .rows>ul>li .warning{height:16px;width:16px;min-height:16px;min-width:16px}.ML__keyboard div .rows>ul>li .warning svg{width:14px;height:14px}}.ML__keyboard div .rows>ul>li>.w0{width:0}.ML__keyboard div .rows>ul>li>.w5{width:16px}.ML__keyboard div .rows>ul>li>.w15{width:52px}.ML__keyboard div .rows>ul>li>.w20{width:70px}.ML__keyboard div .rows>ul>li>.w50{width:178px}.ML__keyboard div .rows>ul>li.separator{background:transparent;border:none;pointer-events:none}@media only screen and (max-width:560px){.ML__keyboard div .rows>ul>li.if-wide{display:none}}.ML__keyboard div .rows>ul>li.tex-math{font-size:25px}.ML__keyboard div .rows>ul>li.pressed,.ML__keyboard div .rows>ul>li:hover{background:var(--keycap-background-active);color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.action.active,.ML__keyboard div .rows>ul>li.action:active,.ML__keyboard div .rows>ul>li.keycap.active,.ML__keyboard div .rows>ul>li.keycap:active{transform:translateY(-20px) scale(1.4);z-index:calc(var(--keyboard-zindex, 105) - 5);color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.modifier.active,.ML__keyboard div .rows>ul>li.modifier:active{background:var(--keyboard-text-active);color:var(--keycap-text-active)}.ML__keyboard div .rows>ul>li.action.font-glyph,.ML__keyboard div .rows>ul>li.modifier.font-glyph{font-size:18px}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li.action.font-glyph,.ML__keyboard div .rows>ul>li.modifier.font-glyph{font-size:16px}}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li.bigfnbutton,.ML__keyboard div .rows>ul>li.fnbutton{font-size:12px}}.ML__keyboard div .rows>ul>li.bigfnbutton{font-size:14px}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li.bigfnbutton{font-size:9px}}.ML__keyboard div .rows>ul>li.action,.ML__keyboard div .rows>ul>li.modifier{background-color:var(--keycap-modifier-background);border-bottom-color:var(--keycap-modifier-border);border-color:var(--keycap-modifier-border) var(--keycap-modifier-border) var(--keycap-modifier-border-bottom);font-size:65%;font-weight:100}.ML__keyboard div .rows>ul>li.action.selected,.ML__keyboard div .rows>ul>li.modifier.selected{color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.action.selected.active,.ML__keyboard div .rows>ul>li.action.selected.pressed,.ML__keyboard div .rows>ul>li.action.selected:active,.ML__keyboard div .rows>ul>li.action.selected:hover,.ML__keyboard div .rows>ul>li.modifier.selected.active,.ML__keyboard div .rows>ul>li.modifier.selected.pressed,.ML__keyboard div .rows>ul>li.modifier.selected:active,.ML__keyboard div .rows>ul>li.modifier.selected:hover{color:#fff}.ML__keyboard div .rows>ul>li.keycap.w50{font-size:80%;padding-top:10px;font-weight:100}.ML__keyboard div .rows>ul>li small{color:#555}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li small{font-size:9px}}.ML__keyboard div .rows>ul>li aside{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:10px;line-height:10px;color:#666}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li aside{display:none}}@media only screen and (max-width:414px){.ML__keyboard div .rows>ul>li{width:calc(10vw - 2px);margin-right:2px}.ML__keyboard div .rows>ul>.w5{width:calc(5vw - 2px)}.ML__keyboard div .rows>ul>.w15{width:calc(15vw - 2px)}.ML__keyboard div .rows>ul>.w20{width:calc(20vw - 2px)}.ML__keyboard div .rows>ul>.w50{width:calc(50vw - 2px)}}@media only screen and (min-width:415px) and (max-width:768px){.ML__keyboard div .rows>ul>li{width:37px;margin-right:3px}.ML__keyboard div .rows>ul>.w5{width:17px}.ML__keyboard div .rows>ul>.w15{width:57px}.ML__keyboard div .rows>ul>.w20{width:77px}.ML__keyboard div .rows>ul>.w50{width:197px}}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard div .rows>ul{height:52px}.ML__keyboard div .rows>ul>li{height:52px;width:51px;margin-right:4px}.ML__keyboard div .rows>ul>.w5{width:23.5px}.ML__keyboard div .rows>ul>.w15{width:78.5px}.ML__keyboard div .rows>ul>.w20{width:106px}.ML__keyboard div .rows>ul>.w50{width:271px}}@media only screen and (min-width:1025px){.ML__keyboard div .rows>ul{height:52px}.ML__keyboard div .rows>ul>li{height:52px;width:66px;margin-right:6px}.ML__keyboard div .rows>ul>.action,.ML__keyboard div .rows>ul>.modifier{font-size:80%}.ML__keyboard div .rows>ul>.w5{width:30px}.ML__keyboard div .rows>ul>.w15{width:102px}.ML__keyboard div .rows>ul>.w20{width:138px}.ML__keyboard div .rows>ul>.w50{width:354px}}@media (prefers-color-scheme:dark){body:not([theme=light]) .ML__keyboard{--hue:206;--keyboard-background:hsl(var(--hue,212),19%,38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue,212),100%,60%);--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:hsl(var(--hue,212),35%,42%);--keycap-background-border:hsl(var(--hue,212),25%,35%);--keycap-background-border-bottom:#426b8a;--keycap-text:#d0d0d0;--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),19%,38%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}}body[theme=dark] .ML__keyboard{--hue:206;--keyboard-background:hsl(var(--hue,212),19%,38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue,212),100%,60%);--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:hsl(var(--hue,212),35%,42%);--keycap-background-border:hsl(var(--hue,212),25%,35%);--keycap-background-border-bottom:#426b8a;--keycap-text:#d0d0d0;--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),19%,38%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}div.ML__keyboard.material{--keyboard-background:rgba(209,213,217,0.9);--keyboard-background-border:#ddd;--keycap-background:transparent;--keycap-background-active:#cccfd1;--keycap-background-border:transparent;--keyboard-alternate-background:#efefef;--keyboard-alternate-text:#000;font-family:Roboto,sans-serif}div.ML__keyboard.material.alternate-keys{background:var(--keyboard-alternate-background);border:1px solid transparent;border-radius:5px;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}div.ML__keyboard.material.alternate-keys ul li.active,div.ML__keyboard.material.alternate-keys ul li.pressed,div.ML__keyboard.material.alternate-keys ul li:active,div.ML__keyboard.material.alternate-keys ul li:hover{border:1px solid transparent;background:#5f97fc;color:#fff;fill:currentColor}div.ML__keyboard.material .keyboard-toolbar>div>div{font-size:16px}div.ML__keyboard.material .keyboard-toolbar div.div.active,div.ML__keyboard.material .keyboard-toolbar div.div.pressed,div.ML__keyboard.material .keyboard-toolbar div div:active,div.ML__keyboard.material .keyboard-toolbar div div:hover{color:#5f97fc;fill:currentColor}div.ML__keyboard.material .keyboard-toolbar>div>.selected{color:#5f97fc;fill:currentColor;border-bottom:2px solid #5f97fc;margin-bottom:8px;padding-bottom:0}div.ML__keyboard.material div>.rows>ul>.keycap{background:transparent;border:1px solid transparent;border-radius:5px;color:var(--keycap-text);fill:currentColor;transition:none}div.ML__keyboard.material div>.rows>ul>.keycap.tt{color:#5f97fc}div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"]{margin-top:10px;margin-bottom:10px;height:20px;background:#e0e0e0}div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"].active,div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"].pressed,div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"]:active,div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"]:hover{background:#d0d0d0;box-shadow:none;transform:none}div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):hover{border:1px solid transparent;background:var(--keycap-background-active);box-shadow:none}div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).active,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).pressed,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):active{background:var(--keyboard-alternate-background);color:var(--keyboard-alternate-text);box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23)}@media only screen and (max-width:767px){div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).active,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).pressed,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):active{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);font-size:10px;vertical-align:top;width:19.5px;margin-right:10px;margin-left:10px;transform:translateY(-20px) scale(2);transition:none;justify-content:flex-start;padding:2px 0 0;z-index:calc(var(--ML_keyboard-zindex, 105) - 5)}}@media only screen and (max-width:414px){div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).active,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).pressed,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):active{width:16.5px}}@media only screen and (max-width:767px){div.ML__keyboard.material div>.rows>ul>.keycap:last-child.active,div.ML__keyboard.material div>.rows>ul>.keycap:last-child:active{margin-right:0;margin-left:14px}}div.ML__keyboard.material div div.rows ul li.action,div.ML__keyboard.material div div.rows ul li.modifier{background:transparent;border:0;color:#869096;fill:currentColor;font-size:16px;transition:none}div.ML__keyboard.material div div.rows ul li.action.selected,div.ML__keyboard.material div div.rows ul li.modifier.selected{color:#5f97fc;border-radius:0;border-bottom:2px solid #5f97fc}div.ML__keyboard.material div div.rows ul li.action.active,div.ML__keyboard.material div div.rows ul li.action.pressed,div.ML__keyboard.material div div.rows ul li.action:active,div.ML__keyboard.material div div.rows ul li.action:hover,div.ML__keyboard.material div div.rows ul li.modifier.active,div.ML__keyboard.material div div.rows ul li.modifier.pressed,div.ML__keyboard.material div div.rows ul li.modifier:active,div.ML__keyboard.material div div.rows ul li.modifier:hover{border:0;color:var(--keycap-text);background:var(--keycap-background-active);box-shadow:none}div.ML__keyboard.material div div.rows ul li.bigfnbutton,div.ML__keyboard.material div div.rows ul li.fnbutton{background:transparent;border:0}div.ML__keyboard.material div div.rows ul li.bigfnbutton.selected,div.ML__keyboard.material div div.rows ul li.fnbutton.selected{color:#5f97fc;fill:currentColor;border-radius:0;border-bottom:2px solid #5f97fc}div.ML__keyboard.material div div.rows ul li.bigfnbutton.active,div.ML__keyboard.material div div.rows ul li.bigfnbutton.pressed,div.ML__keyboard.material div div.rows ul li.bigfnbutton:active,div.ML__keyboard.material div div.rows ul li.bigfnbutton:hover,div.ML__keyboard.material div div.rows ul li.fnbutton.active,div.ML__keyboard.material div div.rows ul li.fnbutton.pressed,div.ML__keyboard.material div div.rows ul li.fnbutton:active,div.ML__keyboard.material div div.rows ul li.fnbutton:hover{border:0;color:#5f97fc;fill:currentColor;background:var(--keycap-background-active);box-shadow:none}@media (prefers-color-scheme:dark){body:not([theme=light]) div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue,212),19%,18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:#d0d0d0;--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),8%,2%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}}body[theme=dark] div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue,212),19%,18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:#d0d0d0;--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),8%,2%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}\";\n\nclass VirtualKeyboard {\n  constructor(mathfield) {\n    this.mathfield = mathfield;\n    this.element = document.createElement('div'); // Listen to know when the mouse has been released without being\n    // captured to remove the alternate keys panel and the shifted state of the\n    // keyboard.\n    // @todo should use a scrim instead (to prevent elements underneat the alt\n    // layer from reacting while the alt layer is up)\n\n    window.addEventListener('mouseup', this);\n    window.addEventListener('blur', this);\n    window.addEventListener('touchend', this);\n    window.addEventListener('touchcancel', this);\n  }\n\n  handleEvent(evt) {\n    switch (evt.type) {\n      case 'mouseup':\n      case 'blur':\n      case 'touchend':\n      case 'touchcancel':\n        _unshiftKeyboardLayer(this.mathfield);\n\n        break;\n    }\n  }\n\n  dispose() {\n    releaseSharedElement(document.getElementById('mathlive-alternate-keys-panel'));\n    this.element.remove();\n  }\n\n}\n\nconst KEYBOARDS = {\n  numeric: {\n    tooltip: 'keyboard.tooltip.numeric',\n    layer: 'math',\n    label: '123',\n    layers: ['math']\n  },\n  roman: {\n    tooltip: 'keyboard.tooltip.roman',\n    layer: 'lower-roman',\n    label: 'ABC',\n    layers: ['lower-roman', 'upper-roman']\n  },\n  greek: {\n    tooltip: 'keyboard.tooltip.greek',\n    layer: 'lower-greek',\n    label: '&alpha;&beta;&gamma;',\n    classes: 'tex-math',\n    layers: ['lower-greek', 'upper-greek']\n  },\n  functions: {\n    tooltip: 'keyboard.tooltip.functions',\n    layer: 'functions',\n    label: '<i>f</i>&thinsp;()',\n    classes: 'tex',\n    layers: ['functions']\n  },\n  symbols: {\n    tooltip: 'keyboard.tooltip.symbols',\n    layer: 'symbols',\n    label: '&infin;≠∈',\n    classes: 'tex',\n    layers: ['symbols']\n  },\n  command: {\n    tooltip: 'keyboard.tooltip.command',\n    // For the command keyboard, perform a command rather than\n    // doing a simple layer switch, as we want to enter command mode\n    // when the keyboard is activated\n    command: 'enterCommandMode',\n    label: \"<svg><use xlink:href='#svg-command' /></svg>\",\n    layers: ['lower-command', 'upper-command', 'symbols-command']\n  },\n  style: {\n    tooltip: 'keyboard.tooltip.style',\n    layer: 'style',\n    label: '<b>b</b><i>i</i>𝔹'\n  }\n};\nconst SHIFTED_KEYS = {\n  '\\\\varphi ': ['&Phi;', '\\\\Phi '],\n  '\\\\varsigma ': ['&Sigma;', '\\\\Sigma '],\n  '\\\\epsilon ': ['&#x0190;', '{\\\\char\"0190}'],\n  '\\\\rho ': ['&#x3A1', '{\\\\char\"3A1}'],\n  '\\\\tau ': ['&#x3A4;', '{\\\\char\"3A4}'],\n  '\\\\upsilon ': ['&Upsilon;', '\\\\Upsilon '],\n  '\\\\theta ': ['&Theta;', '\\\\Theta '],\n  '\\\\iota ': ['&Iota;', '{\\\\char\"399}'],\n  '\\\\omicron ': ['&#x039F;', '{\\\\char\"39F}'],\n  '\\\\pi ': ['&Pi;', '\\\\Pi '],\n  '\\\\alpha ': ['&Alpha;', '{\\\\char\"391}'],\n  '\\\\sigma ': ['&Sigma;', '\\\\Sigma '],\n  '\\\\delta ': ['&Delta;', '\\\\Delta '],\n  '\\\\phi ': ['&#x03a6;', '\\\\Phi '],\n  '\\\\gamma ': ['&Gamma;', '\\\\Gamma '],\n  '\\\\eta ': ['&Eta;', '{\\\\char\"397}'],\n  '\\\\xi ': ['&Xi;', '\\\\Xi '],\n  '\\\\kappa ': ['&Kappa;', '{\\\\char\"39A}'],\n  '\\\\lambda ': ['&Lambda;', '\\\\Lambda '],\n  '\\\\zeta ': ['&Zeta;', '{\\\\char\"396}'],\n  '\\\\chi ': ['&Chi;', '{\\\\char\"3A7}'],\n  '\\\\psi ': ['&Psi;', '\\\\Psi '],\n  '\\\\omega ': ['&Omega;', '\\\\Omega '],\n  '\\\\beta ': ['&Beta;', '{\\\\char\"392}'],\n  '\\\\nu ': ['&Nu;', '{\\\\char\"39D}'],\n  '\\\\mu ': ['&Mu;', '{\\\\char\"39C}']\n}; // const FUNCTIONS = [\n//     'Basic',\n//         ['\\\\sin', '\\\\cos', '\\\\tan', '\\\\min', '\\\\max', '\\\\gcd', '\\\\lcm', '\\\\repeat', 'encapsulate', 'recognize'],\n//     'Operators',\n//         ['\\\\sum', '\\\\prod', '\\\\bigcup_x']\n// ]\n\nconst ALT_KEYS_BASE = {\n  '0': ['\\\\emptyset', '\\\\varnothing', '\\\\infty', {\n    latex: '#?_0',\n    insert: '#@_0'\n  }, '\\\\circ', '\\\\bigcirc', '\\\\bullet'],\n  '2': ['\\\\frac{1}{2}', {\n    latex: '#?^2',\n    insert: '#@^2'\n  }],\n  '3': ['\\\\frac{1}{3}', {\n    latex: '#?^3',\n    insert: '#@^3'\n  }],\n  '.': [',', ';', '\\\\colon', {\n    latex: ':',\n    aside: 'ratio'\n  }, {\n    latex: '\\\\cdotp',\n    aside: 'center dot',\n    classes: 'box'\n  }, {\n    latex: '\\\\cdots',\n    aside: 'center ellipsis',\n    classes: 'box'\n  }, {\n    latex: '\\\\ldotp',\n    aside: 'low dot',\n    classes: 'box'\n  }, {\n    latex: '\\\\ldots',\n    aside: 'low ellipsis',\n    classes: 'box'\n  }, {\n    latex: '\\\\vdots',\n    aside: '',\n    classes: 'box'\n  }, {\n    latex: '\\\\ddots',\n    aside: '',\n    classes: 'box'\n  }, '\\\\odot', '\\\\oslash', '\\\\circledcirc'],\n  '*': ['\\\\cdot', '\\\\ast', '\\\\star', '\\\\bigstar', '\\\\ltimes', '\\\\rtimes', '\\\\rightthreetimes', '\\\\leftthreetimes', '\\\\intercal', '\\\\prod', {\n    latex: '\\\\prod_{n\\\\mathop=0}^{\\\\infty}',\n    classes: 'small'\n  }],\n  '+': ['\\\\pm', '\\\\mp', '\\\\sum', {\n    latex: '\\\\sum_{n\\\\mathop=0}^{\\\\infty}',\n    classes: 'small'\n  }, '\\\\dotplus', '\\\\oplus'],\n  '-': ['\\\\pm', '\\\\mp', '\\\\ominus', '\\\\vert #0  \\\\vert'],\n  '/': ['\\\\divideontimes', '/', '\\\\div'],\n  '(': ['\\\\left( #0\\\\right)', '\\\\left[ #0\\\\right]', '\\\\left\\\\{ #0\\\\right\\\\}', '\\\\left\\\\langle #0\\\\right\\\\rangle', '\\\\lfloor', '\\\\llcorner', '(', '\\\\lbrack', '\\\\lvert', '\\\\lVert', '\\\\lgroup', '\\\\langle', '\\\\lceil', '\\\\ulcorner', '\\\\lmoustache', '\\\\lbrace'],\n  ')': ['\\\\rfloor', '\\\\lrcorner', ')', '\\\\rbrack', '\\\\rvert', '\\\\rVert', '\\\\rgroup', '\\\\rangle', '\\\\rceil', '\\\\urcorner', '\\\\rmoustache', '\\\\rbrace'],\n  '=': ['\\\\cong', '\\\\asymp', '\\\\equiv', '\\\\differencedelta', '\\\\varpropto', '\\\\thickapprox', '\\\\approxeq', '\\\\thicksim', '\\\\backsim', '\\\\eqsim', '\\\\simeq', '\\\\Bumpeq', '\\\\bumpeq', '\\\\doteq', '\\\\Doteq', '\\\\fallingdotseq', '\\\\risingdotseq', '\\\\coloneq', '\\\\eqcirc', '\\\\circeq', '\\\\triangleq', '\\\\between'],\n  '!=': ['\\\\neq', '\\\\ncong', '', '\\\\nsim'],\n  '<': ['\\\\leq', '\\\\leqq', '\\\\lneqq', '\\\\ll', '\\\\nless', '\\\\nleq', '\\\\precsim', '\\\\lesssim', '\\\\lessgtr', '\\\\prec', '\\\\preccurlyeq', '\\\\lessdot', '\\\\nprec'],\n  '>': ['\\\\geq', '\\\\geqq', '\\\\gneqq', '\\\\gg', '\\\\ngtr', '\\\\ngeq', '\\\\succsim', '\\\\gtrsim', '\\\\gtrless', '\\\\succ', '\\\\succcurlyeq', '\\\\gtrdot', '\\\\nsucc'],\n  set: ['\\\\in', '\\\\owns', '\\\\subset', '\\\\nsubset', '\\\\supset', '\\\\nsupset'],\n  '!set': ['\\\\notin', '\\\\backepsilon'],\n  subset: [],\n  supset: [],\n  infinity: ['\\\\aleph_0', '\\\\aleph_1', '\\\\omega', '\\\\mathfrak{m}'],\n  'numeric-pi': ['\\\\prod', '\\\\theta', '\\\\rho', '\\\\sin', '\\\\cos', '\\\\tan'],\n  ee: ['\\\\times 10^{#?}', '\\\\ln', '\\\\ln_{10}', '\\\\log'],\n  '^': ['_{#?}'],\n  // Integrals\n  int: [{\n    latex: '\\\\int_{#?}^{#?}',\n    classes: 'small'\n  }, {\n    latex: '\\\\int',\n    classes: 'small'\n  }, {\n    latex: '\\\\smallint',\n    classes: 'small'\n  }, {\n    latex: '\\\\iint',\n    classes: 'small'\n  }, {\n    latex: '\\\\iiint',\n    classes: 'small'\n  }, {\n    latex: '\\\\oint',\n    classes: 'small'\n  }, {\n    latex: '\\\\dfrac{\\\\rd}{\\\\rd x}',\n    classes: 'small'\n  }, {\n    latex: '\\\\frac{\\\\partial}{\\\\partial x}',\n    classes: 'small'\n  }, '\\\\capitalDifferentialD', '\\\\rd', '\\\\partial'],\n  nabla: ['\\\\nabla\\\\times', '\\\\nabla\\\\cdot', '\\\\nabla^{2}'],\n  '!': ['!!', '\\\\Gamma', '\\\\Pi'],\n  accents: ['\\\\bar{#@}', '\\\\vec{#@}', '\\\\hat{#@}', '\\\\check{#@}', '\\\\dot{#@}', '\\\\ddot{#@}', '\\\\mathring{#@}', '\\\\breve{#@}', '\\\\acute{#@}', '\\\\tilde{#@}', '\\\\grave{#@}'],\n  // 'absnorm': [{latex:'\\\\lVert #@ \\\\rVert', aside:'norm'},\n  //     {latex:'\\\\lvert #@ \\\\rvert', aside:'determinant'},\n  //     {latex:'\\\\begin{cardinality} #@ \\\\end{cardinality}', aside:'cardinality'},\n  //     {latex:'\\\\lvert #@ \\\\rvert', aside:'length'},\n  //     {latex:'\\\\lvert #@ \\\\rvert', aside:'order'},\n  // ],\n  A: [{\n    latex: '\\\\aleph',\n    aside: 'aleph'\n  }, {\n    latex: '\\\\forall',\n    aside: 'for all'\n  }],\n  a: [{\n    latex: '\\\\aleph',\n    aside: 'aleph'\n  }, {\n    latex: '\\\\forall',\n    aside: 'for all'\n  }],\n  b: [{\n    latex: '\\\\beth',\n    aside: 'beth'\n  }],\n  B: [{\n    latex: '\\\\beth',\n    aside: 'beth'\n  }],\n  c: [{\n    latex: '\\\\C',\n    aside: 'set of complex numbers'\n  }],\n  d: [{\n    latex: '\\\\daleth',\n    aside: 'daleth'\n  }],\n  D: [{\n    latex: '\\\\daleth',\n    aside: 'daleth'\n  }],\n  e: [{\n    latex: '\\\\exponentialE',\n    aside: 'exponential e'\n  }, {\n    latex: '\\\\exists',\n    aside: 'there is'\n  }, {\n    latex: '\\\\nexists',\n    aside: 'there isn’t'\n  }],\n  g: [{\n    latex: '\\\\gimel',\n    aside: 'gimel'\n  }],\n  G: [{\n    latex: '\\\\gimel',\n    aside: 'gimel'\n  }],\n  h: [{\n    latex: '\\\\hbar',\n    aside: 'h bar'\n  }, {\n    latex: '\\\\hslash',\n    aside: 'h slash'\n  }],\n  i: [{\n    latex: '\\\\imaginaryI',\n    aside: 'imaginary i'\n  }],\n  j: [{\n    latex: '\\\\imaginaryJ',\n    aside: 'imaginary j'\n  }],\n  l: [{\n    latex: '\\\\ell',\n    aside: 'ell'\n  }],\n  n: [{\n    latex: '\\\\N',\n    aside: 'set of natural numbers'\n  }],\n  p: [{\n    latex: '\\\\P',\n    aside: 'set of primes'\n  }],\n  q: [{\n    latex: '\\\\Q',\n    aside: 'set of rational numbers'\n  }],\n  r: [{\n    latex: '\\\\R',\n    aside: 'set of real numbers'\n  }],\n  z: [{\n    latex: '\\\\Z',\n    aside: 'set of integers'\n  }],\n  'x-var': ['y', 'z', 't', 'r', {\n    latex: 'f(#?)',\n    classes: 'small'\n  }, {\n    latex: 'g(#?)',\n    classes: 'small'\n  }, 'x^2', 'x^n', 'x_n', 'x_{n+1}', 'x_i', 'x_{i+1}'],\n  'n-var': ['i', 'j', 'p', 'k', 'a', 'u'],\n  ii: ['\\\\Re', '\\\\Im', '\\\\imaginaryJ', '\\\\Vert #0 \\\\Vert'],\n  logic: [{\n    latex: '\\\\exists',\n    aside: 'there is'\n  }, {\n    latex: '\\\\nexists',\n    aside: 'there isn’t'\n  }, {\n    latex: '\\\\ni',\n    aside: 'such that'\n  }, {\n    latex: '\\\\Colon',\n    aside: 'such that'\n  }, {\n    latex: '\\\\implies',\n    aside: 'implies'\n  }, {\n    latex: '\\\\impliedby',\n    aside: 'implied by'\n  }, {\n    latex: '\\\\iff',\n    aside: 'if and only if'\n  }, {\n    latex: '\\\\land',\n    aside: 'and'\n  }, {\n    latex: '\\\\lor',\n    aside: 'or'\n  }, {\n    latex: '\\\\oplus',\n    aside: 'xor'\n  }, {\n    latex: '\\\\lnot',\n    aside: 'not'\n  }, {\n    latex: '\\\\downarrow',\n    aside: 'nor'\n  }, {\n    latex: '\\\\uparrow',\n    aside: 'nand'\n  }, {\n    latex: '\\\\curlywedge',\n    aside: 'nor'\n  }, {\n    latex: '\\\\bar\\\\curlywedge',\n    aside: 'nand'\n  }, // {latex:'\\\\barwedge', aside:'bar wedge'},\n  // {latex:'\\\\curlyvee', aside:'curly vee'},\n  // {latex:'\\\\veebar', aside:'vee bar'},\n  {\n    latex: '\\\\therefore',\n    aside: 'therefore'\n  }, {\n    latex: '\\\\because',\n    aside: 'because'\n  }, {\n    latex: '^\\\\biconditional',\n    aside: 'biconditional'\n  }, '\\\\leftrightarrow', '\\\\Leftrightarrow', '\\\\to', '\\\\models', '\\\\vdash', '\\\\gets', '\\\\dashv', '\\\\roundimplies'],\n  'set-operators': ['\\\\cap', '\\\\cup', '\\\\setminus', '\\\\smallsetminus', '\\\\complement'],\n  'set-relations': ['\\\\in', '\\\\notin', '\\\\ni', '\\\\owns', '\\\\subset', '\\\\supset', '\\\\subseteq', '\\\\supseteq', '\\\\subsetneq', '\\\\supsetneq', '\\\\varsubsetneq', '\\\\subsetneqq', '\\\\nsubset', '\\\\nsupset', '\\\\nsubseteq', '\\\\nsupseteq'],\n  space: [{\n    latex: '\\\\char\"203A\\\\!\\\\char\"2039',\n    insert: '\\\\!',\n    aside: 'negative thin space<br>⁻³⧸₁₈ em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\,\\\\unicode{\"2039}',\n    insert: '\\\\,',\n    aside: 'thin space<br>³⧸₁₈ em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\:\\\\unicode{\"2039}',\n    insert: '\\\\:',\n    aside: 'medium space<br>⁴⧸₁₈ em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\;\\\\unicode{\"2039}',\n    insert: '\\\\;',\n    aside: 'thick space<br>⁵⧸₁₈ em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\ \\\\unicode{\"2039}',\n    insert: '\\\\ ',\n    aside: '⅓ em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\enspace\\\\unicode{\"2039}',\n    insert: '\\\\enspace',\n    aside: '½ em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\quad\\\\unicode{\"2039}',\n    insert: '\\\\quad',\n    aside: '1 em'\n  }, {\n    latex: '\\\\unicode{\"203A}\\\\qquad\\\\unicode{\"2039}',\n    insert: '\\\\qquad',\n    aside: '2 em'\n  }],\n  // @todo could also delete to end\n  delete: [{\n    label: '<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>',\n    command: '\"deleteAll\"'\n  }],\n  // @todo Tab: could turn on speech, visible keyboard...\n  '->|': []\n};\nlet ALT_KEYS = {};\nconst LAYERS = {\n  math: \"\\n        <div class='rows'>\\n            <ul>\\n                <li class='keycap tex' data-alt-keys='x-var'><i>x</i></li>\\n                <li class='keycap tex' data-alt-keys='n-var'><i>n</i></li>\\n                <li class='separator w5'></li>\\n                <row name='numpad-1'/>\\n                <li class='separator w5'></li>\\n                <li class='keycap tex' data-insert='$$\\\\exponentialE$$' data-alt-keys='ee'>e</li>\\n                <li class='keycap tex' data-insert='$$\\\\imaginaryI$$' data-alt-keys='ii'>i</li>\\n                <li class='keycap tex' data-latex='\\\\pi' data-alt-keys='numeric-pi'></li>\\n            </ul>\\n            <ul>\\n                <li class='keycap tex' data-key='<' data-alt-keys='<'>&lt;</li>\\n                <li class='keycap tex' data-key='>' data-alt-keys='>'>&gt;</li>\\n                <li class='separator w5'></li>\\n                <row name='numpad-2'/>\\n                <li class='separator w5'></li>\\n                <li class='keycap tex' data-alt-keys='x2' data-insert='$$#@^{2}$$'><span><i>x</i>&thinsp;\\xB2</span></li>\\n                <li class='keycap tex' data-alt-keys='^' data-insert='$$#@^{#?}$$'><span><i>x</i><sup>&thinsp;<small>&#x2b1a;</small></sup></span></li>\\n                <li class='keycap tex' data-alt-keys='sqrt' data-insert='$$\\\\sqrt{#0}$$' data-latex='\\\\sqrt{#0}'></li>\\n            </ul>\\n            <ul>\\n                <li class='keycap tex' data-alt-keys='(' >(</li>\\n                <li class='keycap tex' data-alt-keys=')' >)</li>\\n                <li class='separator w5'></li>\\n                <row name='numpad-3'/>\\n                <li class='separator w5'></li>\\n                <li class='keycap tex small' data-alt-keys='int' data-latex='\\\\int_0^\\\\infty'><span></span></li>\\n                <li class='keycap tex' data-latex='\\\\forall' data-alt-keys='logic' ></li>\\n                <li class='action font-glyph bottom right' data-alt-keys='delete' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'>&#x232b;</li></ul>\\n            </ul>\\n            <ul>\\n                <li class='keycap' data-alt-keys='foreground-color' data-command='[\\\"applyStyle\\\",{\\\"color\\\":\\\"#cc2428\\\"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428; box-sizing: border-box'></span></li>\\n                <li class='keycap' data-alt-keys='background-color' data-command='[\\\"applyStyle\\\",{\\\"backgroundColor\\\":\\\"#fff590\\\"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590; box-sizing: border-box'></span></li>\\n                <li class='separator w5'></li>\\n                <row name='numpad-4'/>\\n                <li class='separator w5'></li>\\n                <arrows/>\\n            </ul>\\n        </div>\\n    \",\n  'lower-roman': \"\\n        <div class='rows'>\\n            <ul>\\n                <row name='numpad-1' class='if-wide'/>\\n                <row name='lower-1' shift-layer='upper-roman'/>\\n            </ul>\\n            <ul>\\n                <row name='numpad-2' class='if-wide'/>\\n                <row name='lower-2'  shift-layer='upper-roman''/>\\n            </ul>\\n            <ul>\\n                <row name='numpad-3' class='if-wide'/>\\n                <row name='lower-3'  shift-layer='upper-roman''/>\\n            </ul>\\n            <ul>\\n                <row name='numpad-4' class='if-wide'/>\\n                <li class='keycap' >;</li>\\n                <li class='keycap' data-alt-keys=','>,</li>\\n                <li class='keycap w50' data-key=' ' data-alt-keys='space'>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  'upper-roman': \"\\n        <div class='rows'>\\n            <ul>\\n                <row name='numpad-1' class='if-wide'/>\\n                <row name='upper-1'  shift-layer='lower-roman'/>\\n            </ul>\\n            <ul>\\n                <row name='numpad-2' class='if-wide'/>\\n                <row name='upper-2' shift-layer='lower-roman'/>\\n            </ul>\\n            <ul>\\n                <row name='numpad-3' class='if-wide'/>\\n                <row name='upper-3' shift-layer='lower-roman'/>\\n            </ul>\\n            <ul>\\n                <row name='numpad-4' class='if-wide'/>\\n                <li class='keycap' >;</li>\\n                <li class='keycap' data-alt-keys='.'>;</li>\\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  symbols: \"\\n        <div class='rows'>\\n            <ul>\\n                <row name='numpad-1' class='if-wide'/>\\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\lbrace '>{</li>\\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rbrace '>}</li>\\n                <li class='separator w5'></li>\\n                <li class='keycap tex' data-alt-keys='set' data-insert='\\\\in '>&#x2208;</li>\\n                <li class='keycap tex' data-alt-keys='!set' data-insert='\\\\notin '>&#x2209;</li>\\n                <li class='keycap tex' data-insert='\\\\Re '>&#x211c;<aside>Real</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Im '>&#x2111;<aside>Imaginary</aside></li>\\n                <li class='keycap w15' data-insert='\\\\ulcorner#0\\\\urcorner '><span><sup>&#x250c;</sup><span><span style='color:#ddd'>o</span><sup>&#x2510;</sup></span><aside>ceil</aside></li>\\n                <li class='keycap tex' data-alt-keys='nabla' data-insert='\\\\nabla '>&#x2207;<aside>nabla</aside></li>\\n                <li class='keycap tex' data-alt-keys='infinity' data-insert='\\\\infty '>&#x221e;</li>\\n\\n            </ul>\\n            <ul>\\n                <row name='numpad-2' class='if-wide'/>\\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\lbrack '>[</li>\\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rbrack '>]</li>\\n                <li class='separator w5'></li>\\n                <li class='keycap tex' data-alt-keys='subset' data-insert='\\\\subset '>&#x2282;</li>\\n                <li class='keycap tex' data-alt-keys='supset' data-insert='\\\\supset '>&#x2283;</li>\\n                <li class='keycap tex' data-key='!' data-alt-keys='!'>!<aside>factorial</aside></li>\\n                <li class='keycap' data-insert='$$^{\\\\prime} $$'><span><sup><span><span style='color:#ddd'>o</span>&#x2032</sup></span><aside>prime</aside></li>\\n                <li class='keycap w15' data-insert='\\\\llcorner#0\\\\lrcorner '><span><sub>&#x2514;</sub><span style='color:#ddd'>o</span><sub>&#x2518;</sub></span><aside>floor</aside></li>\\n                <li class='keycap tex' data-insert='\\\\partial '>&#x2202;<aside>partial<br>derivative</aside></li>\\n                <li class='keycap tex' data-insert='\\\\emptyset '>&#x2205;<aside>empty set</aside></li>\\n\\n            </ul>\\n            <ul>\\n                <row name='numpad-3' class='if-wide'/>\\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\langle '>&#x27e8;</li>\\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rangle '>&#x27e9;</li>\\n                <li class='separator w5'></li>\\n                <li class='keycap tex' data-insert='\\\\subseteq '>&#x2286;</li>\\n                <li class='keycap tex' data-insert='\\\\supseteq '>&#x2287;</li>\\n                <li class='keycap tex' data-alt-keys='accents' data-insert='$$\\\\vec{#@}$$' data-latex='\\\\vec{#?}' data-aside='vector'></li>\\n                <li class='keycap tex' data-alt-keys='accents' data-insert='$$\\\\bar{#@}$$' data-latex='\\\\bar{#?}' data-aside='bar'></li>\\n                <li class='keycap tex' data-alt-keys='absnorm' data-insert='$$\\\\left| #0 \\\\right|$$' data-latex='\\\\left| #? \\\\right|' data-aside='abs'></li>\\n                <li class='keycap tex' data-insert='\\\\ast '>&#x2217;<aside>asterisk</aside></li>\\n\\n                <li class='action font-glyph bottom right w15'\\n                    data-shifted='<span class=\\\"warning\\\"><svg><use xlink:href=\\\"#svg-trash\\\" /></svg></span>'\\n                    data-shifted-command='\\\"deleteAll\\\"'\\n                    data-alt-keys='delete' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'\\n                >&#x232b;</li>\\n            </ul>\\n            <ul>\\n                <row name='numpad-4' class='if-wide'/>\\n                <li class='keycap tex' data-insert=','>,</li>\\n                <li class='keycap tex' data-insert='\\\\cdot '>&#x22c5;<aside>centered dot</aside></li>\\n                <li class='keycap tex' data-insert='\\\\colon '>:<aside>colon</aside></li>\\n                <li class='keycap tex' data-insert='\\\\circ '>&#x2218;<aside>circle</aside></li>\\n                <li class='keycap tex' data-insert='\\\\approx '>&#x2248;<aside>approx.</aside></li>\\n                <li class='keycap tex' data-insert='\\\\ne '>&#x2260;</li>\\n                <li class='keycap tex' data-insert='\\\\pm '>&#x00b1;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  'lower-greek': \"\\n        <div class='rows'>\\n            <ul><li class='keycap tex' data-insert='\\\\varphi '><i>&#x03c6;</i><aside>phi var.</aside></li>\\n                <li class='keycap tex' data-insert='\\\\varsigma '><i>&#x03c2;</i><aside>sigma var.</aside></li>\\n                <li class='keycap tex' data-insert='\\\\epsilon '><i>&#x03f5;</i></li>\\n                <li class='keycap tex' data-insert='\\\\rho '><i>&rho;</i></li>\\n                <li class='keycap tex' data-insert='\\\\tau '><i>&tau;</i></li>\\n                <li class='keycap tex' data-insert='\\\\upsilon '><i>&upsilon;</i></li>\\n                <li class='keycap tex' data-insert='\\\\theta '><i>&theta;</i></li>\\n                <li class='keycap tex' data-insert='\\\\iota '><i>&iota;</i></li>\\n                <li class='keycap tex' data-insert='\\\\omicron '>&omicron;</i></li>\\n                <li class='keycap tex' data-insert='\\\\pi '><i>&pi;</i></li>\\n            </ul>\\n            <ul><li class='keycap tex' data-insert='\\\\alpha ' data-shifted='&Alpha;' data-shifted-command='[\\\"insert\\\",\\\"{\\\\\\\\char\\\\\\\"391}\\\"]'><i>&alpha;</i></li>\\n                <li class='keycap tex' data-insert='\\\\sigma '><i>&sigma;</i></li>\\n                <li class='keycap tex' data-insert='\\\\delta '><i>&delta;</i></li>\\n                <li class='keycap tex' data-insert='\\\\phi '><i>&#x03d5;</i></i></li>\\n                <li class='keycap tex' data-insert='\\\\gamma '><i>&gamma;</i></li>\\n                <li class='keycap tex' data-insert='\\\\eta '><i>&eta;</i></li>\\n                <li class='keycap tex' data-insert='\\\\xi '><i>&xi;</i></li>\\n                <li class='keycap tex' data-insert='\\\\kappa '><i>&kappa;</i></li>\\n                <li class='keycap tex' data-insert='\\\\lambda '><i>&lambda;</i></li>\\n            </ul>\\n            <ul><li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='upper-greek'>&#x21e7;</li>\\n                <li class='keycap tex' data-insert='\\\\zeta '><i>&zeta;</i></li>\\n                <li class='keycap tex' data-insert='\\\\chi '><i>&chi;</i></li>\\n                <li class='keycap tex' data-insert='\\\\psi '><i>&psi;</i></li>\\n                <li class='keycap tex' data-insert='\\\\omega '><i>&omega;</i></li>\\n                <li class='keycap tex' data-insert='\\\\beta '><i>&beta;</i></li>\\n                <li class='keycap tex' data-insert='\\\\nu '><i>&nu;</i></li>\\n                <li class='keycap tex' data-insert='\\\\mu '><i>&mu;</i></li>\\n                <li class='action font-glyph bottom right w15'\\n                    data-shifted='<span class=\\\"warning\\\"><svg><use xlink:href=\\\"#svg-trash\\\" /></svg></span>'\\n                    data-shifted-command='\\\"deleteAll\\\"'\\n                    data-alt-keys='delete' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'\\n                >&#x232b;</li>\\n            </ul>\\n            <ul>\\n                <li class='keycap ' data-key=' '>&nbsp;</li>\\n                <li class='keycap'>,</li>\\n                <li class='keycap tex' data-insert='\\\\varepsilon '><i>&#x03b5;</i><aside>epsilon var.</aside></li>\\n                <li class='keycap tex' data-insert='\\\\vartheta '><i>&#x03d1;</i><aside>theta var.</aside></li>\\n                <li class='keycap tex' data-insert='\\\\varkappa '><i>&#x3f0;</i><aside>kappa var.</aside></li>\\n                <li class='keycap tex' data-insert='\\\\varpi '><i>&#x03d6;<aside>pi var.</aside></i></li>\\n                <li class='keycap tex' data-insert='\\\\varrho '><i>&#x03f1;</i><aside>rho var.</aside></li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  'upper-greek': \"\\n        <div class='rows'>\\n            <ul><li class='keycap tex' data-insert='\\\\Phi '>&Phi;<aside>phi</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Sigma '>&Sigma;<aside>sigma</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"0190}'>&#x0190;<aside>epsilon</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"3A1}'>&#x3A1;<aside>rho</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"3A4}'>&#x3A4;<aside>tau</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Upsilon '>&Upsilon;<aside>upsilon</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Theta '>&Theta;<aside>theta</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"399}'>&Iota;<aside>iota</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"39F}'>&#x039F;<aside>omicron</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Pi '>&Pi;<aside>pi</aside></li></ul>\\n            <ul><li class='keycap tex' data-insert='{\\\\char\\\"391}'>&#x391;<aside>alpha</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Sigma '>&Sigma;<aside>sigma</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Delta '>&Delta;<aside>delta</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Phi '>&#x03a6;<aside>phi</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Gamma '>&Gamma;<aside>gamma</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"397}'>&Eta;<aside>eta</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Xi '>&Xi;<aside>xi</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"39A}'>&Kappa;<aside>kappa</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Lambda '>&Lambda;<aside>lambda</aside></li></ul>\\n            <ul><li class='shift modifier font-glyph bottom left selected w15 layer-switch' data-layer='lower-greek'>&#x21e7;</li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"396}'>&Zeta;<aside>zeta</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"3A7}'>&Chi;<aside>chi</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Psi '>&Psi;<aside>psi</aside></li>\\n                <li class='keycap tex' data-insert='\\\\Omega '>&Omega;<aside>omega</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"392}'>&Beta;<aside>beta</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"39D}'>&Nu;<aside>nu</aside></li>\\n                <li class='keycap tex' data-insert='{\\\\char\\\"39C}'>&Mu;<aside>mu</aside></li>\\n                <li class='action font-glyph bottom right w15' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'>&#x232b;</li></ul>\\n            <ul>\\n                <li class='separator w10'>&nbsp;</li>\\n                <li class='keycap'>.</li>\\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  'lower-command': \"\\n        <div class='rows'>\\n            <ul><row name='lower-1' class='tt' shift-layer='upper-command'/></ul>\\n            <ul><row name='lower-2' class='tt' shift-layer='upper-command'/></ul>\\n            <ul><row name='lower-3' class='tt' shift-layer='upper-command'/></ul>\\n            <ul>\\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'>01#</li>\\n                <li class='keycap tt' data-shifted='[' data-shifted-command='[\\\"insertAndUnshiftKeyboardLayer\\\", \\\"[\\\"]'>{</li>\\n                <li class='keycap tt' data-shifted=']' data-shifted-command='[\\\"insertAndUnshiftKeyboardLayer\\\", \\\"]\\\"]'>}</li>\\n                <li class='keycap tt' data-shifted='(' data-shifted-command='[\\\"insertAndUnshiftKeyboardLayer\\\", \\\"(\\\"]'>^</li>\\n                <li class='keycap tt' data-shifted=')' data-shifted-command='[\\\"insertAndUnshiftKeyboardLayer\\\", \\\")\\\"]'>_</li>\\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  'upper-command': \"\\n        <div class='rows'>\\n            <ul><row name='upper-1' class='tt' shift-layer='lower-command'/></ul>\\n            <ul><row name='upper-2' class='tt' shift-layer='lower-command'/></ul>\\n            <ul><row name='upper-3' class='tt' shift-layer='lower-command'/></ul>\\n            <ul>\\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'01#</li>\\n                <li class='keycap tt'>[</li>\\n                <li class='keycap tt'>]</li>\\n                <li class='keycap tt'>(</li>\\n                <li class='keycap tt'>)</li>\\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  'symbols-command': \"\\n        <div class='rows'>\\n            <ul><li class='keycap tt'>1</li><li class='keycap tt'>2</li><li class='keycap tt'>3</li><li class='keycap tt'>4</li><li class='keycap tt'>5</li><li class='keycap tt'>6</li><li class='keycap tt'>7</li><li class='keycap tt'>8</li><li class='keycap tt'>9</li><li class='keycap tt'>0</li></ul>\\n            <ul><li class='keycap tt'>!</li><li class='keycap tt'>@</li><li class='keycap tt'>#</li><li class='keycap tt'>$</li><li class='keycap tt'>%</li><li class='keycap tt'>^</li><li class='keycap tt'>&</li><li class='keycap tt'>*</li><li class='keycap tt'>+</li><li class='keycap tt'>=</li></ul>\\n            <ul>\\n                <li class='keycap tt'>\\\\</li>\\n                <li class='keycap tt'>|</li>\\n                <li class='keycap tt'>/</li>\\n                <li class='keycap tt'>`</li>\\n                <li class='keycap tt'>;</li>\\n                <li class='keycap tt'>:</li>\\n                <li class='keycap tt'>?</li>\\n                <li class='keycap tt'>'</li>\\n                <li class='keycap tt'>\\\"</li>\\n                <li class='action font-glyph bottom right'\\n                    data-shifted='<span class=\\\"warning\\\"><svg><use xlink:href=\\\"#svg-trash\\\" /></svg></span>'\\n                    data-shifted-command='\\\"deleteAll\\\"'\\n                    data-alt-keys='delete' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'\\n                >&#x232b;</li>\\n            </ul>\\n            <ul>\\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='lower-command'>abc</li>\\n                <li class='keycap tt'>&lt;</li>\\n                <li class='keycap tt'>&gt;</li>\\n                <li class='keycap tt'>~</li>\\n                <li class='keycap tt'>,</li>\\n                <li class='keycap tt'>.</li>\\n                <li class='keycap' data-key=' '>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  functions: \"\\n        <div class='rows'>\\n            <ul><li class='separator'></li>\\n                <li class='fnbutton' data-insert='\\\\sin'></li>\\n                <li class='fnbutton' data-insert='\\\\sin^{-1}'></li>\\n                <li class='fnbutton' data-insert='\\\\ln'></li>\\n                <li class='fnbutton' data-insert='\\\\exponentialE^{#?}'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{lcm}(#?)$$' data-latex='\\\\operatorname{lcm}()'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{ceil}(#?)$$' data-latex='\\\\operatorname{ceil}()'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\lim_{n\\\\to\\\\infty}$$'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\int$$'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{abs}(#?)$$' data-latex='\\\\operatorname{abs}()'></li>\\n            </ul>\\n            <ul><li class='separator'></li>\\n                <li class='fnbutton' data-insert='\\\\cos'></li>\\n                <li class='fnbutton' data-insert='\\\\cos^{-1}'></li>\\n                <li class='fnbutton' data-insert='\\\\ln_{10}'></li>\\n                <li class='fnbutton' data-insert='$$10^{#?}$$'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{gcd}(#?)$$' data-latex='\\\\operatorname{gcd}()'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{floor}(#?)$$' data-latex='\\\\operatorname{floor}()'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\sum_{n\\\\mathop=0}^{\\\\infty}$$'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\int_{0}^{\\\\infty}$$'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{sign}(#?)$$' data-latex='\\\\operatorname{sign}()'></li>\\n            </ul>\\n            <ul><li class='separator'></li>\\n                <li class='fnbutton' data-insert='\\\\tan'></li>\\n                <li class='fnbutton' data-insert='\\\\tan^{-1}'></li>\\n                <li class='fnbutton' data-insert='$$\\\\log_{#?}$$'></li>\\n                <li class='fnbutton' data-insert='$$\\\\sqrt[#?]{#0}$$'></li>\\n                <li class='bigfnbutton' data-insert='$$#0 \\\\mod$$' data-latex='\\\\mod'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{round}(#?) $$' data-latex='\\\\operatorname{round}()'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\prod_{n\\\\mathop=0}^{\\\\infty}$$' data-latex='{\\\\scriptstyle \\\\prod_{n=0}^{\\\\infty}}'></li>\\n                <li class='bigfnbutton' data-insert='$$\\\\frac{\\\\differentialD #0}{\\\\differentialD x}$$'></li>\\n                <li class='action font-glyph bottom right' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'>&#x232b;</li></ul>\\n            <ul><li class='separator'></li>\\n                <li class='fnbutton'>(</li>\\n                <li class='fnbutton'>)</li>\\n                <li class='fnbutton' data-insert='$$^{#?} $$' data-latex='x^{#?} '></li>\\n                <li class='fnbutton' data-insert='$$_{#?} $$' data-latex='x_{#?} '></li>\\n                <li class='keycap w20 ' data-key=' '>&nbsp;</li>\\n                <arrows/>\\n            </ul>\\n        </div>\",\n  style: \"\\n        <div class='rows'>\\n            <ul>\\n                <li class='keycap' data-alt-keys='foreground-color' data-command='[\\\"applyStyle\\\",{\\\"color\\\":\\\"#cc2428\\\"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428'></span></li>\\n                <li class='keycap' data-alt-keys='background-color' data-command='[\\\"applyStyle\\\",{\\\"backgroundColor\\\":\\\"#fff590\\\"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590'></span></li>\\n                <li class='separator w5'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"size\\\":\\\"size3\\\"}]' data-latex='\\\\scriptsize\\\\text{small}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"size\\\":\\\"size5\\\"}]' data-latex='\\\\scriptsize\\\\text{normal}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"size\\\":\\\"size9\\\"}]' data-latex='\\\\huge\\\\text{big}'></li>\\n                <li class='separator w5'></li>\\n                <li class='keycap' data-latex='\\\\langle' data-command='[\\\"insert\\\", \\\"\\\\\\\\langle\\\", {\\\"smartFence\\\":true}]'></li>\\n            </ul>\\n            <ul>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"series\\\":\\\"l\\\"}]' data-latex='\\\\fontseries{l}\\\\text{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"series\\\":\\\"m\\\"}]' data-latex='\\\\fontseries{m}\\\\text{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"series\\\":\\\"b\\\"}]' data-latex='\\\\fontseries{b}\\\\text{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"series\\\":\\\"bx\\\"}]' data-latex='\\\\fontseries{bx}\\\\text{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"series\\\":\\\"sb\\\"}]' data-latex='\\\\fontseries{sb}\\\\text{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"series\\\":\\\"c\\\"}]' data-latex='\\\\fontseries{c}\\\\text{Ab}'></li>\\n            </ul>\\n            <ul>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"shape\\\":\\\"up\\\"}]' data-latex='\\\\textup{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"shape\\\":\\\"it\\\"}]' data-latex='\\\\textit{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"shape\\\":\\\"sl\\\"}]' data-latex='\\\\textsl{Ab}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"shape\\\":\\\"sc\\\"}]' data-latex='\\\\textsc{Ab}'></li>\\n                <li class='separator w5'></li>\\n                <li class='keycap' data-insert='$$\\\\emph{#?} $$' data-latex='\\\\text{\\\\emph{emph}}'></li>\\n            </ul>\\n            <ul>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"cmr\\\"}]' data-latex='\\\\textrm{Az}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"cmtt\\\"}]' data-latex='\\\\texttt{Az}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"cmss\\\"}]' data-latex='\\\\textsf{Az}'></li>\\n\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"bb\\\"}]'  data-latex='\\\\mathbb{AZ}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"scr\\\"}]'  data-latex='\\\\mathscr{AZ}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"cal\\\"}]' data-latex='\\\\mathcal{A1}'></li>\\n                <li class='keycap' data-command='[\\\"applyStyle\\\",{\\\"fontFamily\\\":\\\"frak\\\"}]' data-latex='\\\\mathfrak{Az}'></li>\\n            </ul>\\n        </div>\"\n};\n\nfunction latexToMarkup$1(latex, arg, mf) {\n  // Since we don't have preceding atoms, we'll interpret #@ as a placeholder\n  latex = latex.replace(/(^|[^\\\\])#@/g, '$1#?');\n  return makeStruts(makeSpan(decompose({\n    mathstyle: MATHSTYLES.displaystyle,\n    macros: mf.options.macros\n  }, parseString(latex, 'math', arg, mf.options.macros)), 'ML__base'), 'ML__mathlive').toMarkup();\n}\n/**\r\n * Return a markup string for the keyboard toolbar for the specified layer.\r\n */\n\n\nfunction makeKeyboardToolbar(mf, keyboardIDs, currentKeyboard) {\n  var _a; // The left hand side of the toolbar has a list of all the available keyboards\n\n\n  let result = \"<div class='left'>\";\n  const keyboardList = keyboardIDs.replace(/\\s+/g, ' ').split(' ');\n\n  if (keyboardList.length > 1) {\n    const keyboards = _objectSpread(_objectSpread({}, KEYBOARDS), (_a = mf.options.customVirtualKeyboards) !== null && _a !== void 0 ? _a : {});\n\n    var _iterator51 = _createForOfIteratorHelper(keyboardList),\n        _step51;\n\n    try {\n      for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n        const keyboard = _step51.value;\n\n        if (!keyboards[keyboard]) {\n          console.error('Unknown virtual keyboard \"' + keyboard + '\"');\n          break;\n        }\n\n        result += \"<div class='\";\n\n        if (keyboard === currentKeyboard) {\n          result += 'selected ';\n        } else {\n          if (keyboards[keyboard].command) {\n            result += 'action ';\n          } else {\n            result += 'layer-switch ';\n          }\n        }\n\n        result += (keyboards[keyboard].classes || '') + \"'\";\n\n        if (keyboards[keyboard].tooltip) {\n          result += \"data-ML__tooltip='\" + localize(keyboards[keyboard].tooltip) + \"' \";\n          result += \"data-placement='top' data-delay='1s'\";\n        }\n\n        if (keyboard !== currentKeyboard) {\n          if (keyboards[keyboard].command) {\n            result += 'data-command=\\'\"' + keyboards[keyboard].command + '\"\\'';\n          }\n\n          if (keyboards[keyboard].layer) {\n            result += \"data-layer='\" + keyboards[keyboard].layer + \"'\";\n          }\n        }\n\n        result += '>' + keyboards[keyboard].label + '</div>';\n      }\n    } catch (err) {\n      _iterator51.e(err);\n    } finally {\n      _iterator51.f();\n    }\n  }\n\n  result += '</div>'; // The right hand side of the toolbar, with the copy/undo/redo commands\n\n  result += \"\\n        <div class='right'>\\n            <div class='action'\\n                data-command='\\\"copyToClipboard\\\"'\\n                data-ML__tooltip='\".concat(localize('tooltip.copy to clipboard'), \"' data-placement='top' data-delay='1s'>\\n                <svg><use xlink:href='#svg-copy' /></svg>\\n            </div>\\n            <div class='action disabled'\\n                data-command='\\\"undo\\\"'\\n                data-ML__tooltip='\").concat(localize('tooltip.undo'), \"' data-placement='top' data-delay='1s'>\\n                <svg><use xlink:href='#svg-undo' /></svg>\\n            </div>\\n            <div class='action disabled'\\n                data-command='\\\"redo\\\"'\\n                data-ML__tooltip='\").concat(localize('tooltip.redo'), \"' data-placement='top' data-delay='1s'>\\n                <svg><use xlink:href='#svg-redo' /></svg>\\n            </div>\\n        </div>\\n    \");\n  return \"<div class='keyboard-toolbar' role='toolbar'>\" + result + '</div>';\n}\n\nfunction makeKeycap(mf, elList, chainedCommand) {\n  var _a;\n\n  for (let i = 0; i < elList.length; ++i) {\n    const el = elList[i];\n    let html; // Display\n\n    if (el.getAttribute('data-latex')) {\n      html = latexToMarkup$1(el.getAttribute('data-latex').replace(/&quot;/g, '\"'), {\n        '?': '{\\\\color{#555}{\\\\scriptstyle \\\\char\"2B1A}}'\n      }, mf);\n    } else if (el.getAttribute('data-insert') && el.innerHTML === '') {\n      html = latexToMarkup$1(el.getAttribute('data-insert').replace(/&quot;/g, '\"'), {\n        '?': '{\\\\color{#555}{\\\\scriptstyle \\\\char\"2B1A}}'\n      }, mf);\n    } else if (el.getAttribute('data-content')) {\n      html = el.getAttribute('data-content').replace(/&quot;/g, '\"');\n    }\n\n    if (el.getAttribute('data-aside')) {\n      html = (html !== null && html !== void 0 ? html : '') + '<aside>' + el.getAttribute('data-aside').replace(/&quot;/g, '\"') + '</aside>';\n    }\n\n    if (typeof html !== 'undefined') {\n      el.innerHTML = mf.options.createHTML(html);\n    }\n\n    if (el.getAttribute('data-classes')) {\n      el.classList.add(el.getAttribute('data-classes'));\n    }\n\n    const key = (_a = el.getAttribute('data-insert')) === null || _a === void 0 ? void 0 : _a.replace(/&quot;/g, '\"');\n\n    if (key && SHIFTED_KEYS[key]) {\n      el.setAttribute('data-shifted', SHIFTED_KEYS[key][0]);\n      el.setAttribute('data-shifted-command', JSON.stringify(['insertAndUnshiftKeyboardLayer', SHIFTED_KEYS[key][1]]));\n    } // Commands\n\n\n    let handlers;\n\n    if (el.getAttribute('data-command')) {\n      handlers = JSON.parse(el.getAttribute('data-command'));\n    } else if (el.getAttribute('data-insert')) {\n      handlers = ['insert', el.getAttribute('data-insert'), {\n        focus: true,\n        feedback: true,\n        mode: 'math',\n        format: 'latex',\n        resetStyle: true\n      }];\n    } else if (el.getAttribute('data-latex')) {\n      handlers = ['insert', el.getAttribute('data-latex'), {\n        focus: true,\n        feedback: true,\n        mode: 'math',\n        format: 'latex',\n        resetStyle: true\n      }];\n    } else {\n      handlers = ['typedText', el.getAttribute('data-key') || el.textContent, {\n        focus: true,\n        feedback: true,\n        simulateKeystroke: true\n      }];\n    }\n\n    if (chainedCommand) {\n      handlers = [chainedCommand, handlers];\n    }\n\n    if (el.getAttribute('data-alt-keys')) {\n      const altKeys = ALT_KEYS[el.getAttribute('data-alt-keys')];\n\n      if (altKeys) {\n        handlers = {\n          default: handlers,\n          pressAndHoldStart: ['showAlternateKeys', el.getAttribute('data-alt-keys'), altKeys],\n          pressAndHoldEnd: 'hideAlternateKeys'\n        };\n      } else {\n        console.warn('Unknown alt key set: \"' + el.getAttribute('data-alt-keys'));\n      }\n    }\n\n    attachButtonHandlers(mf, el, handlers);\n  }\n}\n/**\r\n * Expand the shortcut tags (e.g. <row>) inside a layer.\r\n */\n\n\nfunction expandLayerMarkup(mf, layer) {\n  const ROWS = {\n    // First row should be 10 key wide\n    // Second row should be 10 key wide\n    // Third row should be 8.5 key wide\n    // One row should have ^ (shift key) which is 1.5 key wide\n    // One row should have ~ (delete key) which is .5 or 1.5 key wide\n    qwerty: {\n      'lower-1': 'qwertyuiop',\n      'lower-2': ' asdfghjkl ',\n      'lower-3': '^zxcvbnm~',\n      'upper-1': 'QWERTYUIOP',\n      'upper-2': ' ASDFGHJKL ',\n      'upper-3': '^ZXCVBNM~',\n      'numpad-1': '789/',\n      'numpad-2': '456*',\n      'numpad-3': '123-',\n      'numpad-4': '0.=+'\n    },\n    azerty: {\n      'lower-1': 'azertyuiop',\n      'lower-2': 'qsdfghjklm',\n      'lower-3': '^ wxcvbn ~',\n      'upper-1': 'AZERTYUIOP',\n      'upper-2': 'QSDFGHJKLM',\n      'upper-3': '^ WXCVBN ~'\n    },\n    qwertz: {\n      'lower-1': 'qwertzuiop',\n      'lower-2': ' asdfghjkl ',\n      'lower-3': '^yxcvbnm~',\n      'upper-1': 'QWERTZUIOP',\n      'upper-2': ' ASDFGHJKL',\n      'upper-3': '^YXCVBNM~'\n    },\n    dvorak: {\n      'lower-1': '^  pyfgcrl ',\n      'lower-2': 'aoeuidhtns',\n      'lower-3': 'qjkxbmwvz~',\n      'upper-1': '^  PYFGCRL ',\n      'upper-2': 'AOEUIDHTNS',\n      'upper-3': 'QJKXBMWVZ~'\n    },\n    colemak: {\n      'lower-1': ' qwfpgjluy ',\n      'lower-2': 'arstdhneio',\n      'lower-3': '^zxcvbkm~',\n      'upper-1': ' QWFPGNLUY ',\n      'upper-2': 'ARSTDHNEIO',\n      'upper-3': '^ZXCVBKM~'\n    }\n  };\n  const layout = ROWS[mf.options.virtualKeyboardLayout] ? ROWS[mf.options.virtualKeyboardLayout] : ROWS['qwerty'];\n  let result = layer;\n  let row;\n  result = result.replace(/<arrows\\/>/g, \"\\n        <li class='action' data-command='[\\\"performWithFeedback\\\",\\\"moveToPreviousChar\\\"]'\\n            data-shifted='<svg><use xlink:href=\\\"#svg-angle-double-left\\\" /></svg>'\\n            data-shifted-command='[\\\"performWithFeedback\\\",\\\"extendToPreviousChar\\\"]'>\\n            <svg><use xlink:href='#svg-arrow-left' /></svg>\\n        </li>\\n        <li class='action' data-command='[\\\"performWithFeedback\\\",\\\"moveToNextChar\\\"]'\\n            data-shifted='<svg><use xlink:href=\\\"#svg-angle-double-right\\\" /></svg>'\\n            data-shifted-command='[\\\"performWithFeedback\\\",\\\"extendToNextChar\\\"]'>\\n            <svg><use xlink:href='#svg-arrow-right' /></svg>\\n        </li>\\n        <li class='action' data-command='[\\\"performWithFeedback\\\",\\\"moveToNextPlaceholder\\\"]'>\\n        <svg><use xlink:href='#svg-tab' /></svg></li>\");\n  let m = result.match(/(<row\\s+)(.*)((?:<\\/row|\\/)>)/);\n\n  while (m) {\n    row = '';\n    const attributesArray = m[2].match(/[a-zA-Z][a-zA-Z0-9-]*=(['\"])(.*?)\\1/g);\n    const attributes = {};\n\n    var _iterator52 = _createForOfIteratorHelper(attributesArray),\n        _step52;\n\n    try {\n      for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n        const attribute = _step52.value;\n        const m2 = attribute.match(/([a-zA-Z][a-zA-Z0-9-]*)=(['\"])(.*?)\\2/);\n        attributes[m2[1]] = m2[3];\n      }\n    } catch (err) {\n      _iterator52.e(err);\n    } finally {\n      _iterator52.f();\n    }\n\n    let keys = layout[attributes['name']];\n    if (!keys) keys = ROWS['qwerty'][attributes['name']];\n\n    if (!keys) {\n      console.warn('Unknown roman keyboard row: ' + attributes['name']);\n    } else {\n      var _iterator53 = _createForOfIteratorHelper(keys),\n          _step53;\n\n      try {\n        for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n          const c = _step53.value;\n          let cls = attributes['class'] || '';\n          if (cls) cls = ' ' + cls;\n\n          if (c === '~') {\n            row += \"<li class='action font-glyph bottom right \";\n            row += keys.length - (keys.match(/ /g) || []).length / 2 === 10 ? 'w10' : 'w15';\n            row += \"' data-shifted='<span class=\\\"warning\\\"><svg><use xlink:href=\\\"#svg-trash\\\" /></svg></span>'\\n                        data-shifted-command='\\\"deleteAll\\\"'\\n                        data-alt-keys='delete' data-command='[\\\"performWithFeedback\\\",\\\"deletePreviousChar\\\"]'\\n                        >&#x232b;</li>\";\n          } else if (c === ' ') {\n            // Separator\n            row += \"<li class='separator w5'></li>\";\n          } else if (c === '^') {\n            // Shift key\n            row += \"<li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='\" + attributes['shift-layer'] + \"'>&#x21e7;</li>\";\n          } else if (c === '/') {\n            row += \"<li class='keycap\" + cls + \"' data-alt-keys='/' data-insert='\\\\frac{#@}{#?}'>&divide;</li>\";\n          } else if (c === '*') {\n            row += \"<li class='keycap\" + cls + \"' data-alt-keys='*' data-insert='\\\\times '>&times;</li>\";\n          } else if (c === '-') {\n            row += \"<li class='keycap\" + cls + \"' data-alt-keys='-' data-key='-' data-alt-keys='-'>&#x2212;</li>\";\n          } else if (/tt/.test(cls)) {\n            row += \"<li class='keycap\" + cls + \"' data-alt-keys='\" + c + \"'\" + \" data-command='[\\\"typedText\\\",\\\"\" + c + \"\\\",{\\\"commandMode\\\":true, \\\"focus\\\":true, \\\"feedback\\\":true}]'\" + '>' + c + '</li>';\n          } else {\n            row += \"<li class='keycap\" + cls + \"' data-alt-keys='\" + c + \"'>\" + c + '</li>';\n          }\n        }\n      } catch (err) {\n        _iterator53.e(err);\n      } finally {\n        _iterator53.f();\n      }\n    }\n\n    result = result.replace(new RegExp(m[1] + m[2] + m[3]), row);\n    m = result.match(/(<row\\s+)(.*)((?:<\\/row|\\/)>)/);\n  }\n\n  return result;\n}\n/**\r\n * Construct a virtual keyboard element based on the config options in the\r\n * mathfield and an optional theme.\r\n */\n\n\nfunction makeKeyboard(mf, theme) {\n  var _a, _b;\n\n  const svgIcons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" style=\\\"display: none;\\\">\\n\\n            <symbol id=\\\"svg-command\\\" viewBox=\\\"0 0 640 512\\\">\\n                <path d=\\\"M34.495 36.465l211.051 211.05c4.686 4.686 4.686 12.284 0 16.971L34.495 475.535c-4.686 4.686-12.284 4.686-16.97 0l-7.071-7.07c-4.686-4.686-4.686-12.284 0-16.971L205.947 256 10.454 60.506c-4.686-4.686-4.686-12.284 0-16.971l7.071-7.07c4.686-4.687 12.284-4.687 16.97 0zM640 468v-10c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h328c6.627 0 12-5.373 12-12z\\\"/>\\n            </symbol>\\n\\n            <symbol id=\\\"svg-undo\\\" viewBox=\\\"0 0 512 512\\\">\\n                <path d=\\\"M20 8h10c6.627 0 12 5.373 12 12v110.625C85.196 57.047 165.239 7.715 256.793 8.001 393.18 8.428 504.213 120.009 504 256.396 503.786 393.181 392.834 504 256 504c-63.926 0-122.202-24.187-166.178-63.908-5.113-4.618-5.354-12.561-.482-17.433l7.069-7.069c4.503-4.503 11.749-4.714 16.482-.454C150.782 449.238 200.935 470 256 470c117.744 0 214-95.331 214-214 0-117.744-95.331-214-214-214-82.862 0-154.737 47.077-190.289 116H180c6.627 0 12 5.373 12 12v10c0 6.627-5.373 12-12 12H20c-6.627 0-12-5.373-12-12V20c0-6.627 5.373-12 12-12z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-redo\\\" viewBox=\\\"0 0 512 512\\\">\\n                <path d=\\\"M492 8h-10c-6.627 0-12 5.373-12 12v110.625C426.804 57.047 346.761 7.715 255.207 8.001 118.82 8.428 7.787 120.009 8 256.396 8.214 393.181 119.166 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-7.069-7.069c-4.503-4.503-11.749-4.714-16.482-.454C361.218 449.238 311.065 470 256 470c-117.744 0-214-95.331-214-214 0-117.744 95.331-214 214-214 82.862 0 154.737 47.077 190.289 116H332c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h160c6.627 0 12-5.373 12-12V20c0-6.627-5.373-12-12-12z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-arrow-left\\\" viewBox=\\\"0 0 192 512\\\">\\n                <path d=\\\"M25.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L64.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L25 264.5c-4.6-4.7-4.6-12.3.1-17z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-arrow-right\\\" viewBox=\\\"0 0 192 512\\\">\\n                    <path d=\\\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-tab\\\" viewBox=\\\"0 0 448 512\\\">\\n                    <path d=\\\"M32 217.1c0-8.8 7.2-16 16-16h144v-93.9c0-7.1 8.6-10.7 13.6-5.7l143.5 143.1c6.3 6.3 6.3 16.4 0 22.7L205.6 410.4c-5 5-13.6 1.5-13.6-5.7v-93.9H48c-8.8 0-16-7.2-16-16v-77.7m-32 0v77.7c0 26.5 21.5 48 48 48h112v61.9c0 35.5 43 53.5 68.2 28.3l143.6-143c18.8-18.8 18.8-49.2 0-68L228.2 78.9c-25.1-25.1-68.2-7.3-68.2 28.3v61.9H48c-26.5 0-48 21.6-48 48zM436 64h-8c-6.6 0-12 5.4-12 12v360c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-copy\\\" viewBox=\\\"0 0 448 512\\\">\\n                <path d=\\\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM352 32.491a15.88 15.88 0 0 1 7.431 4.195l51.882 51.883A15.885 15.885 0 0 1 415.508 96H352V32.491zM288 464c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V144c0-8.822 7.178-16 16-16h80v240c0 26.51 21.49 48 48 48h112v48zm128-96c0 8.822-7.178 16-16 16H176c-8.822 0-16-7.178-16-16V48c0-8.822 7.178-16 16-16h144v72c0 13.2 10.8 24 24 24h72v240z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-angle-double-right\\\" viewBox=\\\"0 0 320 512\\\">\\n                <path d=\\\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17zm128-17l-117.8-116c-4.7-4.7-12.3-4.7-17 0l-7.1 7.1c-4.7 4.7-4.7 12.3 0 17L255.3 256 153.1 356.4c-4.7 4.7-4.7 12.3 0 17l7.1 7.1c4.7 4.7 12.3 4.7 17 0l117.8-116c4.6-4.7 4.6-12.3-.1-17z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-angle-double-left\\\" viewBox=\\\"0 0 320 512\\\">\\n                <path d=\\\"M153.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L192.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L153 264.5c-4.6-4.7-4.6-12.3.1-17zm-128 17l117.8 116c4.7 4.7 12.3 4.7 17 0l7.1-7.1c4.7-4.7 4.7-12.3 0-17L64.7 256l102.2-100.4c4.7-4.7 4.7-12.3 0-17l-7.1-7.1c-4.7-4.7-12.3-4.7-17 0L25 247.5c-4.6 4.7-4.6 12.3.1 17z\\\"/>\\n            </symbol>\\n            <symbol id=\\\"svg-trash\\\" viewBox=\\\"0 0 448 512\\\">\\n                <path d=\\\"M336 64l-33.6-44.8C293.3 7.1 279.1 0 264 0h-80c-15.1 0-29.3 7.1-38.4 19.2L112 64H24C10.7 64 0 74.7 0 88v2c0 3.3 2.7 6 6 6h26v368c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V96h26c3.3 0 6-2.7 6-6v-2c0-13.3-10.7-24-24-24h-88zM184 32h80c5 0 9.8 2.4 12.8 6.4L296 64H152l19.2-25.6c3-4 7.8-6.4 12.8-6.4zm200 432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V96h320v368zm-176-44V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm-80 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm160 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12z\\\"/>\\n            </symbol>\\n        </svg>\\n        \"; // <symbol id=\"svg-wikipedia\" viewBox=\"0 0 640 512\">\n  //         <path d=\"M640 51.2l-.3 12.2c-28.1.8-45 15.8-55.8 40.3-25 57.8-103.3 240-155.3 358.6H415l-81.9-193.1c-32.5 63.6-68.3 130-99.2 193.1-.3.3-15 0-15-.3C172 352.3 122.8 243.4 75.8 133.4 64.4 106.7 26.4 63.4.2 63.7c0-3.1-.3-10-.3-14.2h161.9v13.9c-19.2 1.1-52.8 13.3-43.3 34.2 21.9 49.7 103.6 240.3 125.6 288.6 15-29.7 57.8-109.2 75.3-142.8-13.9-28.3-58.6-133.9-72.8-160-9.7-17.8-36.1-19.4-55.8-19.7V49.8l142.5.3v13.1c-19.4.6-38.1 7.8-29.4 26.1 18.9 40 30.6 68.1 48.1 104.7 5.6-10.8 34.7-69.4 48.1-100.8 8.9-20.6-3.9-28.6-38.6-29.4.3-3.6 0-10.3.3-13.6 44.4-.3 111.1-.3 123.1-.6v13.6c-22.5.8-45.8 12.8-58.1 31.7l-59.2 122.8c6.4 16.1 63.3 142.8 69.2 156.7L559.2 91.8c-8.6-23.1-36.4-28.1-47.2-28.3V49.6l127.8 1.1.2.5z\"/>\n  // </symbol>\n  // <symbol id=\"svg-link\" viewBox=\"0 0 512 512\">\n  //         <path d=\"M301.148 394.702l-79.2 79.19c-50.778 50.799-133.037 50.824-183.84 0-50.799-50.778-50.824-133.037 0-183.84l79.19-79.2a132.833 132.833 0 0 1 3.532-3.403c7.55-7.005 19.795-2.004 20.208 8.286.193 4.807.598 9.607 1.216 14.384.481 3.717-.746 7.447-3.397 10.096-16.48 16.469-75.142 75.128-75.3 75.286-36.738 36.759-36.731 96.188 0 132.94 36.759 36.738 96.188 36.731 132.94 0l79.2-79.2.36-.36c36.301-36.672 36.14-96.07-.37-132.58-8.214-8.214-17.577-14.58-27.585-19.109-4.566-2.066-7.426-6.667-7.134-11.67a62.197 62.197 0 0 1 2.826-15.259c2.103-6.601 9.531-9.961 15.919-7.28 15.073 6.324 29.187 15.62 41.435 27.868 50.688 50.689 50.679 133.17 0 183.851zm-90.296-93.554c12.248 12.248 26.362 21.544 41.435 27.868 6.388 2.68 13.816-.68 15.919-7.28a62.197 62.197 0 0 0 2.826-15.259c.292-5.003-2.569-9.604-7.134-11.67-10.008-4.528-19.371-10.894-27.585-19.109-36.51-36.51-36.671-95.908-.37-132.58l.36-.36 79.2-79.2c36.752-36.731 96.181-36.738 132.94 0 36.731 36.752 36.738 96.181 0 132.94-.157.157-58.819 58.817-75.3 75.286-2.651 2.65-3.878 6.379-3.397 10.096a163.156 163.156 0 0 1 1.216 14.384c.413 10.291 12.659 15.291 20.208 8.286a131.324 131.324 0 0 0 3.532-3.403l79.19-79.2c50.824-50.803 50.799-133.062 0-183.84-50.802-50.824-133.062-50.799-183.84 0l-79.2 79.19c-50.679 50.682-50.688 133.163 0 183.851z\"/>\n  // </symbol>\n  //     <symbol id=\"svg-external-link\" viewBox=\"0 0 448 512\">\n  //     <path d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm16 400c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V80c0-8.822 7.178-16 16-16h352c8.822 0 16 7.178 16 16v352zM99.515 374.828c-4.686-4.686-4.686-12.284 0-16.971l195.15-195.15-.707-.707-89.958.342c-6.627 0-12-5.373-12-12v-9.999c0-6.628 5.372-12 12-12L340 128c6.627 0 12 5.372 12 12l-.343 136c0 6.627-5.373 12-12 12h-9.999c-6.627 0-12-5.373-12-12l.342-89.958-.707-.707-195.15 195.15c-4.686 4.686-12.284 4.686-16.971 0l-5.657-5.657z\"/>\n  // </symbol>\n  // <symbol id=\"svg-external-link\" viewBox=\"0 0 512 512\">\n  //     <path d=\"M256 40c118.621 0 216 96.075 216 216 0 119.291-96.61 216-216 216-119.244 0-216-96.562-216-216 0-119.203 96.602-216 216-216m0-32C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm-36 344h12V232h-12c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h48c6.627 0 12 5.373 12 12v140h12c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12h-72c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12zm36-240c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"/>\n  // </symbol>\n\n  let markup = svgIcons;\n  inject(null, css_248z); // Auto-populate the ALT_KEYS table\n\n  ALT_KEYS_BASE['foreground-color'] = [];\n\n  var _iterator54 = _createForOfIteratorHelper(LINE_COLORS),\n      _step54;\n\n  try {\n    for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n      const color = _step54.value;\n      ALT_KEYS_BASE['foreground-color'].push({\n        classes: 'small-button',\n        content: '<span style=\"border-radius:50%;width:32px;height:32px; box-sizing: border-box; border: 3px solid ' + color + '\"></span>',\n        command: '[\"applyStyle\",{\"color\":\"' + color + '\"}]'\n      });\n    }\n  } catch (err) {\n    _iterator54.e(err);\n  } finally {\n    _iterator54.f();\n  }\n\n  ALT_KEYS_BASE['background-color'] = [];\n\n  var _iterator55 = _createForOfIteratorHelper(AREA_COLORS),\n      _step55;\n\n  try {\n    for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n      const color = _step55.value;\n      ALT_KEYS_BASE['background-color'].push({\n        classes: 'small-button',\n        content: '<span style=\"border-radius:50%;width:32px;height:32px; background:' + color + '\"></span>',\n        command: '[\"applyStyle\",{\"backgroundColor\":\"' + color + '\"}]'\n      });\n    }\n  } catch (err) {\n    _iterator55.e(err);\n  } finally {\n    _iterator55.f();\n  }\n\n  ALT_KEYS = _objectSpread({}, ALT_KEYS_BASE);\n  Object.keys(ALT_KEYS).forEach(key => {\n    ALT_KEYS[key] = ALT_KEYS[key].slice();\n  });\n  const UPPER_ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const LOWER_ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n  const DIGITS = '0123456789'; // Define the alternate set for uppercase keys\n\n  for (let i = 0; i < 26; i++) {\n    const key = UPPER_ALPHA[i];\n    if (!ALT_KEYS[key]) ALT_KEYS[key] = [];\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathbb{' + key + '}',\n      aside: 'blackboard',\n      insert: '\\\\mathbb{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathbf{' + key + '}',\n      aside: 'bold',\n      insert: '\\\\mathbf{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathsf{' + key + '}',\n      aside: 'sans',\n      insert: '\\\\mathsf{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathtt{' + key + '}',\n      aside: 'monospace',\n      insert: '\\\\mathtt{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathcal{' + key + '}',\n      aside: 'calligraphy',\n      insert: '\\\\mathcal{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathfrak{' + key + '}',\n      aside: 'fraktur',\n      insert: '\\\\mathfrak{' + key + '}'\n    });\n  } // Define the alternate set for lowercase keys\n\n\n  for (let i = 0; i <= 26; i++) {\n    const key = LOWER_ALPHA[i];\n    if (!ALT_KEYS[key]) ALT_KEYS[key] = [];\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathsf{' + key + '}',\n      aside: 'sans',\n      insert: '\\\\mathsf{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathbf{' + key + '}',\n      aside: 'bold',\n      insert: '\\\\mathbf{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathtt{' + key + '}',\n      aside: 'monospace',\n      insert: '\\\\mathtt{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathfrak{' + key + '}',\n      aside: 'fraktur',\n      insert: '\\\\mathfrak{' + key + '}'\n    });\n  }\n\n  for (let i = 0; i < 10; i++) {\n    const key = DIGITS[i];\n    if (!ALT_KEYS[key]) ALT_KEYS[key] = []; // The mathbb font does not appear to include digits,\n    // although it's supposed to.\n    // ALT_KEYS[key].push({\n    //         latex: '\\\\underset{\\\\textsf{\\\\footnotesize blackboard}}{\\\\mathbb{' + key + '}}',\n    //         insert: '\\\\mathbb{' + key + '}}'});\n\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathbf{' + key + '}',\n      aside: 'bold',\n      insert: '\\\\mathbf{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathsf{' + key + '}',\n      aside: 'sans',\n      insert: '\\\\mathsf{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathtt{' + key + '}',\n      aside: 'monospace',\n      insert: '\\\\mathtt{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathcal{' + key + '}',\n      aside: 'script',\n      insert: '\\\\mathcal{' + key + '}'\n    });\n    ALT_KEYS[key].unshift({\n      latex: '\\\\mathfrak{' + key + '}',\n      aside: 'fraktur',\n      insert: '\\\\mathfrak{' + key + '}'\n    });\n  }\n\n  let keyboardIDs = mf.options.virtualKeyboards;\n\n  if (!keyboardIDs) {\n    keyboardIDs = 'all';\n  }\n\n  keyboardIDs = keyboardIDs.replace(/\\ball\\b/i, 'numeric functions symbols roman  greek');\n\n  const layers = _objectSpread(_objectSpread({}, LAYERS), (_a = mf.options.customVirtualKeyboardLayers) !== null && _a !== void 0 ? _a : {});\n\n  const keyboards = _objectSpread(_objectSpread({}, KEYBOARDS), (_b = mf.options.customVirtualKeyboards) !== null && _b !== void 0 ? _b : {});\n\n  const keyboardList = keyboardIDs.replace(/\\s+/g, ' ').split(' ');\n\n  var _iterator56 = _createForOfIteratorHelper(keyboardList),\n      _step56;\n\n  try {\n    for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n      const keyboard = _step56.value;\n\n      if (!keyboards[keyboard]) {\n        console.error('Unknown virtual keyboard \"' + keyboard + '\"');\n        break;\n      } // Add the default layer to the list of layers,\n      // and make sure the list of layers is uniquified.\n\n\n      let keyboardLayers = keyboards[keyboard].layers || [];\n\n      if (keyboards[keyboard].layer) {\n        keyboardLayers.push(keyboards[keyboard].layer);\n      }\n\n      keyboardLayers = Array.from(new Set(keyboardLayers));\n\n      var _iterator57 = _createForOfIteratorHelper(keyboardLayers),\n          _step57;\n\n      try {\n        for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n          const layerName = _step57.value;\n\n          if (!layers[layerName]) {\n            console.error('Unknown virtual keyboard layer: \"' + layerName + '\"');\n            break;\n          }\n\n          if (typeof layers[layerName] === 'object') {\n            const layer = layers[layerName]; // Process JSON layer to web element based layer.\n\n            let tempLayer = '';\n\n            if (layer.styles) {\n              tempLayer += \"<style>\".concat(layer.styles, \"</style>\");\n            }\n\n            if (layer.backdrop) {\n              tempLayer += \"<div class='\".concat(layer.backdrop, \"'>\");\n            }\n\n            if (layer.container) {\n              tempLayer += \"<div class='\".concat(layer.container, \"'>\");\n            }\n\n            if (layer.rows) {\n              tempLayer += \"<div class='rows'>\";\n\n              var _iterator58 = _createForOfIteratorHelper(layer.rows),\n                  _step58;\n\n              try {\n                for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n                  const row = _step58.value;\n                  tempLayer += \"<ul>\";\n\n                  var _iterator59 = _createForOfIteratorHelper(row),\n                      _step59;\n\n                  try {\n                    for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n                      const keycap = _step59.value;\n                      tempLayer += \"<li\";\n\n                      if (keycap.class) {\n                        tempLayer += \" class=\\\"\".concat(keycap.class, \"\\\"\");\n                      }\n\n                      if (keycap.key) {\n                        tempLayer += \" data-key=\\\"\".concat(keycap.key, \"\\\"\");\n                      }\n\n                      if (keycap.command) {\n                        if (typeof keycap.command === 'string') {\n                          tempLayer += \" data-command='\\\"\".concat(keycap.command, \"\\\"'\");\n                        } else {\n                          tempLayer += \" data-command='\";\n                          tempLayer += JSON.stringify(keycap.command);\n                          tempLayer += \"'\";\n                        }\n                      }\n\n                      if (keycap.insert) {\n                        tempLayer += \" data-insert=\\\"\".concat(keycap.insert, \"\\\"\");\n                      }\n\n                      if (keycap.latex) {\n                        tempLayer += \" data-latex=\\\"\".concat(keycap.latex, \"\\\"\");\n                      }\n\n                      if (keycap.aside) {\n                        tempLayer += \" data-aside=\\\"\".concat(keycap.aside, \"\\\"\");\n                      }\n\n                      if (keycap.altKeys) {\n                        tempLayer += \" data-alt-keys=\\\"\".concat(keycap.altKeys, \"\\\"\");\n                      }\n\n                      if (keycap.shifted) {\n                        tempLayer += \" data-shifted=\\\"\".concat(keycap.shifted, \"\\\"\");\n                      }\n\n                      if (keycap.shiftedCommand) {\n                        tempLayer += \" data-shifted-command=\\\"\".concat(keycap.shiftedCommand, \"\\\"\");\n                      }\n\n                      tempLayer += \">\".concat(keycap.label ? keycap.label : '', \"</li>\");\n                    }\n                  } catch (err) {\n                    _iterator59.e(err);\n                  } finally {\n                    _iterator59.f();\n                  }\n\n                  tempLayer += \"</ul>\";\n                }\n              } catch (err) {\n                _iterator58.e(err);\n              } finally {\n                _iterator58.f();\n              }\n\n              tempLayer += \"</div>\";\n            }\n\n            if (layer.container) {\n              tempLayer += '</div>';\n            }\n\n            if (layer.backdrop) {\n              tempLayer += '</div>';\n            }\n\n            layers[layerName] = tempLayer;\n          }\n\n          markup += \"<div tabindex=\\\"-1\\\" class='keyboard-layer' data-layer='\" + layerName + \"'>\";\n          markup += makeKeyboardToolbar(mf, keyboardIDs, keyboard);\n          const layerMarkup = layers[layerName]; // A layer can contain 'shortcuts' (i.e. <row> tags) that need to\n          // be expanded\n\n          markup += expandLayerMarkup(mf, layerMarkup);\n          markup += '</div>';\n        }\n      } catch (err) {\n        _iterator57.e(err);\n      } finally {\n        _iterator57.f();\n      }\n    }\n  } catch (err) {\n    _iterator56.e(err);\n  } finally {\n    _iterator56.f();\n  }\n\n  const result = new VirtualKeyboard(mf);\n  result.element.className = 'ML__keyboard';\n\n  if (theme) {\n    result.element.classList.add(theme);\n  } else if (mf.options.virtualKeyboardTheme) {\n    result.element.classList.add(mf.options.virtualKeyboardTheme);\n  }\n\n  result.element.innerHTML = mf.options.createHTML(markup); // Attach the element handlers\n\n  makeKeycap(mf, [].slice.call(result.element.querySelectorAll('.keycap, .action, .fnbutton, .bigfnbutton')));\n  const elList = result.element.getElementsByClassName('layer-switch');\n\n  for (let i = 0; i < elList.length; ++i) {\n    if (elList[i].classList.contains('shift')) {\n      // This is a potential press-and-hold layer switch\n      attachButtonHandlers(mf, elList[i], {\n        // When the modifier is initially pressed, we will shift the labels\n        // (if available)\n        pressed: ['shiftKeyboardLayer', 'shift'],\n        // If the key is released before a delay, we switch to the target layer\n        default: ['switchKeyboardLayer', elList[i].getAttribute('data-layer')],\n        // If the key is released after a longer delay, we restore the\n        // shifted labels\n        pressAndHoldEnd: 'unshiftKeyboardLayer'\n      });\n    } else {\n      // This is a simple layer switch\n      attachButtonHandlers(mf, elList[i], {\n        default: ['switchKeyboardLayer', elList[i].getAttribute('data-layer')]\n      });\n    }\n  } // Select the first keyboard as the initial one.\n\n\n  const layerElements = result.element.getElementsByClassName('keyboard-layer');\n  Array.from(layerElements).forEach(x => {\n    x.addEventListener('mousedown', evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    });\n    x.addEventListener('touchstart', evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    }, {\n      passive: false\n    });\n  });\n  layerElements[0].classList.add('is-visible');\n  return result;\n}\n\nfunction _hideAlternateKeys() {\n  const altContainer = document.getElementById('mathlive-alternate-keys-panel');\n\n  if (altContainer) {\n    altContainer.classList.remove('is-visible');\n    altContainer.innerHTML = '';\n    releaseSharedElement(altContainer);\n  }\n\n  return false;\n}\n/*\r\n * Restore the key labels and commands to the state before a modifier key\r\n * was pressed.\r\n *\r\n */\n\n\nfunction _unshiftKeyboardLayer(mathfield) {\n  var _a;\n\n  if (!isValidMathfield(mathfield)) return false;\n\n  _hideAlternateKeys();\n\n  const keycaps = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelectorAll('div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action');\n\n  if (keycaps) {\n    for (let i = 0; i < keycaps.length; i++) {\n      const keycap = keycaps[i];\n      const content = keycap.getAttribute('data-unshifted-content');\n\n      if (content) {\n        keycap.innerHTML = mathfield.options.createHTML(content);\n      }\n\n      const command = keycap.getAttribute('data-unshifted-command');\n\n      if (command) {\n        keycap.setAttribute('data-' + mathfield.options.namespace + 'command', command);\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction updateUndoRedoButtons(mathfield) {\n  var _a;\n\n  const virtualKeyboardToolbar = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelector('.keyboard-toolbar');\n\n  if (virtualKeyboardToolbar) {\n    const undoButton = virtualKeyboardToolbar.querySelector('[data-command=\\'\"undo\"\\']');\n    const redoButton = virtualKeyboardToolbar.querySelector('[data-command=\\'\"redo\"\\']');\n\n    if (mathfield.canRedo()) {\n      redoButton.classList.remove('disabled');\n    } else {\n      redoButton.classList.add('disabled');\n    }\n\n    if (mathfield.canUndo()) {\n      undoButton.classList.remove('disabled');\n    } else {\n      undoButton.classList.add('disabled');\n    }\n  }\n}\n/*\r\n * Alternate options are displayed when a key on the virtual keyboard is pressed\r\n * and held.\r\n *\r\n */\n\n\nregister$2({\n  showAlternateKeys: (mathfield, keycap, altKeys) => {\n    var _a, _b;\n\n    const altContainer = getSharedElement('mathlive-alternate-keys-panel', 'ML__keyboard alternate-keys');\n\n    if ((_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.classList.contains('material')) {\n      altContainer.classList.add('material');\n    }\n\n    if (altKeys.length >= 7) {\n      // Width 4\n      altContainer.style.width = '286px';\n    } else if (altKeys.length === 4 || altKeys.length === 2) {\n      // Width 2\n      altContainer.style.width = '146px';\n    } else if (altKeys.length === 1) {\n      // Width 1\n      altContainer.style.width = '86px';\n    } else {\n      // Width 3\n      altContainer.style.width = '146px';\n    } // Reset container height\n\n\n    altContainer.style.height = 'auto';\n    let markup = '';\n\n    var _iterator60 = _createForOfIteratorHelper(altKeys),\n        _step60;\n\n    try {\n      for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n        const altKey = _step60.value;\n        markup += '<li';\n\n        if (typeof altKey === 'string') {\n          markup += ' data-latex=\"' + altKey.replace(/\"/g, '&quot;') + '\"';\n        } else {\n          if (altKey.latex) {\n            markup += ' data-latex=\"' + altKey.latex.replace(/\"/g, '&quot;') + '\"';\n          }\n\n          if (altKey.content) {\n            markup += ' data-content=\"' + altKey.content.replace(/\"/g, '&quot;') + '\"';\n          }\n\n          if (altKey.insert) {\n            markup += ' data-insert=\"' + altKey.insert.replace(/\"/g, '&quot;') + '\"';\n          }\n\n          if (altKey.command) {\n            markup += \" data-command='\" + altKey.command.replace(/\"/g, '&quot;') + \"'\";\n          }\n\n          if (altKey.aside) {\n            markup += ' data-aside=\"' + altKey.aside.replace(/\"/g, '&quot;') + '\"';\n          }\n\n          if (altKey.classes) {\n            markup += ' data-classes=\"' + altKey.classes + '\"';\n          }\n        }\n\n        markup += '>';\n        markup += altKey.label || '';\n        markup += '</li>';\n      }\n    } catch (err) {\n      _iterator60.e(err);\n    } finally {\n      _iterator60.f();\n    }\n\n    markup = '<ul>' + markup + '</ul>';\n    altContainer.innerHTML = mathfield.options.createHTML(markup);\n    makeKeycap(mathfield, [].slice.call(altContainer.getElementsByTagName('li')), 'performAlternateKeys');\n    const keycapEl = (_b = mathfield.virtualKeyboard) === null || _b === void 0 ? void 0 : _b.element.querySelector('div.keyboard-layer.is-visible div.rows ul li[data-alt-keys=\"' + keycap + '\"]');\n    const position = keycapEl.getBoundingClientRect();\n\n    if (position) {\n      if (position.top - altContainer.clientHeight < 0) {\n        // altContainer.style.maxWidth = '320px';  // Up to six columns\n        altContainer.style.width = 'auto';\n\n        if (altKeys.length <= 6) {\n          altContainer.style.height = '56px'; // 1 row\n        } else if (altKeys.length <= 12) {\n          altContainer.style.height = '108px'; // 2 rows\n        } else {\n          altContainer.style.height = '205px'; // 3 rows\n        }\n      }\n\n      const top = (position.top - altContainer.clientHeight + 5).toString() + 'px';\n      const left = Math.max(0, Math.min(window.innerWidth - altContainer.offsetWidth, (position.left + position.right - altContainer.offsetWidth) / 2)) + 'px';\n      altContainer.style.transform = 'translate(' + left + ',' + top + ')';\n      altContainer.classList.add('is-visible');\n    }\n\n    return false;\n  }\n}, {\n  target: 'virtual-keyboard'\n});\n\nfunction _switchKeyboardLayer(mathfield, layer) {\n  var _a;\n\n  if (mathfield.options.virtualKeyboardMode !== 'off') {\n    if (layer !== 'lower-command' && layer !== 'upper-command' && layer !== 'symbols-command') {\n      // If we switch to a non-command keyboard layer, first exit command mode.\n      complete(mathfield);\n    }\n\n    _showVirtualKeyboard(mathfield); // If the alternate keys panel was visible, hide it\n\n\n    _hideAlternateKeys(); // If we were in a temporarily shifted state (shift-key held down)\n    // restore our state before switching to a new layer.\n\n\n    _unshiftKeyboardLayer(mathfield);\n\n    const layers = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.getElementsByClassName('keyboard-layer'); // Search for the requested layer\n\n    let found = false;\n\n    for (let i = 0; i < layers.length; i++) {\n      if (layers[i].dataset.layer === layer) {\n        found = true;\n        break;\n      }\n    } // We did find the layer, switch to it.\n    // If we didn't find it, do nothing and keep the current layer\n\n\n    if (found) {\n      for (let i = 0; i < layers.length; i++) {\n        if (layers[i].dataset.layer === layer) {\n          layers[i].classList.add('is-visible');\n        } else {\n          layers[i].classList.remove('is-visible');\n        }\n      }\n    }\n\n    mathfield.focus();\n  }\n\n  return true;\n}\n/*\r\n * Temporarily change the labels and the command of the keys\r\n * (for example when a modifier key is held down.)\r\n */\n\n\nregister$2({\n  shiftKeyboardLayer: mathfield => {\n    var _a;\n\n    const keycaps = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelectorAll('div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action');\n\n    if (keycaps) {\n      for (let i = 0; i < keycaps.length; i++) {\n        const keycap = keycaps[i];\n        let shiftedContent = keycap.getAttribute('data-shifted');\n\n        if (shiftedContent || /^[a-z]$/.test(keycap.innerHTML)) {\n          keycap.setAttribute('data-unshifted-content', keycap.innerHTML);\n\n          if (!shiftedContent) {\n            shiftedContent = keycap.innerHTML.toUpperCase();\n          }\n\n          keycap.innerHTML = mathfield.options.createHTML(shiftedContent);\n          const command = keycap.getAttribute('data-' + mathfield.options.namespace + 'command');\n\n          if (command) {\n            keycap.setAttribute('data-unshifted-command', command);\n            const shifteCommand = keycap.getAttribute('data-shifted-command');\n\n            if (shifteCommand) {\n              keycap.setAttribute('data-' + mathfield.options.namespace + 'command', shifteCommand);\n            } else {\n              const commandObj = JSON.parse(command);\n\n              if (isArray(commandObj)) {\n                commandObj[1] = commandObj[1].toUpperCase();\n              }\n\n              keycap.setAttribute('data-' + mathfield.options.namespace + 'command', JSON.stringify(commandObj));\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n}, {\n  target: 'virtual-keyboard'\n});\nregister$2({\n  hideAlternateKeys: () => _hideAlternateKeys(),\n\n  /*\r\n   * The command invoked when an alternate key is pressed.\r\n   * We need to hide the Alternate Keys panel, then perform the\r\n   * command.\r\n   */\n  performAlternateKeys: (mathfield, command) => {\n    _hideAlternateKeys();\n\n    return mathfield.executeCommand(command);\n  },\n  switchKeyboardLayer: (mathfield, layer) => _switchKeyboardLayer(mathfield, layer),\n  unshiftKeyboardLayer: mathfield => _unshiftKeyboardLayer(mathfield),\n  insertAndUnshiftKeyboardLayer: (mathfield, c) => {\n    mathfield.insert(c);\n\n    _unshiftKeyboardLayer(mathfield);\n\n    return true;\n  }\n}, {\n  target: 'virtual-keyboard'\n});\nregister$2({\n  /* Toggle the virtual keyboard, but switch to the alternate theme if available */\n  toggleVirtualKeyboardAlt: mathfield => {\n    var _a, _b;\n\n    let hadAltTheme = false;\n\n    if ((_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element) {\n      hadAltTheme = (_b = mathfield.virtualKeyboard) === null || _b === void 0 ? void 0 : _b.element.classList.contains('material');\n      mathfield.virtualKeyboard.dispose();\n      delete mathfield.virtualKeyboard;\n    }\n\n    _showVirtualKeyboard(mathfield, hadAltTheme ? '' : 'material');\n\n    return false;\n  },\n\n  /** Toggle the virtual keyboard, but switch another keyboard layout */\n  toggleVirtualKeyboardShift: mathfield => {\n    var _a, _b;\n\n    mathfield.options.virtualKeyboardLayout = {\n      qwerty: 'azerty',\n      azerty: 'qwertz',\n      qwertz: 'dvorak',\n      dvorak: 'colemak',\n      colemak: 'qwerty'\n    }[mathfield.options.virtualKeyboardLayout];\n    const layer = (_b = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelector('div.keyboard-layer.is-visible').id) !== null && _b !== void 0 ? _b : '';\n\n    if (mathfield.virtualKeyboard) {\n      mathfield.virtualKeyboard.dispose();\n      delete mathfield.virtualKeyboard;\n    }\n\n    _showVirtualKeyboard(mathfield);\n\n    if (layer) {\n      _switchKeyboardLayer(mathfield, layer);\n    }\n\n    return false;\n  }\n}, {\n  target: 'virtual-keyboard'\n});\n\nfunction _showVirtualKeyboard(mathfield, theme = '') {\n  mathfield.virtualKeyboardVisible = false;\n\n  _toggleVirtualKeyboard(mathfield, theme);\n\n  return false;\n}\n\nfunction _hideVirtualKeyboard(mathfield) {\n  mathfield.virtualKeyboardVisible = true;\n\n  _toggleVirtualKeyboard(mathfield);\n\n  return false;\n}\n\nfunction _toggleVirtualKeyboard(mathfield, theme) {\n  var _a, _b, _c;\n\n  mathfield.virtualKeyboardVisible = !mathfield.virtualKeyboardVisible;\n\n  if (mathfield.virtualKeyboardVisible) {\n    mathfield.focus();\n\n    if ((_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element) {\n      mathfield.virtualKeyboard.element.classList.add('is-visible');\n    } else {\n      // Construct the virtual keyboard\n      mathfield.virtualKeyboard = makeKeyboard(mathfield, theme); // Let's make sure that tapping on the keyboard focuses the field\n\n      on(mathfield.virtualKeyboard.element, 'touchstart:passive mousedown', () => {\n        mathfield.focus();\n      });\n      document.body.appendChild(mathfield.virtualKeyboard.element);\n    } // For the transition effect to work, the property has to be changed\n    // after the insertion in the DOM. Use setTimeout\n\n\n    window.setTimeout(() => {\n      var _a;\n\n      (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.classList.add('is-visible');\n    }, 1);\n  } else if ((_b = mathfield.virtualKeyboard) === null || _b === void 0 ? void 0 : _b.element) {\n    mathfield.virtualKeyboard.element.classList.remove('is-visible');\n  }\n\n  if (((_c = mathfield.virtualKeyboard) === null || _c === void 0 ? void 0 : _c.element) && typeof mathfield.options.onVirtualKeyboardToggle === 'function') {\n    mathfield.options.onVirtualKeyboardToggle(mathfield, mathfield.virtualKeyboardVisible, mathfield.virtualKeyboard.element);\n  }\n\n  return false;\n}\n\nregister$2({\n  toggleVirtualKeyboard: (mathfield, theme) => _toggleVirtualKeyboard(mathfield, theme),\n  hideVirtualKeyboard: mathfield => _hideVirtualKeyboard(mathfield),\n  showVirtualKeyboard: (mathfield, theme) => _showVirtualKeyboard(mathfield, theme)\n}, {\n  target: 'virtual-keyboard'\n});\nvar css_248z$1 = \"@-webkit-keyframes ML__caret-blink{0%,to{opacity:1}50%{opacity:0}}@keyframes ML__caret-blink{0%,to{opacity:1}50%{opacity:0}}.ML__caret:after{content:\\\"\\\";border:none;border-radius:2px;border-right:2px solid var(--caret,hsl(var(--hue,212),40%,49%));margin-right:-2px;position:relative;left:-1px;-webkit-animation:ML__caret-blink 1.05s step-end infinite forwards;animation:ML__caret-blink 1.05s step-end infinite forwards}.ML__text-caret:after{content:\\\"\\\";border:none;border-radius:1px;border-right:1px solid var(--caret,hsl(var(--hue,212),40%,49%));margin-right:-1px;position:relative;left:0;-webkit-animation:ML__caret-blink 1.05s step-end infinite forwards;animation:ML__caret-blink 1.05s step-end infinite forwards}.ML__command-caret:after{content:\\\"_\\\";border:none;margin-right:-1ex;position:relative;color:var(--caret,hsl(var(--hue,212),40%,49%));-webkit-animation:ML__caret-blink 1.05s step-end infinite forwards;animation:ML__caret-blink 1.05s step-end infinite forwards}.ML__fieldcontainer{display:flex;flex-flow:row;justify-content:space-between;align-items:flex-end;min-height:39px;touch-action:none;width:100%;--hue:212;--secondary:hsl(var(--hue,212),19%,26%);--on-secondary:hsl(var(--hue,212),19%,26%)}.ML__fieldcontainer__field{align-self:center;position:relative;overflow:hidden;line-height:0;padding:2px;width:100%}.ML__virtual-keyboard-toggle{display:flex;align-self:center;align-items:center;flex-shrink:0;flex-direction:column;justify-content:center;width:34px;height:34px;padding:0;margin-right:4px;cursor:pointer;box-sizing:border-box;border-radius:50%;border:1px solid transparent;transition:background .2s cubic-bezier(.64,.09,.08,1);color:var(--primary,hsl(var(--hue,212),40%,50%));fill:currentColor;background:transparent}.ML__virtual-keyboard-toggle:hover{background:hsl(var(--hue,212),25%,35%);color:#fafafa;fill:currentColor;border-radius:50%;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2)}.ML__popover{visibility:hidden;min-width:160px;background-color:rgba(97,97,97,.95);color:#fff;text-align:center;border-radius:6px;position:fixed;z-index:1;display:flex;flex-direction:column;justify-content:center;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);transition:all .2s cubic-bezier(.64,.09,.08,1)}.ML__popover:after{content:\\\"\\\";position:absolute;top:-5px;left:calc(50% - 3px);width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;font-size:1rem;border-bottom:5px solid rgba(97,97,97,.9)}.ML__popover--reverse-direction:after{top:auto;bottom:-5px;border-top:5px solid rgba(97,97,97,.9);border-bottom:0}.ML__textarea__textarea{transform:scale(0);resize:none;outline:none;border:none;position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;font-size:1em;font-family:KaTeX_Main}.ML__focused .ML__text{background:hsla(var(--hue,212),40%,50%,.1)}.ML__smart-fence__close{opacity:.5}.ML__selection{background:var(--highlight-inactive,#ccc);box-sizing:border-box}.ML__focused .ML__selection{background:var(--highlight,hsl(var(--hue,212),97%,85%))!important;color:var(--on-highlight)}.ML__contains-caret.ML__close,.ML__contains-caret.ML__open,.ML__contains-caret>.ML__close,.ML__contains-caret>.ML__open,.sqrt.ML__contains-caret>.sqrt-sign,.sqrt.ML__contains-caret>.vlist>span>.sqrt-line{color:var(--caret,hsl(var(--hue,212),40%,49%))}.ML__command{font-family:IBM Plex Mono,Source Code Pro,Consolas,Roboto Mono,Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Courier,monospace;letter-spacing:-1px;font-weight:400;line-height:1em;color:var(--primary,hsl(var(--hue,212),40%,50%))}:not(.ML__command)+.ML__command{margin-left:.25em}.ML__command+:not(.ML__command){padding-left:.25em}.ML__suggestion{opacity:.5}.ML__virtual-keyboard-toggle.pressed{background:hsla(0,0%,70%,.5)}.ML__virtual-keyboard-toggle:focus{outline:none;border-radius:50%;border:2px solid var(--primary,hsl(var(--hue,212),40%,50%))}.ML__virtual-keyboard-toggle.active,.ML__virtual-keyboard-toggle.active:hover{background:hsla(0,0%,70%,.5);color:#000;fill:currentColor}.ML__scroller{position:fixed;z-index:1;top:0;height:100vh;width:200px}[data-ML__tooltip]{position:relative}[data-ML__tooltip][data-placement=top]:after{top:inherit;bottom:100%}[data-ML__tooltip]:after{position:absolute;display:none;content:attr(data-ML__tooltip);top:110%;width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:200px;padding:8px;background:#616161;color:#fff;text-align:center;z-index:2;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2);border-radius:2px;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-weight:400;font-size:12px;opacity:0;transform:scale(.5);transition:all .15s cubic-bezier(.4,0,1,1)}@media only screen and (max-width:767px){[data-ML__tooltip]:after{padding:8px 16px;font-size:14px}}:not(.tracking) [data-ML__tooltip]:hover{position:relative}:not(.tracking) [data-ML__tooltip]:hover:after{visibility:visible;display:inline-table;opacity:1;transform:scale(1)}[data-ML__tooltip][data-delay]:after{transition-delay:0s}[data-ML__tooltip][data-delay]:hover:after{transition-delay:1s}\";\nvar css_248z$2 = \".ML__sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}body.ML__fonts-loading .ML__base{visibility:hidden}.ML__base{visibility:inherit;display:inline-block;position:relative;cursor:text}.ML__strut,.ML__strut--bottom{display:inline-block;min-height:.5em}.ML__small-delim{font-family:KaTeX_Main}.ML__text{font-family:var(--text-font-family,system-ui,-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",\\\"Roboto\\\",\\\"Oxygen\\\",\\\"Ubuntu\\\",\\\"Cantarell\\\",\\\"Fira Sans\\\",\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",sans-serif);white-space:pre}.ML__cmr{font-family:KaTeX_Main;font-style:normal}.ML__mathit{font-family:KaTeX_Math;font-style:italic}.ML__mathbf{font-family:KaTeX_Main;font-weight:700}.lcGreek.ML__mathbf{font-family:KaTeX_Math;font-weight:400}.ML__mathbfit{font-family:KaTeX_Math;font-weight:700;font-style:italic}.ML__ams,.ML__bb{font-family:KaTeX_AMS}.ML__cal{font-family:KaTeX_Caligraphic}.ML__frak{font-family:KaTeX_Fraktur}.ML__tt{font-family:KaTeX_Typewriter}.ML__script{font-family:KaTeX_Script}.ML__sans{font-family:KaTeX_SansSerif}.ML__series_el,.ML__series_ul{font-weight:100}.ML__series_l{font-weight:200}.ML__series_sl{font-weight:300}.ML__series_sb{font-weight:500}.ML__bold,.ML__boldsymbol{font-weight:700}.ML__series_eb{font-weight:800}.ML__series_ub{font-weight:900}.ML__series_uc{font-stretch:ultra-condensed}.ML__series_ec{font-stretch:extra-condensed}.ML__series_c{font-stretch:condensed}.ML__series_sc{font-stretch:semi-condensed}.ML__series_sx{font-stretch:semi-expanded}.ML__series_x{font-stretch:expanded}.ML__series_ex{font-stretch:extra-expanded}.ML__series_ux{font-stretch:ultra-expanded}.ML__it{font-style:italic}.ML__shape_ol{-webkit-text-stroke:1px #000;text-stroke:1px #000;color:transparent}.ML__shape_sc{font-variant:small-caps}.ML__shape_sl{font-style:oblique}.ML__emph{color:#bc2612}.ML__emph .ML__emph{color:#0c7f99}.ML__highlight{color:#007cb2;background:#edd1b0}.ML__mathlive{display:inline-block;line-height:0;direction:ltr;text-align:left;text-indent:0;text-rendering:auto;font-family:KaTeX_Main;font-style:normal;font-size-adjust:none;letter-spacing:normal;word-wrap:normal;word-spacing:normal;white-space:nowrap;text-shadow:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:-webkit-min-content;width:-moz-min-content;width:min-content;transform:translateZ(0)}.ML__mathlive .reset-textstyle.scriptstyle{font-size:.7em}.ML__mathlive .reset-textstyle.scriptscriptstyle{font-size:.5em}.ML__mathlive .reset-scriptstyle.textstyle{font-size:1.42857em}.ML__mathlive .reset-scriptstyle.scriptscriptstyle{font-size:.71429em}.ML__mathlive .reset-scriptscriptstyle.textstyle{font-size:2em}.ML__mathlive .reset-scriptscriptstyle.scriptstyle{font-size:1.4em}.ML__mathlive .style-wrap{position:relative}.ML__mathlive .vlist{display:inline-block}.ML__mathlive .vlist>span{display:block;height:0;position:relative;line-height:0}.ML__mathlive .vlist>span>span{display:inline-block}.ML__mathlive .msubsup{text-align:left}.ML__mathlive .mfrac>span{text-align:center}.ML__mathlive .mfrac .frac-line{width:100%}.ML__mathlive .mfrac .frac-line:after{content:\\\"\\\";display:block;margin-top:-.04em;min-height:.04em;background:currentColor;box-sizing:content-box;transform:translate(0)}.ML__mathlive .rspace.negativethinspace{margin-right:-.16667em}.ML__mathlive .rspace.thinspace{margin-right:.16667em}.ML__mathlive .rspace.negativemediumspace{margin-right:-.22222em}.ML__mathlive .rspace.mediumspace{margin-right:.22222em}.ML__mathlive .rspace.thickspace{margin-right:.27778em}.ML__mathlive .rspace.sixmuspace{margin-right:.333333em}.ML__mathlive .rspace.eightmuspace{margin-right:.444444em}.ML__mathlive .rspace.enspace{margin-right:.5em}.ML__mathlive .rspace.twelvemuspace{margin-right:.666667em}.ML__mathlive .rspace.quad{margin-right:1em}.ML__mathlive .rspace.qquad{margin-right:2em}.ML__mathlive .mspace{display:inline-block}.ML__mathlive .mspace.negativethinspace{margin-left:-.16667em}.ML__mathlive .mspace.thinspace{width:.16667em}.ML__mathlive .mspace.negativemediumspace{margin-left:-.22222em}.ML__mathlive .mspace.mediumspace{width:.22222em}.ML__mathlive .mspace.thickspace{width:.27778em}.ML__mathlive .mspace.sixmuspace{width:.333333em}.ML__mathlive .mspace.eightmuspace{width:.444444em}.ML__mathlive .mspace.enspace{width:.5em}.ML__mathlive .mspace.twelvemuspace{width:.666667em}.ML__mathlive .mspace.quad{width:1em}.ML__mathlive .mspace.qquad{width:2em}.ML__mathlive .llap,.ML__mathlive .rlap{width:0;position:relative}.ML__mathlive .llap>.inner,.ML__mathlive .rlap>.inner{position:absolute}.ML__mathlive .llap>.fix,.ML__mathlive .rlap>.fix{display:inline-block}.ML__mathlive .llap>.inner{right:0}.ML__mathlive .rlap>.inner{left:0}.ML__mathlive .rule{display:inline-block;border:0 solid;position:relative}.ML__mathlive .overline .overline-line,.ML__mathlive .underline .underline-line{width:100%}.ML__mathlive .overline .overline-line:before,.ML__mathlive .underline .underline-line:before{border-bottom-style:solid;border-bottom-width:.04em;content:\\\"\\\";display:block}.ML__mathlive .overline .overline-line:after,.ML__mathlive .underline .underline-line:after{border-bottom-style:solid;border-bottom-width:.04em;min-height:thin;content:\\\"\\\";display:block;margin-top:-1px}.ML__mathlive .stretchy{display:block;position:absolute;width:100%;left:0;overflow:hidden}.ML__mathlive .stretchy:after,.ML__mathlive .stretchy:before{content:\\\"\\\"}.ML__mathlive .stretchy svg{display:block;position:absolute;width:100%;height:inherit;fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1}.ML__mathlive .slice-1-of-2{left:0}.ML__mathlive .slice-1-of-2,.ML__mathlive .slice-2-of-2{display:inline-flex;position:absolute;width:50.2%;overflow:hidden}.ML__mathlive .slice-2-of-2{right:0}.ML__mathlive .slice-1-of-3{display:inline-flex;position:absolute;left:0;width:25.1%;overflow:hidden}.ML__mathlive .slice-2-of-3{display:inline-flex;position:absolute;left:25%;width:50%;overflow:hidden}.ML__mathlive .slice-3-of-3{display:inline-flex;position:absolute;right:0;width:25.1%;overflow:hidden}.ML__mathlive .slice-1-of-1{display:inline-flex;position:absolute;width:100%;left:0;overflow:hidden}.ML__mathlive .sqrt{display:inline-block}.ML__mathlive .sqrt>.sqrt-sign{font-family:KaTeX_Main;position:relative}.ML__mathlive .sqrt .sqrt-line{height:.04em;width:100%}.ML__mathlive .sqrt .sqrt-line:before{content:\\\"\\\";display:block;margin-top:-.04em;min-height:.04em;background:currentColor}.ML__mathlive .sqrt .sqrt-line:after{border-bottom-width:1px;content:\\\" \\\";display:block;margin-top:-.1em;transform:translate(0)}.ML__mathlive .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.ML__mathlive .fontsize-ensurer,.ML__mathlive .sizing{display:inline-block}.ML__mathlive .fontsize-ensurer.reset-size1.size1,.ML__mathlive .sizing.reset-size1.size1{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size1.size2,.ML__mathlive .sizing.reset-size1.size2{font-size:1.4em}.ML__mathlive .fontsize-ensurer.reset-size1.size3,.ML__mathlive .sizing.reset-size1.size3{font-size:1.6em}.ML__mathlive .fontsize-ensurer.reset-size1.size4,.ML__mathlive .sizing.reset-size1.size4{font-size:1.8em}.ML__mathlive .fontsize-ensurer.reset-size1.size5,.ML__mathlive .sizing.reset-size1.size5{font-size:2em}.ML__mathlive .fontsize-ensurer.reset-size1.size6,.ML__mathlive .sizing.reset-size1.size6{font-size:2.4em}.ML__mathlive .fontsize-ensurer.reset-size1.size7,.ML__mathlive .sizing.reset-size1.size7{font-size:2.88em}.ML__mathlive .fontsize-ensurer.reset-size1.size8,.ML__mathlive .sizing.reset-size1.size8{font-size:3.46em}.ML__mathlive .fontsize-ensurer.reset-size1.size9,.ML__mathlive .sizing.reset-size1.size9{font-size:4.14em}.ML__mathlive .fontsize-ensurer.reset-size1.size10,.ML__mathlive .sizing.reset-size1.size10{font-size:4.98em}.ML__mathlive .fontsize-ensurer.reset-size2.size1,.ML__mathlive .sizing.reset-size2.size1{font-size:.71428571em}.ML__mathlive .fontsize-ensurer.reset-size2.size2,.ML__mathlive .sizing.reset-size2.size2{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size2.size3,.ML__mathlive .sizing.reset-size2.size3{font-size:1.14285714em}.ML__mathlive .fontsize-ensurer.reset-size2.size4,.ML__mathlive .sizing.reset-size2.size4{font-size:1.28571429em}.ML__mathlive .fontsize-ensurer.reset-size2.size5,.ML__mathlive .sizing.reset-size2.size5{font-size:1.42857143em}.ML__mathlive .fontsize-ensurer.reset-size2.size6,.ML__mathlive .sizing.reset-size2.size6{font-size:1.71428571em}.ML__mathlive .fontsize-ensurer.reset-size2.size7,.ML__mathlive .sizing.reset-size2.size7{font-size:2.05714286em}.ML__mathlive .fontsize-ensurer.reset-size2.size8,.ML__mathlive .sizing.reset-size2.size8{font-size:2.47142857em}.ML__mathlive .fontsize-ensurer.reset-size2.size9,.ML__mathlive .sizing.reset-size2.size9{font-size:2.95714286em}.ML__mathlive .fontsize-ensurer.reset-size2.size10,.ML__mathlive .sizing.reset-size2.size10{font-size:3.55714286em}.ML__mathlive .fontsize-ensurer.reset-size3.size1,.ML__mathlive .sizing.reset-size3.size1{font-size:.625em}.ML__mathlive .fontsize-ensurer.reset-size3.size2,.ML__mathlive .sizing.reset-size3.size2{font-size:.875em}.ML__mathlive .fontsize-ensurer.reset-size3.size3,.ML__mathlive .sizing.reset-size3.size3{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size3.size4,.ML__mathlive .sizing.reset-size3.size4{font-size:1.125em}.ML__mathlive .fontsize-ensurer.reset-size3.size5,.ML__mathlive .sizing.reset-size3.size5{font-size:1.25em}.ML__mathlive .fontsize-ensurer.reset-size3.size6,.ML__mathlive .sizing.reset-size3.size6{font-size:1.5em}.ML__mathlive .fontsize-ensurer.reset-size3.size7,.ML__mathlive .sizing.reset-size3.size7{font-size:1.8em}.ML__mathlive .fontsize-ensurer.reset-size3.size8,.ML__mathlive .sizing.reset-size3.size8{font-size:2.1625em}.ML__mathlive .fontsize-ensurer.reset-size3.size9,.ML__mathlive .sizing.reset-size3.size9{font-size:2.5875em}.ML__mathlive .fontsize-ensurer.reset-size3.size10,.ML__mathlive .sizing.reset-size3.size10{font-size:3.1125em}.ML__mathlive .fontsize-ensurer.reset-size4.size1,.ML__mathlive .sizing.reset-size4.size1{font-size:.55555556em}.ML__mathlive .fontsize-ensurer.reset-size4.size2,.ML__mathlive .sizing.reset-size4.size2{font-size:.77777778em}.ML__mathlive .fontsize-ensurer.reset-size4.size3,.ML__mathlive .sizing.reset-size4.size3{font-size:.88888889em}.ML__mathlive .fontsize-ensurer.reset-size4.size4,.ML__mathlive .sizing.reset-size4.size4{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size4.size5,.ML__mathlive .sizing.reset-size4.size5{font-size:1.11111111em}.ML__mathlive .fontsize-ensurer.reset-size4.size6,.ML__mathlive .sizing.reset-size4.size6{font-size:1.33333333em}.ML__mathlive .fontsize-ensurer.reset-size4.size7,.ML__mathlive .sizing.reset-size4.size7{font-size:1.6em}.ML__mathlive .fontsize-ensurer.reset-size4.size8,.ML__mathlive .sizing.reset-size4.size8{font-size:1.92222222em}.ML__mathlive .fontsize-ensurer.reset-size4.size9,.ML__mathlive .sizing.reset-size4.size9{font-size:2.3em}.ML__mathlive .fontsize-ensurer.reset-size4.size10,.ML__mathlive .sizing.reset-size4.size10{font-size:2.76666667em}.ML__mathlive .fontsize-ensurer.reset-size5.size1,.ML__mathlive .sizing.reset-size5.size1{font-size:.5em}.ML__mathlive .fontsize-ensurer.reset-size5.size2,.ML__mathlive .sizing.reset-size5.size2{font-size:.7em}.ML__mathlive .fontsize-ensurer.reset-size5.size3,.ML__mathlive .sizing.reset-size5.size3{font-size:.8em}.ML__mathlive .fontsize-ensurer.reset-size5.size4,.ML__mathlive .sizing.reset-size5.size4{font-size:.9em}.ML__mathlive .fontsize-ensurer.reset-size5.size5,.ML__mathlive .sizing.reset-size5.size5{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size5.size6,.ML__mathlive .sizing.reset-size5.size6{font-size:1.2em}.ML__mathlive .fontsize-ensurer.reset-size5.size7,.ML__mathlive .sizing.reset-size5.size7{font-size:1.44em}.ML__mathlive .fontsize-ensurer.reset-size5.size8,.ML__mathlive .sizing.reset-size5.size8{font-size:1.73em}.ML__mathlive .fontsize-ensurer.reset-size5.size9,.ML__mathlive .sizing.reset-size5.size9{font-size:2.07em}.ML__mathlive .fontsize-ensurer.reset-size5.size10,.ML__mathlive .sizing.reset-size5.size10{font-size:2.49em}.ML__mathlive .fontsize-ensurer.reset-size6.size1,.ML__mathlive .sizing.reset-size6.size1{font-size:.41666667em}.ML__mathlive .fontsize-ensurer.reset-size6.size2,.ML__mathlive .sizing.reset-size6.size2{font-size:.58333333em}.ML__mathlive .fontsize-ensurer.reset-size6.size3,.ML__mathlive .sizing.reset-size6.size3{font-size:.66666667em}.ML__mathlive .fontsize-ensurer.reset-size6.size4,.ML__mathlive .sizing.reset-size6.size4{font-size:.75em}.ML__mathlive .fontsize-ensurer.reset-size6.size5,.ML__mathlive .sizing.reset-size6.size5{font-size:.83333333em}.ML__mathlive .fontsize-ensurer.reset-size6.size6,.ML__mathlive .sizing.reset-size6.size6{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size6.size7,.ML__mathlive .sizing.reset-size6.size7{font-size:1.2em}.ML__mathlive .fontsize-ensurer.reset-size6.size8,.ML__mathlive .sizing.reset-size6.size8{font-size:1.44166667em}.ML__mathlive .fontsize-ensurer.reset-size6.size9,.ML__mathlive .sizing.reset-size6.size9{font-size:1.725em}.ML__mathlive .fontsize-ensurer.reset-size6.size10,.ML__mathlive .sizing.reset-size6.size10{font-size:2.075em}.ML__mathlive .fontsize-ensurer.reset-size7.size1,.ML__mathlive .sizing.reset-size7.size1{font-size:.34722222em}.ML__mathlive .fontsize-ensurer.reset-size7.size2,.ML__mathlive .sizing.reset-size7.size2{font-size:.48611111em}.ML__mathlive .fontsize-ensurer.reset-size7.size3,.ML__mathlive .sizing.reset-size7.size3{font-size:.55555556em}.ML__mathlive .fontsize-ensurer.reset-size7.size4,.ML__mathlive .sizing.reset-size7.size4{font-size:.625em}.ML__mathlive .fontsize-ensurer.reset-size7.size5,.ML__mathlive .sizing.reset-size7.size5{font-size:.69444444em}.ML__mathlive .fontsize-ensurer.reset-size7.size6,.ML__mathlive .sizing.reset-size7.size6{font-size:.83333333em}.ML__mathlive .fontsize-ensurer.reset-size7.size7,.ML__mathlive .sizing.reset-size7.size7{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size7.size8,.ML__mathlive .sizing.reset-size7.size8{font-size:1.20138889em}.ML__mathlive .fontsize-ensurer.reset-size7.size9,.ML__mathlive .sizing.reset-size7.size9{font-size:1.4375em}.ML__mathlive .fontsize-ensurer.reset-size7.size10,.ML__mathlive .sizing.reset-size7.size10{font-size:1.72916667em}.ML__mathlive .fontsize-ensurer.reset-size8.size1,.ML__mathlive .sizing.reset-size8.size1{font-size:.28901734em}.ML__mathlive .fontsize-ensurer.reset-size8.size2,.ML__mathlive .sizing.reset-size8.size2{font-size:.40462428em}.ML__mathlive .fontsize-ensurer.reset-size8.size3,.ML__mathlive .sizing.reset-size8.size3{font-size:.46242775em}.ML__mathlive .fontsize-ensurer.reset-size8.size4,.ML__mathlive .sizing.reset-size8.size4{font-size:.52023121em}.ML__mathlive .fontsize-ensurer.reset-size8.size5,.ML__mathlive .sizing.reset-size8.size5{font-size:.57803468em}.ML__mathlive .fontsize-ensurer.reset-size8.size6,.ML__mathlive .sizing.reset-size8.size6{font-size:.69364162em}.ML__mathlive .fontsize-ensurer.reset-size8.size7,.ML__mathlive .sizing.reset-size8.size7{font-size:.83236994em}.ML__mathlive .fontsize-ensurer.reset-size8.size8,.ML__mathlive .sizing.reset-size8.size8{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size8.size9,.ML__mathlive .sizing.reset-size8.size9{font-size:1.19653179em}.ML__mathlive .fontsize-ensurer.reset-size8.size10,.ML__mathlive .sizing.reset-size8.size10{font-size:1.43930636em}.ML__mathlive .fontsize-ensurer.reset-size9.size1,.ML__mathlive .sizing.reset-size9.size1{font-size:.24154589em}.ML__mathlive .fontsize-ensurer.reset-size9.size2,.ML__mathlive .sizing.reset-size9.size2{font-size:.33816425em}.ML__mathlive .fontsize-ensurer.reset-size9.size3,.ML__mathlive .sizing.reset-size9.size3{font-size:.38647343em}.ML__mathlive .fontsize-ensurer.reset-size9.size4,.ML__mathlive .sizing.reset-size9.size4{font-size:.43478261em}.ML__mathlive .fontsize-ensurer.reset-size9.size5,.ML__mathlive .sizing.reset-size9.size5{font-size:.48309179em}.ML__mathlive .fontsize-ensurer.reset-size9.size6,.ML__mathlive .sizing.reset-size9.size6{font-size:.57971014em}.ML__mathlive .fontsize-ensurer.reset-size9.size7,.ML__mathlive .sizing.reset-size9.size7{font-size:.69565217em}.ML__mathlive .fontsize-ensurer.reset-size9.size8,.ML__mathlive .sizing.reset-size9.size8{font-size:.83574879em}.ML__mathlive .fontsize-ensurer.reset-size9.size9,.ML__mathlive .sizing.reset-size9.size9{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size9.size10,.ML__mathlive .sizing.reset-size9.size10{font-size:1.20289855em}.ML__mathlive .fontsize-ensurer.reset-size10.size1,.ML__mathlive .sizing.reset-size10.size1{font-size:.20080321em}.ML__mathlive .fontsize-ensurer.reset-size10.size2,.ML__mathlive .sizing.reset-size10.size2{font-size:.2811245em}.ML__mathlive .fontsize-ensurer.reset-size10.size3,.ML__mathlive .sizing.reset-size10.size3{font-size:.32128514em}.ML__mathlive .fontsize-ensurer.reset-size10.size4,.ML__mathlive .sizing.reset-size10.size4{font-size:.36144578em}.ML__mathlive .fontsize-ensurer.reset-size10.size5,.ML__mathlive .sizing.reset-size10.size5{font-size:.40160643em}.ML__mathlive .fontsize-ensurer.reset-size10.size6,.ML__mathlive .sizing.reset-size10.size6{font-size:.48192771em}.ML__mathlive .fontsize-ensurer.reset-size10.size7,.ML__mathlive .sizing.reset-size10.size7{font-size:.57831325em}.ML__mathlive .fontsize-ensurer.reset-size10.size8,.ML__mathlive .sizing.reset-size10.size8{font-size:.69477912em}.ML__mathlive .fontsize-ensurer.reset-size10.size9,.ML__mathlive .sizing.reset-size10.size9{font-size:.8313253em}.ML__mathlive .fontsize-ensurer.reset-size10.size10,.ML__mathlive .sizing.reset-size10.size10{font-size:1em}.ML__mathlive .delimsizing.size1{font-family:KaTeX_Size1}.ML__mathlive .delimsizing.size2{font-family:KaTeX_Size2}.ML__mathlive .delimsizing.size3{font-family:KaTeX_Size3}.ML__mathlive .delimsizing.size4{font-family:KaTeX_Size4}.ML__mathlive .delimsizing.mult .delim-size1{font-family:KaTeX_Size1;vertical-align:top}.ML__mathlive .delimsizing.mult .delim-size4{font-family:KaTeX_Size4;vertical-align:top}.ML__mathlive .nulldelimiter{width:.12em}.ML__mathlive .op-symbol{position:relative}.ML__mathlive .op-symbol.small-op{font-family:KaTeX_Size1}.ML__mathlive .op-symbol.large-op{font-family:KaTeX_Size2}.ML__mathlive .op-limits .vlist>span{text-align:center}.ML__mathlive .op-over-under{position:relative}.ML__mathlive .op-over-under>.vlist>span:first-child,.ML__mathlive .op-over-under>.vlist>span:last-child{text-align:center}.ML__mathlive .accent>.vlist>span{text-align:center}.ML__mathlive .accent .accent-body>span{font-family:KaTeX_Main;width:0}.ML__mathlive .accent .accent-body.accent-vec>span{position:relative;left:.326em}.ML__mathlive .mtable .vertical-separator{display:inline-block;margin:0 -.025em;border-right:.05em solid}.ML__mathlive .mtable .arraycolsep{display:inline-block}.ML__mathlive .mtable .col-align-m>.vlist{text-align:center}.ML__mathlive .mtable .col-align-c>.vlist{text-align:center}.ML__mathlive .mtable .col-align-l>.vlist{text-align:left}.ML__mathlive .mtable .col-align-r>.vlist{text-align:right}.ML__error{background-image:radial-gradient(ellipse at center,#cc0041,transparent 70%);background-repeat:repeat-x;background-size:3px 3px;background-position:0 98%}.ML__composition{background:#fff1c2;color:#000;-webkit-text-decoration:underline var(--caret,hsl(var(--hue,212),40%,49%));text-decoration:underline var(--caret,hsl(var(--hue,212),40%,49%))}@media (prefers-color-scheme:dark){.ML__composition{background:#69571c;color:#fff}}.ML__placeholder{opacity:.7;padding-left:.4ex;padding-right:.4ex;padding-top:.4ex}\";\nvar css_248z$3 = \"div.ML__popover.is-visible{visibility:inherit;-webkit-animation:ML__fade-in .15s cubic-bezier(0,0,.2,1);animation:ML__fade-in .15s cubic-bezier(0,0,.2,1)}@-webkit-keyframes ML__fade-in{0%{opacity:0}to{opacity:1}}@keyframes ML__fade-in{0%{opacity:0}to{opacity:1}}.ML__popover__content{border-radius:6px;padding:2px;cursor:pointer;min-height:100px;display:flex;flex-direction:column;justify-content:center;margin-left:8px;margin-right:8px}.ML__popover__content a{color:#5ea6fd;padding-top:.3em;margin-top:.4em;display:block}.ML__popover__content a:hover{color:#5ea6fd;text-decoration:underline}.ML__popover__content.active,.ML__popover__content.pressed,.ML__popover__content:hover{background:hsla(0,0%,100%,.1)}.ML__popover__command{font-size:1.6rem}.ML__popover__prev-shortcut{height:31px;opacity:.1;cursor:pointer;margin-left:8px;margin-right:8px;padding-top:4px;padding-bottom:2px}.ML__popover__next-shortcut:hover,.ML__popover__prev-shortcut:hover{opacity:.3}.ML__popover__next-shortcut.active,.ML__popover__next-shortcut.pressed,.ML__popover__prev-shortcut.active,.ML__popover__prev-shortcut.pressed{opacity:1}.ML__popover__next-shortcut>span,.ML__popover__prev-shortcut>span{padding:5px;border-radius:50%;width:20px;height:20px;display:inline-block}.ML__popover__prev-shortcut>span>span{margin-top:-2px;display:block}.ML__popover__next-shortcut>span>span{margin-top:2px;display:block}.ML__popover__next-shortcut:hover>span,.ML__popover__prev-shortcut:hover>span{background:hsla(0,0%,100%,.1)}.ML__popover__next-shortcut{height:34px;opacity:.1;cursor:pointer;margin-left:8px;margin-right:8px;padding-top:2px;padding-bottom:4px}.ML__popover__shortcut{font-size:.8em;margin-top:.25em}.ML__popover__note,.ML__popover__shortcut{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;opacity:.7;padding-top:.25em}.ML__popover__note{font-size:.8rem;line-height:1em;padding-left:.5em;padding-right:.5em}.ML__shortcut-join{opacity:.5}\";\nvar css_248z$4 = \".ML__keystroke-caption{visibility:hidden;background:var(--secondary);border-color:var(--secondary-border);box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);text-align:center;border-radius:6px;padding:16px;position:absolute;z-index:1;display:flex;flex-direction:row;justify-content:center;--keystroke:#fff;--on-keystroke:#555;--keystroke-border:#f7f7f7}@media (prefers-color-scheme:dark){body:not([theme=light]) .ML__keystroke-caption{--keystroke:hsl(var(--hue,212),50%,30%);--on-keystroke:#fafafa;--keystroke-border:hsl(var(--hue,212),50%,25%)}}body[theme=dark] .ML__keystroke-caption{--keystroke:hsl(var(--hue,212),50%,30%);--on-keystroke:#fafafa;--keystroke-border:hsl(var(--hue,212),50%,25%)}.ML__keystroke-caption>span{min-width:14px;margin:0 8px 0 0;padding:4px;background-color:var(--keystroke);color:var(--on-keystroke);fill:currentColor;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:1em;border-radius:6px;border:2px solid var(--keystroke-border)}\";\n/**\r\n * This module parses and outputs an Abstract Syntax Tree representing the\r\n * formula using the {@tutorial math-json | MathJSON } format.\r\n *\r\n * To use it, use the {@linkcode atomtoAST | atomtoAST()}  method.\r\n */\n// type MathJson =\n//     | string\n//     | number\n//     | boolean\n//     | null\n//     | { [property: string]: MathJson }\n//     | MathJson[];\n\nconst CANONICAL_NAMES = {\n  // CONSTANTS\n  '\\\\imaginaryI': '\\u2148',\n  '\\\\imaginaryJ': '\\u2149',\n  '\\\\pi': 'π',\n  '\\\\exponentialE': '\\u212f',\n  // ARITHMETIC\n  '﹢': '+',\n  '＋': '+',\n  '−': '-',\n  '-': '-',\n  '﹣': '-',\n  '－': '-',\n  '\\\\times': '*',\n  '\\\\cdot': '*',\n  '⨉': '*',\n  '️✖': '*',\n  '️×': '*',\n  '.': '*',\n  '÷': '/',\n  // '/':             '/',        // SOLIDUS\n  '⁄': '/',\n  '／': '/',\n  '!': 'factorial',\n  '\\\\mp': 'minusplus',\n  '\\\\ne': '!=',\n  '\\\\coloneq': ':=',\n  '\\\\questeq': '?=',\n  '\\\\approx': 'approx',\n  '\\\\cong': 'congruent',\n  '\\\\sim': 'similar',\n  '\\\\equiv': 'equiv',\n  '\\\\pm': 'plusminus',\n  '\\\\land': 'and',\n  '\\\\wedge': 'and',\n  '\\\\lor': 'or',\n  '\\\\vee': 'or',\n  '\\\\oplus': 'xor',\n  '\\\\veebar': 'xor',\n  '\\\\lnot': 'not',\n  '\\\\neg': 'not',\n  '\\\\exists': 'exists',\n  '\\\\nexists': '!exists',\n  '\\\\forall': 'forAll',\n  '\\\\backepsilon': 'suchThat',\n  '\\\\therefore': 'therefore',\n  '\\\\because': 'because',\n  '\\\\nabla': 'nabla',\n  '\\\\circ': 'circle',\n  // '\\\\oplus':       'oplus',\n  '\\\\ominus': 'ominus',\n  '\\\\odot': 'odot',\n  '\\\\otimes': 'otimes',\n  '\\\\zeta': 'Zeta',\n  '\\\\Gamma': 'Gamma',\n  '\\\\min': 'min',\n  '\\\\max': 'max',\n  '\\\\mod': 'mod',\n  '\\\\lim': 'lim',\n  '\\\\sum': 'sum',\n  '\\\\prod': 'prod',\n  '\\\\int': 'integral',\n  '\\\\iint': 'integral2',\n  '\\\\iiint': 'integral3',\n  '\\\\Re': 'Re',\n  '\\\\gothicCapitalR': 'Re',\n  '\\\\Im': 'Im',\n  '\\\\gothicCapitalI': 'Im',\n  '\\\\binom': 'nCr',\n  '\\\\partial': 'partial',\n  '\\\\differentialD': 'differentialD',\n  '\\\\capitalDifferentialD': 'capitalDifferentialD',\n  '\\\\Finv': 'Finv',\n  '\\\\Game': 'Game',\n  '\\\\wp': 'wp',\n  '\\\\ast': 'ast',\n  '\\\\star': 'star',\n  '\\\\asymp': 'asymp',\n  // Function domain, limits\n  '\\\\to': 'to',\n  '\\\\gets': 'gets',\n  // Sets\n  '\\\\in': 'elementof',\n  '\\\\notin': '!elementof',\n  '\\\\ni': 'ownedby',\n  '\\\\owns': 'ownedby',\n  '\\\\subset': 'subset',\n  '\\\\supset': 'superset',\n  '\\\\complement': 'complement',\n  // Logic\n  '\\\\rightarrow': 'shortLogicalImplies',\n  '\\\\leftarrow': 'shortLogicalImpliedBy',\n  '\\\\leftrightarrow': 'shortLogicalEquivalent',\n  '\\\\longrightarrow': 'logicalImplies',\n  '\\\\longleftarrow': 'logicalImpliedBy',\n  '\\\\longleftrightarrow': 'logicalEquivalent',\n  // Metalogic\n  '\\\\Rightarrow': 'shortImplies',\n  '\\\\Leftarrow': 'shortImpliedBy',\n  '\\\\Leftrightarrow': 'shortEquivalent',\n  '\\\\implies': 'implies',\n  '\\\\Longrightarrow': 'implies',\n  '\\\\impliedby': 'impliedBy',\n  '\\\\Longleftarrow': 'impliedBy',\n  '\\\\iff': 'equivalent',\n  '\\\\Longleftrightarrow': 'equivalent'\n}; // The OP_NAME table maps a canonical name to a function name\n\nconst OP_NAME = {\n  '+': 'add',\n  '*': 'multiply',\n  '-': 'subtract',\n  '/': 'divide',\n  '=': 'equal',\n  ':=': 'assign',\n  '!=': 'ne',\n  '?=': 'questeq',\n  approx: 'approx',\n  congruent: 'congruent',\n  similar: 'similar',\n  equiv: 'equiv',\n  '<': 'lt',\n  '>': 'gt',\n  '<=': 'le',\n  '>=': 'ge',\n  '≤': 'le',\n  '≥': 'ge',\n  '>>': 'gg',\n  '<<': 'll',\n  '**': 'pow',\n  '++': 'increment',\n  '--': 'decrement'\n}; // The FUNCTION_TEMPLATE table maps a canonical name to a LaTeX template\n\nconst FUNCTION_TEMPLATE = {\n  equal: '%0 = %1',\n  ne: '%0 \\\\ne %1',\n  questeq: '%0 \\\\questeq %1',\n  approx: '%0 \\\\approx %1',\n  congruent: '%0 \\\\cong %1',\n  similar: '%0 \\\\sim %1',\n  equiv: '%0 \\\\equiv %1',\n  assign: '%0 := %1',\n  lt: '%0 < %1',\n  gt: '%0 > %1',\n  le: '%0 \\\\le %1',\n  ge: '%0 \\\\ge %1',\n  // TRIGONOMETRY\n  sin: '\\\\sin%_%^ %0',\n  cos: '\\\\cos%_%^ %0',\n  tan: '\\\\tan%_%^ %0',\n  cot: '\\\\cot%_%^ %0',\n  sec: '\\\\sec%_%^ %0',\n  csc: '\\\\csc%_%^ %0',\n  sinh: '\\\\sinh %0',\n  cosh: '\\\\cosh %0',\n  tanh: '\\\\tanh %0',\n  csch: '\\\\csch %0',\n  sech: '\\\\sech %0',\n  coth: '\\\\coth %0',\n  arcsin: '\\\\arcsin %0',\n  arccos: '\\\\arccos %0',\n  arctan: '\\\\arctan %0',\n  arccot: '\\\\arcctg %0',\n  arcsec: '\\\\arcsec %0',\n  arccsc: '\\\\arccsc %0',\n  arsinh: '\\\\arsinh %0',\n  arcosh: '\\\\arcosh %0',\n  artanh: '\\\\artanh %0',\n  arcsch: '\\\\arcsch %0',\n  arsech: '\\\\arsech %0',\n  arcoth: '\\\\arcoth %0',\n  // LOGARITHMS\n  ln: '\\\\ln%_%^ %',\n  log: '\\\\log%_%^ %',\n  lg: '\\\\lg %',\n  lb: '\\\\lb %',\n  // Big operator\n  sum: '\\\\sum%_%^ %0',\n  prod: '\\\\prod%_%^ %0',\n  // OTHER\n  Zeta: '\\\\zeta%_%^ %',\n  Gamma: '\\\\Gamma %',\n  min: '\\\\min%_%^ %',\n  max: '\\\\max%_%^ %',\n  mod: '\\\\mod%_%^ %',\n  lim: '\\\\lim%_%^ %',\n  binom: '\\\\binom %',\n  nabla: '\\\\nabla %',\n  curl: '\\\\nabla\\\\times %0',\n  div: '\\\\nabla\\\\cdot %0',\n  floor: '\\\\lfloor %0 \\\\rfloor%_%^',\n  ceil: '\\\\lceil %0 \\\\rceil%_%^',\n  abs: '\\\\left| %0 \\\\right|%_%^',\n  norm: '\\\\lVert %0 \\\\rVert%_%^',\n  ucorner: '\\\\ulcorner %0 \\\\urcorner%_%^',\n  lcorner: '\\\\llcorner %0 \\\\lrcorner%_%^',\n  angle: '\\\\langle %0 \\\\rangle%_%^',\n  group: '\\\\lgroup %0 \\\\rgroup%_%^',\n  moustache: '\\\\lmoustache %0 \\\\rmoustache%_%^',\n  brace: '\\\\lbrace %0 \\\\rbrace%_%^',\n  'sqrt[]': '\\\\sqrt[%^]{%0}',\n  sqrt: '\\\\sqrt{%0}',\n  lcm: '\\\\operatorname{lcm}%',\n  gcd: '\\\\operatorname{gcd}%',\n  erf: '\\\\operatorname{erf}%',\n  erfc: '\\\\operatorname{erfc}%',\n  randomReal: '\\\\operatorname{randomReal}%',\n  randomInteger: '\\\\operatorname{randomInteger}%',\n  // Logic operators\n  and: '%0 \\\\land %1',\n  or: '%0 \\\\lor %1',\n  xor: '%0 \\\\oplus %1',\n  not: '%0 \\\\lnot %1',\n  // Other operators\n  circle: '%0 \\\\circ %1',\n  ast: '%0 \\\\ast %1',\n  star: '%0 \\\\star %1',\n  asymp: '%0 \\\\asymp %1',\n  '/': '\\\\frac{%0}{%1}',\n  Re: '\\\\Re{%0}',\n  Im: '\\\\Im{%0}',\n  factorial: '%0!',\n  factorial2: '%0!!'\n}; // From www.w3.org/TR/MathML3/appendixc.html\n// The keys of OP_PRECEDENCE are \"canonical names\"\n// (the values of the CANONICAL_NAMES table above, e.g. \"?=\")\n// Those are different from the latex names (e.g. \\\\questeq)\n// and from the function names (e.g. \"questeq\")\n\nconst OP_PRECEDENCE = {\n  degree: 880,\n  nabla: 740,\n  curl: 740,\n  partial: 740,\n  differentialD: 740,\n  capitalDifferentialD: 740,\n  '**': 720,\n  odot: 710,\n  // Logical not\n  not: 680,\n  // Division\n  div: 660,\n  solidus: 660,\n  '/': 660,\n  setminus: 650,\n  '%': 640,\n  otimes: 410,\n  // Set operators\n  union: 350,\n  intersection: 350,\n  // Multiplication, division and modulo\n  '*': 390,\n  ast: 390,\n  '.': 390,\n  oplus: 300,\n  ominus: 300,\n  // Addition\n  '+': 275,\n  '-': 275,\n  '+-': 275,\n  '-+': 275,\n  // Most circled-ops are 265\n  circle: 265,\n  circledast: 265,\n  circledcirc: 265,\n  star: 265,\n  // Range\n  '..': 263,\n  // Unit conversion\n  to: 262,\n  in: 262,\n  '|': 261,\n  // Relational\n  congruent: 265,\n  equiv: 260,\n  '=': 260,\n  '!=': 255,\n  '?=': 255,\n  similar: 250,\n  approx: 247,\n  '<': 245,\n  '>': 243,\n  '>=': 242,\n  '≥': 242,\n  '<=': 241,\n  // Set operator\n  complement: 240,\n  subset: 240,\n  superset: 240,\n  // @todo and equality and neg operators\n  elementof: 240,\n  '!elementof': 240,\n  //\n  exists: 230,\n  '!exists': 230,\n  forall: 230,\n  // Logical operators\n  and: 200,\n  xor: 195,\n  or: 190,\n  // Note: 'not' is 680\n  // center, low, diag, vert ellipsis         150\n  // Composition/sequence\n  suchThat: 110,\n  ':': 100,\n  // '..':               100,\n  // '...':               100,\n  // Conditional (?:)\n  // Assignment\n  assign: 80,\n  ':=': 80,\n  therefore: 70,\n  because: 70,\n  // Arrows\n  // Note: MathML had 270 for the arrows, but this\n  // would not work for (a = b => b = a)\n  // See also https://en.wikipedia.org/wiki/Logical_connective#Order_of_precedence\n  // for a suggested precedence (note that in this page lower precedence\n  // has the opposite meaning as what we use)\n  shortLogicalImplies: 52,\n  shortImplies: 51,\n  logicalImplies: 50,\n  implies: 49,\n  shortLogicalImpliedBy: 48,\n  shortImpliedBy: 47,\n  logicalImpliedBy: 46,\n  impliedBy: 45,\n  shortLogicalEquivalent: 44,\n  shortEquivalent: 43,\n  logicalEquivalent: 42,\n  equivalent: 41,\n  ',': 40,\n  ';': 30\n};\n\nfunction getArg(ast, index) {\n  return isArray(ast.arg) ? ast.arg[index] : undefined;\n}\n/**\r\n * Given a canonical name, return its precedence\r\n * @param canonicalName, for example \"and\"\r\n */\n\n\nfunction getPrecedence(canonicalName) {\n  return canonicalName ? OP_PRECEDENCE[canonicalName] || -1 : -1;\n}\n\nfunction getAssociativity(canonicalName) {\n  if (/=|=>/.test(canonicalName)) {\n    return 'right';\n  }\n\n  return 'left';\n}\n/**\r\n *\r\n * @param name - function canonical name\r\n */\n\n\nfunction getLatexTemplateForFunction(name) {\n  let result = FUNCTION_TEMPLATE[name];\n\n  if (!result) {\n    result = name.length > 1 ? '\\\\operatorname{' + name + '}%^%_ %' : name + '%^%_ %';\n  }\n\n  return result;\n}\n/**\r\n *\r\n * @param name symbol name, e.g. \"alpha\"\r\n */\n\n\nfunction getLatexForSymbol(name) {\n  let result = FUNCTION_TEMPLATE[name];\n\n  if (result) {\n    return result.replace('%1', '').replace('%0', '').replace('%', '');\n  }\n\n  if (name.length > 1) {\n    result = '\\\\' + name;\n  }\n\n  if (!result) {\n    result = unicodeStringToLatex('math', name);\n  }\n\n  return result;\n}\n\nfunction isFunction$1(canonicalName) {\n  if (canonicalName === 'f' || canonicalName === 'g') return true;\n  const t = FUNCTION_TEMPLATE[canonicalName];\n  if (!t) return false; // A plain \"%\" is a placeholder for an argument list, indicating a function\n\n  if (/%[^01_^]?/.test(t)) return true;\n  return false;\n}\n/**\r\n *\r\n * @param latex, for example '\\\\times'\r\n * @retur the canonical name for the input, for example '*'\r\n */\n\n\nfunction getCanonicalName(latex) {\n  latex = (latex || '').trim();\n  let result = CANONICAL_NAMES[latex];\n\n  if (!result) {\n    if (/^\\\\[^{}]+$/.test(latex)) {\n      const info = getInfo(latex, 'math', {});\n\n      if (info) {\n        result = info.value || latex.slice(1);\n      } else {\n        result = latex.slice(1);\n      }\n    } else {\n      result = latex;\n    }\n  }\n\n  return result;\n}\n/**\r\n * Return the operator precedence of the atom\r\n * or null if not an operator\r\n */\n\n\nfunction opPrec(atom) {\n  if (!atom) return null;\n  const name = getCanonicalName(getString(atom));\n  const result = [getPrecedence(name), getAssociativity(name)];\n  if (result[0] <= 0) return null;\n  return result;\n}\n\nfunction isOperator(atom) {\n  return opPrec(atom) !== null;\n}\n\nconst DELIM_FUNCTION = {\n  '\\\\lfloor\\\\rfloor': 'floor',\n  '\\\\lceil\\\\rceil': 'ceil',\n  '\\\\vert\\\\vert': 'abs',\n  '\\\\lvert\\\\rvert': 'abs',\n  '||': 'abs',\n  '\\\\Vert\\\\Vert': 'norm',\n  '\\\\lVert\\\\rVert': 'norm',\n  '\\\\ulcorner\\\\urcorner': 'ucorner',\n  '\\\\llcorner\\\\lrcorner': 'lcorner',\n  '\\\\langle\\\\rangle': 'angle',\n  '\\\\lgroup\\\\rgroup': 'group',\n  '\\\\lmoustache\\\\rmoustache': 'moustache',\n  '\\\\lbrace\\\\rbrace': 'brace'\n};\nconst POSTFIX_FUNCTION = {\n  '!': 'factorial',\n  '\\\\dag': 'dagger',\n  '\\\\dagger': 'dagger',\n  '\\\\ddagger': 'dagger2',\n  '\\\\maltese': 'maltese',\n  '\\\\backprime': 'backprime',\n  '\\\\backdoubleprime': 'backprime2',\n  '\\\\prime': 'prime',\n  '\\\\doubleprime': 'prime2',\n  '\\\\$': '$',\n  '\\\\%': '%',\n  '\\\\_': '_',\n  '\\\\degree': 'degree'\n};\nconst ASSOCIATIVE_FUNCTION = {\n  '+': 'add',\n  '-': 'add',\n  // handled specifically so that the\n  // argument is negated\n  '*': 'multiply',\n  '=': 'equal',\n  ',': 'list',\n  ';': 'list2',\n  and: 'and',\n  or: 'or',\n  xor: 'xor',\n  union: 'union',\n  // shortLogicalEquivalent and logicalEquivalent map to the same function\n  // they mean the same thing, but have a difference precedence.\n  shortLogicalEquivalent: 'logicalEquivalent',\n  logicalEquivalent: 'logicalEquivalent',\n  // shortEquivalent and equivalent map to the same function\n  // they mean the same thing, but have a difference precedence.\n  shortEquivalent: 'equivalent',\n  equivalent: 'equivalent'\n};\nconst SUPER_ASSOCIATIVE_FUNCTION = {\n  ',': 'list',\n  ';': 'list2'\n};\n\nfunction getString(atom) {\n  if (typeof atom === 'string') return atom;\n\n  if (isArray(atom)) {\n    let result = '';\n\n    var _iterator61 = _createForOfIteratorHelper(atom),\n        _step61;\n\n    try {\n      for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n        const subAtom = _step61.value;\n        result += getString(subAtom);\n      }\n    } catch (err) {\n      _iterator61.e(err);\n    } finally {\n      _iterator61.f();\n    }\n\n    return result;\n  }\n\n  if (atom.symbol && !/^\\\\math(op|bin|rel|open|punct|ord|inner)/.test(atom.symbol)) {\n    return atom.symbol;\n  }\n\n  if (atom.type === 'leftright') {\n    return '';\n  }\n\n  if (typeof atom.body === 'string') {\n    return atom.body;\n  }\n\n  if (isArray(atom.body)) {\n    let result = '';\n\n    var _iterator62 = _createForOfIteratorHelper(atom.body),\n        _step62;\n\n    try {\n      for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n        const subAtom = _step62.value;\n        result += getString(subAtom);\n      }\n    } catch (err) {\n      _iterator62.e(err);\n    } finally {\n      _iterator62.f();\n    }\n\n    return result;\n  }\n\n  return '';\n}\n/**\r\n *\r\n * @param {object} expr - Abstract Syntax Tree object\r\n * @return A string, the symbol, or undefined\r\n */\n\n\nfunction asSymbol(node) {\n  return typeof node.sym === 'string' ? getLatexForSymbol(node.sym) || node.sym : '';\n}\n/**\r\n *\r\n * @param {object} node - Abstract Syntax Tree node\r\n * @return A JavaScript number, the value of the AST or NaN\r\n */\n\n\nfunction asMachineNumber(node) {\n  return parseFloat(node.num);\n}\n\nfunction isNumber$1(node) {\n  return typeof node === 'object' && typeof node.num !== 'undefined';\n}\n\nfunction numberRe(node) {\n  let result = 0;\n\n  if (isNumber$1(node)) {\n    if (typeof node.num === 'object') {\n      result = typeof node.num.re !== 'undefined' ? parseFloatToPrecision(node.num.re) : 0;\n    } else {\n      result = parseFloat(node.num);\n    }\n  }\n\n  return result;\n}\n\nfunction numberIm(node) {\n  let result = 0;\n\n  if (isNumber$1(node)) {\n    if (typeof node.num === 'object') {\n      result = typeof node.num.im !== 'undefined' ? parseFloatToPrecision(node.num.im) : 0;\n    }\n  }\n\n  return result;\n}\n\nfunction isComplexWithRealAndImaginary(node) {\n  return numberRe(node) !== 0 && numberIm(node) !== 0;\n}\n\nfunction hasSup(node) {\n  return node && typeof node.sup !== 'undefined';\n}\n\nfunction hasSub(node) {\n  return node && typeof node.sub !== 'undefined';\n}\n/**\r\n * Return true if the current atom is of the specified type and value.\r\n */\n\n\nfunction isAtom(expr, type, value) {\n  let result = false;\n  const atom = expr.atoms[expr.index];\n\n  if (atom && atom.type === type) {\n    if (typeof value === 'undefined') {\n      result = true;\n    } else {\n      result = getString(atom) === value;\n    }\n  }\n\n  return result;\n}\n\nfunction wrapFn(functionName, ...params) {\n  const result = {\n    fn: functionName,\n    arg: undefined\n  };\n\n  if (params) {\n    const args = [];\n\n    var _iterator63 = _createForOfIteratorHelper(params),\n        _step63;\n\n    try {\n      for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n        const arg = _step63.value;\n        if (arg) args.push(arg);\n      }\n    } catch (err) {\n      _iterator63.e(err);\n    } finally {\n      _iterator63.f();\n    }\n\n    if (args.length > 0) result.arg = args;\n  }\n\n  return result;\n}\n\nfunction wrapNum(num) {\n  if (typeof num === 'number') {\n    return {\n      num: num.toString()\n    };\n  } else if (typeof num === 'string') {\n    return {\n      num: num\n    };\n  } else if (typeof num === 'object') {\n    // This is a complex number\n    console.assert(typeof num['re'] === 'string' || typeof num['im'] === 'string');\n    return {\n      num: num\n    };\n  }\n\n  return undefined;\n}\n/**\r\n * Return the negative of the expression. Usually { fn:'negate', arg }\r\n * but for numbers, the negated number\r\n * @param {object} node\r\n * @private\r\n */\n\n\nfunction negate(node) {\n  if (isNumber$1(node)) {\n    const re = numberRe(node);\n    const im = numberIm(node);\n\n    if (im !== 0) {\n      if (re !== 0) {\n        node.num.re = (-re).toString();\n      }\n\n      node.num.im = (-im).toString();\n    } else {\n      node.num = (-re).toString();\n    }\n\n    return node;\n  }\n\n  return wrapFn('negate', node);\n}\n\nfunction nextIsSupsub(expr) {\n  const atom = expr.atoms[expr.index + 1];\n  return atom && atom.type === 'msubsup';\n}\n/**\r\n * Parse for a possible sup/sub attached directly to the current atom\r\n * or to a following 'msubsup' atom.\r\n * After the call, the index points to the next atom to process.\r\n * @param {object} expr\r\n * @private\r\n */\n\n\nfunction parseSupsub(expr, options) {\n  let atom = expr.atoms[expr.index]; // Is there a supsub directly on this atom?\n\n  if (atom && (typeof atom.superscript !== 'undefined' || typeof atom.subscript !== 'undefined')) {\n    // Move to the following atom\n    expr.index += 1;\n  } else {\n    atom = null;\n  } // If this atom didn't have a sup/sub,\n  // is the following atom a subsup atom?\n\n\n  if (!atom) {\n    atom = expr.atoms[expr.index + 1];\n\n    if (!atom || atom.type !== 'msubsup' || !(atom.superscript || atom.subscript)) {\n      atom = null;\n    } else {\n      // Yes. Skip the current atom and the supsub\n      expr.index += 2;\n    }\n  }\n\n  if (atom) {\n    if (typeof atom.subscript !== 'undefined') {\n      expr.ast.sub = parse$1(atom.subscript, options);\n    }\n\n    if (typeof atom.superscript !== 'undefined') {\n      if (atom.type === 'msubsup') {\n        if (/['\\u2032]|\\\\prime/.test(getString(atom.superscript))) {\n          expr.index += 1;\n          atom = expr.atoms[expr.index + 1];\n\n          if (atom && atom.type === 'msubsup' && /['\\u2032]|\\\\prime/.test(getString(atom.superscript))) {\n            expr.ast.sup = {\n              sym: '\\u2033'\n            }; // DOUBLE-PRIME\n          } else {\n            expr.ast.sup = {\n              sym: '\\u2032'\n            }; // PRIME\n\n            expr.index -= 1;\n          }\n        } else if (/['\\u2033]|\\\\doubleprime/.test(getString(atom.superscript))) {\n          expr.ast.sup = {\n            sym: '\\u2033'\n          }; // DOUBLE-PRIME\n        } else if (expr.ast) {\n          expr.ast.sup = parse$1(atom.superscript, options);\n        }\n      } else {\n        expr.ast.sup = parse$1(atom.superscript, options);\n      }\n    }\n  } else {\n    // Didn't find a supsup either on this atom and there was no 'msubsup'\n    // Time to move on to the next atom.\n    expr.index += 1;\n  }\n\n  return expr;\n}\n/**\r\n * Parse postfix operators, such as \"!\" (factorial)\r\n * @private\r\n */\n\n\nfunction parsePostfix(expr, options) {\n  const lhs = expr.ast;\n\n  if (nextIsDigraph(expr, '!!')) {\n    expr.index += 1;\n    expr.ast = wrapFn('factorial2', lhs);\n    expr = parseSupsub(expr, options);\n    expr = parsePostfix(expr, options);\n    return expr;\n  }\n\n  if (nextIsDigraph(expr, '++')) {\n    expr.index += 1;\n    expr.ast = wrapFn('increment', lhs);\n    expr = parseSupsub(expr, options);\n    expr = parsePostfix(expr, options);\n    return expr;\n  }\n\n  if (nextIsDigraph(expr, '--')) {\n    expr.index += 1;\n    expr.ast = wrapFn('decrement', lhs);\n    expr = parseSupsub(expr, options);\n    expr = parsePostfix(expr, options);\n    return expr;\n  }\n\n  const atom = expr.atoms[expr.index];\n\n  if ((atom === null || atom === void 0 ? void 0 : atom.symbol) && POSTFIX_FUNCTION[atom.symbol]) {\n    expr.ast = wrapFn(POSTFIX_FUNCTION[atom.symbol], lhs);\n    expr = parseSupsub(expr, options);\n    expr = parsePostfix(expr, options);\n  }\n\n  return expr;\n}\n/**\r\n * Delimiters can be expressed:\r\n * - as a matching pair of regular characters: '(a)'\r\n * - a as 'leftright' expression: '\\left(a\\right)'\r\n * - as a matching pair of 'sizeddelim': '\\Bigl(a\\Bigr)\r\n *\r\n * Note that the '\\delim' command is only used for delimiters in the middle\r\n * of a \\left\\right pair and not to represent pair-matched delimiters.\r\n *\r\n * This function handles all three cases\r\n */\n\n\nfunction parseDelim(expr, ldelim, rdelim, options) {\n  expr.index = expr.index || 0;\n\n  if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) {\n    expr.ast = undefined;\n    return expr;\n  }\n\n  const savedPrec = expr.minPrec;\n  expr.minPrec = 0;\n  let atom = expr.atoms[expr.index];\n\n  if (!ldelim) {\n    // If we didn't expect a specific delimiter, parse any delimiter\n    // and return it as a function application\n    let pairedDelim = true;\n\n    if (atom.type === 'mopen') {\n      ldelim = atom.symbol;\n      rdelim = RIGHT_DELIM[ldelim];\n    } else if (atom.type === 'sizeddelim') {\n      ldelim = atom.delim;\n      rdelim = RIGHT_DELIM[ldelim];\n    } else if (atom.type === 'leftright') {\n      pairedDelim = false;\n      ldelim = atom.leftDelim;\n      rdelim = atom.rightDelim; // If we have an unclosed smart fence, assume the right delim is\n      // matching the left delim\n\n      if (rdelim === '?') rdelim = RIGHT_DELIM[ldelim];\n    } else if (atom.type === 'textord') {\n      ldelim = atom.symbol;\n      rdelim = RIGHT_DELIM[ldelim];\n    }\n\n    if (ldelim && rdelim) {\n      if (ldelim === '|' && rdelim === '|') {\n        // Check if this could be a ||x|| instead of |x|\n        const atom = expr.atoms[expr.index + 1];\n\n        if (atom && atom.type === 'textord' && atom.symbol === '|') {\n          // Yes, it's a ||x||\n          ldelim = '\\\\lVert';\n          rdelim = '\\\\rVert';\n        }\n      }\n\n      expr = parseDelim(expr, ldelim, rdelim, options);\n\n      if (expr) {\n        if (pairedDelim) expr.index += 1;\n        expr.ast = {\n          fn: DELIM_FUNCTION[ldelim + rdelim] || ldelim + rdelim,\n          arg: [expr.ast]\n        };\n        expr.minPrec = savedPrec;\n        return expr;\n      }\n    }\n\n    return undefined;\n  }\n\n  if (atom.type === 'mopen' && getString(atom) === ldelim) {\n    expr.index += 1; // Skip the open delim\n\n    expr = parseExpression(expr, options);\n    atom = expr.atoms[expr.index];\n\n    if (atom && atom.type === 'mclose' && getString(atom) === rdelim) {\n      if (nextIsSupsub(expr)) {\n        // Wrap in a group if we have an upcoming superscript or subscript\n        expr.ast = {\n          group: expr.ast\n        };\n      }\n\n      expr = parseSupsub(expr, options);\n      expr = parsePostfix(expr, options);\n    } // TODO: else, syntax error?\n\n  } else if (atom.type === 'textord' && getString(atom) === ldelim) {\n    expr.index += 1; // Skip the open delim\n\n    expr = parseExpression(expr, options);\n    atom = expr.atoms[expr.index];\n\n    if (atom && atom.type === 'textord' && getString(atom) === rdelim) {\n      expr.index += 1;\n      expr = parseSupsub(expr, options);\n      expr = parsePostfix(expr, options);\n    } // TODO: else, syntax error?\n\n  } else if (ldelim === '\\\\lVert' && atom.type === 'textord' && atom.symbol === '|') {\n    atom = expr.atoms[expr.index + 1];\n\n    if (atom && atom.type === 'textord' && atom.symbol === '|') {\n      // This is an opening ||\n      expr.index += 2; // Skip the open delim\n\n      expr = parseExpression(expr, options);\n      atom = expr.atoms[expr.index];\n      const atom2 = expr.atoms[expr.index + 1];\n\n      if (atom && atom.type === 'textord' && atom.symbol === '|' && atom2 && atom2.type === 'textord' && atom2.symbol === '|') {\n        // This was a closing ||\n        expr.index += 2;\n        expr = parseSupsub(expr, options);\n        expr = parsePostfix(expr, options);\n      }\n    }\n  } else if (atom.type === 'sizeddelim' && atom.delim === ldelim) {\n    expr.index += 1; // Skip the open delim\n\n    expr = parseExpression(expr, options);\n    atom = expr.atoms[expr.index];\n\n    if (atom && atom.type === 'sizeddelim' && atom.delim === rdelim) {\n      expr.index += 1;\n      expr = parseSupsub(expr, options);\n      expr = parsePostfix(expr, options);\n    } // TODO: else, syntax error?\n\n  } else if (atom.type === 'leftright' && atom.leftDelim === ldelim && (atom.rightDelim === '?' || atom.rightDelim === rdelim)) {\n    // This atom type includes the content of the parenthetical expression\n    // in its body\n    expr.ast = parse$1(atom.body, options);\n\n    if (nextIsSupsub(expr)) {\n      // Wrap in a group if we have an upcoming superscript or subscript\n      expr.ast = {\n        group: expr.ast\n      };\n    }\n\n    expr = parseSupsub(expr, options);\n    expr = parsePostfix(expr, options);\n  } else {\n    return undefined;\n  }\n\n  expr.minPrec = savedPrec;\n  return expr;\n}\n\nfunction nextIsDigraph(expr, digraph) {\n  expr.index = expr.index || 0;\n\n  if (expr.atoms.length <= 1 || expr.index >= expr.atoms.length - 1) {\n    return false;\n  }\n\n  return digraph === getString(expr.atoms[expr.index]) + getString(expr.atoms[expr.index + 1]);\n}\n/**\r\n * Some symbols are made up of two consecutive characters.\r\n * Handle them here. Return undefined if not a digraph.\r\n * TODO: other digraphs:\r\n * :=\r\n * ++\r\n * **\r\n * =:\r\n * °C U+2103\r\n * °F U+2109\r\n * @private\r\n *\r\n */\n\n\nfunction parseDigraph(expr) {\n  expr.index = expr.index || 0;\n\n  if (expr.atoms.length <= 1 || expr.index >= expr.atoms.length - 1) {\n    return undefined;\n  }\n\n  if (isAtom(expr, 'textord', '\\\\nabla')) {\n    expr.index += 1;\n\n    if (isAtom(expr, 'mbin', '\\\\times')) {\n      expr.index += 1;\n      expr.ast = 'curl'; // divergence\n\n      return expr;\n    } else if (isAtom(expr, 'mbin', '\\\\cdot')) {\n      expr.index += 1;\n      expr.ast = 'div';\n      return expr;\n    }\n\n    expr.index -= 1;\n  } else {\n    const digraph = expr.atoms[expr.index].symbol + expr.atoms[expr.index + 1].symbol;\n    const result = /^(>=|<=|>>|<<|:=|!=)$/.test(digraph) ? digraph : '';\n\n    if (result) {\n      expr.index += 1;\n    }\n\n    return result;\n  }\n\n  return undefined;\n}\n\nfunction parsePrimary(expr, options) {\n  // <primary> := ('-'|'+) <primary> | <number> |\n  //              '(' <expression> ')' | <symbol> | <text> (<expression>)\n  expr.index = expr.index || 0;\n  expr.ast = undefined;\n\n  if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) {\n    return expr;\n  }\n\n  let atom = expr.atoms[expr.index];\n\n  if (atom.mode === 'text') {\n    let text = '';\n\n    while (expr.atoms[expr.index] && expr.atoms[expr.index].mode === 'text') {\n      text += expr.atoms[expr.index].body;\n      expr.index += 1;\n    }\n\n    expr.ast = {\n      text: text\n    };\n    return expr;\n  }\n\n  const val = getCanonicalName(getString(atom));\n  const digraph = parseDigraph(expr);\n\n  if (digraph) {\n    expr.ast = wrapFn(expr.ast, parsePrimary(expr, options).ast);\n  } else if (atom.type === 'root') {\n    expr.index = 0;\n    expr.atoms = atom.body;\n    return parsePrimary(expr, options);\n  } else if (atom.type === 'mbin' && val === '-') {\n    // Prefix - sign\n    expr.index += 1; // Skip the '-' symbol\n\n    expr = parsePrimary(expr, options);\n    expr.ast = negate(expr.ast);\n  } else if (atom.type === 'mbin' && val === '+') {\n    // Prefix + sign\n    expr.index += 1; // Skip the '+' symbol\n\n    expr = parsePrimary(expr, options);\n    expr.ast = wrapFn('add', expr.ast);\n  } else if (atom.type === 'mord' && /^[0-9.]$/.test(atom.symbol)) {\n    // Looks like a number\n    let num = '';\n    let done = false;\n    let pat = /^[0-9.eEdD]$/;\n\n    while (expr.index < expr.atoms.length && !done && (isAtom(expr, 'spacing') || (isAtom(expr, 'mord') || isAtom(expr, 'mpunct', ',') || isAtom(expr, 'mbin')) && pat.test(expr.atoms[expr.index].symbol))) {\n      if (expr.atoms[expr.index].type === 'spacing') {\n        expr.index += 1;\n      } else if (typeof expr.atoms[expr.index].superscript !== 'undefined' || typeof expr.atoms[expr.index].subscript !== 'undefined') {\n        done = true;\n      } else {\n        let digit = expr.atoms[expr.index].symbol;\n\n        if (digit === 'd' || digit === 'D') {\n          digit = 'e';\n          pat = /^[0-9+-.]$/;\n        } else if (digit === 'e' || digit === 'E') {\n          if (nextIsSupsub(expr)) {\n            digit = '';\n            expr.index -= 1;\n            done = true;\n          } else {\n            digit = 'E';\n            pat = /^[0-9+-.]$/;\n          }\n        } else if (pat === /^[0-9+-.]$/) {\n          pat = /^[0-9]$/;\n        }\n\n        num += digit === ',' ? '' : digit;\n        expr.index += 1;\n      }\n    }\n\n    expr.ast = num ? wrapNum(num) : undefined; // This was a number. Is it followed by a fraction, e.g. 2 1/2\n\n    atom = expr.atoms[expr.index];\n\n    if (atom && atom.type === 'genfrac' && !isNaN(expr.ast.num)) {\n      // Add an invisible plus, i.e. 2 1/2 = 2 + 1/2\n      const lhs = expr.ast;\n      expr = parsePrimary(expr, options);\n      expr.ast = wrapFn('add', lhs, expr.ast);\n    }\n\n    if (atom && atom.type === 'group' && atom.symbol && atom.symbol.startsWith('\\\\nicefrac')) {\n      // \\nicefrac macro, add an invisible plus\n      const lhs = expr.ast;\n      expr = parsePrimary(expr, options);\n      expr.ast = wrapFn('add', lhs, expr.ast);\n    }\n\n    if (atom && atom.type === 'msubsup') {\n      expr = parseSupsub(expr, options);\n    }\n\n    expr = parsePostfix(expr, options);\n  } else if (atom.type === 'genfrac' || atom.type === 'surd') {\n    // A fraction or a square/cube root\n    expr.ast = atomToMathJson(atom, options);\n    expr = parseSupsub(expr, options);\n    expr = parsePostfix(expr, options);\n  } else if (atom.type === 'mord' || atom.type === 'mbin') {\n    // A 'mord' but not a number: either an identifier ('x') or\n    // a function ('\\\\Zeta')\n    if (isFunction$1(val) && !isOperator(atom)) {\n      // A function\n      expr.ast = {\n        fn: val\n      };\n      expr = parseSupsub(expr, options);\n      const fn = expr.ast;\n      const arg = parsePrimary(expr, options).ast;\n\n      if (arg && /^(list0|list|list2)$/.test(arg.fn)) {\n        fn.arg = arg.arg;\n      } else if (arg) {\n        fn.arg = [arg];\n      }\n\n      expr.ast = fn;\n    } else {\n      // An identifier\n      expr.ast = atomToMathJson(atom, options);\n\n      if (expr.ast.sym === 'ⅈ') {\n        // It's 'i', the imaginary unit\n        expr.ast = wrapNum({\n          im: '1'\n        });\n      }\n\n      expr = parseSupsub(expr, options);\n    }\n\n    expr = parsePostfix(expr, options);\n  } else if (atom.type === 'textord') {\n    // Note that 'textord' can also be operators, and are handled as such\n    // in parseExpression()\n    if (!isOperator(atom)) {\n      // This doesn't look like a textord operator\n      if (!RIGHT_DELIM[atom.symbol || atom.body]) {\n        // Not an operator, not a fence, it's a symbol or a function\n        if (isFunction$1(val)) {\n          // It's a function\n          expr.ast = {\n            fn: val\n          };\n          expr = parseSupsub(expr, options);\n          const fn = expr.ast;\n          expr.index += 1; // Skip the function name\n\n          fn.arg = [parsePrimary(expr, options).ast];\n          expr.ast = fn;\n          expr = parsePostfix(expr, options);\n        } else {\n          // It was a symbol...\n          expr.ast = atomToMathJson(atom, options);\n\n          if (typeof atom.superscript === 'undefined') {\n            expr.index += 1;\n          }\n\n          expr = parseSupsub(expr, options);\n          expr = parsePostfix(expr, options);\n        }\n      }\n    }\n  } else if (atom.type === 'mop') {\n    // Could be a function or an operator.\n    if ((/^\\\\(mathop|operatorname|operatorname\\*)/.test(atom.symbol) || isFunction$1(val)) && !isOperator(atom)) {\n      expr.ast = {\n        fn: /^\\\\(mathop|operatorname|operatorname\\*)/.test(atom.symbol) ? getString(atom.body) : val\n      };\n      expr = parseSupsub(expr, options);\n\n      if (hasSup(expr.ast)) {\n        // There was an exponent with the function.\n        // This may be an inverse function\n        const INVERSE_FUNCTION = {\n          sin: 'arcsin',\n          cos: 'arccos',\n          tan: 'arctan',\n          cot: 'arccot',\n          sec: 'arcsec',\n          csc: 'arccsc',\n          sinh: 'arsinh',\n          cosh: 'arcosh',\n          tanh: 'artanh',\n          csch: 'arcsch',\n          sech: 'arsech',\n          coth: 'arcoth'\n        };\n\n        if (asMachineNumber(expr.ast.sup) === -1 && INVERSE_FUNCTION[val]) {\n          expr.ast = wrapFn(INVERSE_FUNCTION[val], parsePrimary(expr, options).ast);\n        } else {\n          // Keep the exponent, add the argument\n          const fn = expr.ast;\n          fn.arg = [parsePrimary(expr, options).ast];\n          expr.ast = fn;\n        }\n      } else {\n        const fn = expr.ast;\n        const arg = parsePrimary(expr, options).ast;\n\n        if (arg && /^(list0|list|list2)$/.test(arg.fn)) {\n          fn.arg = arg.arg;\n        } else if (arg) {\n          fn.arg = [arg];\n        }\n\n        expr.ast = fn;\n      }\n    }\n  } else if (atom.type === 'array') {\n    expr.index += 1;\n    expr.ast = atomToMathJson(atom, options);\n  } else if (atom.type === 'group') {\n    expr.index += 1;\n    expr.ast = atomToMathJson(atom, options);\n  } else if (atom.type === 'mclose') {\n    return expr;\n  } else if (atom.type === 'error') {\n    expr.index += 1;\n    expr.ast = {\n      error: atom.symbol\n    };\n    return expr;\n  }\n\n  if (expr.ast === undefined) {\n    // Parse either a group of paren, and return their content as the result\n    // or a pair of delimiters, and return them as a function applied\n    // to their content, i.e. \"|x|\" -> {fn: \"||\", arg: \"x\"}\n    const delim = parseDelim(expr, '(', ')', options) || parseDelim(expr, null, null, options);\n\n    if (delim) {\n      expr = delim;\n    } else if (!isOperator(atom)) {\n      // This is not an operator (if it is, it may be an operator\n      // dealing with an empty lhs. It's possible.\n      // Couldn't interpret the expression. Output an error.\n      if (atom.type === 'placeholder') {\n        // Default value for a placeholder is 0\n        // (except for the denominator of a 'genfrac')\n        expr.ast = wrapNum(0);\n      } else {\n        expr.ast = {\n          text: '?'\n        };\n        expr.ast.error = 'Unexpected token ' + \"'\" + atom.type + \"'\";\n\n        if (atom.latex) {\n          expr.ast.latex = atom.latex;\n        } else if (atom.body && atom.toLatex) {\n          expr.ast.latex = atom.toLatex();\n        }\n      }\n\n      expr.index += 1; // Skip the unexpected token, and attempt to continue\n    }\n  }\n\n  atom = expr.atoms[expr.index];\n\n  if (atom && (atom.type === 'mord' || atom.type === 'surd' || atom.type === 'mop' || atom.type === 'mopen' || atom.type === 'sizeddelim' || atom.type === 'leftright')) {\n    if (atom.type === 'sizeddelim') {\n      for (const d in RIGHT_DELIM) {\n        if (atom.delim === RIGHT_DELIM[d]) {\n          // This is (most likely) a closing delim, exit.\n          // There are ambiguous cases, for example |x|y|z|.\n          expr.index += 1;\n          return expr;\n        }\n      }\n    }\n\n    if ((atom.type === 'mord' || atom.type === 'mop') && isOperator(atom)) {\n      // It's actually an operator\n      return expr;\n    }\n\n    const lhs = expr.ast;\n    expr.ast = {};\n    expr = parsePrimary(expr, options);\n\n    if ((expr === null || expr === void 0 ? void 0 : expr.ast) && lhs) {\n      if (isFunction$1(lhs.fn) && typeof lhs.arg === 'undefined' || isArray(lhs.arg) && lhs.arg.length === 0) {\n        // A function with no arguments followed by a list ->\n        // the list becomes the argument to the function\n        if (expr.ast.fn === 'list2' || expr.ast.fn === 'list') {\n          expr.ast = wrapFn(lhs.fn, expr.ast.arg);\n        } else {\n          // A function \"f(x)\" or \"√x\" followed by something else:\n          // implicit multiply\n          expr.ast = wrapFn('multiply', lhs, expr.ast);\n        }\n      } else {\n        // Invisible times, e.g. '2x'\n        if (expr.ast.fn === 'multiply') {\n          expr.ast.arg.unshift(lhs);\n        } else if (numberIm(lhs) === 0 && numberRe(lhs) !== 0 && numberIm(expr.ast) === 1 && numberRe(expr.ast) === 0) {\n          // Imaginary number, i.e. \"3i\"\n          expr.ast = wrapNum({\n            im: numberRe(lhs).toString()\n          });\n        } else {\n          expr.ast = wrapFn('multiply', lhs, expr.ast);\n        }\n      }\n    } else {\n      expr.ast = lhs;\n    }\n  }\n\n  return expr;\n}\n/**\r\n * Given an atom or an array of atoms, return their AST representation as\r\n * an object.\r\n * @param {object} expr An expressions, including expr.atoms, expr.index,\r\n * expr.minPrec the minimum precedence that this parser should parse\r\n * before returning; expr.ast, the resulting AST.\r\n * @return {object} the expr object, updated\r\n * @private\r\n */\n\n\nfunction parseExpression(expr, options) {\n  expr.index = expr.index || 0;\n  expr.ast = undefined;\n  if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) return expr;\n  expr.minPrec = expr.minPrec || 0;\n  let lhs = parsePrimary(expr, options).ast;\n  let done = false;\n  const minPrec = expr.minPrec;\n\n  while (!done) {\n    const atom = expr.atoms[expr.index];\n    const digraph = parseDigraph(expr);\n    done = !atom || atom.mode === 'text' || !digraph && !isOperator(atom);\n    let prec, assoc;\n\n    if (!done) {\n      var _ref2 = digraph ? [getPrecedence(digraph), getAssociativity(digraph)] : opPrec(atom);\n\n      var _ref3 = _slicedToArray(_ref2, 2);\n\n      prec = _ref3[0];\n      assoc = _ref3[1];\n      done = prec < minPrec;\n    }\n\n    if (!done) {\n      const opName = digraph || getCanonicalName(getString(atom));\n\n      if (assoc === 'left') {\n        expr.minPrec = prec + 1;\n      } else {\n        expr.minPrec = prec;\n      }\n\n      expr.index += 1;\n\n      if (opName === '|') {\n        if (typeof atom.subscript !== 'undefined' || expr.atoms[expr.index] && typeof expr.atoms[expr.index].subscript !== 'undefined' && expr.atoms[expr.index].type === 'msubsup') {\n          // Bind is a special function. It doesn't have a rhs, and\n          // its argument is a subscript.\n          expr.ast = {};\n          const subArg = parseSupsub(expr, options).ast.sub;\n          lhs = wrapFn('bind', lhs);\n\n          if (subArg && subArg.fn === 'equal' && lhs.arg) {\n            // This is a subscript of the form \"x=...\"\n            lhs.arg.push(getArg(subArg, 0));\n            lhs.arg.push(getArg(subArg, 1));\n          } else if (subArg && lhs.arg && (subArg.fn === 'list' || subArg.fn === 'list2')) {\n            // Form: \"x=0;n=3;z=5\"\n            let currentSym = {\n              sym: 'x'\n            };\n\n            for (let i = 0; i < subArg.arg.length; i++) {\n              if (subArg.arg[i].fn === 'equal') {\n                currentSym = getArg(subArg.arg[i], 0);\n                lhs.arg.push(currentSym);\n                lhs.arg.push(getArg(subArg.arg[i], 1));\n              } else {\n                lhs.arg.push(currentSym);\n                lhs.arg.push(subArg.arg[i]);\n              }\n            }\n          } else if (subArg) {\n            // Default identifier if none provided\n            lhs.arg.push({\n              sym: 'x'\n            });\n            lhs.arg.push(subArg);\n          }\n        } else {\n          // That was a \"|\", but not with a subscript after, so\n          // it's the end of the expression, might be a right fence.\n          done = true;\n        }\n      } else {\n        const rhs = parseExpression(expr, options).ast; // Some operators (',' and ';' for example) convert into a function\n        // even if there's only two arguments. They're super associative...\n\n        let fn = SUPER_ASSOCIATIVE_FUNCTION[opName];\n\n        if (fn && lhs && lhs.fn !== fn) {\n          // Only promote them if the lhs is not already the same function.\n          // If it is, we'll combine it below.\n          lhs = wrapFn(fn, lhs);\n        } // Promote subtraction to an addition\n\n\n        if (opName === '-') {\n          if ((lhs === null || lhs === void 0 ? void 0 : lhs.arg) && lhs.fn === 'add') {\n            // add(x,y) - z -> add(x, y, -z)\n            if (rhs !== undefined) lhs.arg.push(negate(rhs));\n          } else if (lhs && lhs.fn === 'subtract') {\n            // x-y - z      -> add(x, -y, -z)\n            lhs = wrapFn('add', getArg(lhs, 0), negate(getArg(lhs, 1)), negate(rhs));\n          } else if (isNumber$1(lhs) && !hasSup(lhs) && isNumber$1(rhs) && !hasSup(rhs) && (typeof rhs.num.re === 'undefined' || rhs.num.re === '0') && typeof rhs.num.im !== 'undefined') {\n            lhs = {\n              num: {\n                re: lhs.num,\n                im: (-parseFloat(rhs.num.im)).toString()\n              }\n            };\n          } else {\n            lhs = wrapFn('subtract', lhs, rhs);\n          }\n        } else {\n          // Is there a function (e.g. 'add') implementing the\n          // associative version of this operator (e.g. '+')?\n          fn = ASSOCIATIVE_FUNCTION[opName];\n\n          if (fn === 'add' && lhs && lhs.fn === 'subtract') {\n            // subtract(x, y) + z -> add(x, -y, z)\n            lhs = wrapFn('add', getArg(lhs, 0), negate(getArg(lhs, 1)), rhs);\n          } else if (fn && lhs && lhs.fn === fn && !hasSup(lhs)) {\n            // add(x,y) + z -> add(x, y, z)\n            if (typeof rhs !== 'undefined') {\n              if (rhs.fn === fn && !hasSup(rhs) && rhs.arg) {\n                // add(x, y) = add (a, b)\n                lhs.arg = [...lhs.arg, ...rhs.arg];\n              } else if (lhs.arg) {\n                lhs.arg.push(rhs);\n              }\n            }\n          } else if (fn && rhs && rhs.arg && rhs.fn === fn) {\n            // x =    y = z -> equal(x, y, z)\n            rhs.arg.unshift(lhs);\n            lhs = rhs;\n          } else if (fn === 'multiply' && isNumber$1(lhs) && !hasSup(lhs) && rhs && asMachineNumber(rhs) === 10 && isNumber$1(rhs.sup)) {\n            // n * 10^m\n            lhs = wrapNum(asMachineNumber(lhs) * Math.pow(10, asMachineNumber(rhs.sup)));\n          } else if (fn === 'add' && isNumber$1(lhs) && !hasSup(lhs) && rhs && numberIm(rhs) !== 0 && !hasSup(rhs)) {\n            lhs = {\n              num: {\n                re: lhs.num,\n                im: rhs.num.im\n              }\n            };\n          } else {\n            lhs = wrapFn(fn || OP_NAME[opName] || opName, lhs, rhs);\n          }\n        }\n      }\n    }\n  }\n\n  expr.ast = lhs;\n  return expr;\n}\n/**\r\n * Return a string escaped as necessary to comply with the JSON format\r\n * @param {string} s\r\n * @return {string}\r\n * @private\r\n */\n\n\nfunction escapeText(s) {\n  return s.replace(/[\\\\]/g, '\\\\\\\\').replace(/[\"]/g, '\\\\\"').replace(/[\\b]/g, '\\\\b').replace(/[\\f]/g, '\\\\f').replace(/[\\n]/g, '\\\\n').replace(/[\\r]/g, '\\\\r').replace(/[\\t]/g, '\\\\t');\n}\n/**\r\n * Return an AST representation of a single atom\r\n *\r\n */\n\n\nfunction atomToMathJson(atom, options) {\n  var _a, _b, _c;\n\n  const MATH_VARIANTS = {\n    'double-struck': 'double-struck',\n    calligraphic: 'script',\n    script: 'script',\n    fraktur: 'fraktur',\n    'sans-serif': 'sans-serif',\n    monospace: 'monospace'\n  }; // TODO: See https://www.w3.org/TR/MathML2/chapter6.html#chars.letter-like-tables\n\n  let result = {};\n  let sym = '';\n  let m;\n  let lhs, rhs;\n  let variant = MATH_VARIANTS[atom.variant + (!atom.variantStyle || atom.variantStyle === 'up' ? '' : '-' + atom.variantStyle)];\n  let variantSym;\n  let style = '';\n  if (atom.fontSeries === 'b') style += 'bold';\n  if (atom.fontShape === 'it') style += 'italic';\n  const command = atom.symbol;\n\n  switch (atom.type) {\n    case 'root':\n    case 'group':\n      // Macros appear as group as well. Handle some of them.\n      if ((_a = atom.symbol) === null || _a === void 0 ? void 0 : _a.startsWith('\\\\nicefrac')) {\n        m = atom.symbol.slice(9).match(/({.*}|[^}])({.*}|[^}])/);\n\n        if (m) {\n          if (m[1].length === 1) {\n            lhs = m[1];\n          } else {\n            lhs = m[1].substr(1, m[1].length - 2);\n          }\n\n          lhs = parseString(lhs, 'math', null, options.macros);\n\n          if (m[2].length === 1) {\n            rhs = m[2];\n          } else {\n            rhs = m[2].substr(1, m[2].length - 2);\n          }\n\n          rhs = parseString(rhs, 'math', null, options.macros);\n          result = wrapFn('divide', parse$1(lhs, options), parse$1(rhs, options));\n        } else {\n          result = {\n            fn: 'divide'\n          };\n        }\n      } else {\n        result = {\n          group: parse$1(atom.body, options)\n        };\n      }\n\n      break;\n\n    case 'genfrac':\n      // If there's no denominator, or a placeholder, use \"1\" as the value\n      result = wrapFn('divide', parse$1(atom.numer, options), ((_c = (_b = atom.denom) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.type) === 'placeholder' ? wrapNum(1) : parse$1(atom.denom, options));\n      break;\n\n    case 'surd':\n      if (atom.index) {\n        result = wrapFn('pow', parse$1(atom.body, options), wrapFn('divide', wrapNum(1), parse$1(atom.index, options)));\n      } else {\n        result = wrapFn('sqrt', parse$1(atom.body, options));\n      }\n\n      break;\n\n    case 'rule':\n      break;\n    // case 'line':\n\n    case 'overlap':\n      // case 'accent':\n      break;\n\n    case 'overunder':\n      break;\n\n    case 'mord':\n    case 'textord':\n    case 'mbin':\n      // Check to see if it's a \\char command\n      m = !command ? undefined : command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/);\n\n      if (m) {\n        sym = String.fromCodePoint(parseInt(m[1], 16));\n      } else {\n        sym = getCanonicalName(getString(atom));\n\n        if (sym.length > 0 && sym.charAt(0) === '\\\\') {\n          // This is an identifier with no special handling.\n          // Use the Unicode value if outside ASCII range\n          if (typeof atom.body === 'string') {\n            // TODO: consider making this an option?\n            // if (atom.body.charCodeAt(0) > 255) {\n            //     sym = '&#x' + ('000000' +\n            //         atom.body.charCodeAt(0).toString(16)).substr(-4) + ';';\n            // } else {\n            sym = atom.body; // }\n          }\n        }\n      }\n\n      variantSym = escapeText(mathVariantToUnicode(sym, variant, style));\n\n      if (variantSym !== sym) {\n        // If there's a specific Unicode character matching this one\n        // no need to record a variant.\n        result = {\n          sym: variantSym\n        };\n        variant = 'normal';\n      } else {\n        result = {\n          sym: sym\n        };\n      }\n\n      break;\n    // case 'mpunct':\n    //     result = '<mo separator=\"true\">' + command + '</mo>';\n    //     break;\n\n    case 'minner':\n      break;\n\n    case 'mop':\n      break;\n\n    case 'box':\n      result = parse$1(atom.body, options);\n      break;\n\n    case 'enclose':\n      // result = '<menclose notation=\"';\n      // for (const notation in atom.notation) {\n      //     if (Object.prototype.hasOwnProperty.call(atom.notation, notation) &&\n      //         atom.notation[notation]) {\n      //         result += sep + notation;\n      //         sep = ' ';\n      //     }\n      // }\n      // result += '\">' + toAST(atom.body).mathML + '</menclose>';\n      break;\n\n    case 'array':\n      if (atom.environmentName === 'cardinality') {\n        // @revisit... It's an environment, but not an array...?\n        result = wrapFn('card', parse$1(atom.array, options));\n      } else if (/array|matrix|pmatrix|bmatrix/.test(atom.environmentName)) {\n        result = {\n          fn: 'array',\n          args: []\n        };\n\n        var _iterator64 = _createForOfIteratorHelper(atom.array),\n            _step64;\n\n        try {\n          for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n            const row = _step64.value;\n            result.args.push(row.map(cell => parse$1(cell, options)));\n          }\n        } catch (err) {\n          _iterator64.e(err);\n        } finally {\n          _iterator64.f();\n        }\n      } else if (atom.environmentName === 'cases') {\n        result = {\n          fn: 'cases',\n          args: []\n        };\n\n        var _iterator65 = _createForOfIteratorHelper(atom.array),\n            _step65;\n\n        try {\n          for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n            const row = _step65.value;\n\n            if (row[0]) {\n              const statement = [];\n              statement.push(parse$1(row[0], options));\n              let condition = parse$1(row[1], options);\n\n              if (condition) {\n                if (condition.fn === 'text' && condition.arg) {\n                  if (/^(if|when|for)$/i.test(condition.arg[0].trim())) {\n                    condition = condition.arg.filter(x => typeof x !== 'string');\n                  }\n                }\n              }\n\n              statement.push(condition !== null && condition !== void 0 ? condition : {});\n              result.args.push(statement);\n            }\n          }\n        } catch (err) {\n          _iterator65.e(err);\n        } finally {\n          _iterator65.f();\n        }\n      }\n\n      break;\n\n    case 'spacing':\n    case 'space':\n    case 'mathstyle':\n      break;\n\n    default:\n      result = undefined;\n      console.warn('Unhandled atom \"' + atom.type + '\" in \"' + (atom.symbol || atom.body) + '\"');\n  }\n\n  if (result && variant && variant !== 'normal') {\n    result.variant = variant;\n  }\n\n  if (result && typeof atom.cssClass === 'string') {\n    result.class = atom.cssClass;\n  }\n\n  if (result && typeof atom.cssId === 'string') {\n    result.id = atom.cssId;\n  }\n\n  return result;\n}\n\nfunction filterPresentationAtoms(atoms) {\n  if (!atoms) return [];\n  let result;\n\n  if (isArray(atoms)) {\n    result = [];\n\n    var _iterator66 = _createForOfIteratorHelper(atoms),\n        _step66;\n\n    try {\n      for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n        const atom = _step66.value;\n        const filter = filterPresentationAtoms(atom);\n        result = result.concat(filter);\n      }\n    } catch (err) {\n      _iterator66.e(err);\n    } finally {\n      _iterator66.f();\n    }\n  } else {\n    if (atoms.type === 'spacing' || atoms.type === 'first') {\n      return [];\n    } else if (atoms.type === 'box') {\n      result = filterPresentationAtoms(atoms.body);\n    } else {\n      if (atoms.body && isArray(atoms.body)) {\n        atoms.body = filterPresentationAtoms(atoms.body);\n      }\n\n      if (atoms.superscript && isArray(atoms.superscript)) {\n        atoms.superscript = filterPresentationAtoms(atoms.superscript);\n      }\n\n      if (atoms.subscript && isArray(atoms.subscript)) {\n        atoms.subscript = filterPresentationAtoms(atoms.subscript);\n      }\n\n      if (atoms.index && isArray(atoms.index)) {\n        atoms.index = filterPresentationAtoms(atoms.index);\n      }\n\n      if (atoms.denom && isArray(atoms.denom)) {\n        atoms.denom = filterPresentationAtoms(atoms.denom);\n      }\n\n      if (atoms.numer && isArray(atoms.numer)) {\n        atoms.numer = filterPresentationAtoms(atoms.numer);\n      }\n\n      if (atoms.array && isArray(atoms.array)) {\n        atoms.array = atoms.array.map(row => row.map(cell => filterPresentationAtoms(cell)));\n      }\n\n      result = [atoms];\n    }\n  }\n\n  return result;\n}\n/**\r\n * Parse a sequence of text zone and math zones:\r\n * <sentence> := ((<text>) <expression>)+\r\n */\n\n\nfunction parseSentence(expr, options) {\n  expr.index = expr.index || 0;\n  expr.ast = undefined;\n  const zones = []; // Iterate while we have atoms to look at\n\n  while (expr.atoms[expr.index]) {\n    if (expr.atoms[expr.index].mode === 'text') {\n      // Text mode atom...\n      let text = '';\n\n      while (expr.atoms[expr.index] && expr.atoms[expr.index].mode === 'text') {\n        text += expr.atoms[expr.index].body;\n        expr.index += 1;\n      }\n\n      zones.push(wrapFn('text', text));\n    } else {\n      const z = parseExpression(expr, options).ast; // Something went wrong in parsing the expression...\n\n      if (!z) return undefined;\n      zones.push(z);\n    }\n  }\n\n  if (zones.length > 1) {\n    return wrapFn('sequence', ...zones);\n  }\n\n  return zones[0] || undefined;\n}\n\nfunction parse$1(atoms, options) {\n  return parseSentence({\n    atoms: filterPresentationAtoms(atoms)\n  }, options);\n}\n\nfunction atomtoMathJson(atoms, options) {\n  return parse$1(atoms, options);\n}\n/**\r\n *\r\n * @param {string} fence - The fence to wrap around the arguments\r\n * @return {string} - A string wrapped in the fence\r\n */\n\n\nfunction wrapFence(fence, ...args) {\n  fence = fence || '.. ';\n  let result = '';\n\n  if (args.length > 0) {\n    if (fence[0] !== '.') result += fence[0];\n    let sep = '';\n\n    var _iterator67 = _createForOfIteratorHelper(args),\n        _step67;\n\n    try {\n      for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n        const arg = _step67.value;\n        result += sep + arg;\n        sep = fence[2];\n      }\n    } catch (err) {\n      _iterator67.e(err);\n    } finally {\n      _iterator67.f();\n    }\n\n    if (fence[1] !== '.') result += fence[1];\n  }\n\n  return result;\n}\n/**\r\n * Return a formatted mantissa:\r\n * 1234567 -> 123 456 7...\r\n * 1233333 -> 12(3)\r\n * @param {string} m\r\n * @param {Object.<string, any>} config\r\n * @private\r\n */\n\n\nfunction formatMantissa(m, config) {\n  const originalLength = m.length; // The last digit may have been rounded, if it exceeds the precison,\n  // which could throw off the\n  // repeating pattern detection. Ignore   it.\n\n  m = m.substr(0, config.precision - 2);\n\n  for (let i = 0; i < m.length - 16; i++) {\n    // Offset is the part of the mantissa that is not repeating\n    const offset = m.substr(0, i); // Try to find a repeating pattern of length j\n\n    for (let j = 0; j < 17; j++) {\n      const cycle = m.substr(i, j + 1);\n      const times = Math.floor((m.length - offset.length) / cycle.length);\n\n      if (times > 1) {\n        if ((offset + cycle.repeat(times + 1)).startsWith(m)) {\n          // We've found a repeating pattern!\n          if (cycle === '0') {\n            return offset.replace(/(\\d{3})/g, '$1' + config.groupSeparator);\n          }\n\n          return offset.replace(/(\\d{3})/g, '$1' + config.groupSeparator) + config.beginRepeatingDigits + cycle.replace(/(\\d{3})/g, '$1' + config.groupSeparator) + config.endRepeatingDigits;\n        }\n      }\n    }\n  }\n\n  if (originalLength !== m.length) {\n    m += '\\\\ldots';\n  }\n\n  return m.replace(/(\\d{3})/g, '$1' + config.groupSeparator);\n}\n\nfunction parseFloatToPrecision(num) {\n  return parseFloat(parseFloat(num).toPrecision(15));\n}\n/**\r\n *\r\n * @param num - A number, represented as a string (e.g. \"-12.45\"\r\n *  particularly useful for arbitrary precision numbers) or a number (-12.45)\r\n * @return A LaTeX representation of the AST\r\n */\n\n\nfunction numberAsLatex(num, config) {\n  let result = '';\n  let value;\n\n  if (typeof config.precision === 'number') {\n    if (typeof num === 'number') {\n      value = parseFloatToPrecision(num);\n    } else {\n      let sign = '';\n      let exponent = '';\n\n      if (num[0] === '-') {\n        sign = '-';\n        num = num.substr(1);\n      } else if (num[0] === '+') {\n        num = num.substr(1);\n      }\n\n      if (num.indexOf('.') >= 0) {\n        const m = num.match(/(\\d*).(\\d*)([e|E]([-+]?[0-9]*))?/);\n        const base = m[1];\n        const mantissa = m[2].substring(0, Math.min(config.precision - base.length, m[2].length));\n        exponent = m[4] || '';\n\n        if (base === '0') {\n          let p = 0; // Index of the first non-zero digit after the decimal\n\n          while (mantissa[p] === '0' && p < mantissa.length) {\n            p += 1;\n          }\n\n          let r = '';\n\n          if (p <= 4) {\n            r = '0' + config.decimalMarker;\n            r += mantissa.substr(0, p);\n            r += formatMantissa(num.substr(r.length), config);\n          } else if (p + 1 >= config.precision) {\n            r = '0';\n            sign = '';\n          } else {\n            r = num[p];\n            const f = formatMantissa(num.substr(p + 1), config);\n\n            if (f) {\n              r += config.decimalMarker + f;\n            }\n          }\n\n          if (r !== '0') {\n            if (num.length - 1 > config.precision && !r.endsWith('}') && !r.endsWith('\\\\ldots')) {\n              r += '\\\\ldots';\n            }\n\n            if (p > 4) {\n              r += config.exponentProduct;\n\n              if (config.exponentMarker) {\n                r += config.exponentMarker + (1 - p).toString();\n              } else {\n                r += '10^{' + (1 - p).toString() + '}';\n              }\n            }\n          }\n\n          num = r;\n        } else {\n          num = base.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\n          const f = formatMantissa(mantissa, config);\n\n          if (f) {\n            num += config.decimalMarker + f; // if (num.length - 1 > config.precision && !num.endsWith('}') && !num.endsWith('\\\\ldots')) {\n            //     num += '\\\\ldots';\n            // }\n          }\n        }\n      } else if (num.length > config.precision) {\n        const len = num.length;\n        let r = num[0];\n        const f = formatMantissa(num.substr(2), config);\n\n        if (f) {\n          r += config.decimalMarker + f;\n\n          if (r[r.length - 1] !== '}') {\n            r += '\\\\ldots';\n          }\n        }\n\n        if (r !== '1') {\n          r += config.exponentProduct;\n        } else {\n          r = '';\n        }\n\n        if (config.exponentMarker) {\n          r += config.exponentMarker + (len - 2).toString();\n        } else {\n          r += '10^{' + (len - 2).toString() + '}';\n        }\n\n        num = r;\n      } else {\n        num = num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\n      }\n\n      if (exponent) {\n        // There is an exponent...\n        if (config.exponentMarker) {\n          exponent = config.exponentMarker + exponent;\n        } else {\n          exponent = config.exponentProduct + ' 10^{' + exponent + '}';\n        }\n      }\n\n      return sign + num + exponent;\n    }\n  }\n\n  if (config.scientificNotation === 'engineering') {\n    // Ensure the exponent is a multiple of 3\n    if (value === 0) {\n      result = '0';\n    } else {\n      const y = Math.abs(value);\n      let exponent = Math.round(Math.log10(y));\n      exponent = exponent - exponent % 3;\n      if (y < 1000) exponent = 0;\n      const mantissa = y / Math.pow(10, exponent);\n      let mantissaString = '';\n      const m = mantissa.toString().match(/^(.*)\\.(.*)$/);\n\n      if ((m === null || m === void 0 ? void 0 : m[1]) && m[2]) {\n        mantissaString = m[1] + config.decimalMarker + m[2];\n      }\n\n      if (config.groupSeparator) {\n        mantissaString = formatMantissa(mantissa.toExponential(), config);\n      }\n\n      let exponentString = '';\n\n      if (exponent === 0) {\n        exponentString = '';\n      } else if (config.exponentMarker) {\n        exponentString = config.exponentMarker + exponent;\n      } else {\n        exponentString = config.exponentProduct + ' 10^{' + exponent + '}';\n      }\n\n      result = (value < 0 ? '-' : '') + mantissaString + exponentString;\n    }\n  } else {\n    const valString = typeof num === 'string' ? num : num.toString();\n    let m = valString.match(/^(.*)[e|E]([-+]?[0-9]*)$/i);\n    let base, exponent, mantissa;\n    base = valString;\n    mantissa = '';\n\n    if ((m === null || m === void 0 ? void 0 : m[1]) && m[2]) {\n      // There is an exponent...\n      base = m[1];\n\n      if (config.exponentMarker) {\n        exponent = config.exponentMarker + m[2];\n      } else {\n        exponent = config.exponentProduct + ' 10^{' + m[2] + '}';\n      }\n    }\n\n    m = base.match(/^(.*)\\.(.*)$/);\n\n    if ((m === null || m === void 0 ? void 0 : m[1]) && m[2]) {\n      base = m[1];\n      mantissa = m[2];\n    }\n\n    if (config.groupSeparator) {\n      base = base.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\n      mantissa = formatMantissa(mantissa, config);\n    }\n\n    if (mantissa) mantissa = config.decimalMarker + mantissa;\n    result = base + mantissa + (exponent || '');\n  }\n\n  return result;\n}\n/**\r\n *\r\n * @param {object} ast - Abstract Syntax Tree object (in canonical form)\r\n * @return {string} A LaTeX representation of the AST\r\n */\n\n\nfunction jsonToLatex(ast, options) {\n  const config = Object.assign({\n    precision: 14,\n    decimalMarker: '.',\n    groupSeparator: '\\\\, ',\n    product: '\\\\cdot ',\n    exponentProduct: '\\\\cdot ',\n    exponentMarker: '',\n    arcSeparator: '\\\\,',\n    scientificNotation: 'auto',\n    beginRepeatingDigits: '\\\\overline{',\n    endRepeatingDigits: '}'\n  }, options);\n  let result = '';\n  if (ast === undefined) return '';\n\n  if (typeof ast === 'string') {\n    result = ast;\n  } else if (ast.latex) {\n    // If ast.latex key is present, use it to render the element\n    result = ast.latex;\n  } else if (isNumber$1(ast)) {\n    const val = asMachineNumber(ast);\n\n    if (val === -Infinity) {\n      result = '-\\\\infty ';\n    } else if (val === Infinity) {\n      result = '\\\\infty ';\n    } else if (typeof ast.num === 'object' && (typeof ast.num.re === 'string' || typeof ast.num.im === 'string')) {\n      const re = numberRe(ast);\n      const im = numberIm(ast);\n\n      if (isNaN(re) || isNaN(im)) {\n        result = '\\\\text{NaN}';\n      } else if (Math.abs(im) <= Number.EPSILON && Math.abs(re) <= Number.EPSILON) {\n        result = '0';\n      } else {\n        if (Math.abs(re) > Number.EPSILON) {\n          result = numberAsLatex(re, config);\n        }\n\n        if (Math.abs(im) > Number.EPSILON) {\n          if (Math.abs(re) > Number.EPSILON) {\n            result += im > 0 ? '+' : '';\n          }\n\n          result += (Math.abs(im) !== 1 ? numberAsLatex(im, config) : '') + '\\\\imaginaryI ';\n        }\n      }\n    } else if (isNaN(val)) {\n      result = '\\\\text{NaN}';\n    } else {\n      result = numberAsLatex(ast.num, config);\n    }\n\n    if (hasSup(ast)) result += '^{' + jsonToLatex(ast.sup, config) + '}';\n    if (hasSub(ast)) result += '_{' + jsonToLatex(ast.sub, config) + '}';\n  } else if (ast.group) {\n    result = jsonToLatex(ast.group, config);\n\n    if (!isNumber$1(ast.group) && !asSymbol(ast.group)) {\n      result = wrapFence(ast.fence || '(),', result);\n    } else if (numberIm(ast.group) !== 0) {\n      result = wrapFence(ast.fence || '(),', result);\n    }\n\n    if (hasSup(ast)) result += '^{' + jsonToLatex(ast.sup, config) + '}';\n    if (hasSub(ast)) result += '_{' + jsonToLatex(ast.sub, config) + '}';\n  } else if (ast.fn) {\n    if (ast.fn === 'bind') {\n      result = jsonToLatex(getArg(ast, 0), config) + '|_{';\n\n      if (ast.arg && ast.arg.length === 2) {\n        result += jsonToLatex(getArg(ast, 1));\n      } else {\n        let sep = '';\n\n        for (let i = 1; i < ast.arg.length; i += 2) {\n          result += sep + jsonToLatex(getArg(ast, i)) + ' = ' + jsonToLatex(getArg(ast, i + 1));\n          sep = ', ';\n        }\n      }\n\n      result += '}';\n    } else if (ast.fn === 'divide') {\n      result = '\\\\frac{' + jsonToLatex(getArg(ast, 0), config) + '}{' + jsonToLatex(getArg(ast, 1), config) + '}';\n    } else if (ast.fn === 'negate') {\n      result = '-' + jsonToLatex(getArg(ast, 0), config);\n    } else if (ast.fn === 'subtract') {\n      result = jsonToLatex(getArg(ast, 0), config) + ' - ' + jsonToLatex(getArg(ast, 1), config);\n    } else if ((ast.fn === 'add' || ast.fn === 'multiply') && isArray(ast.arg)) {\n      const a = [];\n\n      var _iterator68 = _createForOfIteratorHelper(ast.arg),\n          _step68;\n\n      try {\n        for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n          const exp = _step68.value;\n\n          if (exp.fn === 'add' || exp.fn === 'subtract') {\n            a.push(wrapFence('() ', jsonToLatex(exp, config)));\n          } else if (isComplexWithRealAndImaginary(exp)) {\n            // Complex numbers that have both a real and imaginary part\n            // should be wrapped in parentheses\n            a.push(wrapFence('() ', jsonToLatex(exp, config)));\n          } else if (hasSup(ast) && !(numberIm(exp) === 0 || numberIm(exp) === 1)) {\n            // Wrap with parentheses if there's an exponent\n            // and the imaginary part is neither 0 nor 1\n            a.push(wrapFence('() ', jsonToLatex(exp, config)));\n          } else {\n            a.push(jsonToLatex(exp, config));\n          }\n        }\n      } catch (err) {\n        _iterator68.e(err);\n      } finally {\n        _iterator68.f();\n      }\n\n      if (ast.fn === 'multiply') {\n        if (ast.arg && ast.arg.length === 2 && (isNumber$1(ast.arg[0]) || ast.arg[0].fn === 'divide') && (!isNumber$1(ast.arg[1]) || numberRe(ast.arg[1]) === 0 && numberIm(ast.arg[1]) === 1)) {\n          // Invisible times:\n          // (number or fraction) * not a number\n          // or (number or fraction) * imaginary unit\n          result = a[0] + a[1];\n        } else {\n          result = a.join(' \\\\times ');\n        }\n      } else {\n        // Addition (and subtraction)\n        if (ast.arg && ast.arg.length === 1) {\n          if (ast.arg[0].fn === 'negate' || isNumber$1(ast.arg[0]) && asMachineNumber(ast.arg[0]) < 0) {\n            // a[0] has a negative sign\n            result = a[0];\n          } else {\n            // Single non-negative element, add a '+' in front\n            result = '+' + a[0];\n          }\n        } else {\n          result = a[0];\n\n          for (let i = 1; i < ast.arg.length; i++) {\n            if (ast.arg[i].fn === 'negate' || isNumber$1(ast.arg[i]) && asMachineNumber(ast.arg[i]) < 0) {\n              // a[i] already has a negative sign, so we can do an\n              // implicit add\n              result += a[i];\n            } else {\n              result += ' + ' + a[i];\n            }\n          }\n        }\n      }\n    } else if (ast.fn === 'list' || ast.fn === 'list2') {\n      const a = [];\n\n      if (ast.arg) {\n        var _iterator69 = _createForOfIteratorHelper(ast.arg),\n            _step69;\n\n        try {\n          for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n            const exp = _step69.value;\n            a.push(jsonToLatex(exp, config));\n          }\n        } catch (err) {\n          _iterator69.e(err);\n        } finally {\n          _iterator69.f();\n        }\n      }\n\n      result = a.join(ast.fn === 'list2' ? '; ' : ', ');\n    } else if (ast.fn === 'sequence') {\n      result = joinLatex(ast.arg.map(x => jsonToLatex(x, config)));\n    } else if (ast.fn === 'text') {\n      result = '\\\\text{' + (ast.arg[0] || '') + '}';\n    } else if (ast.fn === 'pow' && isArray(ast.arg) && ast.arg.length >= 2) {\n      result = jsonToLatex(getArg(ast, 0), config);\n\n      if (!isNumber$1(getArg(ast, 0)) && !asSymbol(getArg(ast, 0))) {\n        result = wrapFence(ast.fence || '(),', result);\n      }\n\n      result += '^{' + jsonToLatex(getArg(ast, 1), config) + '}';\n    } else if (ast.fn === 'equal' && ast.arg && ast.arg.length > 2) {\n      result = ast.arg.map(x => jsonToLatex(x, config)).join(' = ');\n    } else {\n      const fn = getLatexTemplateForFunction(ast.fn);\n      result = fn;\n      let argstring = '';\n      const parenRequired = /%(?![01_^])/.test(fn) && isArray(ast.arg) && ast.arg.length > 1;\n\n      if (parenRequired) {\n        // Parenthesis are required if argument list is longer than 1\n        result += wrapFence(ast.fence || '(),', ...ast.arg.map(x => jsonToLatex(x, config)));\n      } else if (isArray(ast.arg) && ast.arg.length > 0) {\n        // The parenthesis may be optional...\n        const arg0 = jsonToLatex(getArg(ast, 0), config);\n        const arg1 = jsonToLatex(getArg(ast, 1), config);\n        const argsn = [...ast.arg];\n\n        if (/%0/.test(fn)) {\n          result = result.replace('%0', arg0);\n          argsn.shift();\n        }\n\n        if (/%1/.test(fn)) {\n          result = result.replace('%1', arg1);\n          argsn.shift();\n        }\n\n        if (argsn.length > 0) {\n          argstring = wrapFence(ast.fence || '(),', ...argsn.map(x => jsonToLatex(x, config)));\n        }\n      } else {\n        // Empty argument list\n        argstring = wrapFence(ast.fence || '(),', '');\n      }\n\n      if (hasSup(ast)) {\n        result = result.replace('%^', '^{' + jsonToLatex(ast.sup, config) + '}');\n      } else {\n        result = result.replace('%^', '');\n      }\n\n      if (hasSub(ast)) {\n        result = result.replace('%_', '_{' + jsonToLatex(ast.sub, config) + '}');\n      } else {\n        result = result.replace('%_', '');\n      } // Insert the arguments in the function template (%)\n\n\n      result = result.replace(/%(?![01_^])/, argstring); // If there are any placeholders left, remove them\n\n      result = result.replace('%0', '').replace('%1', '');\n    }\n  } else if (typeof ast.sym === 'string') {\n    result = asSymbol(ast); // Is it a Unicode value?\n\n    let m = result.match(/^&#x([0-9a-f]+);$/i);\n\n    if (m === null || m === void 0 ? void 0 : m[1]) {\n      result = String.fromCodePoint(parseInt(m[1], 16));\n    } else {\n      m = result.match(/^&#([0-9]+);$/i);\n\n      if (m === null || m === void 0 ? void 0 : m[1]) {\n        result = String.fromCodePoint(parseInt(m[1]));\n      }\n    } // Is there a variant info attached to it?\n\n\n    if (typeof ast.variant === 'string') {\n      const MATH_VARIANTS = {\n        normal: 'mathrm',\n        'double-struck': 'mathbb',\n        bold: 'mathbf',\n        // 'script': 'mathcal',\n        fraktur: 'mathfrak',\n        script: 'mathscr',\n        'sans-serif': 'mathsf',\n        monospace: 'mathtt'\n      };\n      result = '\\\\' + MATH_VARIANTS[ast.variant] + '{' + result + '}';\n    }\n\n    if (hasSup(ast)) result += '^{' + jsonToLatex(ast.sup, config) + '}';\n    if (hasSub(ast)) result += '_{' + jsonToLatex(ast.sub, config) + '}';\n  } else if (typeof ast.text === 'string') {\n    result = '\\\\text{' + ast.text + '}';\n  } // If there was an error attached to this node,\n  // display it on a red background\n\n\n  if (typeof ast.error === 'string') {\n    result = '\\\\bbox[#F56165]{' + result + '}';\n  }\n\n  return result;\n}\n\nclass MathfieldPrivate {\n  /**\r\n   * To create a mathfield, you would typically use {@linkcode makeMathField | MathLive.makeMathField()}\r\n   * instead of invoking directly this constructor.\r\n   *\r\n   *\r\n   * @param element - The DOM element that this mathfield is attached to.\r\n   * Note that `element.mathfield` is this object.\r\n   */\n  constructor(element, options) {\n    var _a;\n\n    this.stylesheets = [];\n    this.eventHandlingInProgress = ''; // Setup default config options\n\n    this.options = update(getDefault(), options);\n    this.element = element;\n    element['mathfield'] = this; // Save existing content\n\n    this.originalContent = element.innerHTML;\n    let elementText = this.element.textContent;\n\n    if (elementText) {\n      elementText = elementText.trim();\n    } // Load the fonts, inject the core and mathfield stylesheets\n\n\n    loadFonts(this.options.fontsDirectory, this.options.onError);\n    this.stylesheets.push(inject(element, css_248z$2));\n    this.stylesheets.push(inject(element, css_248z$1)); // Additional elements used for UI.\n    // They are retrieved in order a bit later, so they need to be kept in sync\n    // 1.0/ The field, where the math equation will be displayed\n    // 1.1/ The virtual keyboard toggle\n    // 2/ The popover panel which displays info in command mode\n    // 3/ The keystroke caption panel (option+shift+K)\n    // 4/ The virtual keyboard\n    // 5.0/ The area to stick MathML for screen reading larger exprs (not used right now)\n    //      The for the area is that focus would bounce their and then back triggering the\n    //         screen reader to read it\n    // 5.1/ The aria-live region for announcements\n\n    let markup = '';\n\n    if (!this.options.substituteTextArea) {\n      if (/android|ipad|ipod|iphone/i.test(navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\n        // On Android or iOS, don't use a textarea, which has the side effect of\n        // bringing up the OS virtual keyboard\n        markup += \"<span class='ML__textarea'>\\n                <span class='ML__textarea__textarea'\\n                    tabindex=\\\"-1\\\" role=\\\"textbox\\\"\\n                    style='display:inline-block;height:1px;width:1px' >\\n                </span>\\n            </span>\";\n      } else {\n        markup += '<span class=\"ML__textarea\">' + '<textarea class=\"ML__textarea__textarea\" autocapitalize=\"off\" autocomplete=\"off\" ' + \"autocorrect=\\\"off\\\" spellcheck=\\\"false\\\" aria-hidden=\\\"true\\\" tabindex=\\\"\".concat((_a = element.tabIndex) !== null && _a !== void 0 ? _a : 0, \"\\\">\") + '</textarea>' + '</span>';\n      }\n    } else {\n      if (typeof this.options.substituteTextArea === 'string') {\n        markup += this.options.substituteTextArea;\n      } else {\n        // We don't really need this one, but we keep it here so that the\n        // indexes below remain the same whether a substituteTextArea is\n        // provided or not.\n        markup += '<span></span>';\n      }\n    }\n\n    markup += '<span class=\"ML__fieldcontainer\">' + '<span class=\"ML__fieldcontainer__field\"></span>'; // Only display the virtual keyboard toggle if the virtual keyboard mode is\n    // 'manual'\n\n    if (this.options.virtualKeyboardMode === 'manual') {\n      markup += \"<div part='virtual-keyboard-toggle' class=\\\"ML__virtual-keyboard-toggle\\\" role=\\\"button\\\" data-ML__tooltip=\\\"\".concat(localize('tooltip.toggle virtual keyboard'), \"\\\">\"); // data-ML__tooltip='Toggle Virtual Keyboard'\n\n      if (this.options.virtualKeyboardToggleGlyph) {\n        markup += this.options.virtualKeyboardToggleGlyph;\n      } else {\n        markup += \"<span style=\\\"width: 21px; margin-top: 4px;\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 576 512\\\"><path d=\\\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\\\"/></svg></span>\";\n      }\n\n      markup += '</div>';\n    } else {\n      markup += '<span ></span>';\n    }\n\n    markup += '</span>';\n    markup += \"\\n        <div class=\\\"ML__sr-only\\\">\\n            <span aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\\n            <span></span>\\n        </div>\\n    \";\n    this.element.innerHTML = this.options.createHTML(markup);\n    let iChild = 0; // index of child -- used to make changes below easier\n\n    let textarea;\n\n    if (typeof this.options.substituteTextArea === 'function') {\n      textarea = this.options.substituteTextArea();\n    } else {\n      textarea = this.element.children[iChild++].firstElementChild;\n    }\n\n    this.field = this.element.children[iChild].children[0]; // Listen to 'wheel' events to scroll (horizontally) the field when it overflows\n\n    this.field.addEventListener('wheel', ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      const wheelDelta = typeof ev.deltaX === 'undefined' ? ev.detail : -ev.deltaX;\n\n      if (isFinite(wheelDelta)) {\n        this.field.scroll({\n          top: 0,\n          left: this.field.scrollLeft - wheelDelta * 5\n        });\n      }\n    }, {\n      passive: false\n    });\n    this.virtualKeyboardToggle = this.element.children[iChild++].children[1];\n    attachButtonHandlers(this, this.virtualKeyboardToggle, {\n      default: 'toggleVirtualKeyboard',\n      alt: 'toggleVirtualKeyboardAlt',\n      shift: 'toggleVirtualKeyboardShift'\n    });\n    this.ariaLiveText = this.element.children[iChild].children[0];\n    this.accessibleNode = this.element.children[iChild++].children[1]; // Some panels are shared amongst instances of mathfield\n    // (there's a single instance in the document)\n\n    this.popover = getSharedElement('mathlive-popover-panel', 'ML__popover');\n    this.stylesheets.push(inject(null, css_248z$3));\n    this.keystrokeCaption = getSharedElement('mathlive-keystroke-caption-panel', 'ML__keystroke-caption');\n    this.stylesheets.push(inject(null, css_248z$4)); // The keystroke caption panel and the command bar are\n    // initially hidden\n\n    this.keystrokeCaptionVisible = false;\n    this.virtualKeyboardVisible = false;\n    this.keystrokeBuffer = '';\n    this.keystrokeBufferStates = [];\n    this.keystrokeBufferResetTimer = null; // This index indicates which of the suggestions available to\n    // display in the popover panel\n\n    this.suggestionIndex = 0; // The input mode (text, math, command)\n    // While getAnchorMode() represent the mode of the current selection,\n    // this.mode is the mode chosen by the user. It indicates the mode the\n    // next character typed will be interpreted in.\n    // It is often identical to getAnchorMode() since changing the selection\n    // changes the mode, but sometimes it is not, for example when a user\n    // enters a mode changing command.\n\n    this.mode = this.options.defaultMode;\n    this.smartModeSuppressed = false; // Current style (color, weight, italic, etc...):\n    // reflects the style to be applied on next insertion.\n\n    this.style = {}; // Focus/blur state\n\n    this.blurred = true;\n    on(this.element, 'focus', this);\n    on(this.element, 'blur', this); // Capture clipboard events\n    // Delegate keyboard events\n\n    this.keyboardDelegate = delegateKeyboardEvents(textarea, {\n      typedText: text => onTypedText(this, text),\n      cut: () => onCut(this),\n      copy: ev => onCopy(this, ev),\n      paste: ev => onPaste(this, ev),\n      keystroke: (_keystroke, e) => onKeystroke(this, _keystroke, e),\n      focus: () => this.onFocus(),\n      blur: () => this.onBlur(),\n      compositionStart: composition => this.onCompositionStart(composition),\n      compositionUpdate: composition => this.onCompositionUpdate(composition),\n      compositionEnd: composition => this.onCompositionEnd(composition)\n    }); // Delegate mouse and touch events\n\n    if (window.PointerEvent) {\n      // Use modern pointer events if available\n      on(this.field, 'pointerdown', this);\n    } else {\n      on(this.field, 'touchstart:active mousedown', this);\n    } // Request notification for when the window is resized (\n    // or the device switched from portrait to landscape) to adjust\n    // the UI (popover, etc...)\n\n\n    on(window, 'resize', this); // Setup the model\n\n    this.model = new ModelPrivate({\n      mode: this.options.defaultMode,\n      macros: this.options.macros,\n      removeExtraneousParentheses: this.options.removeExtraneousParentheses\n    }, {\n      onContentDidChange: _sender => this.options.onContentDidChange(this),\n      onSelectionDidChange: _sender => this._onSelectionDidChange(),\n      onContentWillChange: () => this.options.onContentWillChange(this),\n      onSelectionWillChange: () => this.options.onSelectionWillChange(this),\n      onError: this.options.onError\n    }, {\n      announce: (_sender, command, modelBefore, atoms) => {\n        var _a, _b;\n\n        return (_b = (_a = this.options).onAnnounce) === null || _b === void 0 ? void 0 : _b.call(_a, this, command, modelBefore, atoms);\n      },\n      moveOut: (_sender, direction) => this.options.onMoveOutOf(this, direction),\n      tabOut: (_sender, direction) => this.options.onTabOutOf(this, direction)\n    }, this); // Prepare to manage undo/redo\n\n    this.undoManager = new UndoManager(this.model); // Use the content of the element for the initial value of the mathfield\n\n    insert(this.model, elementText, {\n      insertionMode: 'replaceAll',\n      selectionMode: 'after',\n      format: 'latex',\n      mode: 'math',\n      suppressChangeNotifications: true,\n      macros: this.options.macros\n    }); // Now start recording potentially undoable actions\n\n    this.undoManager.startRecording();\n    this.undoManager.snapshot(this.options);\n    this.model.setListeners({\n      onContentDidChange: _sender => this.options.onContentDidChange(this),\n      onSelectionDidChange: _sender => this._onSelectionDidChange(),\n      onContentWillChange: () => this.options.onContentWillChange(this),\n      onSelectionWillChange: () => this.options.onSelectionWillChange(this),\n      onError: this.options.onError\n    });\n    this.model.setHooks({\n      announce: (_sender, command, modelBefore, atoms) => {\n        var _a, _b;\n\n        return (_b = (_a = this.options).onAnnounce) === null || _b === void 0 ? void 0 : _b.call(_a, this, command, modelBefore, atoms);\n      },\n      moveOut: (_sender, direction) => this.options.onMoveOutOf(this, direction),\n      tabOut: (_sender, direction) => this.options.onTabOutOf(this, direction)\n    });\n\n    if (!this.options.locale.startsWith(getActiveKeyboardLayout().locale)) {\n      setKeyboardLayoutLocale(this.options.locale);\n    }\n\n    this.keybindings = normalizeKeybindings(this.options.keybindings, e => {\n      if (typeof this.options.onError === 'function') {\n        this.options.onError({\n          code: 'invalid-keybinding',\n          arg: e.join('\\n')\n        });\n      }\n\n      console.log(e.join('\\n'));\n    });\n    requestUpdate(this);\n  }\n  /** @deprecated */\n\n\n  $setConfig(config) {\n    deprecated('$setConfig');\n    this.setOptions(config);\n  }\n\n  setOptions(config) {\n    this.options = update(this.options, config);\n    this.model.setListeners({\n      onContentDidChange: _sender => this.options.onContentDidChange(this),\n      onSelectionDidChange: _sender => this._onSelectionDidChange(),\n      onContentWillChange: () => this.options.onContentWillChange(this),\n      onSelectionWillChange: () => this.options.onSelectionWillChange(this),\n      onError: this.options.onError\n    });\n    this.model.setHooks({\n      announce: (_sender, command, modelBefore, atoms) => {\n        var _a, _b;\n\n        return (_b = (_a = this.options).onAnnounce) === null || _b === void 0 ? void 0 : _b.call(_a, this, command, modelBefore, atoms);\n      },\n      moveOut: (_sender, direction) => this.options.onMoveOutOf(this, direction),\n      tabOut: (_sender, direction) => this.options.onTabOutOf(this, direction)\n    });\n\n    if (!this.options.locale.startsWith(getActiveKeyboardLayout().locale)) {\n      setKeyboardLayoutLocale(this.options.locale);\n    }\n\n    this.keybindings = normalizeKeybindings(this.options.keybindings, e => {\n      if (typeof this.options.onError === 'function') {\n        this.options.onError({\n          code: 'invalid-keybinding',\n          arg: e.join('\\n')\n        });\n      }\n\n      console.log(e.join('\\n'));\n    });\n\n    if (!this.options.readOnly) {\n      this.onBlur();\n    } // Changing some config options (i.e. `macros`) may\n    // require the content to be reparsed and re-rendered\n\n\n    const content = this.model.root.toLatex();\n    insert(this.model, content, {\n      insertionMode: 'replaceAll',\n      selectionMode: 'after',\n      format: 'latex',\n      mode: 'math',\n      suppressChangeNotifications: true,\n      macros: this.options.macros\n    });\n    requestUpdate(this);\n  }\n  /** @deprecated */\n\n\n  getConfig(keys) {\n    deprecated('$getConfig');\n    return get(this.options, keys);\n  }\n\n  getOptions(keys) {\n    return get(this.options, keys);\n  }\n\n  getOption(key) {\n    return get(this.options, key);\n  }\n  /*\r\n   * handleEvent is a function invoked when an event is registered with an\r\n   * object instead ( see `addEventListener()` in `on()`)\r\n   * The name is defined by `addEventListener()` and cannot be changed.\r\n   * This pattern is used to be able to release bound event handlers,\r\n   * (event handlers that need access to `this`) as the bind() function\r\n   * would create a new function that would have to be kept track off\r\n   * to be able to properly remove the event handler later.\r\n   */\n\n\n  handleEvent(evt) {\n    switch (evt.type) {\n      case 'focus':\n        if (!this.eventHandlingInProgress) {\n          this.eventHandlingInProgress = 'focus';\n          this.onFocus();\n          this.eventHandlingInProgress = '';\n        }\n\n        break;\n\n      case 'blur':\n        if (!this.eventHandlingInProgress) {\n          this.eventHandlingInProgress = 'blur';\n          this.onBlur();\n          this.eventHandlingInProgress = '';\n        }\n\n        break;\n\n      case 'touchstart':\n      case 'mousedown':\n        // iOS <=13 Safari and Firefox on Android\n        onPointerDown(this, evt);\n        break;\n\n      case 'pointerdown':\n        onPointerDown(this, evt);\n        break;\n\n      case 'resize':\n        {\n          if (this.resizeTimer) {\n            window.cancelAnimationFrame(this.resizeTimer);\n          }\n\n          this.resizeTimer = window.requestAnimationFrame(() => isValidMathfield(this) && this.onResize());\n          break;\n        }\n\n      default:\n        console.warn('Unexpected event type', evt.type);\n    }\n  }\n  /** @deprecated */\n\n\n  $revertToOriginalContent() {\n    deprecated('$revertToOriginalContent');\n    this.dispose();\n    this.element.innerHTML = this.options.createHTML(this.originalContent);\n  }\n\n  dispose() {\n    this.element.innerHTML = '$$' + this.getValue() + '$$';\n    delete this.element['mathfield'];\n    delete this.accessibleNode;\n    delete this.ariaLiveText;\n    delete this.field;\n    delete this.keyboardDelegate;\n    this.virtualKeyboardToggle.remove();\n    delete this.virtualKeyboardToggle;\n    releaseSharedElement(this.popover);\n    delete this.popover;\n    releaseSharedElement(this.keystrokeCaption);\n    delete this.keystrokeCaption;\n\n    if (this.virtualKeyboard) {\n      this.virtualKeyboard.dispose();\n      delete this.virtualKeyboard;\n    }\n\n    off(this.element, 'pointerdown', this);\n    off(this.element, 'touchstart:active mousedown', this);\n    off(this.element, 'focus', this);\n    off(this.element, 'blur', this);\n    off(window, 'resize', this);\n    delete this.element;\n    this.stylesheets.forEach(x => x.release());\n  }\n\n  resetKeystrokeBuffer(options) {\n    options = options !== null && options !== void 0 ? options : {\n      defer: false\n    };\n\n    if (options.defer) {\n      if (this.options.inlineShortcutTimeout) {\n        // Set a timer to reset the shortcut buffer\n        this.keystrokeBufferResetTimer = setTimeout(() => {\n          this.resetKeystrokeBuffer();\n        }, this.options.inlineShortcutTimeout);\n      }\n\n      return;\n    }\n\n    this.keystrokeBuffer = '';\n    this.keystrokeBufferStates = [];\n    clearTimeout(this.keystrokeBufferResetTimer);\n  }\n\n  _onSelectionDidChange() {\n    // Every atom before the new caret position is now committed\n    commitCommandStringBeforeInsertionPoint(this.model); // Keep the content of the textarea in sync wiht the selection.\n    // This will allow cut/copy to work.\n\n    const result = selectionIsCollapsed(this.model) ? '' : makeRoot('math', getSelectedAtoms(this.model)).toLatex(false);\n    this.keyboardDelegate.setValue(result); // Update the mode\n\n    {\n      const previousMode = this.mode;\n      this.mode = getAnchorMode(this.model) || this.options.defaultMode;\n\n      if (this.mode !== previousMode && typeof this.options.onModeChange === 'function') {\n        this.options.onModeChange(this, this.mode);\n      }\n\n      if (previousMode === 'command' && this.mode !== 'command') {\n        hidePopover(this);\n        removeCommandString(this.model);\n      }\n    } // Defer the updating of the popover position: we'll need the tree to be\n    // re-rendered first to get an updated caret position\n\n    updatePopoverPosition(this, {\n      deferred: true\n    }); // Invoke client listeners, if provided.\n\n    if (typeof this.options.onSelectionDidChange === 'function') {\n      this.options.onSelectionDidChange(this);\n    }\n  }\n\n  onFocus() {\n    if (this.options.readOnly) return;\n\n    if (this.blurred) {\n      this.blurred = false;\n      this.keyboardDelegate.focus();\n\n      if (this.options.virtualKeyboardMode === 'onfocus') {\n        _showVirtualKeyboard(this);\n      }\n\n      updatePopoverPosition(this);\n\n      if (this.options.onFocus) {\n        this.options.onFocus(this);\n      } // Save the current value.\n      // It will be compared in `onBlur()` to see if the\n      // `onCommit` listener needs to be invoked. This\n      // mimic the `<input>` and `<textarea>` behavior\n\n\n      this.valueOnFocus = this.getValue();\n      requestUpdate(this);\n    }\n  }\n\n  onBlur() {\n    if (!this.blurred) {\n      this.blurred = true;\n      this.ariaLiveText.textContent = '';\n\n      if (/onfocus|manual/.test(this.options.virtualKeyboardMode)) {\n        _hideVirtualKeyboard(this);\n      }\n\n      complete(this, {\n        discard: true\n      });\n      requestUpdate(this);\n\n      if (typeof this.options.onBlur === 'function') {\n        this.options.onBlur(this);\n      }\n\n      if (typeof this.options.onCommit === 'function' && this.getValue() !== this.valueOnFocus) {\n        this.options.onCommit(this);\n      }\n    }\n  }\n\n  onCompositionStart(_composition) {\n    // Clear the selection if there is one\n    deleteChar(this.model);\n    requestAnimationFrame(() => {\n      render(this); // Recalculate the position of the caret\n      // Synchronize the location and style of textarea\n      // so that the IME candidate window can align with the composition\n\n      const caretPoint = getCaretPoint(this.field);\n      if (!caretPoint) return;\n      this.keyboardDelegate.moveTo(caretPoint.x, caretPoint.y);\n    });\n  }\n\n  onCompositionUpdate(composition) {\n    updateComposition(this.model, composition);\n    requestUpdate(this);\n  }\n\n  onCompositionEnd(composition) {\n    removeComposition(this.model);\n    onTypedText(this, composition, {\n      simulateKeystroke: true\n    });\n  }\n\n  onResize() {\n    this.element.classList.remove('ML__isNarrowWidth', 'ML__isWideWidth', 'ML__isExtendedWidth');\n\n    if (window.innerWidth >= 1024) {\n      this.element.classList.add('ML__isExtendedWidth');\n    } else if (window.innerWidth >= 768) {\n      this.element.classList.add('ML__isWideWidth');\n    } else {\n      this.element.classList.add('ML__isNarrowWidth');\n    }\n\n    updatePopoverPosition(this);\n  }\n  /** @deprecated */\n\n\n  $perform(command) {\n    deprecated('$perform');\n    return this.executeCommand(command);\n  }\n\n  executeCommand(command) {\n    return perform(this, command);\n  }\n\n  atomToString(root, format) {\n    format = format || 'latex';\n    let result = '';\n\n    if (format === 'latex' || format === 'latex-expanded') {\n      result = root.toLatex(format === 'latex-expanded');\n    } else if (format === 'mathML') {\n      result = atomsToMathML(root, this.options);\n    } else if (format === 'spoken') {\n      result = atomToSpeakableText(root, this.options);\n    } else if (format === 'spoken-text') {\n      const saveTextToSpeechMarkup = this.options.textToSpeechMarkup;\n      this.options.textToSpeechMarkup = '';\n      result = atomToSpeakableText(root, this.options);\n      this.options.textToSpeechMarkup = saveTextToSpeechMarkup;\n    } else if (format === 'spoken-ssml' || format === 'spoken-ssml-withHighlighting') {\n      const saveTextToSpeechMarkup = this.options.textToSpeechMarkup; // const savedAtomIdsSettings = this.config.atomIdsSettings;    // @revisit\n\n      this.options.textToSpeechMarkup = 'ssml'; // if (format === 'spoken-ssml-withHighlighting') {     // @revisit\n      //     this.config.atomIdsSettings = { seed: 'random' };\n      // }\n\n      result = atomToSpeakableText(root, this.options);\n      this.options.textToSpeechMarkup = saveTextToSpeechMarkup; // this.config.atomIdsSettings = savedAtomIdsSettings;      // @revisit\n    } else if (format === 'json') {\n      console.log('deprecated format. Use MathJSON');\n      const json = atomtoMathJson(root);\n      result = JSON.stringify(json);\n    } else if (format === 'json-2') {\n      console.log('deprecated format. Use MathJSON');\n      const json = atomtoMathJson(root); // const json = parseLatex(root.toLatex(true), {\n      //     form: 'canonical',\n      // });\n\n      result = JSON.stringify(json, null, 2);\n    } else if (format === 'ASCIIMath') {\n      result = atomToAsciiMath(root);\n    } else {\n      console.warn('Unknown format :', format);\n    }\n\n    return result;\n  }\n\n  get lastPosition() {\n    return this.model.lastPosition;\n  }\n\n  get selection() {\n    return this.model.selection;\n  }\n\n  set selection(value) {\n    this.model.selection = value;\n  }\n  /** @deprecated */\n\n\n  $text(format) {\n    return this.atomToString(this.model.root, format);\n  }\n\n  getValue(arg1, arg2, arg3) {\n    if (typeof arg1 === 'undefined') {\n      return this.atomToString(this.model.root, 'latex');\n    }\n\n    let format;\n\n    if (typeof arg1 === 'string') {\n      // Output format only\n      format = arg1;\n      return this.atomToString(this.model.root, format);\n    }\n\n    let ranges;\n\n    if (typeof arg1 === 'number' && (typeof arg2 === 'number' || typeof arg2 === 'undefined')) {\n      ranges = [{\n        start: arg1,\n        end: arg2 !== null && arg2 !== void 0 ? arg2 : -1\n      }];\n      format = arg3 !== null && arg3 !== void 0 ? arg3 : 'latex';\n    } else if (Array.isArray(arg1)) {\n      ranges = arg1;\n      format = arg2;\n    } else {\n      ranges = [arg1];\n      format = arg2;\n    }\n\n    const iter = new PositionIterator(this.model.root);\n    const result = ranges.map(range => {\n      let res = '';\n      range = normalizeRange(iter, range);\n\n      if (!range.collapsed) {\n        const depth = iter.at(range.start).depth;\n\n        for (let i = range.start + 1; i <= range.end; i++) {\n          if (iter.at(i).depth === depth) {\n            res += this.atomToString(iter.at(i).atom, format);\n          }\n        }\n      }\n\n      return res;\n    }).join('');\n    return result;\n  }\n\n  setValue(value, options) {\n    if (value === this.getValue()) return;\n    options = options !== null && options !== void 0 ? options : {\n      mode: 'math'\n    };\n    insert(this.model, value, {\n      insertionMode: 'replaceAll',\n      selectionMode: 'after',\n      format: 'latex',\n      mode: 'math',\n      suppressChangeNotifications: options.suppressChangeNotifications,\n      macros: this.options.macros\n    });\n    this.undoManager.snapshot(this.options);\n    requestUpdate(this);\n  }\n\n  find(latex) {\n    const result = [];\n    const iter = new PositionIterator(this.model.root);\n    const lastPosition = iter.lastPosition;\n\n    for (let i = 0; i < lastPosition; i++) {\n      const depth = iter.at(i).depth; // @todo: adjust for depth, use the smallest depth of start and end\n      // and adjust start/end to be at the same depth\n      // if parent of start and end is not the same,\n      // look at common ancestor, if start's parent is common ancestor,\n      // use start, otherwise start =  position of common ancestor.\n      // if end's parent is common ancestor, use end, otherwise use position\n      // of common ancestor + 1.\n      // And maybe that \"adjustment\" need to be in getValue()? but then\n      // the range result might include duplicates\n\n      for (let j = i; j < lastPosition; j++) {\n        let value = '';\n\n        for (let k = i + 1; k <= j; k++) {\n          if (iter.at(k).depth === depth) {\n            value += this.atomToString(iter.at(k).atom, 'latex');\n            console.log(\"value(\".concat(i + 1, \", \").concat(j, \") = \\\"\").concat(value, \"\\\" = '\").concat(this.getValue(i, j), \"'\"));\n          }\n        }\n\n        if (value === latex) {\n          result.push(normalizeRange(iter, {\n            start: i,\n            end: j\n          }));\n        }\n      }\n    }\n\n    return result;\n  }\n  /** @deprecated */\n\n\n  $selectedText(format) {\n    deprecated('$selectedText');\n    const atoms = getSelectedAtoms(this.model);\n\n    if (!atoms) {\n      return '';\n    }\n\n    return this.atomToString(makeRoot('math', atoms), format);\n  }\n  /** @deprecated */\n\n\n  $selectionIsCollapsed() {\n    deprecated('$selectionIsCollapsed');\n    return selectionIsCollapsed(this.model);\n  }\n  /** @deprecated */\n\n\n  $selectionDepth() {\n    deprecated('$selectionDepth');\n    return this.model.path.length;\n  }\n  /**\r\n   * Checks if the selection starts at the beginning of the selection group.\r\n   *\r\n   * @deprecated\r\n   */\n\n\n  $selectionAtStart() {\n    deprecated('$selectionAtStart');\n    return false;\n  }\n  /** @deprecated */\n\n\n  $selectionAtEnd() {\n    deprecated('$selectionAtEnd');\n    return false;\n  }\n  /** @deprecated */\n\n\n  $latex(text, options) {\n    deprecated('$latex');\n\n    if (typeof text === 'string') {\n      const oldValue = this.model.root.toLatex();\n\n      if (text !== oldValue) {\n        options = options !== null && options !== void 0 ? options : {\n          mode: 'math'\n        };\n        insert(this.model, text, {\n          insertionMode: 'replaceAll',\n          selectionMode: 'after',\n          format: 'latex',\n          mode: 'math',\n          suppressChangeNotifications: options.suppressChangeNotifications,\n          macros: this.options.macros\n        });\n        this.undoManager.snapshot(this.options);\n        requestUpdate(this);\n      }\n\n      return text;\n    } // Return the content as LaTeX\n\n\n    return this.model.root.toLatex();\n  }\n  /** @deprecated */\n\n\n  $el() {\n    deprecated('$el');\n    return this.element;\n  }\n\n  scrollIntoView() {\n    var _a; // If a render is pending, do it now to make sure we have correct layout\n    // and caret position\n\n\n    if (this.dirty) {\n      render(this);\n    }\n\n    let caretPoint = (_a = getCaretPoint(this.field)) === null || _a === void 0 ? void 0 : _a.x;\n    const fieldBounds = this.field.getBoundingClientRect();\n\n    if (typeof caretPoint === 'undefined') {\n      const selectionBounds = getSelectionBounds(this.field);\n\n      if (selectionBounds !== null) {\n        caretPoint = selectionBounds.right + fieldBounds.left - this.field.scrollLeft;\n      }\n    }\n\n    if (typeof caretPoint !== 'undefined') {\n      const x = caretPoint - window.scrollX;\n\n      if (x < fieldBounds.left) {\n        this.field.scroll({\n          top: 0,\n          left: x - fieldBounds.left + this.field.scrollLeft - 20,\n          behavior: 'smooth'\n        });\n      } else if (x > fieldBounds.right) {\n        this.field.scroll({\n          top: 0,\n          left: x - fieldBounds.right + this.field.scrollLeft + 20,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n  /** @deprecated */\n\n\n  $insert(s, options) {\n    deprecated('$insert');\n    return this.insert(s, options);\n  }\n\n  insert(s, options) {\n    if (typeof s === 'string' && s.length > 0) {\n      options = options !== null && options !== void 0 ? options : {\n        mode: 'math'\n      };\n\n      if (options.focus) {\n        this.focus();\n      }\n\n      if (options.feedback) {\n        if (this.options.keypressVibration && (navigator === null || navigator === void 0 ? void 0 : navigator.vibrate)) {\n          navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\n        }\n\n        if (this.keypressSound) {\n          this.keypressSound.load();\n          this.keypressSound.play();\n        }\n      }\n\n      if (s === '\\\\\\\\') {\n        // This string is interpreted as an \"insert row after\" command\n        addRowAfter(this.model);\n      } else if (s === '&') {\n        addColumnAfter(this.model);\n      } else {\n        const savedStyle = this.style;\n        insert(this.model, s, _objectSpread({\n          mode: this.mode,\n          style: getAnchorStyle(this.model)\n        }, options));\n\n        if (options.resetStyle) {\n          this.style = savedStyle;\n        }\n      }\n\n      this.undoManager.snapshot(this.options);\n      requestUpdate(this);\n      return true;\n    }\n\n    return false;\n  }\n\n  switchMode(mode, prefix = '', suffix = '') {\n    if (this.mode === mode) return;\n    this.resetKeystrokeBuffer(); // Suppress (temporarily) smart mode if switching to/from text or math\n    // This prevents switching to/from command mode from supressing smart mode.\n\n    this.smartModeSuppressed = /text|math/.test(this.mode) && /text|math/.test(mode);\n\n    if (prefix) {\n      this.insert(prefix, {\n        format: 'latex',\n        mode: {\n          math: 'text',\n          text: 'math'\n        }[mode]\n      });\n    } // Remove any error indicator on the current command sequence (if there is one)\n\n\n    decorateCommandStringAroundInsertionPoint(this.model, false);\n\n    if (mode === 'command') {\n      removeSuggestion(this.model);\n      hidePopover(this);\n      this.suggestionIndex = 0; // Switch to the command mode keyboard layer\n\n      if (this.virtualKeyboardVisible) {\n        _switchKeyboardLayer(this, 'lower-command');\n      }\n\n      insert(this.model, '\\u001b', {\n        mode: 'math'\n      });\n    } else {\n      this.mode = mode;\n    }\n\n    if (suffix) {\n      this.insert(suffix, {\n        format: 'latex',\n        mode: mode\n      });\n    } // Notify of mode change\n\n\n    if (typeof this.options.onModeChange === 'function') {\n      this.options.onModeChange(this, this.mode);\n    }\n\n    requestUpdate(this);\n  }\n  /** @deprecated */\n\n\n  $hasFocus() {\n    deprecated('$hasFocus');\n    return this.hasFocus();\n  }\n\n  hasFocus() {\n    return document.hasFocus() && this.keyboardDelegate.hasFocus();\n  }\n\n  focus() {\n    if (!this.hasFocus()) {\n      this.keyboardDelegate.focus();\n      this.model.announce('line');\n    }\n  }\n\n  blur() {\n    if (this.hasFocus()) {\n      this.keyboardDelegate.blur();\n    }\n  }\n  /** @deprecated */\n\n\n  $focus() {\n    deprecated('$focus');\n    return this.focus();\n  }\n  /** @deprecated */\n\n\n  $blur() {\n    deprecated('$blur');\n    return this.blur();\n  }\n  /** @deprecated */\n\n\n  $select() {\n    _selectAll(this.model);\n  }\n\n  select() {\n    _selectAll(this.model);\n  }\n  /** @deprecated */\n\n\n  $clearSelection() {\n    deprecated('$clearSelection');\n    deleteChar(this.model);\n  }\n\n  applyStyle(style) {\n    applyStyle$3(this.model, style);\n  }\n  /** @deprecated */\n\n\n  $applyStyle(style) {\n    applyStyle$3(this.model, style);\n  }\n  /** @deprecated */\n\n\n  $keystroke(keys, evt) {\n    deprecated('$keystroke');\n    return onKeystroke(this, keys, evt);\n  }\n  /** @deprecated */\n\n\n  $typedText(text) {\n    deprecated('$typedText');\n    onTypedText(this, text);\n  }\n\n  getCaretPoint() {\n    const caretPosition = getCaretPoint(this.field);\n    return caretPosition ? {\n      x: caretPosition.x,\n      y: caretPosition.y\n    } : null;\n  }\n\n  setCaretPoint(x, y) {\n    const oldPath = this.model.clone();\n    const anchor = pathFromPoint(this, x, y, {\n      bias: 0\n    });\n    const result = setPath(this.model, anchor, 0);\n    this.model.announce('move', oldPath);\n    requestUpdate(this);\n    return result;\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo();\n  }\n\n  canRedo() {\n    return this.undoManager.canRedo();\n  }\n\n  popUndoStack() {\n    this.undoManager.pop();\n  }\n\n  snapshot() {\n    this.undoManager.snapshot(_objectSpread(_objectSpread({}, this.options), {}, {\n      onUndoStateDidChange: (mf, reason) => {\n        updateUndoRedoButtons(this);\n        this.options.onUndoStateDidChange(mf, reason);\n      }\n    }));\n  }\n\n  snapshotAndCoalesce() {\n    this.undoManager.snapshotAndCoalesce(_objectSpread(_objectSpread({}, this.options), {}, {\n      onUndoStateDidChange: (mf, reason) => {\n        updateUndoRedoButtons(this);\n        this.options.onUndoStateDidChange(mf, reason);\n      }\n    }));\n  }\n\n  getUndoRecord() {\n    return this.undoManager.save();\n  }\n\n  restoreToUndoRecord(s) {\n    this.undoManager.restore(s, _objectSpread(_objectSpread({}, this.options), {}, {\n      suppressChangeNotifications: true\n    }));\n  }\n\n  undo() {\n    return this.undoManager.undo(_objectSpread(_objectSpread({}, this.options), {}, {\n      onUndoStateDidChange: (mf, reason) => {\n        updateUndoRedoButtons(this);\n        this.options.onUndoStateDidChange(mf, reason);\n      }\n    }));\n  }\n\n  redo() {\n    return this.undoManager.redo(_objectSpread(_objectSpread({}, this.options), {}, {\n      onUndoStateDidChange: (mf, reason) => {\n        updateUndoRedoButtons(this);\n        this.options.onUndoStateDidChange(mf, reason);\n      }\n    }));\n  }\n\n}\n\nfunction deprecated(method) {\n  console.warn(\"Method \\\"\".concat(method, \"\\\" is deprecated\"));\n}\n/* eslint no-console:0 */\n\n\nfunction findEndOfMath(delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  let index = startIndex;\n  let braceLevel = 0;\n  const delimLength = delimiter.length;\n\n  while (index < text.length) {\n    const character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === '\\\\') {\n      index++;\n    } else if (character === '{') {\n      braceLevel++;\n    } else if (character === '}') {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n}\n\nfunction splitAtDelimiters(startData, leftDelim, rightDelim, mathstyle) {\n  const finalData = [];\n\n  for (let i = 0; i < startData.length; i++) {\n    if (startData[i].type === 'text') {\n      const text = startData[i].data;\n      let lookingForLeft = true;\n      let currIndex = 0;\n      let nextIndex;\n      nextIndex = text.indexOf(leftDelim);\n\n      if (nextIndex !== -1) {\n        currIndex = nextIndex;\n\n        if (currIndex > 0) {\n          finalData.push({\n            type: 'text',\n            data: text.slice(0, currIndex)\n          });\n        }\n\n        lookingForLeft = false;\n      }\n\n      let done = false;\n\n      while (!done) {\n        if (lookingForLeft) {\n          nextIndex = text.indexOf(leftDelim, currIndex);\n\n          if (nextIndex === -1) {\n            done = true;\n            break;\n          }\n\n          if (currIndex !== nextIndex) {\n            finalData.push({\n              type: 'text',\n              data: text.slice(currIndex, nextIndex)\n            });\n          }\n\n          currIndex = nextIndex;\n        } else {\n          nextIndex = findEndOfMath(rightDelim, text, currIndex + leftDelim.length);\n\n          if (nextIndex === -1) {\n            done = true;\n            break;\n          }\n\n          finalData.push({\n            type: 'math',\n            data: text.slice(currIndex + leftDelim.length, nextIndex),\n            rawData: text.slice(currIndex, nextIndex + rightDelim.length),\n            mathstyle: mathstyle\n          });\n          currIndex = nextIndex + rightDelim.length;\n        }\n\n        lookingForLeft = !lookingForLeft;\n      }\n\n      if (currIndex < text.length) {\n        finalData.push({\n          type: 'text',\n          data: text.slice(currIndex)\n        });\n      }\n    } else {\n      finalData.push(startData[i]);\n    }\n  }\n\n  return finalData;\n}\n\nfunction splitWithDelimiters(text, delimiters) {\n  let data = [{\n    type: 'text',\n    data: text\n  }];\n\n  for (let i = 0; i < delimiters.inline.length; i++) {\n    const delimiter = delimiters.inline[i];\n    data = splitAtDelimiters(data, delimiter[0], delimiter[1], 'textstyle');\n  }\n\n  for (let i = 0; i < delimiters.display.length; i++) {\n    const delimiter = delimiters.display[i];\n    data = splitAtDelimiters(data, delimiter[0], delimiter[1], 'displaystyle');\n  }\n\n  return data;\n}\n\nfunction createMathMLNode(latex, options) {\n  // Create a node for AT (Assistive Technology, e.g. screen reader) to speak, etc.\n  // This node has a style that makes it be invisible to display but is seen by AT\n  const span = document.createElement('span');\n\n  try {\n    const html = \"<math xmlns='http://www.w3.org/1998/Math/MathML'>\" + options.renderToMathML(latex, options) + '</math>';\n    span.innerHTML = options.createHTML ? options.createHTML(html) : html;\n  } catch (e) {\n    console.error(\"Could not convert'\" + latex + \"' to MathML with \", e);\n    span.textContent = latex;\n  }\n\n  span.className = 'ML__sr-only';\n  return span;\n}\n\nfunction createMarkupNode(text, options, mathstyle, createNodeOnFailure) {\n  // Create a node for displaying math.\n  //   This is slightly ugly because in the case of failure to create the markup,\n  //   sometimes a text node is desired and sometimes not.\n  //   'createTextNodeOnFailure' controls this and null is returned when no node is created.\n  // This node is made invisible to AT (screen readers)\n  let span = document.createElement('span');\n  span.setAttribute('aria-hidden', 'true');\n\n  if (options.preserveOriginalContent) {\n    span.setAttribute('data-' + options.namespace + 'original-content', text);\n\n    if (mathstyle) {\n      span.setAttribute('data-' + options.namespace + 'original-mathstyle', mathstyle);\n    }\n  }\n\n  try {\n    loadFonts(options.fontsDirectory);\n    inject(null, css_248z$2);\n    const html = options.renderToMarkup(text, {\n      mathstyle: mathstyle !== null && mathstyle !== void 0 ? mathstyle : 'displaystyle',\n      format: 'html',\n      macros: options.macros\n    });\n    span.innerHTML = options.createHTML ? options.createHTML(html) : html;\n  } catch (e) {\n    console.error(\"Could not parse'\" + text + \"' with \", e);\n\n    if (createNodeOnFailure) {\n      span = document.createTextNode(text);\n    } else {\n      return null;\n    }\n  }\n\n  return span;\n}\n\nfunction createAccessibleMarkupPair(text, mathstyle, options, createNodeOnFailure) {\n  // Create a math node (a span with an accessible component and a visual component)\n  // If there is an error in parsing the latex, 'createNodeOnFailure' controls whether\n  //   'null' is returned or an accessible node with the text used.\n  const markupNode = createMarkupNode(text, options, mathstyle, createNodeOnFailure);\n\n  if (markupNode && /\\b(mathml|speakable-text)\\b/i.test(options.renderAccessibleContent)) {\n    const fragment = document.createDocumentFragment();\n\n    if (/\\bmathml\\b/i.test(options.renderAccessibleContent) && options.renderToMathML) {\n      fragment.appendChild(createMathMLNode(text, options));\n    }\n\n    if (/\\bspeakable-text\\b/i.test(options.renderAccessibleContent) && options.renderToSpeakableText) {\n      const span = document.createElement('span');\n      const html = options.renderToSpeakableText(text, options);\n      span.innerHTML = options.createHTML ? options.createHTML(html) : html;\n      span.className = 'ML__sr-only';\n      fragment.appendChild(span);\n    }\n\n    fragment.appendChild(markupNode);\n    return fragment;\n  }\n\n  return markupNode;\n}\n\nfunction scanText$1(text, options) {\n  // If the text starts with '\\begin'...\n  // (this is a MathJAX behavior)\n  let fragment = null;\n\n  if (options.TeX.processEnvironments && /^\\s*\\\\begin/.test(text)) {\n    fragment = document.createDocumentFragment();\n    fragment.appendChild(createAccessibleMarkupPair(text, undefined, options, true));\n  } else {\n    if (!text.trim()) return null;\n    const data = splitWithDelimiters(text, options.TeX.delimiters);\n\n    if (data.length === 1 && data[0].type === 'text') {\n      // This text contains no math. No need to continue processing\n      return null;\n    }\n\n    fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].type === 'text') {\n        fragment.appendChild(document.createTextNode(data[i].data));\n      } else {\n        fragment.appendChild(createAccessibleMarkupPair(data[i].data, data[i].mathstyle, options, true));\n      }\n    }\n  }\n\n  return fragment;\n}\n\nfunction scanElement(elem, options) {\n  const originalContent = elem.getAttribute('data-' + options.namespace + 'original-content');\n\n  if (originalContent) {\n    const mathstyle = elem.getAttribute('data-' + options.namespace + 'mathstyle');\n    const span = createAccessibleMarkupPair(originalContent, mathstyle, options, false);\n\n    if (span != null) {\n      elem.textContent = '';\n      elem.appendChild(span);\n    }\n\n    return;\n  }\n\n  if (elem.childNodes.length === 1 && elem.childNodes[0].nodeType === 3) {\n    // This is a node with textual content only. Perhaps an opportunity\n    // to simplify and avoid creating extra nested elements...\n    const text = elem.childNodes[0].textContent;\n\n    if (options.TeX.processEnvironments && /^\\s*\\\\begin/.test(text)) {\n      elem.textContent = '';\n      elem.appendChild(createAccessibleMarkupPair(text, undefined, options, true));\n      return;\n    }\n\n    const data = splitWithDelimiters(text, options.TeX.delimiters);\n\n    if (data.length === 1 && data[0].type === 'math') {\n      // The entire content is a math expression: we can replace the content\n      // with the latex markup without creating additional wrappers.\n      elem.textContent = '';\n      elem.appendChild(createAccessibleMarkupPair(data[0].data, data[0].mathstyle, options, true));\n      return;\n    } else if (data.length === 1 && data[0].type === 'text') {\n      // This element only contained text with no math. No need to\n      // do anything.\n      return;\n    }\n  }\n\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    const childNode = elem.childNodes[i];\n\n    if (childNode.nodeType === 3) {\n      // A text node\n      // Look for math mode delimiters inside the text\n      const frag = scanText$1(childNode.textContent, options);\n\n      if (frag) {\n        i += frag.childNodes.length - 1;\n        elem.replaceChild(frag, childNode);\n      }\n    } else if (childNode.nodeType === 1) {\n      // An element node\n      const tag = childNode.nodeName.toLowerCase();\n\n      if (tag === 'script' && options.processScriptTypePattern.test(childNode.type)) {\n        let style = 'displaystyle';\n\n        var _iterator70 = _createForOfIteratorHelper(childNode.type.split(';')),\n            _step70;\n\n        try {\n          for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n            const l = _step70.value;\n            const v = l.split('=');\n\n            if (v[0].toLowerCase() === 'mode') {\n              if (v[1].toLoweCase() === 'display') {\n                style = 'displaystyle';\n              } else {\n                style = 'textstyle';\n              }\n            }\n          }\n        } catch (err) {\n          _iterator70.e(err);\n        } finally {\n          _iterator70.f();\n        }\n\n        const span = createAccessibleMarkupPair(childNode.textContent, style, options, true);\n        childNode.parentNode.replaceChild(span, childNode);\n      } else if (tag !== 'script') {\n        // Element node\n        // console.assert(childNode.className !== 'formula');\n        const shouldRender = options.processClassPattern.test(childNode.className) || !(options.skipTags.includes(tag) || options.ignoreClassPattern.test(childNode.className));\n\n        if (shouldRender) {\n          if (elem.childNodes.length === 1 && elem.childNodes[0].nodeType === 3) {\n            const formula = elem.textContent;\n            elem.textContent = '';\n            elem.appendChild(createAccessibleMarkupPair(formula, 'displaystyle', options, true));\n          } else {\n            scanElement(childNode, options);\n          }\n        }\n      }\n    } // Otherwise, it's something else, and ignore it.\n\n  }\n}\n\nconst defaultOptions = {\n  // Optional namespace for the `data-` attributes.\n  namespace: '',\n  // Name of tags whose content will not be scanned for math delimiters\n  skipTags: ['noscript', 'style', 'textarea', 'pre', 'code', 'annotation', 'annotation-xml'],\n  // <script> tags of the following types will be processed. Others, ignored.\n  processScriptType: 'math/tex',\n  // Regex pattern of the class name of elements whose contents should not\n  // be processed\n  ignoreClass: 'tex2jax_ignore',\n  // Regex pattern of the class name of elements whose contents should\n  // be processed when they appear inside ones that are ignored.\n  processClass: 'tex2jax_process',\n  // Indicate whether to preserve or discard the original content of the\n  // elements being rendered in a 'data-original-content' attribute.\n  preserveOriginalContent: true,\n  // Indicate the format to use to render accessible content\n  renderAccessibleContent: 'mathml',\n  TeX: {\n    processEnvironments: true,\n    delimiters: {\n      inline: [['\\\\(', '\\\\)']],\n      display: [['$$', '$$'], ['\\\\[', '\\\\]']]\n    }\n  }\n};\n\nfunction renderMathInElement(elem, options) {\n  try {\n    options = _objectSpread(_objectSpread({}, defaultOptions), options);\n    options.ignoreClassPattern = new RegExp(options.ignoreClass);\n    options.processClassPattern = new RegExp(options.processClass);\n    options.processScriptTypePattern = new RegExp(options.processScriptType);\n    options.macros = MACROS; // Validate the namespace (used for `data-` attributes)\n\n    if (options.namespace) {\n      if (!/^[a-z]+[-]?$/.test(options.namespace)) {\n        throw Error('options.namespace must be a string of lowercase characters only');\n      }\n\n      if (!/-$/.test(options.namespace)) {\n        options.namespace += '-';\n      }\n    }\n\n    scanElement(elem, options);\n  } catch (e) {\n    if (e instanceof Error) {\n      console.error('renderMathInElement(): ' + e.message);\n    } else {\n      console.error('renderMathInElement(): Could not render math for element ' + elem);\n    }\n  }\n}\n\nvar AutoRender = {\n  renderMathInElement\n};\n/**\r\n * This module contains utilities to debug mathlive internal data structures.\r\n *\r\n * It is also used by the automated test suite.\r\n */\n\nfunction latexToAsciiMath(latex, mode = 'math') {\n  const mathlist = parseString(latex, mode, null, null);\n  return atomToAsciiMath(mathlist);\n}\n\nfunction asciiMathToLatex(ascii) {\n  const _parseMathString5 = parseMathString(ascii, {\n    format: 'ASCIIMath'\n  }),\n        _parseMathString6 = _slicedToArray(_parseMathString5, 2),\n        result = _parseMathString6[1];\n\n  return result;\n}\n/**\r\n *\r\n * @param symbol specify which span to consider.\r\n * If a string, a span whose body match the string\r\n * If a number, the nth span in the list\r\n * If an array, each element in the array indicate the nth child to traverse\r\n */\n\n\nfunction getSymbol(spans, symbol) {\n  if (!spans) return null;\n  let childSymbol = null;\n\n  if (Array.isArray(symbol)) {\n    childSymbol = symbol.slice(); // Clone the array\n\n    symbol = childSymbol.shift(); // Get the first element and remove it from the array\n  }\n\n  let result = null;\n\n  if (typeof symbol === 'number' && symbol < spans.length) {\n    if (childSymbol && childSymbol.length > 0) {\n      return getSymbol(spans[symbol].children, childSymbol);\n    }\n\n    return spans[symbol];\n  } else if (typeof symbol === 'string') {\n    for (let i = 0; i < spans.length; i++) {\n      // Does this span match the symbol we're looking for?\n      if (spans[i].body === symbol) {\n        if (childSymbol && childSymbol.length > 0) {\n          return getSymbol(spans[i].children, childSymbol);\n        }\n\n        return spans[i];\n      } // If not, try its children\n\n\n      result = getSymbol(spans[i].children, symbol);\n      if (result) return result;\n    }\n\n    return result;\n  }\n\n  return null;\n}\n\nfunction getProp(spans, symbol, prop) {\n  const s = getSymbol(spans, symbol);\n  if (s) return s[prop];\n  return null;\n}\n/**\r\n * Return the type ('mbin', etc...) of a span\r\n */\n\n\nfunction getType(spans, symbol) {\n  const s = getSymbol(spans, symbol);\n  if (s) return s.type;\n  return null;\n}\n\nfunction getStyle(spans, symbol, prop) {\n  const s = getSymbol(spans, symbol);\n  if (s === null || s === void 0 ? void 0 : s.style) return s.style[prop];\n  return null;\n}\n\nfunction getClasses(spans, symbol) {\n  var _a;\n\n  const s = getSymbol(spans, symbol);\n  if (s) return (_a = s.classes) !== null && _a !== void 0 ? _a : '';\n  return null;\n}\n\nfunction hasClass(spans, symbol, cls) {\n  const classes = getClasses(spans, symbol);\n  if (!classes) return false;\n  const clsList = classes.split(' ');\n\n  for (let j = 0; j < clsList.length; j++) {\n    if (clsList[j] === cls) return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction spanToString(span, indent = '') {\n  let result = '';\n\n  if (Array.isArray(span)) {\n    if (span.length === 0) {\n      result += '[]\\n';\n    } else {\n      result += '[\\n';\n\n      for (let i = 0; i < span.length; i++) {\n        result += spanToString(span[i], '\\t' + indent + i + ',');\n        result += i < span.length - 1 ? ',\\n' : '\\n';\n      }\n\n      result += indent + ']\\n';\n    }\n  } else {\n    result = indent + '{\\n';\n\n    if (span.type) {\n      result += indent + 'type:\"' + span.type + '\",\\n';\n    }\n\n    if (span.body && span.body.length > 0) {\n      result += indent + 'body:\"' + span.body + '\",\\n';\n    }\n\n    if (span.classes && span.classes.length > 0) {\n      result += indent + 'classes:\"' + span.classes + '\",\\n';\n    }\n\n    if (span.style) {\n      for (const s in span.style) {\n        if (Object.prototype.hasOwnProperty.call(span.style, s)) {\n          result += indent + s + ':\"';\n          result += span.style[s] + '\",\\n';\n        }\n      }\n    }\n\n    if (span.children && span.children.length > 0) {\n      result += indent + 'children:' + span.children.map(x => spanToString(x, indent)).join('; ');\n    }\n\n    result += indent + '}';\n  }\n\n  return result;\n} ////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction spanToMarkup(span, indent = '') {\n  // if (indent.length === 0) {\n  //     result += '<table>';\n  // }\n  let result = '';\n\n  if (Array.isArray(span)) {\n    for (let i = 0; i < span.length; i++) {\n      result += spanToMarkup(span[i], indent);\n    }\n  } else if (span) {\n    result = '<br>' + indent;\n\n    if (span.classes.includes('fontsize-ensurer')) {\n      result += 'FONTSIZE-ENSURER';\n    } else {\n      if (span.type) {\n        result += '<span class=\"type\">' + span.type + '</span>';\n      }\n\n      if (span.body && span.body.length > 0) {\n        result += '<span class=\"value\">' + span.body + '</span>';\n      }\n\n      if (span.classes && span.classes.length > 0) {\n        result += '&nbsp;<span class=\"classes\">' + span.classes + '</span>';\n      }\n\n      if (span.isTight) {\n        result += '&nbsp;<span class=\"stylevalue\"> tight </span>';\n      }\n\n      if (span.caret) {\n        result += '&nbsp;<span class=\"stylevalue\"> caret </span>';\n      }\n\n      if (span.style) {\n        for (const s in span.style) {\n          if (Object.prototype.hasOwnProperty.call(span.style, s)) {\n            result += '&nbsp;<span class=\"styleprop\">' + s + ':</span>';\n            result += '<span class=\"stylevalue\"> ' + span.style[s] + '</span>;&nbsp;';\n          }\n        }\n      }\n\n      if (span.children) {\n        result += span.children.map(x => spanToMarkup(x, indent + '▷')).join('; ');\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction mathListColorToMarkup(mathlist, propname) {\n  let result = '';\n\n  if (mathlist[propname]) {\n    result += '<span class=\"styleprop\">' + propname + '=</span>';\n    result += '<span style=\"font-size:2em;vertical-align:middle;color:' + mathlist[propname] + '\">&#9632;</span>';\n    result += '<span class=\"stylevalue\">';\n    result += mathlist[propname];\n    result += '</span>';\n  }\n\n  return result;\n}\n\nfunction mathListPropToMarkup(mathlist, propname) {\n  let result = '';\n\n  if (mathlist[propname]) {\n    result += '<span class=\"styleprop\">' + propname + '=</span>';\n    result += '<span class=\"stylevalue\">';\n    result += mathlist[propname];\n    result += '</span>\" ';\n  }\n\n  return result;\n}\n\nfunction mathlistToMarkup(mathlist, indent = '') {\n  if (!mathlist) return '';\n  let result = '';\n\n  if (Array.isArray(mathlist)) {\n    for (let i = 0; i < mathlist.length; i++) {\n      result += mathlistToMarkup(mathlist[i], i + '.' + indent);\n    }\n  } else {\n    result = '<br>' + indent;\n\n    if (mathlist.type) {\n      result += '<span class=\"type';\n      result += mathlist.isSelected ? ' selected' : '';\n      result += mathlist.caret ? ' caret' : '';\n      result += '\">' + mathlist.type + (mathlist.caret ? ' caret ' : '') + '</span>';\n    }\n\n    if (typeof mathlist.body === 'string' && mathlist.body.length > 0) {\n      result += '&nbsp;<span class=\"value\">';\n      result += mathlist.body;\n\n      if (mathlist.body.charCodeAt(0) < 32 || mathlist.body.charCodeAt(0) > 127) {\n        result += '&nbsp;U+' + ('000000' + mathlist.body.charCodeAt(0).toString(16)).substr(-6);\n      }\n\n      result += '</span>&nbsp;';\n    }\n\n    if (mathlist.fontFamily === 'mathrm') {\n      result += '<span style=\"opacity:.2\">';\n      result += mathListPropToMarkup(mathlist, 'fontFamily');\n      result += '</span>';\n    } else {\n      result += mathListPropToMarkup(mathlist, 'fontFamily');\n    } // Type 'genfrac'\n\n\n    result += mathListPropToMarkup(mathlist, 'hasBarLine');\n    result += mathListPropToMarkup(mathlist, 'leftDelim');\n    result += mathListPropToMarkup(mathlist, 'rightDelim');\n    result += mathListPropToMarkup(mathlist, 'continuousFraction'); // Type...?\n\n    result += mathListPropToMarkup(mathlist, 'limits');\n    result += mathListPropToMarkup(mathlist, 'symbol'); // Type 'color'\n\n    result += mathListColorToMarkup(mathlist, 'framecolor'); // Type 'mathstyle'\n\n    result += mathListPropToMarkup(mathlist, 'mathstyle'); // Type 'sizeddelim'\n\n    result += mathListPropToMarkup(mathlist, 'size');\n    result += mathListPropToMarkup(mathlist, 'cls');\n    result += mathListPropToMarkup(mathlist, 'delim'); // Type 'rule'\n\n    result += mathListPropToMarkup(mathlist, 'shift');\n    result += mathListPropToMarkup(mathlist, 'width');\n    result += mathListPropToMarkup(mathlist, 'height'); // Type 'line'\n\n    result += mathListPropToMarkup(mathlist, 'position'); // Type 'overunder'\n\n    result += mathlistToMarkup(mathlist.overscript, indent + '↑');\n    result += mathlistToMarkup(mathlist.underscript, indent + '↓');\n    result += mathlistToMarkup(mathlist.superscript, indent + '↑');\n    result += mathlistToMarkup(mathlist.subscript, indent + '↓');\n    result += mathlistToMarkup(mathlist.body, indent + '▶');\n    result += mathlistToMarkup(mathlist.numer, indent + '\\u25B2');\n    result += mathlistToMarkup(mathlist.denom, indent + '\\u25Bc');\n\n    if (mathlist.array) {\n      for (let i = 0; i < mathlist.array.length; i++) {\n        result += '<br>' + indent + '\\u2317 row ' + (i + 1) + '/' + mathlist.array.length;\n\n        for (let j = 0; j < mathlist.array[i].length; j++) {\n          result += mathlistToMarkup(mathlist.array[i][j], indent + '\\u2317\\u232A');\n        }\n      }\n    }\n  }\n\n  return result;\n} // Export the public interface for this module\n\n\nvar MathLiveDebug = {\n  mathlistToMarkup,\n  spanToMarkup,\n  spanToString,\n  hasClass,\n  getClasses,\n  getProp,\n  getStyle,\n  getType,\n  latexToAsciiMath,\n  asciiMathToLatex,\n  FUNCTIONS,\n  MATH_SYMBOLS,\n  TEXT_SYMBOLS,\n  ENVIRONMENTS,\n  MACROS,\n  INLINE_SHORTCUTS,\n  DEFAULT_KEYBINDINGS,\n  getKeybindingMarkup\n};\n\nfunction removeHighlight(element) {\n  element.classList.remove('ML__highlight');\n\n  if (element.children) {\n    var _iterator71 = _createForOfIteratorHelper(element.children),\n        _step71;\n\n    try {\n      for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n        const child = _step71.value;\n        removeHighlight(child);\n      }\n    } catch (err) {\n      _iterator71.e(err);\n    } finally {\n      _iterator71.f();\n    }\n  }\n}\n/**\r\n * Highlights the span corresponding to the specified atomID.\r\n *\r\n * This is used for text-to-speech with synchronized highlighting (read aloud)\r\n *\r\n * @category Read Aloud\r\n * @param {string} atomID\r\n *\r\n */\n\n\nfunction highlightAtomID(element, atomID) {\n  var _a;\n\n  if (!atomID || ((_a = element['dataset']) === null || _a === void 0 ? void 0 : _a.atomId) === atomID) {\n    element.classList.add('ML__highlight');\n\n    if (element.children && element.children.length > 0) {\n      Array.from(element.children).forEach(x => {\n        highlightAtomID(x);\n      });\n    }\n  } else {\n    element.classList.remove('ML__highlight');\n\n    if (element.children && element.children.length > 0) {\n      Array.from(element.children).forEach(x => {\n        highlightAtomID(x, atomID);\n      });\n    }\n  }\n}\n/**\r\n * \"Read Aloud\" is an asynchronous operation that reads the\r\n * reading with synchronized highlighting\r\n *\r\n * @param element - The DOM element to highlight\r\n * @param text - The text to speak\r\n */\n\n\nfunction defaultReadAloudHook(element, text, config) {\n  var _a;\n\n  if (!window) {\n    return;\n  }\n\n  if (!config && window['mathlive']) {\n    config = window['mathlive'].config;\n  }\n\n  if (config.speechEngine !== 'amazon') {\n    console.warn('Use Amazon TTS Engine for synchronized highlighting');\n    if (config.speakHook) config.speakHook(text, config);\n    return;\n  }\n\n  if (!window['AWS']) {\n    console.warn('AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk');\n    return;\n  }\n\n  const polly = new window['AWS'].Polly({\n    apiVersion: '2016-06-10'\n  });\n  const params = {\n    OutputFormat: 'json',\n    VoiceId: config.speechEngineVoice || 'Joanna',\n    Engine: 'standard',\n    Text: text,\n    TextType: 'ssml',\n    SpeechMarkTypes: ['ssml']\n  };\n  window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\n  window['mathlive'].readAloudElement = element;\n  const statusHook = config.onReadAloudStatus || window['mathlive'].onReadAloudStatus; // Request the mark points\n\n  polly.synthesizeSpeech(params, (err, data) => {\n    if (err) {\n      console.warn('polly.synthesizeSpeech() error:', err, err.stack);\n      return;\n    }\n\n    if (!data || !data.AudioStream) {\n      console.log('polly.synthesizeSpeech():' + data);\n      return;\n    }\n\n    const response = new TextDecoder('utf-8').decode(new Uint8Array(data.AudioStream));\n    window['mathlive'].readAloudMarks = response.split('\\n').map(x => x ? JSON.parse(x) : {});\n    window['mathlive'].readAloudTokens = [];\n\n    var _iterator72 = _createForOfIteratorHelper(window['mathlive'].readAloudMarks),\n        _step72;\n\n    try {\n      for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n        const mark = _step72.value;\n\n        if (mark.value) {\n          window['mathlive'].readAloudTokens.push(mark.value);\n        }\n      }\n    } catch (err) {\n      _iterator72.e(err);\n    } finally {\n      _iterator72.f();\n    }\n\n    window['mathlive'].readAloudCurrentMark = ''; // Request the audio\n\n    params.OutputFormat = 'mp3';\n    params.SpeechMarkTypes = [];\n    polly.synthesizeSpeech(params, function (err, data) {\n      if (err) {\n        console.warn('polly.synthesizeSpeech(', text, ') error:', err, err.stack);\n        return;\n      }\n\n      if (!data || !data.AudioStream) {\n        return;\n      }\n\n      const uInt8Array = new Uint8Array(data.AudioStream);\n      const blob = new Blob([uInt8Array.buffer], {\n        type: 'audio/mpeg'\n      });\n      const url = URL.createObjectURL(blob);\n\n      if (!window['mathlive'].readAloudAudio) {\n        window['mathlive'].readAloudAudio = new Audio();\n        window['mathlive'].readAloudAudio.addEventListener('ended', () => {\n          const mathfield = window['mathlive'].readAloudMathField;\n\n          if (statusHook) {\n            statusHook(mathfield, 'ended');\n          }\n\n          if (mathfield) {\n            render(mathfield);\n            window['mathlive'].readAloudElement = null;\n            window['mathlive'].readAloudMathField = null;\n            window['mathlive'].readAloudTokens = [];\n            window['mathlive'].readAloudMarks = [];\n            window['mathlive'].readAloudCurrentMark = '';\n          } else {\n            removeHighlight(window['mathlive'].readAloudElement);\n          }\n        });\n        window['mathlive'].readAloudAudio.addEventListener('timeupdate', () => {\n          let value = ''; // The target, the atom we're looking for, is the one matching the current audio\n          // plus 100 ms. By anticipating it a little bit, it feels more natural, otherwise it\n          // feels like the highlighting is trailing the audio.\n\n          const target = window['mathlive'].readAloudAudio.currentTime * 1000 + 100; // Find the smallest element which is bigger than the target time\n\n          var _iterator73 = _createForOfIteratorHelper(window['mathlive'].readAloudMarks),\n              _step73;\n\n          try {\n            for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n              const mark = _step73.value;\n\n              if (mark.time < target) {\n                value = mark.value;\n              }\n            }\n          } catch (err) {\n            _iterator73.e(err);\n          } finally {\n            _iterator73.f();\n          }\n\n          if (window['mathlive'].readAloudCurrentMark !== value) {\n            window['mathlive'].readAloudCurrentToken = value;\n\n            if (value && value === window['mathlive'].readAloudFinalToken) {\n              window['mathlive'].readAloudAudio.pause();\n            } else {\n              window['mathlive'].readAloudCurrentMark = value;\n              highlightAtomID(window['mathlive'].readAloudElement, window['mathlive'].readAloudCurrentMark);\n            }\n          }\n        });\n      } else {\n        window['mathlive'].readAloudAudio.pause();\n      }\n\n      window['mathlive'].readAloudAudio.src = url;\n\n      if (statusHook) {\n        statusHook(window['mathlive'].readAloudMathField, 'playing');\n      }\n\n      window['mathlive'].readAloudAudio.play();\n    });\n  });\n}\n/**\r\n * Returns the status of a Read Aloud operation (reading with synchronized\r\n * highlighting).\r\n *\r\n * Possible values are:\r\n * - `\"ready\"`\r\n * - `\"playing\"`\r\n * - `\"paused\"`\r\n * - `\"unavailable\"`\r\n *\r\n * **See** {@linkcode speak}\r\n * @category Read Aloud\r\n */\n\n\nfunction _readAloudStatus() {\n  var _a;\n\n  if (!window) return 'unavailable';\n  window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\n  if (!window['mathlive'].readAloudAudio) return 'ready';\n  if (window['mathlive'].readAloudAudio.paused) return 'paused';\n  if (!window['mathlive'].readAloudAudio.ended) return 'playing';\n  return 'ready';\n}\n/**\r\n * Pauses a read aloud operation if one is in progress.\r\n *\r\n * **See** {@linkcode speak}\r\n */\n\n\nfunction _pauseReadAloud() {\n  var _a;\n\n  if (!window) return;\n  window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\n\n  if (window['mathlive'].readAloudAudio) {\n    if (window['mathlive'].onReadAloudStatus) {\n      window['mathlive'].onReadAloudStatus(window['mathlive'].readAloudMathField, 'paused');\n    }\n\n    window['mathlive'].readAloudAudio.pause();\n  }\n}\n/**\r\n * Resumes a read aloud operation if one was paused.\r\n *\r\n * **See** {@linkcode speak}\r\n */\n\n\nfunction _resumeReadAloud() {\n  var _a;\n\n  if (!window) return;\n  window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\n\n  if (window['mathlive'].readAloudAudio) {\n    if (window['mathlive'].onReadAloudStatus) {\n      window['mathlive'].onReadAloudStatus(window['mathlive'].readAloudMathField, 'playing');\n    }\n\n    window['mathlive'].readAloudAudio.play();\n  }\n}\n/**\r\n * If a Read Aloud operation is in progress, read from a specified token\r\n *\r\n * **See** {@linkcode speak}\r\n *\r\n * @param count The number of tokens to read.\r\n */\n\n\nfunction _playReadAloud(token, count) {\n  var _a;\n\n  if (!window) return;\n  window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\n\n  if (window['mathlive'].readAloudAudio) {\n    let timeIndex = 0;\n    window['mathlive'].readAloudFinalToken = null;\n\n    if (token) {\n      window['mathlive'].readAloudMarks = window['mathlive'].readAloudMarks || [];\n\n      var _iterator74 = _createForOfIteratorHelper(window['mathlive'].readAloudMarks),\n          _step74;\n\n      try {\n        for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {\n          const mark = _step74.value;\n\n          if (mark.value === token) {\n            timeIndex = mark.time / 1000;\n          }\n        }\n      } catch (err) {\n        _iterator74.e(err);\n      } finally {\n        _iterator74.f();\n      }\n\n      let tokenIndex = window['mathlive'].readAloudTokens.indexOf(token);\n\n      if (tokenIndex >= 0) {\n        tokenIndex += count;\n\n        if (tokenIndex < window['mathlive'].readAloudTokens.length) {\n          window['mathlive'].readAloudFinalToken = tokenIndex;\n        }\n      }\n    }\n\n    window['mathlive'].readAloudAudio.currentTime = timeIndex;\n\n    if (window['mathlive'].onReadAloudStatus) {\n      window['mathlive'].onReadAloudStatus(window['mathlive'].readAloudMathField, 'playing');\n    }\n\n    window['mathlive'].readAloudAudio.play();\n  }\n} /// ^.*('\\\\.*').*\n// Frequency of a symbol.\n// String constants corresponding to frequency values,\n// which are the number of results returned by latexsearch.com\n// When the precise number is known, it is provided. Otherwise,\n// the following constants are used to denote an estimate.\n\n\nconst CRYPTIC = 0;\nconst ARCANE = 200;\nconst RARE = 1200;\nconst UNCOMMON = 2000;\nconst COMMON = 3000;\nconst SUPERCOMMON = 4000;\n/*\r\n * Set the metadata for the specified symbols\r\n *\r\n * metadata('Functions', ['\\\\sin', '\\\\cos'], COMMON, '$0{a}')\r\n *\r\n */\n\nfunction metadata(category, symbols, frequency = COMMON, template = '$0') {\n  symbols.forEach(symbol => {\n    if (MATH_SYMBOLS[symbol]) {\n      MATH_SYMBOLS[symbol].frequency = frequency;\n      MATH_SYMBOLS[symbol].category = category;\n      MATH_SYMBOLS[symbol].template = template.replace(/\\$0/g, symbol);\n    }\n\n    if (FUNCTIONS[symbol]) {\n      // Make a copy of the entry, since it could be shared by multiple\n      // symbols\n      FUNCTIONS[symbol] = _objectSpread(_objectSpread({}, FUNCTIONS[symbol]), {}, {\n        frequency: frequency,\n        category: category,\n        template: template.replace(/\\$0/g, symbol)\n      });\n    }\n  });\n}\n\nmetadata('Trigonometry', ['\\\\cos', '\\\\sin', '\\\\tan'], SUPERCOMMON);\nmetadata('Trigonometry', ['\\\\arcsin', '\\\\arccos', '\\\\arctan', '\\\\arctg', '\\\\arcctg', '\\\\arcsec', '\\\\arccsc', '\\\\arsinh', '\\\\arcosh', '\\\\artanh', '\\\\arcsech', '\\\\arccsch', '\\\\arg', '\\\\ch', '\\\\cosec', '\\\\cosh', '\\\\cot', '\\\\cotg', '\\\\coth', '\\\\csc', '\\\\ctg', '\\\\cth', '\\\\lg', '\\\\lb', '\\\\sec', '\\\\sinh', '\\\\sh', '\\\\tanh', '\\\\tg', '\\\\th'], UNCOMMON);\nmetadata('Functions', ['\\\\ln', '\\\\log', '\\\\exp', '\\\\lim'], SUPERCOMMON);\nmetadata('Functions', ['\\\\dim', '\\\\ker', '\\\\deg', '\\\\det', '\\\\mod', '\\\\min', '\\\\max'], COMMON);\nmetadata('Functions', ['\\\\hom'], RARE);\nmetadata('Decoration', ['\\\\rule'], ARCANE, '$0{2em}{1em}');\nmetadata('Decoration', ['\\\\color', '\\\\textcolor'], ARCANE, '{$0{m0}A}{$0{m1}B}{$0{m2}C }{$0{m3}a}{$0{m4}b}{$0{m5}c}{$0{m6}8}');\nmetadata('Decoration', ['\\\\overline', '\\\\underline'], COMMON, '$0{\\\\placeholder{}}');\nmetadata('Decoration', ['\\\\enclose'], RARE, '\\\\enclose{updiagonalstrike,roundedbox}[1px solid red, mathbackground=\"#fbc0bd\"]{x=0}');\nmetadata('Decoration', ['\\\\fcolorbox'], RARE, '\\\\fcolorbox{#cd0030}{#ffd400}{\\\\unicode{\"2B1A}}');\nmetadata('Decoration', ['\\\\colorbox'], RARE, '\\\\colorbox{#fbc0bd}{\\\\unicode{\"2B1A}}');\nmetadata('Decoration', ['\\\\boxed', '\\\\cancel', '\\\\bcancel', '\\\\xcancel'], RARE, '$0{\\\\placeholder{}}');\nmetadata('Decoration', ['\\\\bbox'], RARE, '\\\\bbox[#ffd400, solid 2px #ffd400]{\\\\unicode{\"2B1A}}');\nmetadata('Styling', ['\\\\mathbb'], SUPERCOMMON, '$0{Don Knuth}');\nmetadata('Styling', ['\\\\textbf', '\\\\textup', '\\\\textit', '\\\\textrm', '\\\\textsf', '\\\\texttt', '\\\\textnormal', '\\\\textmd', '\\\\textsl', '\\\\textsc', '\\\\mathsf', '\\\\mathtt', '\\\\mathrm', '\\\\mathfrak', '\\\\mathcal', '\\\\mathscr', '\\\\mathbf', '\\\\mathmd', '\\\\mathit', '\\\\text', '\\\\mbox', '\\\\Bbb', '\\\\bold', '\\\\bm', '\\\\boldsymbol'], COMMON, '$0{Don Knuth}');\nmetadata('Styling', ['\\\\frak', '\\\\tt', '\\\\bf', '\\\\it', '\\\\rmfamily', '\\\\sffamily', '\\\\ttfamily', '\\\\class', '\\\\cssId'], RARE, '{$0 Don Knuth}');\nmetadata('Styling', ['\\\\bfseries', '\\\\mdseries', '\\\\upshape', '\\\\slshape', '\\\\scshape'], RARE, '\\\\text{$0 Don Knuth}');\nmetadata('Styling', ['\\\\class', '\\\\cssId'], RARE, '$0{testIdentifier}{Don Knuth}'); // Note: In LaTeX, \\fontseries, \\fontfamily, \\fontshape are applicable to\n// text mode only\n\nmetadata('Styling', ['\\\\fontseries'], RARE, '\\\\text{$0{b}Don Knuth}');\nmetadata('Styling', ['\\\\fontfamily'], RARE, '\\\\text{$0{cmtt}Don Knuth}');\nmetadata('Styling', ['\\\\fontshape'], RARE, '\\\\text{$0{sc}Don Knuth}');\nmetadata('Styling', ['\\\\selectfont'], RARE, '\\\\text{$0}'); // no-op, but only valid in text mode\n\nmetadata('Styling', ['\\\\emph'], RARE, 'Don$0{Knuth}');\nmetadata('Styling', ['\\\\em'], RARE, 'Don{$0 Knuth}');\nmetadata('Layout', ['\\\\mathop', '\\\\mathbin', '\\\\mathrel', '\\\\mathopen', '\\\\mathclose', '\\\\mathpunct', '\\\\mathord', '\\\\mathinner', '\\\\operatorname', '\\\\operatorname*'], RARE, 'x=$0{arg}=0');\nmetadata('Layout', ['\\\\middle'], RARE, '\\\\left\\\\{x$0|x>0\\\\right\\\\}');\nmetadata('Layout', ['\\\\overset', '\\\\underset', '\\\\stackrel', '\\\\stackbin'], RARE, '$0{arg}{x=0}');\nmetadata('Layout', ['\\\\rlap', '\\\\mathrlap'], RARE, '$0{/}0');\nmetadata('Layout', ['\\\\llap', '\\\\mathllap'], RARE, 'o$0{/}');\nmetadata('Fractions', ['\\\\frac'], SUPERCOMMON, '$0{\\\\placeholder{}}{\\\\placeholder{}}');\nmetadata('Fractions', ['\\\\binom', '\\\\dfrac', '\\\\tfrac', '\\\\dbinom', '\\\\tbinom', '\\\\pdiff', '\\\\cfrac'], RARE, '$0{\\\\placeholder{}}{\\\\placeholder{}}');\nmetadata('Fractions', ['\\\\over', '\\\\atop', '\\\\choose'], RARE, '\\\\unicode{\"2B1A} $0 \\\\unicode{\"2B1A}');\nmetadata('Fractions', ['\\\\overwithdelims', '\\\\atopwithdelims'], RARE, '{\\\\unicode{\"2B1A} $0{\\\\lbrace}{\\\\rbrace} \\\\unicode{\"2B1A}}');\nmetadata('Extensible Operators', ['\\\\sum', '\\\\prod', '\\\\bigcap', '\\\\bigcup', '\\\\int'], SUPERCOMMON);\nmetadata('Extensible Operators', ['\\\\bigoplus', '\\\\smallint', '\\\\iint', '\\\\oint'], COMMON);\nmetadata('Extensible Operators', ['\\\\bigwedge', '\\\\bigvee', '\\\\coprod', '\\\\bigsqcup', '\\\\bigotimes', '\\\\bigodot', '\\\\biguplus', '\\\\intop', '\\\\sqcup', '\\\\sqcap', '\\\\uplus', '\\\\wr', '\\\\Cap', '\\\\Cup', '\\\\doublecap', '\\\\doublecup', '\\\\amalg', '\\\\iiint', '\\\\oiint', '\\\\oiiint', '\\\\intclockwise', '\\\\varointclockwise', '\\\\ointctrclockwise', '\\\\intctrclockwise'], RARE);\nmetadata('Accents', ['\\\\vec'], SUPERCOMMON);\nmetadata('Accents', ['\\\\bar', '\\\\ddot', '\\\\acute', '\\\\tilde', '\\\\check'], COMMON, '$0{\\\\placeholder{}}');\nmetadata('Accents', ['\\\\^', '\\\\`', \"\\\\'\"], RARE, '$0{e}');\nmetadata('Accents', ['\\\\c'], RARE, '$0{c}');\nmetadata('Accents', ['\\\\~'], RARE, '$0{n}');\nmetadata('Accents', ['\\\\mathring', '\\\\hat', '\\\\dot', '\\\\breve', '\\\\grave'], RARE, '$0{\\\\placeholder{}}');\nmetadata('Extensible Symbols', ['\\\\overrightarrow', '\\\\overleftarrow', '\\\\Overrightarrow', '\\\\overleftharpoon', '\\\\overrightharpoon', '\\\\overleftrightarrow', '\\\\overbrace', '\\\\overlinesegment', '\\\\overgroup', '\\\\widehat', '\\\\widecheck', '\\\\widetilde'], COMMON, '$0{ABC}');\nmetadata('Extensible Symbols', ['\\\\underrightarrow', '\\\\underleftarrow', '\\\\underleftrightarrow', '\\\\underbrace', '\\\\underlinesegment', '\\\\undergroup', '\\\\utilde'], COMMON, '$0{ABC}');\nmetadata('Sizing', ['\\\\tiny', '\\\\scriptsize', '\\\\footnotesize', '\\\\small', '\\\\normalsize', '\\\\large', '\\\\Large', '\\\\LARGE', '\\\\huge', '\\\\Huge'], RARE, '$0{x=0}');\nmetadata('Sizing', ['\\\\big', '\\\\Big', '\\\\bigg', '\\\\Bigg'], RARE, '$0($0)');\nmetadata('Sizing', ['\\\\bigl', '\\\\Bigl', '\\\\biggl', '\\\\Biggl'], RARE, '$0(');\nmetadata('Sizing', ['\\\\bigr', '\\\\Bigr', '\\\\biggr', '\\\\Biggr'], RARE, '$0)');\nmetadata('Sizing', ['\\\\bigm', '\\\\Bigm', '\\\\biggm', '\\\\Biggm'], RARE, '$0|');\nmetadata('Letterlike Symbols', ['\\\\nabla', '\\\\partial', '\\\\doubleStruckCapitalN', '\\\\N', '\\\\doubleStruckCapitalR', '\\\\R', '\\\\doubleStruckCapitalQ', '\\\\Q', '\\\\doubleStruckCapitalC', '\\\\C', '\\\\doubleStruckCapitalZ', '\\\\Z', '\\\\exponentialE', '\\\\forall', '\\\\exists', '\\\\nexists', '\\\\$', '\\\\%', '\\\\And', '\\\\degree'], SUPERCOMMON);\nmetadata('Letterlike Symbols', ['\\\\doubleStruckCapitalP', '\\\\P', '\\\\ell', '\\\\hbar', '\\\\hslash', '\\\\imath', '\\\\jmath', '\\\\imaginaryI', '\\\\imaginaryJ', '\\\\differentialD', '\\\\rd', '\\\\capitalDifferentialD', '\\\\rD', '\\\\differencedelta', '\\\\mid', '@', '\\\\Re', '\\\\Im'], COMMON);\nmetadata('Letterlike Symbols', ['\\\\top', '\\\\bot', '\\\\scriptCapitalE', '\\\\scriptCapitalH', '\\\\scriptCapitalL', '\\\\gothicCapitalC', '\\\\gothicCapitalH', '\\\\gothicCapitalI', '\\\\gothicCapitalR', '\\\\Bbbk', '\\\\Finv', '\\\\Game', '\\\\wp', '\\\\eth', '\\\\mho', '\\\\pounds', '\\\\yen', '\\\\euro'], RARE);\nmetadata('Crosses', ['\\\\dagger', '\\\\dag'], SUPERCOMMON);\nmetadata('Crosses', ['\\\\ddag', '\\\\ddagger', '\\\\maltese', '\\\\textdagger', '\\\\textdaggerdbl'], RARE);\nmetadata('Various', ['\\\\checkmark', '\\\\diagup', '\\\\diagdown', '\\\\angle', '\\\\measuredangle', '\\\\sphericalangle', '\\\\prime', '\\\\doubleprime', '\\\\backprime', '\\\\backdoubleprime', '\\\\sharp', '\\\\flat', '\\\\natural', '\\\\&', '\\\\#', '\\\\clubsuit', '\\\\spadesuit', '\\\\diamondsuit', '\\\\heartsuit', '\\\\backslash', '\\\\infty', '/', '\\\\_', '\\\\/', '|', \"'\"], RARE);\nmetadata('Various', ['\\\\unicode'], RARE, '$0{\"2B1A}');\nmetadata('Arrows', ['\\\\longrightarrow', '\\\\rightarrow', '\\\\Longrightarrow', '\\\\Rightarrow'], SUPERCOMMON);\nmetadata('Arrows', ['\\\\longmapsto', '\\\\mapsto', '\\\\Longleftrightarrow', '\\\\rightleftarrows', '\\\\leftarrow', '\\\\curvearrowleft', '\\\\uparrow', '\\\\downarrow', '\\\\hookrightarrow', '\\\\rightharpoonup', '\\\\rightleftharpoons'], COMMON);\nmetadata('Arrows', ['\\\\Leftarrow', '\\\\longleftrightarrow', '\\\\longleftarrow', '\\\\Longleftarrow', '\\\\searrow', '\\\\nearrow', '\\\\swarrow', '\\\\nwarrow', '\\\\Uparrow', '\\\\Downarrow', '\\\\updownarrow', '\\\\Updownarrow', '\\\\hookleftarrow', '\\\\leftharpoonup', '\\\\leftharpoondown', '\\\\rightharpoondown', '\\\\leftrightarrows', '\\\\dashrightarrow', '\\\\dashleftarrow', '\\\\leftleftarrows', '\\\\Lleftarrow', '\\\\twoheadleftarrow', '\\\\leftarrowtail', '\\\\looparrowleft', '\\\\leftrightharpoons', '\\\\circlearrowleft', '\\\\Lsh', '\\\\upuparrows', '\\\\downharpoonleft', '\\\\multimap', '\\\\leftrightsquigarrow', '\\\\twoheadrightarrow', '\\\\rightarrowtail', '\\\\looparrowright', '\\\\curvearrowright', '\\\\circlearrowright', '\\\\Rsh', '\\\\downdownarrows', '\\\\upharpoonright', '\\\\downharpoonright', '\\\\rightsquigarrow', '\\\\leadsto', '\\\\Rrightarrow', '\\\\restriction'], RARE);\nmetadata('Arrows', ['\\\\upharpoonleft', '\\\\rightrightarrows'], CRYPTIC); // AMS Negated Arrows\n\nmetadata('Negated Arrows', ['\\\\nrightarrow', '\\\\nRightarrow', '\\\\nleftrightarrow', '\\\\nLeftrightarrow', '\\\\nleftarrow', '\\\\nLeftarrow'], RARE);\nmetadata('Extensible Symbols', ['\\\\xrightarrow', '\\\\xleftarrow', '\\\\xRightarrow', '\\\\xLeftarrow', '\\\\xleftharpoonup', '\\\\xleftharpoondown', '\\\\xrightharpoonup', '\\\\xrightharpoondown', '\\\\xlongequal', '\\\\xtwoheadleftarrow', '\\\\xtwoheadrightarrow', '\\\\xleftrightarrow', '\\\\xLeftrightarrow', '\\\\xrightleftharpoons', '\\\\xleftrightharpoons', '\\\\xhookleftarrow', '\\\\xhookrightarrow', '\\\\xmapsto', '\\\\xtofrom', '\\\\xrightleftarrows', '\\\\xrightequilibrium', '\\\\xleftequilibrium'], RARE, '$0[below]{above}=0'); // AMS Negated Binary Relations\n\nmetadata('Negated Relations', ['\\\\nless', '\\\\nleqslant', '\\\\lneq', '\\\\lneqq', '\\\\nleqq', '\\\\unlhd', '\\\\unrhd', '\\\\lvertneqq', '\\\\lnsim', '\\\\lnapprox', '\\\\nprec', '\\\\npreceq', '\\\\precnsim', '\\\\precnapprox', '\\\\nsim', '\\\\nshortmid', '\\\\nmid', '\\\\nvdash', '\\\\nvDash', '\\\\ngtr', '\\\\ngeqslant', '\\\\ngeqq', '\\\\gneq', '\\\\gneqq', '\\\\gvertneqq', '\\\\gnsim', '\\\\nsucc', '\\\\succnsim', '\\\\ncong', '\\\\nshortparallel', '\\\\nparallel', '\\\\nVDash', '\\\\nVdash', '\\\\precneqq', '\\\\succneqq', '\\\\gnapprox', '\\\\succnapprox', '\\\\nsucceq'], RARE); // AMS Hebrew\n\nmetadata('Hebrew', ['\\\\aleph', '\\\\beth', '\\\\daleth', '\\\\gimel'], RARE);\nmetadata('Fences', ['\\\\lbrace', '\\\\rbrace', '\\\\vert', '\\\\Vert', '\\\\{', '\\\\}', '(', ')', '[', ']'], SUPERCOMMON);\nmetadata('Fences', ['\\\\langle', '\\\\rangle', '\\\\lfloor', '\\\\rfloor', '\\\\lceil', '\\\\rceil', '\\\\mvert', '\\\\|', '\\\\mVert'], COMMON);\nmetadata('Fences', ['\\\\lvert', '\\\\rvert', '\\\\lVert', '\\\\rVert', '\\\\lbrack', '\\\\rbrack', '\\\\ulcorner', '\\\\urcorner', '\\\\llcorner', '\\\\lrcorner', '\\\\lgroup', '\\\\rgroup', '\\\\lmoustache', '\\\\rmoustache'], RARE);\nmetadata('Relations', ['=', '\\\\ne', '\\\\neq', '<', '>', '\\\\leqslant', '\\\\geqslant', '\\\\approx'], SUPERCOMMON);\nmetadata('Relations', ['\\\\lt', '\\\\gt', '\\\\le', '\\\\ge', '\\\\leq', '\\\\geq', '\\\\gg', '\\\\cong', '\\\\equiv', '\\\\prec', '\\\\preceq', '\\\\succ', '\\\\perp', '\\\\parallel', '\\\\propto', '\\\\smile', '\\\\frown', '\\\\sim', '\\\\gtrsim'], COMMON);\nmetadata('Relations', ['\\\\coloneq', '\\\\succeq', '\\\\approxeq', '\\\\thickapprox', '\\\\lessapprox', '\\\\gtrapprox', '\\\\precapprox', '\\\\succapprox', '\\\\thicksim', '\\\\succsim', '\\\\precsim', '\\\\backsim', '\\\\eqsim', '\\\\backsimeq', '\\\\simeq', '\\\\lesssim', '\\\\nleq', '\\\\ngeq', '\\\\smallsmile', '\\\\smallfrown', '\\\\bowtie', '\\\\asymp', '\\\\leqq', '\\\\eqslantless', '\\\\ll', '\\\\lll', '\\\\lessgtr', '\\\\lesseqgtr', '\\\\lesseqqgtr', '\\\\risingdotseq', '\\\\fallingdotseq', '\\\\preccurlyeq', '\\\\curlyeqprec', '\\\\vDash', '\\\\Vvdash', '\\\\bumpeq', '\\\\Bumpeq', '\\\\geqq', '\\\\eqslantgtr', '\\\\ggg', '\\\\gtrless', '\\\\gtreqless', '\\\\gtreqqless', '\\\\succcurlyeq', '\\\\curlyeqsucc', '\\\\Vdash', '\\\\shortmid', '\\\\shortparallel', '\\\\between', '\\\\pitchfork', '\\\\varpropto', '\\\\backepsilon', '\\\\llless', '\\\\gggtr', '\\\\lhd', '\\\\rhd', '\\\\Join', '\\\\doteq', '\\\\doteqdot', '\\\\Doteq', '\\\\eqcirc', '\\\\circeq', '\\\\lessdot', '\\\\gtrdot', '\\\\measeq', '\\\\eqdef', '\\\\questeq'], RARE);\nmetadata('Logic', ['\\\\leftrightarrow', '\\\\Leftrightarrow', '\\\\to'], SUPERCOMMON);\nmetadata('Logic', ['\\\\models', '\\\\vdash'], COMMON);\nmetadata('Logic', ['\\\\therefore', '\\\\because', '\\\\implies', '\\\\gets', '\\\\dashv', '\\\\impliedby', '\\\\biconditional', '\\\\roundimplies'], RARE);\nmetadata('Operators', ['+', '-', '*', '\\\\cdot'], SUPERCOMMON);\nmetadata('Operators', ['\\\\sqrt'], SUPERCOMMON, '$0{\\\\placeholder{}}');\nmetadata('Operators', ['\\\\pm', '\\\\mp', '\\\\times', '\\\\div', '\\\\surd'], COMMON);\nmetadata('Operators', ['\\\\ltimes', '\\\\rtimes', '\\\\leftthreetimes', '\\\\rightthreetimes', '\\\\intercal', '\\\\dotplus', '\\\\centerdot', '\\\\doublebarwedge', '\\\\divideontimes', '\\\\divides'], RARE);\nmetadata('Logic', ['\\\\wedge', '\\\\vee', '\\\\neg'], SUPERCOMMON);\nmetadata('Logic', ['\\\\lnot'], COMMON);\nmetadata('Logic', ['\\\\land', '\\\\lor', '\\\\barwedge', '\\\\veebar', '\\\\nor', '\\\\curlywedge', '\\\\curlyvee'], RARE);\nmetadata('Greek', ['\\\\alpha', '\\\\beta', '\\\\gamma', '\\\\delta', '\\\\epsilon', '\\\\varepsilon', '\\\\zeta', '\\\\eta', '\\\\theta', '\\\\vartheta', '\\\\iota', '\\\\kappa', '\\\\varkappa', '\\\\lambda', '\\\\mu', '\\\\nu', '\\\\xi', '\\\\pi', '\\\\varpi', '\\\\rho', '\\\\varrho', '\\\\sigma', '\\\\varsigma', '\\\\tau', '\\\\phi', '\\\\varphi', '\\\\upsilon', '\\\\chi', '\\\\psi', '\\\\omega', '\\\\Gamma', '\\\\Delta', '\\\\Theta', '\\\\Lambda', '\\\\Xi', '\\\\Pi', '\\\\Sigma', '\\\\Upsilon', '\\\\Phi', '\\\\Psi', '\\\\Omega', '\\\\digamma', '\\\\omicron'], COMMON);\nmetadata('Sets', ['\\\\emptyset', '\\\\varnothing', '\\\\cap', '\\\\cup', '\\\\in', '\\\\notin', '\\\\subset', '\\\\supset', '\\\\subseteq', '\\\\supseteq', '\\\\sqsubseteq'], SUPERCOMMON);\nmetadata('Sets', ['\\\\setminus', '\\\\not', '\\\\ni', '\\\\sqsupseteq', '\\\\nsupseteqq', '\\\\supsetneq', '\\\\varsupsetneq', '\\\\supsetneqq', '\\\\varsupsetneqq'], COMMON);\nmetadata('Sets', ['\\\\smallsetminus', '\\\\complement', '\\\\owns', '\\\\subsetneq', '\\\\varsubsetneq', '\\\\subsetneqq', '\\\\varsubsetneqq', '\\\\nsubset', '\\\\nsupset', '\\\\nsubseteq', '\\\\nsupseteq', '\\\\nsubseteqq', '\\\\subseteqq', '\\\\Subset', '\\\\sqsubset', '\\\\supseteqq', '\\\\Supset', '\\\\sqsupset'], RARE);\nmetadata('Spacing', ['\\\\space, \\\\quad', '\\\\qquad'], COMMON, '\\\\unicode{\"203A}$0\\\\unicode{\"2039}');\nmetadata('Spacing', ['\\\\!', '\\\\,', '\\\\:', '\\\\;', '\\\\enskip', '\\\\enspace'], RARE, '\\\\unicode{\"203A}$0\\\\unicode{\"2039}');\nmetadata('Spacing', ['\\\\hspace', '\\\\hspace*'], RARE, '\\\\unicode{\"203A}$0{1em}\\\\unicode{\"2039}');\nmetadata('Punctuation', ['\\\\colon', '\\\\cdotp', '\\\\ldots', '\\\\cdots', '\\\\ddots', '\\\\vdots', '?', '!', ':', '\"', ',', '.', ';'], COMMON);\nmetadata('Punctuation', ['\\\\mathellipsis', '\\\\ldotp', '\\\\Colon'], RARE);\nmetadata('Boxes', ['\\\\square', '\\\\Box'], COMMON);\nmetadata('Boxes', ['\\\\blacksquare', '\\\\boxminus', '\\\\boxplus', '\\\\boxtimes', '\\\\boxdot'], RARE);\nmetadata('Circles', ['\\\\circ', '\\\\bullet', '\\\\circleddash', '\\\\oplus', '\\\\otimes'], COMMON);\nmetadata('Circles', ['\\\\bigcirc', '\\\\circledast', '\\\\ominus', '\\\\circledcirc', '\\\\oslash', '\\\\circledS', '\\\\circledR', '\\\\odot'], RARE);\nmetadata('Triangles', ['\\\\triangle', '\\\\triangleq'], COMMON);\nmetadata('Triangles', ['\\\\bigtriangleup', '\\\\vartriangle', '\\\\triangledown', '\\\\bigtriangledown', '\\\\triangleleft', '\\\\vartriangleleft', '\\\\trianglelefteq', '\\\\ntriangleleft', '\\\\ntrianglelefteq', '\\\\triangleright', '\\\\vartriangleright', '\\\\trianglerighteq', '\\\\ntriangleright', '\\\\ntrianglerighteq', '\\\\blacktriangle', '\\\\blacktriangledown', '\\\\blacktriangleleft', '\\\\blacktriangleright'], RARE);\nmetadata('Shapes', ['\\\\ast', '\\\\star'], COMMON);\nmetadata('Shapes', ['\\\\diamond', '\\\\Diamond', '\\\\lozenge', '\\\\blacklozenge', '\\\\bigstar'], RARE);\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __classPrivateFieldGet(receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n}\n\nvar _mathfield;\n\nconst MATHFIELD_TEMPLATE = document.createElement('template');\nMATHFIELD_TEMPLATE.innerHTML = \"<style>\\n:host {\\n    display: block;\\n}\\n:host([hidden]) {\\n    display: none;\\n}\\n:host([disabled]) {\\n    opacity:  .5;\\n}\\n:host(:focus), :host(:focus-within) {\\n    outline: Highlight auto 1px;    /* For Firefox */\\n    outline: -webkit-focus-ring-color auto 1px;\\n}\\n</style>\\n<div></div><slot style=\\\"display:none\\\"></slot>\"; //\n// Deferred State\n//\n// Methods such as `setOptions()` or `getOptions()` could be called before\n// the element has been connected (i.e. `mf = new MathfieldElement(); mf.setConfig()`...)\n// and therefore before the matfield instance has been created.\n// So we'll stash any deferred operations on options (and value) here, and\n// will apply them to the element when it gets connected to the DOM.\n//\n\nconst gDeferredState = new WeakMap();\n/**\r\n * The `MathfieldElement` class provides special properties and\r\n * methods to control the display and behavior of `<math-field>`\r\n * elements.\r\n *\r\n * It inherits many useful properties and methods from [[`HTMLElement`]] such\r\n * as `style`, `tabIndex`, `addEventListener()`, `getAttribute()`,  etc...\r\n *\r\n * To create a new `MathfieldElement`:\r\n *\r\n * ```javascript\r\n * // 1. Create a new MathfieldElement\r\n * const mfe = new MathfieldElement();\r\n * // 2. Attach it to the DOM\r\n * document.body.appendChild(mfe);\r\n * ```\r\n *\r\n * The `MathfieldElement` constructor has an optional argument of\r\n * [[`MathfieldOptions`]] to configure the element. The options can also\r\n * be modified later:\r\n *\r\n * ```javascript\r\n * // Setting options during construction\r\n * const mfe = new MathfieldElement({smartFence: false});\r\n * // Modifying options after construction\r\n * mfe.setOptions({smartFence: true});\r\n * ```\r\n *\r\n * ### CSS Variables\r\n *\r\n * To customize the appearance of the mathfield, declare the following CSS\r\n * variables (custom properties) in a ruleset that applied to the mathfield.\r\n * ```css\r\n * math-field {\r\n *  --hue: 10       // Set the highlight color and caret to a reddish hue\r\n * }\r\n * ```\r\n *\r\n * | CSS Variable | Usage |\r\n * |:---|:---|\r\n * | `--hue` | Hue of the highlight color and the caret |\r\n * | `--highlight` | Color of the selection |\r\n * | `--highlight-inactive` | Color of the selection, when the mathfield is not focused |\r\n * | `--caret` | Color of the caret/insertion point |\r\n * | `--primary` | Primary accent color, used for example in the virtual keyboard |\r\n * | `--text-font-family` | The font stack used in text mode |\r\n * | `--keyboard-zindex` | The z-index attribute of the virtual keyboard panel |\r\n *\r\n * ### CSS Parts\r\n *\r\n * To style the virtual keyboard toggle, use the `virtual-keyboard-toggle` CSS\r\n * part. To use it, define a CSS rule with a `::part()` selector\r\n * for example:\r\n * ```css\r\n * math-field::part(virtual-keyboard-toggle) {\r\n *  color: red;\r\n * }\r\n * ```\r\n *\r\n *\r\n * ### Attributes\r\n *\r\n * An attribute is a key-value pair set as part of the tag:\r\n *\r\n * ```html\r\n * <math-field locale=\"fr\"></math-field>\r\n * ```\r\n *\r\n * The supported attributes are listed in the table below with their correspnding\r\n * property.\r\n *\r\n * The property can be changed either directly on the\r\n * `MathfieldElement` object, or using `setOptions()` if it is prefixed with\r\n * `options.`, for example\r\n * ```javascript\r\n *  getElementById('mf').value = '\\\\sin x';\r\n *  getElementById('mf').setOptions({horizontalSpacingScale: 1.1});\r\n * ```\r\n *\r\n * The values of attributes and properties are reflected, which means you can change one or the\r\n * other, for example:\r\n * ```javascript\r\n * getElementById('mf').setAttribute('virtual-keyboard-mode',  'manual');\r\n * console.log(getElementById('mf').getOption('virtualKeyboardMode'));\r\n * // Result: \"manual\"\r\n * getElementById('mf').setOptions({virtualKeyboardMode: 'onfocus');\r\n * console.log(getElementById('mf').getAttribute('virtual-keyboard-mode');\r\n * // Result: 'onfocus'\r\n * ```\r\n *\r\n * An exception is the `value` property, which is not reflected on the `value`\r\n * attribute: the `value` attribute remains at its initial value.\r\n *\r\n *\r\n * | Attribute | Property |\r\n * |:---|:---|\r\n * | `disabled` | `disabled` |\r\n * | `default-mode` | `options.defaultMode` |\r\n * | `fonts-directory` | `options.fontsDirectory` |\r\n * | `horizontal-spacing-scale` | `options.horizontalSpacingScale` |\r\n * | `ignore-spacebar-in-math-mode` | `options.ignoreSpacbarInMathMode` |\r\n * | `inline-shortcut-timeout` | `options.inlineShortcutTimeout` |\r\n * | `keypress-vibration` | `options.keypressVibration` |\r\n * | `letter-shape-style` | `options.letterShapeStyle` |\r\n * | `locale` | `options.locale` |\r\n * | `read-only` | `options.readOnly` |\r\n * | `remove-extraneous-parentheses` | `options.removeExtraneousParentheses` |\r\n * | `smart-fence` | `options.smartFence` |\r\n * | `smart-mode` | `options.smartMode` |\r\n * | `smart-superscript` | `options.superscript` |\r\n * | `speech-engine` | `options.speechEngine` |\r\n * | `speech-engine-rate` | `options.speechEngineRate` |\r\n * | `speech-engine-voice` | `options.speechEngineVoice` |\r\n * | `text-to-speech-markup` | `options.textToSpeechMarkup` |\r\n * | `text-to-speech-rules` | `options.textToSpeechRules` |\r\n * | `value` | value |\r\n * | `virtual-keyboard-layout` | `options.keyboardLayout` |\r\n * | `virtual-keyboard-mode` | `options.keyboardMode` |\r\n * | `virtual-keyboard-theme` | `options.keyboardTheme` |\r\n * | `virtual-keyboards` | `options.keyboards` |\r\n *\r\n * See [[`MathfieldOptions`]] for more details about these options.\r\n *\r\n * In addition, the following [global attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes)\r\n * can also be used:\r\n * - `class`\r\n * - `data-*`\r\n * - `hidden`\r\n * - `id`\r\n * - `item*`\r\n * - `style`\r\n * - `tabindex`\r\n *\r\n *\r\n * ### Events\r\n *\r\n * Listen to these events by using `addEventListener()`. For events with additional\r\n * arguments, the arguments are availble in `event.detail`.\r\n *\r\n * | Event Name  | Description |\r\n * |:---|:---|\r\n * | `input` | The value of the mathfield has been modified. This happens on almost every keystroke in the mathfield.  |\r\n * | `change` | The user has commited the value of the mathfield. This happens when the user presses **Return** or leaves the mathfield. |\r\n * | `selection-change` | The selection (or caret position) in the mathfield has changed |\r\n * | `mode-change` | The mode (`math`, `text`) of the mathfield has changed |\r\n * | `undo-state-change` |  The state of the undo stack has changed |\r\n * | `read-aloud-status-change` | The status of a read aloud operation has changed |\r\n * | `virtual-keyboard-toggle` | The visibility of the virtual keyboard panel has changed |\r\n * | `blur` | The mathfield is losing focus |\r\n * | `focus` | The mathfield is gaining focus |\r\n * | `focus-out` | The user is navigating out of the mathfield, typically using the keyboard<br> `detail: {direction: 'forward' | 'backward' | 'upward' | 'downward'}` **cancellable**|\r\n * | `math-error` | A parsing or configuration error happened <br> `detail: ErrorListener<ParserErrorCode | MathfieldErrorCode>` |\r\n * | `keystroke` | The user typed a keystroke with a physical keyboard <br> `detail: {keystroke: string, event: KeyboardEvent}` |\r\n * | `mount` | The element has been attached to the DOM |\r\n * | `unmount` | The element is about to be removed from the DOM |\r\n *\r\n */\n\nclass MathfieldElement extends HTMLElement {\n  /**\r\n   * To create programmatically a new mahfield use:\r\n   * ```javascript\r\n  let mfe = new MathfieldElement();\r\n  // Set initial value and options\r\n  mfe.value = \"\\\\frac{\\\\sin(x)}{\\\\cos(x)}\";\r\n  // Options can be set either as an attribute (for simple options)...\r\n  mfe.setAttribute('virtual-keyboard-layout', 'dvorak');\r\n  // ... or using `setOptions()`\r\n  mfe.setOptions({\r\n      virtualKeyboardMode: 'manual',\r\n  });\r\n  // Attach the element to the DOM\r\n  document.body.appendChild(mfe);\r\n  * ```\r\n  */\n  constructor(options) {\n    var _a;\n\n    super();\n\n    _mathfield.set(this, void 0);\n\n    this.attachShadow({\n      mode: 'open'\n    });\n    this.shadowRoot.appendChild(MATHFIELD_TEMPLATE.content.cloneNode(true));\n    const slot = this.shadowRoot.querySelector('slot:not([name])'); // When the elements get focused (through tabbing for example)\n    // focus the mathfield\n\n    this.shadowRoot.host.addEventListener('focus', _event => this.focus()); // Inline options (as a JSON structure in the markup)\n\n    try {\n      const json = slot.assignedElements().filter(x => x['type'] !== 'application/json').map(x => x.textContent).join('');\n\n      if (json) {\n        this.setOptions(JSON.parse(json));\n      }\n    } catch (e) {\n      console.log(e);\n    } // Record the (optional) configuration options, as a deferred state\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Check if there is a `value` attribute and set the initial value\n    // of the mathfield from it\n\n\n    if (this.hasAttribute('value')) {\n      this.value = this.getAttribute('value');\n    } else {\n      this.value = (_a = slot === null || slot === void 0 ? void 0 : slot.assignedNodes().map(x => x.nodeType === 3 ? x.textContent : '').join('').trim()) !== null && _a !== void 0 ? _a : '';\n    }\n\n    slot.addEventListener('slotchange', e => {\n      if (e.target !== slot) return;\n      const value = slot.assignedNodes().map(x => x.nodeType === 3 ? x.textContent : '').join('').trim();\n\n      if (!__classPrivateFieldGet(this, _mathfield)) {\n        this.value = value;\n      } else {\n        // Don't suppress notification changes. We need to know\n        // if the value has changed indirectly through slot manipulation\n        __classPrivateFieldGet(this, _mathfield).setValue(value, {\n          insertionMode: 'replaceAll'\n        });\n      }\n    });\n  }\n  /**\r\n   * Private lifecycle hooks\r\n   * @internal\r\n   */\n\n\n  static get optionsAttributes() {\n    return {\n      'default-mode': 'string',\n      'fonts-directory': 'string',\n      'horizontal-spacing-scale': 'number',\n      'ignore-spacebar-in-math-mode': 'boolean',\n      'inline-shortcut-timeout': 'number',\n      'keypress-vibration': 'boolean',\n      'letter-shape-style': 'string',\n      locale: 'string',\n      'read-only': 'boolean',\n      'remove-extraneous-parentheses': 'boolean',\n      'smart-fence': 'boolean',\n      'smart-mode': 'boolean',\n      'smart-superscript': 'boolean',\n      'speech-engine': 'string',\n      'speech-engine-rate': 'string',\n      'speech-engine-voice': 'string',\n      'text-to-speech-markup': 'string',\n      'text-to-speech-rules': 'string',\n      'virtual-keyboard-layout': 'string',\n      'virtual-keyboard-mode': 'string',\n      'virtual-keyboard-theme': 'string',\n      'virtual-keyboards': 'string'\n    };\n  }\n  /**\r\n   * Custom elements lifecycle hooks\r\n   * @internal\r\n   */\n\n\n  static get observedAttributes() {\n    return [...Object.keys(MathfieldElement.optionsAttributes), 'disabled'];\n  }\n\n  get mode() {\n    var _a;\n\n    return (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.mode;\n  }\n\n  set mode(value) {\n    if (!__classPrivateFieldGet(this, _mathfield)) return;\n    __classPrivateFieldGet(this, _mathfield).mode = value;\n  }\n\n  getOptions(keys) {\n    if (__classPrivateFieldGet(this, _mathfield)) {\n      return get(__classPrivateFieldGet(this, _mathfield).options, keys);\n    }\n\n    if (!gDeferredState.has(this)) return null;\n    return get(update(getDefault(), gDeferredState.get(this).options), keys);\n  }\n  /**\r\n   *  @category Options\r\n   */\n\n\n  getOption(key) {\n    return this.getOptions([key]);\n  }\n  /**\r\n   *  @category Options\r\n   */\n\n\n  setOptions(options) {\n    if (__classPrivateFieldGet(this, _mathfield)) {\n      __classPrivateFieldGet(this, _mathfield).setOptions(options);\n    } else {\n      if (gDeferredState.has(this)) {\n        gDeferredState.set(this, {\n          value: gDeferredState.get(this).value,\n          selection: [{\n            start: 0,\n            end: -1\n          }],\n          options: _objectSpread(_objectSpread({}, gDeferredState.get(this).options), options)\n        });\n      } else {\n        gDeferredState.set(this, {\n          value: '',\n          selection: [{\n            start: 0\n          }],\n          options: options\n        });\n      }\n    } // Reflect options to attributes\n\n\n    reflectAttributes(this);\n  }\n  /**\r\n   * Execute a [[`Commands`|command]] defined by a selector.\r\n   * ```javascript\r\n   * mfe.executeCommand('add-column-after');\r\n   * mfe.executeCommand(['switch-mode', 'math']);\r\n   * ```\r\n   *\r\n   * @param command - A selector, or an array whose first element\r\n   * is a selector, and whose subsequent elements are arguments to the selector.\r\n   *\r\n   * Selectors can be passed either in camelCase or kebab-case.\r\n   *\r\n   * ```javascript\r\n   * // Both calls do the same thing\r\n   * mfe.executeCommand('selectAll');\r\n   * mfe.executeCommand('select-all');\r\n   * ```\r\n   */\n\n\n  executeCommand(command) {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.executeCommand(command)) !== null && _b !== void 0 ? _b : false;\n  }\n\n  getValue(arg1, arg2, arg3) {\n    var _a, _b;\n\n    let ranges;\n    let format;\n\n    if (typeof arg1 === 'undefined') {\n      format = 'latex';\n      ranges = [{\n        start: 0,\n        end: -1\n      }];\n    } else if (typeof arg1 === 'string') {\n      format = arg1;\n      ranges = [{\n        start: 0,\n        end: -1\n      }];\n    } else if (typeof arg1 === 'number' && typeof arg2 === 'number') {\n      ranges = [{\n        start: arg1,\n        end: arg2 !== null && arg2 !== void 0 ? arg2 : -1\n      }];\n      format = arg3 !== null && arg3 !== void 0 ? arg3 : 'latex';\n    } else if (Array.isArray(arg1)) {\n      ranges = arg1;\n      format = (_a = arg2) !== null && _a !== void 0 ? _a : 'latex';\n    } else {\n      ranges = [arg1];\n      format = (_b = arg2) !== null && _b !== void 0 ? _b : 'latex';\n    }\n\n    if (__classPrivateFieldGet(this, _mathfield)) {\n      return __classPrivateFieldGet(this, _mathfield).getValue(ranges, format);\n    }\n\n    if (gDeferredState.has(this)) {\n      const fullRange = ranges.length === 1 && ranges[0].start === 0 && ranges[0].end === -1;\n\n      if (format === 'latex' && fullRange) {\n        return gDeferredState.get(this).value;\n      }\n    }\n\n    return undefined;\n  }\n  /**\r\n   *  @category Accessing and changing the content\r\n   */\n\n\n  setValue(value, options) {\n    if (__classPrivateFieldGet(this, _mathfield)) {\n      __classPrivateFieldGet(this, _mathfield).setValue(value, options);\n\n      return;\n    }\n\n    if (gDeferredState.has(this)) {\n      gDeferredState.set(this, {\n        value,\n        selection: [{\n          start: 0,\n          end: -1,\n          direction: 'forward'\n        }],\n        options: gDeferredState.get(this).options\n      });\n      return;\n    }\n\n    gDeferredState.set(this, {\n      value,\n      selection: [{\n        start: 0,\n        end: -1,\n        direction: 'forward'\n      }],\n      options: getOptionsFromAttributes(this)\n    });\n  }\n  /**\r\n   * Return true if the mathfield is currently focused (responds to keyboard\r\n   * input).\r\n   *\r\n   * @category Focus\r\n   *\r\n   */\n\n\n  hasFocus() {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.hasFocus()) !== null && _b !== void 0 ? _b : false;\n  }\n  /**\r\n   * Sets the focus to the mathfield (will respond to keyboard input).\r\n   *\r\n   * @category Focus\r\n   *\r\n   */\n\n\n  focus() {\n    var _a;\n\n    (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  /**\r\n   * Remove the focus from the mathfield (will no longer respond to keyboard\r\n   * input).\r\n   *\r\n   * @category Focus\r\n   *\r\n   */\n\n\n  blur() {\n    var _a;\n\n    (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.blur();\n  }\n  /**\r\n   * Select the content of the mathfield.\r\n   * @category Selection\r\n   */\n\n\n  select() {\n    var _a;\n\n    (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.select();\n  }\n  /**\r\n   * Inserts a block of text at the current insertion point.\r\n   *\r\n   * This method can be called explicitly or invoked as a selector with\r\n   * `executeCommand(\"insert\")`.\r\n   *\r\n   * After the insertion, the selection will be set according to the\r\n   * `options.selectionMode`.\r\n   *\r\n   *  @category Accessing and changing the content\r\n   */\n\n\n  insert(s, options) {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.insert(s, options)) !== null && _b !== void 0 ? _b : false;\n  }\n  /**\r\n   * Updates the style (color, bold, italic, etc...) of the selection or sets\r\n   * the style to be applied to future input.\r\n   *\r\n   * If there is a selection, the style is applied to the selection\r\n   *\r\n   * If the selection already has this style, it is removed.\r\n   *\r\n   * If the selection has the style partially applied (i.e. only some\r\n   * sections), it is removed from those sections, and applied to the\r\n   * entire selection.\r\n   *\r\n   * If there is no selection, the style will apply to the next character typed.\r\n   *\r\n   * @category Accessing and changing the content\r\n   */\n\n\n  applyStyle(style) {\n    var _a;\n\n    return (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.applyStyle(style);\n  }\n  /**\r\n   * The bottom location of the caret (insertion point) in viewport\r\n   * coordinates.\r\n   *\r\n   * See also [[`setCaretPoint`]]\r\n   * @category Selection\r\n   */\n\n\n  get caretPoint() {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.getCaretPoint()) !== null && _b !== void 0 ? _b : null;\n  }\n\n  set caretPoint(point) {\n    var _a;\n\n    (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.setCaretPoint(point.x, point.y);\n  }\n  /**\r\n   * `x` and `y` are in viewport coordinates.\r\n   *\r\n   * Return true if the location of the point is a valid caret location.\r\n   *\r\n   * See also [[`caretPoint`]]\r\n   * @category Selection\r\n   */\n\n\n  setCaretPoint(x, y) {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.setCaretPoint(x, y)) !== null && _b !== void 0 ? _b : false;\n  }\n  /**\r\n   *  Return an array of ranges matching the argument.\r\n   *\r\n   * An array is always returned, but it has no element if there are no\r\n   * matching items.\r\n   */\n\n\n  find(latex) {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.find(latex)) !== null && _b !== void 0 ? _b : [];\n  }\n  /**\r\n   * Custom elements lifecycle hooks\r\n   * @internal\r\n   */\n\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) this.setAttribute('role', 'textbox'); // this.setAttribute('aria-multiline', 'false');\n\n    if (!this.hasAttribute('tabindex')) this.setAttribute('tabindex', '0');\n\n    __classPrivateFieldSet(this, _mathfield, new MathfieldPrivate(this.shadowRoot.querySelector(':host > div'), _objectSpread(_objectSpread(_objectSpread({}, getOptionsFromAttributes(this)), gDeferredState.has(this) ? gDeferredState.get(this).options : {}), {}, {\n      onBlur: () => {\n        this.dispatchEvent(new Event('blur', {\n          cancelable: false,\n          bubbles: false\n        }));\n      },\n      onContentDidChange: () => {\n        this.dispatchEvent(new Event('input', {\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onError: err => {\n        this.dispatchEvent(new CustomEvent('math-error', {\n          detail: {\n            code: err.code,\n            arg: err.arg,\n            latex: err.latex,\n            before: err.before,\n            after: err.after\n          },\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onFocus: () => {\n        this.dispatchEvent(new Event('focus', {\n          cancelable: false,\n          bubbles: false\n        }));\n      },\n      onKeystroke: (_sender, keystroke, ev) => {\n        return this.dispatchEvent(new CustomEvent('keystroke', {\n          detail: {\n            keystroke,\n            event: ev\n          },\n          cancelable: true,\n          bubbles: true\n        }));\n      },\n      onModeChange: (_sender, _mode) => {\n        this.dispatchEvent(new Event('mode-change', {\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onCommit: _sender => {\n        // Match the DOM event sent by `<input>`, `<textarea>`, etc...\n        // Sent when the [Return] or [Enter] key is pressed, or on\n        // focus loss if the content has changed.\n        this.dispatchEvent(new Event('change', {\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onMoveOutOf: (_sender, direction) => {\n        return this.dispatchEvent(new CustomEvent('focus-out', {\n          detail: {\n            direction\n          },\n          cancelable: true,\n          bubbles: true\n        }));\n      },\n      onTabOutOf: (_sender, direction) => {\n        return this.dispatchEvent(new CustomEvent('focus-out', {\n          detail: {\n            direction\n          },\n          cancelable: true,\n          bubbles: true\n        }));\n      },\n      onReadAloudStatus: () => {\n        this.dispatchEvent(new Event('read-aloud-status-change', {\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onSelectionDidChange: () => {\n        this.dispatchEvent(new Event('selection-change', {\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onUndoStateDidChange: () => {\n        this.dispatchEvent(new Event('undo-state-change', {\n          cancelable: false,\n          bubbles: true\n        }));\n      },\n      onVirtualKeyboardToggle: (_sender, _visible, _keyboardElement) => {\n        this.dispatchEvent(new Event('virtual-keyboard-toggle', {\n          bubbles: true,\n          cancelable: false\n        }));\n      }\n    })));\n\n    if (gDeferredState.has(this)) {\n      const suppressChangeNotifications = __classPrivateFieldGet(this, _mathfield).model.suppressChangeNotifications;\n\n      __classPrivateFieldGet(this, _mathfield).model.suppressChangeNotifications = true;\n\n      __classPrivateFieldGet(this, _mathfield).setValue(gDeferredState.get(this).value);\n\n      __classPrivateFieldGet(this, _mathfield).selection = gDeferredState.get(this).selection;\n      gDeferredState.delete(this);\n      __classPrivateFieldGet(this, _mathfield).model.suppressChangeNotifications = suppressChangeNotifications;\n    }\n\n    this.upgradeProperty('disabled'); // Notify listeners that we're mounted and ready\n\n    this.dispatchEvent(new Event('mount', {\n      cancelable: false,\n      bubbles: true\n    }));\n  }\n  /**\r\n   * Custom elements lifecycle hooks\r\n   * @internal\r\n   */\n\n\n  disconnectedCallback() {\n    // Notify listeners that we're about to be unmounted\n    this.dispatchEvent(new Event('unmount', {\n      cancelable: false,\n      bubbles: true\n    }));\n    if (!__classPrivateFieldGet(this, _mathfield)) return; // Save the state (in case the elements get reconnected later)\n\n    const options = {};\n    Object.keys(MathfieldElement.optionsAttributes).forEach(x => {\n      options[toCamelCase(x)] = __classPrivateFieldGet(this, _mathfield).getOption(toCamelCase(x));\n    });\n    gDeferredState.set(this, {\n      value: __classPrivateFieldGet(this, _mathfield).getValue(),\n      selection: __classPrivateFieldGet(this, _mathfield).selection,\n      options\n    }); // Dispose of the mathfield\n\n    __classPrivateFieldGet(this, _mathfield).dispose();\n\n    __classPrivateFieldSet(this, _mathfield, null);\n  }\n  /**\r\n   * Private lifecycle hooks\r\n   * @internal\r\n   */\n\n\n  upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      const value = this[prop]; // A property may have already been set on the object, before\n      // the element was connected: delete the property (after saving its value)\n      // and use the setter to (re-)set its value.\n\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n  /**\r\n   * Custom elements lifecycle hooks\r\n   * @internal\r\n   */\n\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    const hasValue = newValue !== null;\n\n    switch (name) {\n      case 'disabled':\n        this.disabled = hasValue;\n        break;\n    }\n  }\n\n  set disabled(value) {\n    const isDisabled = Boolean(value);\n    if (isDisabled) this.setAttribute('disabled', '');else this.removeAttribute('disabled');\n    this.setAttribute('aria-disabled', isDisabled ? 'true' : 'false');\n    this.setOptions({\n      readOnly: isDisabled\n    });\n  }\n\n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n  /**\r\n   *  @category Accessing and changing the content\r\n   */\n\n\n  set value(value) {\n    this.setValue(value);\n  }\n  /**\r\n   * The content of the mathfield as a Latex expression.\r\n   * ```\r\n   * document.querySelector('mf').value = '\\\\frac{1}{\\\\pi}'\r\n   * ```\r\n   *  @category Accessing and changing the content\r\n   */\n\n\n  get value() {\n    return this.getValue();\n  }\n  /**\r\n   * An array of ranges representing the selection.\r\n   *\r\n   * It is guaranteed there will be at least one element. If a discontinuous\r\n   * selection is present, the result will include more than one element.\r\n   *\r\n   * @category Selection\r\n   *\r\n   */\n\n\n  get selection() {\n    if (__classPrivateFieldGet(this, _mathfield)) {\n      return __classPrivateFieldGet(this, _mathfield).selection;\n    }\n\n    if (gDeferredState.has(this)) {\n      return gDeferredState.get(this).selection;\n    }\n\n    return [{\n      start: 0,\n      direction: 'forward'\n    }];\n  }\n  /**\r\n   *\r\n   * @category Selection\r\n   */\n\n\n  set selection(value) {\n    if (__classPrivateFieldGet(this, _mathfield)) {\n      __classPrivateFieldGet(this, _mathfield).selection = value;\n    }\n\n    if (gDeferredState.has(this)) {\n      gDeferredState.set(this, {\n        value: gDeferredState.get(this).value,\n        selection: value,\n        options: gDeferredState.get(this).options\n      });\n      return;\n    }\n\n    gDeferredState.set(this, {\n      value: '',\n      selection: value,\n      options: getOptionsFromAttributes(this)\n    });\n  }\n  /**\r\n   * The position of the caret/insertion point, from 0 to `lastPosition`.\r\n   *\r\n   * @category Selection\r\n   *\r\n   */\n\n\n  get position() {\n    var _a;\n\n    const selection = this.selection;\n\n    if (selection[selection.length - 1].direction === 'backward') {\n      return selection[selection.length - 1].start;\n    }\n\n    return (_a = selection[0].end) !== null && _a !== void 0 ? _a : selection[0].start;\n  }\n  /**\r\n   * @category Selection\r\n   */\n\n\n  set position(value) {\n    this.selection = [{\n      start: value\n    }];\n  }\n  /**\r\n   * The last valid position.\r\n   * @category Selection\r\n   */\n\n\n  get lastPosition() {\n    var _a, _b;\n\n    return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.lastPosition) !== null && _b !== void 0 ? _b : -1;\n  }\n\n}\n\n_mathfield = new WeakMap();\n\nfunction toCamelCase(s) {\n  return s.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, c) => c.toUpperCase());\n}\n\nfunction reflectAttributes(el) {\n  const defaultOptions = getDefault();\n  const options = el.getOptions();\n  Object.keys(MathfieldElement.optionsAttributes).forEach(x => {\n    const prop = toCamelCase(x);\n\n    if (defaultOptions[prop] !== options[prop]) {\n      if (MathfieldElement.optionsAttributes[x] === 'boolean') {\n        if (options[prop]) {\n          // add attribute\n          el.setAttribute(x, '');\n        } else {\n          // remove attribute\n          el.removeAttribute(x);\n        }\n      } else {\n        // set attribute (as string)\n        el.setAttribute(x, options[prop].toString());\n      }\n    }\n  });\n} // function toKebabCase(s: string): string {\n//     return s\n//         .match(\n//             /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n//         )\n//         .map((x: string) => x.toLowerCase())\n//         .join('-');\n// }\n\n\nfunction getOptionsFromAttributes(mfe) {\n  const result = {};\n  const attribs = MathfieldElement.optionsAttributes;\n  Object.keys(attribs).forEach(x => {\n    if (mfe.hasAttribute(x)) {\n      const value = mfe.getAttribute(x);\n\n      if (attribs[x] === 'boolean') {\n        const lcValue = value.toLowerCase();\n\n        if (lcValue === 'true' || lcValue === 'yes' || lcValue === 'on') {\n          result[toCamelCase(x)] = true;\n        } else {\n          result[toCamelCase(x)] = false;\n        }\n      } else if (attribs[x] === 'number') {\n        result[toCamelCase(x)] = parseFloat(value);\n      } else {\n        result[toCamelCase(x)] = value;\n      }\n    }\n  });\n  return result;\n}\n\nif (!window.customElements.get('math-field')) {\n  window.MathfieldElement = MathfieldElement;\n  window.customElements.define('math-field', MathfieldElement);\n}\n\nfunction _makeMathField(element, options = {}) {\n  var _a, _b;\n\n  options.speakHook = (_a = options.speakHook) !== null && _a !== void 0 ? _a : defaultSpeakHook;\n  options.readAloudHook = (_b = options.readAloudHook) !== null && _b !== void 0 ? _b : defaultReadAloudHook;\n  return new MathfieldPrivate(getElement(element), options);\n}\n/** @deprecated */\n\n\nfunction latexToMarkup$2(text, options) {\n  return convertLatexToMarkup(text, options);\n}\n\nfunction convertLatexToMarkup(text, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  options.mathstyle = options.mathstyle || 'displaystyle';\n  options.letterShapeStyle = options.letterShapeStyle || 'auto';\n  options.macros = _objectSpread(_objectSpread({}, MACROS), (_a = options.macros) !== null && _a !== void 0 ? _a : {}); //\n  // 1. Parse the formula and return a tree of atoms, e.g. 'genfrac'.\n  //\n\n  const atoms = parseString(text, 'math', null, options.macros, false, options.onError); //\n  // 2. Transform the math atoms into elementary spans\n  //    for example from genfrac to vlist.\n  //\n\n  let spans = decompose({\n    mathstyle: MATHSTYLES[options.mathstyle],\n    letterShapeStyle: options.letterShapeStyle\n  }, atoms); //\n  // 3. Simplify by coalescing adjacent nodes\n  //    for example, from <span>1</span><span>2</span>\n  //    to <span>12</span>\n  //\n\n  spans = coalesce(spans);\n  if (options.format === 'span') return spans; //\n  // 4. Wrap the expression with struts\n  //\n\n  const wrapper = makeStruts(makeSpan(spans, 'ML__base'), 'ML__mathlive'); //\n  // 5. Generate markup\n  //\n\n  return wrapper.toMarkup();\n}\n\nfunction convertLatexToMathMl(latex, options = {}) {\n  var _a;\n\n  options.macros = _objectSpread(_objectSpread({}, MACROS), (_a = options.macros) !== null && _a !== void 0 ? _a : {});\n  return atomsToMathML(parseString(latex, 'math', [], options.macros, false, options.onError), options);\n}\n/** @deprecated */\n\n\nfunction _latexToMathML(latex, options) {\n  return convertLatexToMathMl(latex, options);\n}\n/** @deprecated Use MathJSON */\n\n\nfunction _latexToAST(latex, options) {\n  var _a;\n\n  options = options !== null && options !== void 0 ? options : {};\n  options.macros = _objectSpread(_objectSpread({}, MACROS), (_a = options.macros) !== null && _a !== void 0 ? _a : {}); // return parseLatex(latex, options);\n\n  return atomtoMathJson(parseString(latex, 'math', null, options.macros, false, options.onError), options);\n}\n/** @deprecated Use MathJSON */\n\n\nfunction _astToLatex(expr, options) {\n  return jsonToLatex(typeof expr === 'string' ? JSON.parse(expr) : expr, options); // return emitLatex(expr, options);\n}\n\nfunction convertLatexToSpeakableText(latex, options = {}) {\n  var _a;\n\n  options.macros = (_a = options.macros) !== null && _a !== void 0 ? _a : {};\n  Object.assign(options.macros, MACROS);\n  const mathlist = parseString(latex, 'math', null, options.macros, false, options.onError);\n  return atomToSpeakableText(mathlist, options);\n}\n/** @deprecated */\n\n\nfunction _latexToSpeakableText(latex, options) {\n  return convertLatexToSpeakableText(latex, options);\n}\n\nfunction _renderMathInDocument(options) {\n  renderMathInElement$1(document.body, options);\n}\n\nfunction getElement(element) {\n  if (typeof element === 'string') {\n    const result = document.getElementById(element);\n\n    if (result === null) {\n      throw Error(\"The element with ID \\\"\".concat(element, \"\\\" could not be found.\"));\n    }\n\n    return result;\n  }\n\n  return element;\n}\n\nfunction renderMathInElement$1(element, options) {\n  var _a, _b, _c, _d;\n\n  options = options !== null && options !== void 0 ? options : {};\n  options.renderToMarkup = (_a = options.renderToMarkup) !== null && _a !== void 0 ? _a : convertLatexToMarkup;\n  options.renderToMathML = (_b = options.renderToMathML) !== null && _b !== void 0 ? _b : convertLatexToMathMl;\n  options.renderToSpeakableText = (_c = options.renderToSpeakableText) !== null && _c !== void 0 ? _c : convertLatexToSpeakableText;\n  options.macros = (_d = options.macros) !== null && _d !== void 0 ? _d : MACROS;\n  AutoRender.renderMathInElement(getElement(element), options);\n}\n\nfunction validateNamespace(options) {\n  if (typeof options.namespace === 'string') {\n    if (!/^[a-z]+[-]?$/.test(options.namespace)) {\n      throw Error('options.namespace must be a string of lowercase characters only');\n    }\n\n    if (!/-$/.test(options.namespace)) {\n      options.namespace += '-';\n    }\n  }\n}\n/** @deprecated */\n\n\nfunction _revertToOriginalContent(element, options) {\n  var _a;\n\n  deprecated$1('revertToOriginalContent'); //  if (element instanceof MathfieldPrivate) {\n  //      element.$revertToOriginalContent();\n  //    } else {\n  // element is a pair: accessible span, math -- set it to the math part\n\n  element = getElement(element).children[1];\n  options = options !== null && options !== void 0 ? options : {};\n  validateNamespace(options);\n  const html = element.getAttribute('data-' + ((_a = options.namespace) !== null && _a !== void 0 ? _a : '') + 'original-content');\n  element.innerHTML = typeof options.createHTML === 'function' ? options.createHTML(html) : html; //  }\n}\n/** @deprecated */\n\n\nfunction _getOriginalContent(element, options) {\n  var _a;\n\n  deprecated$1('getOriginalContent');\n\n  if (element instanceof MathfieldPrivate) {\n    return element.originalContent;\n  } // element is a pair: accessible span, math -- set it to the math part\n\n\n  element = getElement(element).children[1];\n  options = options !== null && options !== void 0 ? options : {};\n  validateNamespace(options);\n  return element.getAttribute('data-' + ((_a = options.namespace) !== null && _a !== void 0 ? _a : '') + 'original-content');\n} // This SDK_VERSION variable will be replaced during the build process.\n\n\nconst _version = '0.59.0';\n\nfunction deprecated$1(method) {\n  console.warn(\"Function \\\"\".concat(method, \"\\\" is deprecated\"));\n}\n\nconst debug = {\n  getStyle: MathLiveDebug.getStyle,\n  getType: MathLiveDebug.getType,\n  spanToString: MathLiveDebug.spanToString,\n  hasClass: MathLiveDebug.hasClass,\n  latexToAsciiMath: MathLiveDebug.latexToAsciiMath,\n  asciiMathToLatex: MathLiveDebug.asciiMathToLatex,\n  FUNCTIONS: MathLiveDebug.FUNCTIONS,\n  MATH_SYMBOLS: MathLiveDebug.MATH_SYMBOLS,\n  TEXT_SYMBOLS: MathLiveDebug.TEXT_SYMBOLS,\n  ENVIRONMENTS: MathLiveDebug.ENVIRONMENTS,\n  MACROS: MathLiveDebug.MACROS,\n  DEFAULT_KEYBINDINGS: MathLiveDebug.DEFAULT_KEYBINDINGS,\n  getKeybindingMarkup: MathLiveDebug.getKeybindingMarkup\n};\nvar mathlive = {\n  version: () => {\n    deprecated$1('export default version');\n    return _version;\n  },\n  latexToMarkup: (text, options) => {\n    deprecated$1('export default latexToMarkup');\n    return latexToMarkup$2(text, options);\n  },\n  latexToMathML: (latex, options) => {\n    deprecated$1('export default latexToMathML');\n    return _latexToMathML(latex, options);\n  },\n  latexToSpeakableText: (latex, options) => {\n    deprecated$1('export default latexToSpeakableText');\n    return _latexToSpeakableText(latex, options);\n  },\n  latexToAST: (latex, options) => {\n    deprecated$1('export default latexToAST: use MathJSON');\n    return _latexToAST(latex, options);\n  },\n  astToLatex: (expr, options) => {\n    deprecated$1('export default astToLatex: use MathJSON');\n    return _astToLatex(expr, options);\n  },\n  makeMathField: (element, options) => {\n    deprecated$1('export default makeMathField');\n    return _makeMathField(element, options);\n  },\n  renderMathInDocument: options => {\n    deprecated$1('export default renderMathInDocument');\n\n    _renderMathInDocument(options);\n  },\n  renderMathInElement: (el, options) => {\n    deprecated$1('export default renderMathInElement');\n    renderMathInElement$1(el, options);\n  },\n  revertToOriginalContent: (el, options) => {\n    deprecated$1('export default revertToOriginalContent');\n\n    _revertToOriginalContent(el, options);\n  },\n  getOriginalContent: (el, options) => {\n    deprecated$1('export default getOriginalContent');\n\n    _getOriginalContent(el, options);\n  },\n  readAloud: (element, text, config) => {\n    deprecated$1('export default readAloud');\n    return defaultReadAloudHook(element, text, config);\n  },\n  readAloudStatus: () => {\n    deprecated$1('export default readAloudStatus');\n    return _readAloudStatus();\n  },\n  pauseReadAloud: () => {\n    deprecated$1('export default pauseReadAloud');\n\n    _pauseReadAloud();\n  },\n  resumeReadAloud: () => {\n    deprecated$1('export default resumeReadAloud');\n\n    _resumeReadAloud();\n  },\n  playReadAloud: (token, count) => {\n    deprecated$1('export default playReadAloud');\n\n    _playReadAloud(token, count);\n  }\n};\nexport default mathlive;\nexport { MathfieldElement, _astToLatex as astToLatex, convertLatexToMarkup, convertLatexToMathMl, convertLatexToSpeakableText, debug, _makeMathField as makeMathField, _renderMathInDocument as renderMathInDocument, renderMathInElement$1 as renderMathInElement };","map":{"version":3,"sources":["/Users/hophuc/Downloads/HK201/Luận Văn/Mathresolve_Front/Mathresolve_front/node_modules/mathlive/dist/mathlive.mjs"],"names":["isArray","x","Array","isFunction","METRICS_MAP","cjkRegex","SIGMAS","slant","space","stretch","shrink","xHeight","quad","extraSpace","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","delim1","delim2","axisHeight","xi8","xi9","xi10","xi11","xi12","xi13","ptPerEm","METRICS","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","pxPerEm","doubleRuleSep","arraycolsep","baselineskip","arrayrulewidth","fboxsep","fboxrule","extraCharacterMap","Å","Ç","Ð","Þ","å","ç","ð","þ","А","Б","В","Г","Д","Е","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","а","б","в","г","д","е","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","getCharacterMetrics","character","fontName","console","assert","ch","charCodeAt","test","defaultMetrics","depth","height","italic","skew","metrics","convertDimenToEm","value","unit","precision","NaN","m","match","parseFloat","toLowerCase","f","pt","mm","cm","ex","px","em","bp","dd","pc","in","mu","isFinite","factor","Math","pow","round","convertDimenToPx","D","Dc","T","Tc","S","Sc","SS","SSc","Mathstyle","constructor","id","size","multiplier","cramped","sizeMultiplier","Object","keys","reduce","acc","emPerEx","sup","MATHSTYLES","sub","fracNum","fracDen","cramp","cls","adjustTo","newStyle","result","length","isTight","displaystyle","textstyle","scriptstyle","scriptscriptstyle","Context","from","_a","_b","_c","_d","_e","_f","macros","atomIdsSettings","mathstyle","letterShapeStyle","parentMathstyle","parentSize","opacity","smartFence","clone","override","assign","setMathstyle","SVG_BODY","overrightarrow","overleftarrow","underrightarrow","underleftarrow","xrightarrow","xleftarrow","Overrightarrow","xRightarrow","xLeftarrow","overleftharpoon","xleftharpoonup","xleftharpoondown","overrightharpoon","xrightharpoonup","xrightharpoondown","xlongequal","xtwoheadleftarrow","xtwoheadrightarrow","overleftrightarrow","overbrace","underbrace","underleftrightarrow","xleftrightarrow","xLeftrightarrow","xrightleftharpoons","xleftrightharpoons","xhookleftarrow","xhookrightarrow","overlinesegment","underlinesegment","overgroup","undergroup","xmapsto","xtofrom","xrightleftarrows","xrightequilibrium","xleftequilibrium","SVG_ACCENTS","widehat1","widehat2","widehat3","widehat4","widecheck1","widecheck2","widecheck3","widecheck4","widetilde1","widetilde2","widetilde3","widetilde4","PATHS","doubleleftarrow","doublerightarrow","leftarrow","leftbrace","leftbraceunder","leftgroup","leftgroupunder","leftharpoon","leftharpoonplus","leftharpoondown","leftharpoondownplus","lefthook","leftlinesegment","leftmapsto","leftToFrom","longequal","midbrace","midbraceunder","oiintSize1","oiintSize2","oiiintSize1","oiiintSize2","rightarrow","rightbrace","rightbraceunder","rightgroup","rightgroupunder","rightharpoon","rightharpoonplus","rightharpoondown","rightharpoondownplus","righthook","rightlinesegment","rightToFrom","twoheadleftarrow","twoheadrightarrow","vec","baraboveleftarrow","rightarrowabovebar","baraboveshortleftharpoon","rightharpoonaboveshortbar","shortbaraboveleftharpoon","shortrightharpoonabovebar","svgBodyToMarkup","svgBodyName","paths","minWidth","viewBoxHeight","align","widthClasses","aligns","body","map","path","i","join","svgBodyHeight","getPropertyRuns","atoms","property","run","currentValue","forEach","atom","type","variant","variantStyle","push","MODES_REGISTRY","register","name","definition","emitLatexRun","parent","expandMacro","mode","parseTokens","tokens","onError","options","parse","applyStyle","span","style","SPAN_TYPE","isSpanType","includes","INTER_ATOM_SPACING","INTER_ATOM_TIGHT_SPACING","toString","arg","Number","ceil","elem","error","Span","content","classes","children","concat","updateDimensions","maxFontSize","selected","isSelected","replace","color","setStyle","backgroundColor","cssClass","size1","size2","size3","size4","size5","size6","size7","size8","size9","size10","fontSize","charAt","max","prop","v","setTop","top","setLeft","left","setRight","right","setWidth","width","toMarkup","hskip","hscale","previousType","child","spacing","getEffectiveType","combinedType","svgBody","cssId","svgOverlay","attributes","attribute","split","command","placeholder","caret","classList","filter","e","a","indexOf","styleString","prototype","hasOwnProperty","call","padding","svgStyle","tryCoalesceWith","hasChildren","spanHasChildren","thisStyleCount","spanStyleCount","trim","spanClasses","sort","xs","prevType","nextType","coalesce","spans","makeSpan","c","Boolean","makeSymbol","fontFamily","symbol","makeFontSizer","context","fontSizeAdjustment","fontSizeInner","makeStruts","topStrut","bottomStrut","struts","makeStyleWrap","fromStyle","toStyle","makeHlist","addSVGOverlay","svgMarkup","makeVlist","elements","pos","posData","listDepth","currPos","bottom","element","originalElements","diff","kern","fontSizer","newElements","wrap","makeSVGSpan","MATH_SYMBOLS","REVERSE_MATH_SYMBOLS","FUNCTIONS","ENVIRONMENTS","MACROS","iff","nicefrac","bra","ket","braket","set","Bra","Ket","Braket","Set","rd","rD","doubleStruckCapitalN","doubleStruckCapitalR","doubleStruckCapitalQ","doubleStruckCapitalZ","doubleStruckCapitalP","scriptCapitalE","scriptCapitalH","scriptCapitalL","gothicCapitalC","gothicCapitalH","gothicCapitalI","gothicCapitalR","imaginaryI","imaginaryJ","exponentialE","differentialD","capitalDifferentialD","RIGHT_DELIM","TEXT_SYMBOLS","COMMAND_MODE_CHARACTERS","LETTER","navigator","userAgent","RegExp","LETTER_AND_DIGITS","defineSymbol","defineSymbols","string","defineSymbolRange","to","String","fromCodePoint","charToLatex","parseMode","s","textSymbol","find","hex","codePointAt","repeat","MATH_LETTER_EXCEPTIONS","MATH_UNICODE_BLOCKS","start","len","offset","unicodeToMathVariant","codepoint","char","mathVariantToUnicode","unicodeCharToLatex","cp","unicodeStringToLatex","needSpace","latex","getValue","emit","emitFn","params","getEnvironmentDefinition","getInfo","info","slice","def","argCount","infix","isOptional","suggest","p","startsWith","frequency","b","parseParamTemplateArgument","argTemplate","r","parseParamTemplate","paramTemplate","parseArgAsString","success","defineEnvironment","names","parser","isTabular","parsedParams","data","tabular","defineTabularEnvironment","defineFunction","parseFunction","emitFunction","ACCENTS","acute","grave","dot","ddot","mathring","tilde","bar","breve","check","hat","args","accent","limits","skipBoundary","baseString","svgAccent","_name","svgBelow","_parent","isSymbol","o","u","A","E","I","O","U","n","N","C","strokeColor","strokeWidth","strokeStyle","backgroundcolor","shadow","captureSelection","styles","shorthand","svgStrokeStyle","borderStyle","notation","updiagonalstrike","downdiagonalstrike","colFormat","_args","array","colCount","row","gap","jot","leftDelim","rightDelim","arraystretch","svgAbove","overscript","mathtype","underscript","index","numer","denom","hasBarLine","continuousFraction","Error","_funcname","numerPrefix","denomPrefix","coprod","bigvee","bigwedge","biguplus","bigcap","bigcup","intop","prod","sum","bigotimes","bigoplus","bigodot","bigsqcup","smallint","EXTENSIBLE_SYMBOLS","int","iint","iiint","oint","oiint","oiiint","intclockwise","varointclockwise","ointctrclockwise","intctrclockwise","sqcup","sqcap","uplus","wr","amalg","Cap","Cup","doublecap","doublecup","delim","MATHEMATICA_COLORS","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","AREA_COLORS","LINE_COLORS","NAMED_COLORS","apricot","aquamarine","bittersweet","black","blue","bluegreen","blueviolet","brickred","brown","burntorange","cadetblue","carnationpink","cerulean","cornflowerblue","cyan","dandelion","darkorchid","emerald","forestgreen","fuchsia","goldenrod","gray","green","greenyellow","junglegreen","lavender","limegreen","magenta","mahogany","maroon","melon","midnightblue","mulberry","navyblue","olivegreen","orange","orangered","orchid","peach","periwinkle","pinegreen","plum","processblue","purple","rawsienna","red","redorange","redviolet","rhodamine","royalblue","royalpurple","rubinered","salmon","seagreen","sepia","skyblue","springgreen","tan","tealblue","thistle","turquoise","violet","violetred","white","wildstrawberry","yellow","yellowgreen","yelloworange","stringToColor","colorSpec","baseRed","baseGreen","baseBlue","mix","complementary","colorName","min","parseInt","r1","g1","b1","colorToString","toUpperCase","latexOpen","latexClose","framecolor","verbatimBackgroundcolor","verbatimFramecolor","border","bboxParams","floor","tiny","scriptsize","footnotesize","small","normalsize","large","Large","LARGE","huge","Huge","fontSeries","fontShape","DELIMITER_SIZES","mclass","_emit","substr","shift","position","phantomType","isPhantom","makeSmallDelim","center","text","makeLargeDelim","makeInner","font","sizeClass","makeStackedDelim","heightTotal","middle","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","repeatCount","realHeightTotal","inners","inner","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","sizeToMaxHeight","makeSizedDelim","makeNullFence","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","stackLargeDelimiterSequence","delimTypeToFont","traverseSequence","sequence","heightDepth","makeCustomSizedDelim","delimType","makeLeftRightDelim","delimiterFactor","delimiterShortfall","maxDistFromAxis","totalHeight","stringToCodepoints","str","code","nextCode","lead","trail","ZWJ","EMOJI_COMBINATOR","emojiCombinator","REGIONAL_INDICATOR","isEmojiCombinator","isRegionalIndicator","splitGraphemes","codePoints","next","baseIndex","Tokenizer","obeyspaces","end","get","peek","regEx","execResult","exec","lastIndexOf","isParam","after","expand","lex","token","done","param","tokenize","lines","stream","sep","line","tokenizer","joinLatex","segments","segment","tokensToString","getModeRuns","currentMode","latexifyArray","latexify","toLatex","atomToLatex","col","emit$1","environmentName","rule","explicitLimits","superscript","subscript","ATOM_REGISTRY","SIZING_MULTIPLIER","registerAtomType","decompose","inputContext","isDigit","isText","displaySelection","groupNumbers","selection","digitOrTextStringID","lastWasDigit","phantomBase","overrideID","flat","Atom","setPhantom","getStyle","getInitialBaseElement","getFinalBaseElement","isCharacterBox","base","cb","cell","decomposeGroup","localContext","undefined","decomposeOverlap","decomposeRule","isNaN","bind","spacingCls","isError","isSuggestion","containsCaret","lastSpan","attachSupsub","nucleus","supmid","submid","supShift","subShift","minSupShift","scriptspace","supsub","ruleWidth","psi","supsubContainer","attachLimits","nucleusShift","limitAbove","limitBelow","makeLimitsStack","makeID","seed","Date","now","random","above","below","aboveShift","belowShift","makeRoot","unshift","isAtomArray","skew$1","clearance","accentBody","vecClass","colMax","colSpec","colIndex","newRow","lastCol","pop","arrayskip","arstrutHeight","arstrutDepth","nc","nr","inrow","height$1","depth$1","outrow","cells","elt","rowGaps","contentCols","cols","prevColContent","prevColRule","currentContentCol","firstColumn","colDesc","makeColGap","makeColOfRepeatingElements","separator","innerHeight","innerDepth","box","actuarial","madruwb","roundedbox","circle","svg","horizontalstrike","verticalstrike","newContext","numeratorStyle","numerReset","denominatorStyle","denomReset","numShift","denomShift","numerDepth","denomHeight","frac","candidateClearance","numerLine","denomLine","mid","delimSize","savedCaret","savedSelected","vlist","innerSpan","baseShift","annotationStyle","makeOverunderStack","phi","lineClearance","innerTotalHeight","minDelimiterHeight","delimDepth","newcontext","root","innerRootHeight","innerRootDepth","toShift","rootVlist","isLiteral","Parser","tabularMode","endCount","err","before","swapAtoms","newAtoms","swapParseMode","input","lastSubsupAtom","lastAtom","hasPattern","pattern","hasInfixCommand","matchColumnSeparator","matchRowSeparator","parseString","matchWhitespace","found","skipUntilToken","skipFiller","skippedSpace","skippedRelax","matchKeyword","keyword","savedIndex","hasKeyword","scanString","scanBalancedString","level","matchLiteralArg","scanColor","scanNumber","isInteger","negative","radix","digits","scanDimen","scanSkip","scanColspec","literal","savedParsemode","parseModeSet","final","parseModeShift","parseEnvironment","envName","parseArgument","parseOptionalArgument","savedMode","savedTabularMode","saveAtoms","savedStyle","infixInfo","infixArgs","prefix","parseArguments","parseToken","parseGroup","scanSmartFence","nestLevel","scanDelim","parseLeftRight","close","parseSupSub","parseLimits","explicitGroup","endsWith","savedParseMode","parseSimpleToken","initialIndex","list","bboxParam","scanMacro","saveStyle","argString","macro","macroName","more","getFileUrl","stackTraceFrames","stack","callerFrame","gScriptUrl","document","currentScript","src","loadFonts","fontsDirectory","makeFontFace","source","descriptors","FontFace","useStaticFonts","getComputedStyle","documentElement","getPropertyValue","fontFamilies","fontsLoaded","every","contains","add","fontsFolder","URL","fonts","weight","Promise","all","load","loadedFonts","remove","hashCode","hash","inject","css","getRootNode","head","el","querySelector","refCount","getAttribute","setAttribute","styleNode","createElement","dataset","refcount","appendChild","createTextNode","release","isEmptyMathlist","removeSuggestion","model","siblings","splice","invalidateVerbatimLatex","ancestor","normalizeRange","iter","range","lastPosition","direction","collapsed","positions","pathToString","extent","relation","pathFromString","components","pathCommonAncestor","q","maxIndex","pathDistance","arrayIndex","rowCol","j","arrayColRow","arrayCell","colrow","addMisingFirstAtom","arrayCellCount","numRows","numCols","arrayAdjustRow","colRow","dir","VARIANTS","main","normal","ams","calligraphic","script","fraktur","monospace","VARIANT_REPERTOIRE","GREEK_LOWERCASE","GREEK_UPPERCASE","LETTER_SHAPE_RANGES","LETTER_SHAPE_MODIFIER","iso","tex","french","upright","emitLatexMathRun","contextValue","styledValue","applyStyle$1","styledVariant","emitStringTextRun","_context","_expandMacro","emitFontShapeTextRun","emitFontSeriesTextRun","emitSizeTextRun","emitFontFamilyTextRun","roman","emitStyledTextRun","emitColorRun","emitLatexTextRun","allAtomsHaveShapeOrSeriesOrFontFamily","TEXT_FONT_CLASS","applyStyle$2","it","sl","sc","ol","ul","l","sb","eb","ub","uc","ec","sx","ux","subtokens","findIndex","texify","go","mhchemParser","stateMachine","state","buffer","lastInput","watchdog","output","machine","stateMachines","t","transitions","iterateTransitions","matches","patterns","match_","task","iA","action_","actions","type_","option","concatArray","nextState","revisit","remainder","toContinue","iB","empty","else","else2","space$","x$","i$","letters","findObserveGroups","_9","operator","arrowUpDown","CMT","orbital","others","oxidation$","amount","amount2","formula$","uprightEntities","begExcl","begIncl","endIncl","endExcl","beg2Excl","beg2Incl","end2Incl","end2Excl","combine","_match","_findObserveGroups","endChars","braces","endMatchBegin","endMatchEnd","match1","substring","group2","matchRet","d","rm","text_","insert","p1","p2","copy","ret","bond","k","kind_","ce","createTransitions","stateArray","patternArray","dq","qd","as","tmp","dType","isAfterD","c1","c2","c3","c4","hyphenFollows","comma","withSpace","entityFollows","rdt","rq","rqt","color1","color2","pq","bd","oxidation","pu","enumber","md","mq","b5","cdot","mrm","reverse","isInner","res","cee","inputi","_go2","_goInner","buf","_getBond","b6","arrow","_getArrow","_getOperator","INLINE_SHORTCUTS","alpha","delta","Delta","pi","Pi","theta","Theta","ii","jj","ee","nabla","grad","del","oo","sqrt","arcsin","arccos","arctan","sin","sinh","cos","cosh","tanh","sec","csc","cot","log","ln","exp","lim","dx","dy","dt","AA","EE","xin","NN","ZZ","QQ","RR","CC","PP","xx","beta","chi","epsilon","varepsilon","eta","gamma","Gamma","iota","kappa","lambda","Lambda","nu","µ","Phi","varphi","Psi","rho","sigma","Sigma","tau","vartheta","upsilon","xi","Xi","zeta","omega","Omega","Ω","forall","exists","liminf","limsup","argmin","argmax","det","mod","erf","erfc","bessel","mean","median","fft","lcm","gcd","randomReal","randomInteger","Re","Im","km","kg","getInlineShortcutsStartingWith","config","skipDefaultShortcuts","overrideDefaultInlineShortcuts","s2","key","customInlineShortcuts","inlineShortcuts","validateShortcut","shortcut","nothing","letter","digit","surd","binop","relop","punct","openfence","closefence","sibling","getInlineShortcut","shortcuts","parseMathString","format","trimedString","parseMathExpression","_g","parseMathArgument","noWrap","rest","sqrtArgument","paddedShortcut","lFence","rFence","selectionDidChange","listeners","onSelectionDidChange","suppressChangeNotifications","contentDidChange","onContentDidChange","getAnchor","anchorOffset","setPath","inSelection","newPath","oldPath","pathChanged","extentChanged","adjustPlaceholder","warn","getAnchorStyle","anchor","isNumber","getCommandOffsets","endOffset","startOffset","setPositionAfterCommitedCommand","setSelectionOffset","getAnchorMode","selectionIsCollapsed","leap","callHooks","savedSuppressChangeNotifications","oldExtent","move","placeholders","hooks","tabOut","activeElement","tabbable","getTabbableElements","focus","setSelectionExtent","announce","regularTabbables","orderedTabbables","candidates","querySelectorAll","isNodeMatchingSelectorTabbable","candidate","candidateTabindex","getTabindex","documentOrder","tabIndex","node","isNodeMatchingSelectorFocusable","isNonTabbableRadio","disabled","tagName","isHidden","tabindexAttr","contentEditable","nodeName","isTabbableRadio","getCheckedRadio","nodes","form","checked","radioScope","ownerDocument","radioSet","visibility","bounds","getBoundingClientRect","display","parentElement","oldRelation","arrayRelation","relationChanged","siblingsCount","oldOffset","offsetChanged","NEXT_RELATION","maxCellCount","cellIndex","moveOut","skip","iterateAll","insertFirstAtom","previous","PREVIOUS_RELATION","parentType","extend","up","down","dist","collapseSelectionForward","collapseSelectionBackward","newFocusOffset","focusOffset","wordBoundaryOffset","jumpToMathFieldBoundary","getSelectedAtoms","firstOffset","lastOffset","selectGroup","selectAll","moveAfterParent","setRange","extendToWordBoundary","distance","wordBoundary","commonAncestor","ancestorDepth","getImplicitArgOffset","forEachSelected","recursive","getContentFromSiblings","ModelPrivate","initialAnchor","DEFAULT_KEYBOARD_LAYOUT","platform","displayName","locale","score","mapping","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Space","Minus","Equal","BracketLeft","BracketRight","Backslash","Semicolon","Quote","Backquote","Comma","Period","Slash","NumpadDivide","NumpadMultiply","NumpadSubtract","NumpadAdd","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","Numpad0","NumpadDecimal","IntlBackslash","NumpadEqual","AudioVolumeUp","NumpadComma","NumpadParenLeft","NumpadParenRight","BASE_LAYOUT_MAPPING","enter","escape","backspace","tab","pausebreak","home","pageup","delete","pagedown","numpad0","numpad1","numpad2","numpad3","numpad4","numpad5","numpad6","numpad7","numpad8","numpad9","capslock","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13","f14","f15","f16","f17","f18","f19","gKeyboardLayouts","gKeyboardLayout","register$1","layout","getCodeForKey","getActiveKeyboardLayout","entries","normalizeKeyboardEvent","evt","altKey","shiftKey","KeyboardEvent","validateKeyboardLayout","layouts","setKeyboardLayoutLocale","Enter","Escape","Backspace","Tab","NumpadEnter","DEFAULT_KEYBINDINGS","ifMode","discard","acceptSuggestion","ifPlatform","withHighlighting","REVERSE_KEYBINDINGS","matchPlatform","plat","getCommandForKeybinding","keybindings","keystroke","commandToString","getKeybindingsForCommand","normalizedCommand","regex","keybinding","getKeybindingMarkup","useSymbol","cmd","meta","alt","ctrl","semicolon","period","minus","equal","quote","bracketLeft","bracketRight","backslash","intlbackslash","backquote","slash","numpadmultiply","numpaddivide","numpadsubtract","numpadadd","numpaddecimal","numpadcomma","help","normalizeKeybinding","normalizeKeybindings","errors","message","on","inSelectors","listener","selectors","sel","options2","passive","addEventListener","off","removeEventListener","getSharedElement","getElementById","className","releaseSharedElement","isValidMathfield","mf","findElementWithCaret","getCaretPoint","y","getSelectionBounds","field","selectedNodes","selectionRect","Infinity","fieldRect","w","h","scrollLeft","attachButtonHandlers","mathfield","default","pressed","namespace","JSON","stringify","altshift","pressAndHoldStart","pressAndHoldEnd","pressHoldStart","pressHoldElement","touchID","syntheticTarget","pressAndHoldTimer","ev","buttons","stopPropagation","preventDefault","changedTouches","identifier","executeCommand","pressAndHoldStartCommand","clearTimeout","window","setTimeout","target","elementFromPoint","clientX","clientY","dispatchEvent","MouseEvent","bubbles","detail","NOTES","getNote","latexToMarkup","wrapper","showPopoverWithLatex","displayArrows","hidePopover","commandMarkup","commandNote","template","showPopover","popover","getElementsByClassName","updatePopoverPosition","deferred","requestAnimationFrame","caretPoint","setPopoverPosition","markup","innerHTML","createHTML","screenHeight","clientHeight","screenWidth","innerWidth","clientWidth","scrollbarWidth","scrollbarHeight","virtualkeyboardHeight","virtualKeyboardVisible","virtualKeyboard","offsetHeight","offsetWidth","extractCommandStringAroundInsertionPoint","beforeInsertionPointOnly","decorateCommandStringAroundInsertionPoint","hasError","commitCommandStringBeforeInsertionPoint","spliceCommandStringAroundInsertionPoint","mathlist","newPlaceholders","removeCommandStringFromAtom","removeCommandString","contentWasChanging","SPECIAL_OPERATORS","xmlEscape","makeID$1","generateID","scanIdentifier","mathML","atomToMathML","isSuperscriptAtom","isSubscriptAtom","toMathML","lastType","indexOfSuperscriptInNumber","parseSubsup","scanText","initial","scanFence","openIndex","closeIndex","toMo","scanOperator","op","isUnit","toString$1","count","_h","_j","_k","_l","_m","SVG_CODE_POINTS","widehat","widecheck","widetilde","utilde","SPECIAL_IDENTIFIERS","MATH_VARIANTS","cal","frak","bb","scr","cmtt","cmss","SPACING","tag","atomsToMathML","abs","requestUpdate","dirty","render","renderOptions","hasFocus","readOnly","forHighlighting","translate","horizontalSpacingScale","toggle","accessibleNode","selectionElement","insertBefore","childNodes","HAPTIC_FEEDBACK_DURATION","COMMANDS","register$2","commands","canUndo","selector","fn","perform","handled","resetKeystrokeBuffer","popUndoStack","snapshot","suggestions","performWithFeedback","keypressVibration","vibrate","returnKeypressSound","play","catch","keypressSound","deleteKeypressSound","arrayJoinColumns","arrayJoinRows","separators","arrayColumnCellCount","cellLen","arrayRemoveColumn","arrayRemoveRow","arrayFirstCellByRow","addCell","where","convertParentToArray","env","addRowAfter","addRowBefore","addColumnAfter","addColumnBefore","category","delete_","dest","destLength","destCell","first","last","deleteChar","deleteAtoms","applyStyleToUnstyledAtoms","applyStyle$3","everyStyle","series","shape","normalizeModel","insertSmartFence","insertionMode","selectionMode","simplifyParen","removeExtraneousParentheses","updateComposition","removeComposition","removeParen","genFracCount","genFracIndex","nonGenFracCount","fence","delims","rDelim","lDelim","tail","grandparent","PositionIterator","getCurrentAtom","nextPosition","at","indexes","setPosition","setListeners","setHooks","_target","_command","_modelBefore","_atoms","setSelection","modelBefore","groupIsSelected","anchorPath","moveToSuperscript","moveToSubscript","moveToOpposite","OPPOSITE_RELATIONS","oppositeRelation","moveBeforeParent","moveToNextPlaceholder","moveToPreviousPlaceholder","moveToNextChar","moveToPreviousChar","moveUp","moveDown","moveToNextWord","moveToPreviousWord","moveToGroupStart","moveToGroupEnd","moveToMathFieldStart","moveToMathFieldEnd","extendToNextChar","extendToPreviousChar","extendToNextWord","extendToPreviousWord","extendUp","extendDown","extendToNextBoundary","extendToPreviousBoundary","extendToGroupStart","extendToGroupEnd","extendToMathFieldStart","extendToMathFieldEnd","deleteAll","deleteNextChar","deletePreviousChar","deleteNextWord","deletePreviousWord","deleteToGroupStart","deleteToGroupEnd","deleteToMathFieldStart","deleteToMathFieldEnd","PRINTABLE_KEYCODE","mightProducePrintableCharacter","ctrlKey","metaKey","keyboardEventToString","modifiers","delegateKeyboardEvents","textarea","handlers","keydownEvent","keypressEvent","compositionInProgress","focusInProgress","blurInProgress","callbackTimeoutID","defer","handleTypedText","selectionStart","selectionEnd","typedText","paste","cut","_ev","blur","compositionStart","compositionUpdate","compositionEnd","inputType","cancelComposition","savedBlur","savedFocus","deepActiveElement","setValue","select","setAriaLabel","moveTo","shadowRoot","eventToChar","UndoManager","maximumDepth","record","canCoalesce","reset","startRecording","canRedo","undo","onUndoStateWillChange","restore","onUndoStateDidChange","redo","snapshotAndCoalesce","save","wasSuppressing","SPECIAL_OPERATORS$1","atomToAsciiMath","fromCharCode","STRINGS","en","ar","de","es","fa","fr","ja","pl","ru","l10n","plural","language","rules","_ordinal","_cardinal","_ordinalPluralCategories","_cardinalPluralCategories","strings","_ordinalEnglish","_cardinalEnglish","merge","savedLocale","_locale","defineProperty","Intl","PluralRules","_ordinalEnglishPluralCategories","resolvedOptions","pluralCategories","_cardinalEnglishPluralCategories","localize","insertSuggestion","subs","apply","complete","switchMode","updateSuggestion","suggestionIndex","nextSuggestion","previousSuggestion","PRONUNCIATION","getSpokenName","platform$1","isAtomic","atomicID","atomicValue","atomToSpeakableFragment","textToSpeechMarkup","emph","isInDigitRun","isInTextRun","supsubHandled","COMMON_FRACTIONS","commonFraction","index2","atomValue","latexValue","spokenName","trimLatex","atomToSpeakableText","speechOptions","textToSpeechRulesOptions","textToSpeechRules","rate","speechEngineRate","System","getInstance","setupEngine","toSpeech","prosody","speakableText","speak","scope","speakOptions","getAtoms","getFailedSpeech","speakHook","speechEngine","readAloudMathField","readAloudHook","defaultSpeakHook","utterance","SpeechSynthesisUtterance","speechSynthesis","polly","Polly","apiVersion","OutputFormat","VoiceId","speechEngineVoice","Engine","Text","TextType","synthesizeSpeech","AudioStream","uInt8Array","Uint8Array","blob","Blob","url","createObjectURL","audioElement","Audio","defaultAnnounceHook","action","oldModel","liveText","plonkSound","nextAtomSpeechText","keyboardDelegate","ariaLiveChangeHack","ariaLiveText","textContent","leaf","EXPR_NAME","PARENT_NAME","enclose","leftright","relationName","AUDIO_FEEDBACK_VOLUME","NO_OP_LISTENER","loadSound","sound","preload","volume","unloadSound","HTMLAudioElement","pause","removeAttribute","update","current","updates","scriptDepth","virtualKeyboardLayout","be","al","ba","cz","hu","sk","isTouchDevice","matchMedia","virtualKeyboardMode","return","spacebar","resolvedKeys","getDefault","substituteTextArea","defaultMode","smartMode","smartSuperscript","ignoreSpacebarInMathMode","inlineShortcutTimeout","virtualKeyboardToggleGlyph","virtualKeyboards","customVirtualKeyboardLayers","customVirtualKeyboards","virtualKeyboardTheme","onAnnounce","onKeystroke","onMoveOutOf","onTabOutOf","onBlur","onFocus","onContentWillChange","onSelectionWillChange","onModeChange","onVirtualKeyboardToggle","onReadAloudStatus","onCommit","convertLastAtomsToText","until","convertLastAtomsToMath","removeIsolatedSpace","getTextBeforeAnchor","smartModeSuppressed","showKeystroke","vb","keystrokeCaption","keystrokeCaptionVisible","removeChild","activeLayout","keyboardLayout","keystrokeBufferResetTimer","stateIndex","keystrokeBuffer","keystrokeBufferStates","getUndoRecord","previousMode","math","nextSibling","previousSibling","saveMode","restoreToUndoRecord","scrollIntoView","onTypedText","feedback","commandMode","simulateKeystroke","popoverText","graphemes","_","superscriptDepth","subscriptDepth","wasSuperscript","wasSubscript","scrollToStart","scroll","scrollToEnd","fieldBounds","scrollX","enterCommandMode","toggleKeystrokeCaption","commit","applyStyle$4","inStyle","validateStyle","targetMode","convertedSelection","bold","medium","onPaste","json","clipboardData","getData","astToLatex","onCut","$clearSelection","onCopy","setData","copyToClipboard","execCommand","cutToClipboard","pasteFromClipboard","gLastTap","gTapCount","onPointerDown","that","trackingPointer","trackingWords","scrollRight","anchorX","anchorY","anchorTime","scrollInterval","setInterval","endPointerTracking","PointerEvent","onPointerMove","releasePointerCapture","pointerId","clearInterval","hysteresis","pointerType","actualAnchor","isPrimary","pathFromPoint","bias","time","wrapperBounds","setPointerCapture","nearestElementFromPoint","POSITIVE_INFINITY","considerChildren","nearest","css_248z","VirtualKeyboard","handleEvent","unshiftKeyboardLayer","dispose","KEYBOARDS","numeric","tooltip","layer","label","layers","greek","functions","symbols","SHIFTED_KEYS","ALT_KEYS_BASE","aside","subset","supset","infinity","accents","B","g","G","z","logic","ALT_KEYS","LAYERS","latexToMarkup$1","makeKeyboardToolbar","keyboardIDs","currentKeyboard","keyboardList","keyboards","keyboard","makeKeycap","elList","chainedCommand","html","resetStyle","altKeys","expandLayerMarkup","ROWS","qwerty","azerty","qwertz","dvorak","colemak","attributesArray","makeKeyboard","theme","svgIcons","UPPER_ALPHA","LOWER_ALPHA","DIGITS","keyboardLayers","layerName","tempLayer","backdrop","container","rows","keycap","class","shifted","shiftedCommand","layerMarkup","layerElements","hideAlternateKeys","altContainer","keycaps","updateUndoRedoButtons","virtualKeyboardToolbar","undoButton","redoButton","showAlternateKeys","getElementsByTagName","keycapEl","transform","switchKeyboardLayer","showVirtualKeyboard","shiftKeyboardLayer","shiftedContent","shifteCommand","commandObj","performAlternateKeys","insertAndUnshiftKeyboardLayer","toggleVirtualKeyboardAlt","hadAltTheme","toggleVirtualKeyboardShift","toggleVirtualKeyboard","hideVirtualKeyboard","css_248z$1","css_248z$2","css_248z$3","css_248z$4","CANONICAL_NAMES","OP_NAME","approx","congruent","similar","equiv","FUNCTION_TEMPLATE","ne","questeq","lt","gt","le","ge","csch","sech","coth","arccot","arcsec","arccsc","arsinh","arcosh","artanh","arcsch","arsech","arcoth","lg","lb","Zeta","binom","curl","div","norm","ucorner","lcorner","angle","group","moustache","brace","and","or","xor","not","ast","star","asymp","factorial","factorial2","OP_PRECEDENCE","degree","partial","odot","solidus","setminus","otimes","union","intersection","oplus","ominus","circledast","circledcirc","complement","superset","elementof","suchThat","therefore","because","shortLogicalImplies","shortImplies","logicalImplies","implies","shortLogicalImpliedBy","shortImpliedBy","logicalImpliedBy","impliedBy","shortLogicalEquivalent","shortEquivalent","logicalEquivalent","equivalent","getArg","getPrecedence","canonicalName","getAssociativity","getLatexTemplateForFunction","getLatexForSymbol","isFunction$1","getCanonicalName","opPrec","getString","isOperator","DELIM_FUNCTION","POSTFIX_FUNCTION","ASSOCIATIVE_FUNCTION","SUPER_ASSOCIATIVE_FUNCTION","subAtom","asSymbol","sym","asMachineNumber","num","isNumber$1","numberRe","re","parseFloatToPrecision","numberIm","im","isComplexWithRealAndImaginary","hasSup","hasSub","isAtom","expr","wrapFn","functionName","wrapNum","negate","nextIsSupsub","parseSupsub","parse$1","parsePostfix","lhs","nextIsDigraph","parseDelim","ldelim","rdelim","savedPrec","minPrec","pairedDelim","parseExpression","atom2","digraph","parseDigraph","parsePrimary","val","pat","atomToMathJson","INVERSE_FUNCTION","prec","assoc","opName","subArg","currentSym","rhs","escapeText","variantSym","statement","condition","filterPresentationAtoms","parseSentence","zones","atomtoMathJson","wrapFence","formatMantissa","originalLength","cycle","times","groupSeparator","beginRepeatingDigits","endRepeatingDigits","toPrecision","numberAsLatex","sign","exponent","mantissa","decimalMarker","exponentProduct","exponentMarker","scientificNotation","log10","mantissaString","toExponential","exponentString","valString","jsonToLatex","product","arcSeparator","EPSILON","argstring","parenRequired","arg0","arg1","argsn","MathfieldPrivate","stylesheets","eventHandlingInProgress","originalContent","elementText","iChild","firstElementChild","wheelDelta","deltaX","virtualKeyboardToggle","blurred","composition","onCompositionStart","onCompositionUpdate","onCompositionEnd","_sender","_onSelectionDidChange","undoManager","$setConfig","deprecated","setOptions","getConfig","getOptions","getOption","resizeTimer","cancelAnimationFrame","onResize","$revertToOriginalContent","valueOnFocus","_composition","$perform","atomToString","saveTextToSpeechMarkup","$text","arg2","arg3","ranges","$selectedText","$selectionIsCollapsed","$selectionDepth","$selectionAtStart","$selectionAtEnd","$latex","oldValue","$el","selectionBounds","behavior","$insert","suffix","$hasFocus","$focus","$blur","$select","$applyStyle","$keystroke","$typedText","caretPosition","setCaretPoint","reason","method","findEndOfMath","delimiter","startIndex","braceLevel","delimLength","splitAtDelimiters","startData","finalData","lookingForLeft","currIndex","nextIndex","rawData","splitWithDelimiters","delimiters","inline","createMathMLNode","renderToMathML","createMarkupNode","createNodeOnFailure","preserveOriginalContent","renderToMarkup","createAccessibleMarkupPair","markupNode","renderAccessibleContent","fragment","createDocumentFragment","renderToSpeakableText","scanText$1","TeX","processEnvironments","scanElement","nodeType","childNode","frag","replaceChild","processScriptTypePattern","toLoweCase","parentNode","shouldRender","processClassPattern","skipTags","ignoreClassPattern","formula","defaultOptions","processScriptType","ignoreClass","processClass","renderMathInElement","AutoRender","latexToAsciiMath","asciiMathToLatex","ascii","getSymbol","childSymbol","getProp","getType","getClasses","hasClass","clsList","spanToString","indent","spanToMarkup","mathListColorToMarkup","propname","mathListPropToMarkup","mathlistToMarkup","MathLiveDebug","removeHighlight","highlightAtomID","atomID","atomId","defaultReadAloudHook","SpeechMarkTypes","readAloudElement","statusHook","response","TextDecoder","decode","readAloudMarks","readAloudTokens","mark","readAloudCurrentMark","readAloudAudio","currentTime","readAloudCurrentToken","readAloudFinalToken","readAloudStatus","paused","ended","pauseReadAloud","resumeReadAloud","playReadAloud","timeIndex","tokenIndex","CRYPTIC","ARCANE","RARE","UNCOMMON","COMMON","SUPERCOMMON","metadata","__classPrivateFieldGet","receiver","privateMap","has","TypeError","__classPrivateFieldSet","_mathfield","MATHFIELD_TEMPLATE","gDeferredState","WeakMap","MathfieldElement","HTMLElement","attachShadow","cloneNode","slot","host","_event","assignedElements","hasAttribute","assignedNodes","optionsAttributes","observedAttributes","reflectAttributes","fullRange","getOptionsFromAttributes","point","connectedCallback","Event","cancelable","CustomEvent","event","_mode","_visible","_keyboardElement","upgradeProperty","disconnectedCallback","toCamelCase","attributeChangedCallback","newValue","hasValue","isDisabled","mfe","attribs","lcValue","customElements","define","makeMathField","getElement","latexToMarkup$2","convertLatexToMarkup","convertLatexToMathMl","latexToMathML","latexToAST","convertLatexToSpeakableText","latexToSpeakableText","renderMathInDocument","renderMathInElement$1","validateNamespace","revertToOriginalContent","deprecated$1","getOriginalContent","version","debug","mathlive","readAloud"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nfunction isArray(x) {\r\n    return Array.isArray(x);\r\n}\r\nfunction isFunction(x) {\r\n    return typeof x === 'function';\r\n}\n\nvar METRICS_MAP = {\r\n    'AMS-Regular': {\r\n        '65': [0, 0.68889, 0, 0],\r\n        '66': [0, 0.68889, 0, 0],\r\n        '67': [0, 0.68889, 0, 0],\r\n        '68': [0, 0.68889, 0, 0],\r\n        '69': [0, 0.68889, 0, 0],\r\n        '70': [0, 0.68889, 0, 0],\r\n        '71': [0, 0.68889, 0, 0],\r\n        '72': [0, 0.68889, 0, 0],\r\n        '73': [0, 0.68889, 0, 0],\r\n        '74': [0.16667, 0.68889, 0, 0],\r\n        '75': [0, 0.68889, 0, 0],\r\n        '76': [0, 0.68889, 0, 0],\r\n        '77': [0, 0.68889, 0, 0],\r\n        '78': [0, 0.68889, 0, 0],\r\n        '79': [0.16667, 0.68889, 0, 0],\r\n        '80': [0, 0.68889, 0, 0],\r\n        '81': [0.16667, 0.68889, 0, 0],\r\n        '82': [0, 0.68889, 0, 0],\r\n        '83': [0, 0.68889, 0, 0],\r\n        '84': [0, 0.68889, 0, 0],\r\n        '85': [0, 0.68889, 0, 0],\r\n        '86': [0, 0.68889, 0, 0],\r\n        '87': [0, 0.68889, 0, 0],\r\n        '88': [0, 0.68889, 0, 0],\r\n        '89': [0, 0.68889, 0, 0],\r\n        '90': [0, 0.68889, 0, 0],\r\n        '107': [0, 0.68889, 0, 0],\r\n        '165': [0, 0.675, 0.025, 0],\r\n        '174': [0.15559, 0.69224, 0, 0],\r\n        '240': [0, 0.68889, 0, 0],\r\n        '295': [0, 0.68889, 0, 0],\r\n        '710': [0, 0.825, 0, 0],\r\n        '732': [0, 0.9, 0, 0],\r\n        '770': [0, 0.825, 0, 0],\r\n        '771': [0, 0.9, 0, 0],\r\n        '989': [0.08167, 0.58167, 0, 0],\r\n        '1008': [0, 0.43056, 0.04028, 0],\r\n        '8245': [0, 0.54986, 0, 0],\r\n        '8463': [0, 0.68889, 0, 0],\r\n        '8487': [0, 0.68889, 0, 0],\r\n        '8498': [0, 0.68889, 0, 0],\r\n        '8502': [0, 0.68889, 0, 0],\r\n        '8503': [0, 0.68889, 0, 0],\r\n        '8504': [0, 0.68889, 0, 0],\r\n        '8513': [0, 0.68889, 0, 0],\r\n        '8592': [-0.03598, 0.46402, 0, 0],\r\n        '8594': [-0.03598, 0.46402, 0, 0],\r\n        '8602': [-0.13313, 0.36687, 0, 0],\r\n        '8603': [-0.13313, 0.36687, 0, 0],\r\n        '8606': [0.01354, 0.52239, 0, 0],\r\n        '8608': [0.01354, 0.52239, 0, 0],\r\n        '8610': [0.01354, 0.52239, 0, 0],\r\n        '8611': [0.01354, 0.52239, 0, 0],\r\n        '8619': [0, 0.54986, 0, 0],\r\n        '8620': [0, 0.54986, 0, 0],\r\n        '8621': [-0.13313, 0.37788, 0, 0],\r\n        '8622': [-0.13313, 0.36687, 0, 0],\r\n        '8624': [0, 0.69224, 0, 0],\r\n        '8625': [0, 0.69224, 0, 0],\r\n        '8630': [0, 0.43056, 0, 0],\r\n        '8631': [0, 0.43056, 0, 0],\r\n        '8634': [0.08198, 0.58198, 0, 0],\r\n        '8635': [0.08198, 0.58198, 0, 0],\r\n        '8638': [0.19444, 0.69224, 0, 0],\r\n        '8639': [0.19444, 0.69224, 0, 0],\r\n        '8642': [0.19444, 0.69224, 0, 0],\r\n        '8643': [0.19444, 0.69224, 0, 0],\r\n        '8644': [0.1808, 0.675, 0, 0],\r\n        '8646': [0.1808, 0.675, 0, 0],\r\n        '8647': [0.1808, 0.675, 0, 0],\r\n        '8648': [0.19444, 0.69224, 0, 0],\r\n        '8649': [0.1808, 0.675, 0, 0],\r\n        '8650': [0.19444, 0.69224, 0, 0],\r\n        '8651': [0.01354, 0.52239, 0, 0],\r\n        '8652': [0.01354, 0.52239, 0, 0],\r\n        '8653': [-0.13313, 0.36687, 0, 0],\r\n        '8654': [-0.13313, 0.36687, 0, 0],\r\n        '8655': [-0.13313, 0.36687, 0, 0],\r\n        '8666': [0.13667, 0.63667, 0, 0],\r\n        '8667': [0.13667, 0.63667, 0, 0],\r\n        '8669': [-0.13313, 0.37788, 0, 0],\r\n        '8672': [-0.064, 0.437, 0, 0],\r\n        '8674': [-0.064, 0.437, 0, 0],\r\n        '8705': [0, 0.825, 0, 0],\r\n        '8708': [0, 0.68889, 0, 0],\r\n        '8709': [0.08167, 0.58167, 0, 0],\r\n        '8717': [0, 0.43056, 0, 0],\r\n        '8722': [-0.03598, 0.46402, 0, 0],\r\n        '8724': [0.08198, 0.69224, 0, 0],\r\n        '8726': [0.08167, 0.58167, 0, 0],\r\n        '8733': [0, 0.69224, 0, 0],\r\n        '8736': [0, 0.69224, 0, 0],\r\n        '8737': [0, 0.69224, 0, 0],\r\n        '8738': [0.03517, 0.52239, 0, 0],\r\n        '8739': [0.08167, 0.58167, 0, 0],\r\n        '8740': [0.25142, 0.74111, 0, 0],\r\n        '8741': [0.08167, 0.58167, 0, 0],\r\n        '8742': [0.25142, 0.74111, 0, 0],\r\n        '8756': [0, 0.69224, 0, 0],\r\n        '8757': [0, 0.69224, 0, 0],\r\n        '8764': [-0.13313, 0.36687, 0, 0],\r\n        '8765': [-0.13313, 0.37788, 0, 0],\r\n        '8769': [-0.13313, 0.36687, 0, 0],\r\n        '8770': [-0.03625, 0.46375, 0, 0],\r\n        '8774': [0.30274, 0.79383, 0, 0],\r\n        '8776': [-0.01688, 0.48312, 0, 0],\r\n        '8778': [0.08167, 0.58167, 0, 0],\r\n        '8782': [0.06062, 0.54986, 0, 0],\r\n        '8783': [0.06062, 0.54986, 0, 0],\r\n        '8785': [0.08198, 0.58198, 0, 0],\r\n        '8786': [0.08198, 0.58198, 0, 0],\r\n        '8787': [0.08198, 0.58198, 0, 0],\r\n        '8790': [0, 0.69224, 0, 0],\r\n        '8791': [0.22958, 0.72958, 0, 0],\r\n        '8796': [0.08198, 0.91667, 0, 0],\r\n        '8806': [0.25583, 0.75583, 0, 0],\r\n        '8807': [0.25583, 0.75583, 0, 0],\r\n        '8808': [0.25142, 0.75726, 0, 0],\r\n        '8809': [0.25142, 0.75726, 0, 0],\r\n        '8812': [0.25583, 0.75583, 0, 0],\r\n        '8814': [0.20576, 0.70576, 0, 0],\r\n        '8815': [0.20576, 0.70576, 0, 0],\r\n        '8816': [0.30274, 0.79383, 0, 0],\r\n        '8817': [0.30274, 0.79383, 0, 0],\r\n        '8818': [0.22958, 0.72958, 0, 0],\r\n        '8819': [0.22958, 0.72958, 0, 0],\r\n        '8822': [0.1808, 0.675, 0, 0],\r\n        '8823': [0.1808, 0.675, 0, 0],\r\n        '8828': [0.13667, 0.63667, 0, 0],\r\n        '8829': [0.13667, 0.63667, 0, 0],\r\n        '8830': [0.22958, 0.72958, 0, 0],\r\n        '8831': [0.22958, 0.72958, 0, 0],\r\n        '8832': [0.20576, 0.70576, 0, 0],\r\n        '8833': [0.20576, 0.70576, 0, 0],\r\n        '8840': [0.30274, 0.79383, 0, 0],\r\n        '8841': [0.30274, 0.79383, 0, 0],\r\n        '8842': [0.13597, 0.63597, 0, 0],\r\n        '8843': [0.13597, 0.63597, 0, 0],\r\n        '8847': [0.03517, 0.54986, 0, 0],\r\n        '8848': [0.03517, 0.54986, 0, 0],\r\n        '8858': [0.08198, 0.58198, 0, 0],\r\n        '8859': [0.08198, 0.58198, 0, 0],\r\n        '8861': [0.08198, 0.58198, 0, 0],\r\n        '8862': [0, 0.675, 0, 0],\r\n        '8863': [0, 0.675, 0, 0],\r\n        '8864': [0, 0.675, 0, 0],\r\n        '8865': [0, 0.675, 0, 0],\r\n        '8872': [0, 0.69224, 0, 0],\r\n        '8873': [0, 0.69224, 0, 0],\r\n        '8874': [0, 0.69224, 0, 0],\r\n        '8876': [0, 0.68889, 0, 0],\r\n        '8877': [0, 0.68889, 0, 0],\r\n        '8878': [0, 0.68889, 0, 0],\r\n        '8879': [0, 0.68889, 0, 0],\r\n        '8882': [0.03517, 0.54986, 0, 0],\r\n        '8883': [0.03517, 0.54986, 0, 0],\r\n        '8884': [0.13667, 0.63667, 0, 0],\r\n        '8885': [0.13667, 0.63667, 0, 0],\r\n        '8888': [0, 0.54986, 0, 0],\r\n        '8890': [0.19444, 0.43056, 0, 0],\r\n        '8891': [0.19444, 0.69224, 0, 0],\r\n        '8892': [0.19444, 0.69224, 0, 0],\r\n        '8901': [0, 0.54986, 0, 0],\r\n        '8903': [0.08167, 0.58167, 0, 0],\r\n        '8905': [0.08167, 0.58167, 0, 0],\r\n        '8906': [0.08167, 0.58167, 0, 0],\r\n        '8907': [0, 0.69224, 0, 0],\r\n        '8908': [0, 0.69224, 0, 0],\r\n        '8909': [-0.03598, 0.46402, 0, 0],\r\n        '8910': [0, 0.54986, 0, 0],\r\n        '8911': [0, 0.54986, 0, 0],\r\n        '8912': [0.03517, 0.54986, 0, 0],\r\n        '8913': [0.03517, 0.54986, 0, 0],\r\n        '8914': [0, 0.54986, 0, 0],\r\n        '8915': [0, 0.54986, 0, 0],\r\n        '8916': [0, 0.69224, 0, 0],\r\n        '8918': [0.0391, 0.5391, 0, 0],\r\n        '8919': [0.0391, 0.5391, 0, 0],\r\n        '8920': [0.03517, 0.54986, 0, 0],\r\n        '8921': [0.03517, 0.54986, 0, 0],\r\n        '8922': [0.38569, 0.88569, 0, 0],\r\n        '8923': [0.38569, 0.88569, 0, 0],\r\n        '8926': [0.13667, 0.63667, 0, 0],\r\n        '8927': [0.13667, 0.63667, 0, 0],\r\n        '8928': [0.30274, 0.79383, 0, 0],\r\n        '8929': [0.30274, 0.79383, 0, 0],\r\n        '8934': [0.23222, 0.74111, 0, 0],\r\n        '8935': [0.23222, 0.74111, 0, 0],\r\n        '8936': [0.23222, 0.74111, 0, 0],\r\n        '8937': [0.23222, 0.74111, 0, 0],\r\n        '8938': [0.20576, 0.70576, 0, 0],\r\n        '8939': [0.20576, 0.70576, 0, 0],\r\n        '8940': [0.30274, 0.79383, 0, 0],\r\n        '8941': [0.30274, 0.79383, 0, 0],\r\n        '8994': [0.19444, 0.69224, 0, 0],\r\n        '8995': [0.19444, 0.69224, 0, 0],\r\n        '9416': [0.15559, 0.69224, 0, 0],\r\n        '9484': [0, 0.69224, 0, 0],\r\n        '9488': [0, 0.69224, 0, 0],\r\n        '9492': [0, 0.37788, 0, 0],\r\n        '9496': [0, 0.37788, 0, 0],\r\n        '9585': [0.19444, 0.68889, 0, 0],\r\n        '9586': [0.19444, 0.74111, 0, 0],\r\n        '9632': [0, 0.675, 0, 0],\r\n        '9633': [0, 0.675, 0, 0],\r\n        '9650': [0, 0.54986, 0, 0],\r\n        '9651': [0, 0.54986, 0, 0],\r\n        '9654': [0.03517, 0.54986, 0, 0],\r\n        '9660': [0, 0.54986, 0, 0],\r\n        '9661': [0, 0.54986, 0, 0],\r\n        '9664': [0.03517, 0.54986, 0, 0],\r\n        '9674': [0.11111, 0.69224, 0, 0],\r\n        '9733': [0.19444, 0.69224, 0, 0],\r\n        '10003': [0, 0.69224, 0, 0],\r\n        '10016': [0, 0.69224, 0, 0],\r\n        '10731': [0.11111, 0.69224, 0, 0],\r\n        '10846': [0.19444, 0.75583, 0, 0],\r\n        '10877': [0.13667, 0.63667, 0, 0],\r\n        '10878': [0.13667, 0.63667, 0, 0],\r\n        '10885': [0.25583, 0.75583, 0, 0],\r\n        '10886': [0.25583, 0.75583, 0, 0],\r\n        '10887': [0.13597, 0.63597, 0, 0],\r\n        '10888': [0.13597, 0.63597, 0, 0],\r\n        '10889': [0.26167, 0.75726, 0, 0],\r\n        '10890': [0.26167, 0.75726, 0, 0],\r\n        '10891': [0.48256, 0.98256, 0, 0],\r\n        '10892': [0.48256, 0.98256, 0, 0],\r\n        '10901': [0.13667, 0.63667, 0, 0],\r\n        '10902': [0.13667, 0.63667, 0, 0],\r\n        '10933': [0.25142, 0.75726, 0, 0],\r\n        '10934': [0.25142, 0.75726, 0, 0],\r\n        '10935': [0.26167, 0.75726, 0, 0],\r\n        '10936': [0.26167, 0.75726, 0, 0],\r\n        '10937': [0.26167, 0.75726, 0, 0],\r\n        '10938': [0.26167, 0.75726, 0, 0],\r\n        '10949': [0.25583, 0.75583, 0, 0],\r\n        '10950': [0.25583, 0.75583, 0, 0],\r\n        '10955': [0.28481, 0.79383, 0, 0],\r\n        '10956': [0.28481, 0.79383, 0, 0],\r\n        '57350': [0.08167, 0.58167, 0, 0],\r\n        '57351': [0.08167, 0.58167, 0, 0],\r\n        '57352': [0.08167, 0.58167, 0, 0],\r\n        '57353': [0, 0.43056, 0.04028, 0],\r\n        '57356': [0.25142, 0.75726, 0, 0],\r\n        '57357': [0.25142, 0.75726, 0, 0],\r\n        '57358': [0.41951, 0.91951, 0, 0],\r\n        '57359': [0.30274, 0.79383, 0, 0],\r\n        '57360': [0.30274, 0.79383, 0, 0],\r\n        '57361': [0.41951, 0.91951, 0, 0],\r\n        '57366': [0.25142, 0.75726, 0, 0],\r\n        '57367': [0.25142, 0.75726, 0, 0],\r\n        '57368': [0.25142, 0.75726, 0, 0],\r\n        '57369': [0.25142, 0.75726, 0, 0],\r\n        '57370': [0.13597, 0.63597, 0, 0],\r\n        '57371': [0.13597, 0.63597, 0, 0],\r\n    },\r\n    'Caligraphic-Regular': {\r\n        '48': [0, 0.43056, 0, 0],\r\n        '49': [0, 0.43056, 0, 0],\r\n        '50': [0, 0.43056, 0, 0],\r\n        '51': [0.19444, 0.43056, 0, 0],\r\n        '52': [0.19444, 0.43056, 0, 0],\r\n        '53': [0.19444, 0.43056, 0, 0],\r\n        '54': [0, 0.64444, 0, 0],\r\n        '55': [0.19444, 0.43056, 0, 0],\r\n        '56': [0, 0.64444, 0, 0],\r\n        '57': [0.19444, 0.43056, 0, 0],\r\n        '65': [0, 0.68333, 0, 0.19445],\r\n        '66': [0, 0.68333, 0.03041, 0.13889],\r\n        '67': [0, 0.68333, 0.05834, 0.13889],\r\n        '68': [0, 0.68333, 0.02778, 0.08334],\r\n        '69': [0, 0.68333, 0.08944, 0.11111],\r\n        '70': [0, 0.68333, 0.09931, 0.11111],\r\n        '71': [0.09722, 0.68333, 0.0593, 0.11111],\r\n        '72': [0, 0.68333, 0.00965, 0.11111],\r\n        '73': [0, 0.68333, 0.07382, 0],\r\n        '74': [0.09722, 0.68333, 0.18472, 0.16667],\r\n        '75': [0, 0.68333, 0.01445, 0.05556],\r\n        '76': [0, 0.68333, 0, 0.13889],\r\n        '77': [0, 0.68333, 0, 0.13889],\r\n        '78': [0, 0.68333, 0.14736, 0.08334],\r\n        '79': [0, 0.68333, 0.02778, 0.11111],\r\n        '80': [0, 0.68333, 0.08222, 0.08334],\r\n        '81': [0.09722, 0.68333, 0, 0.11111],\r\n        '82': [0, 0.68333, 0, 0.08334],\r\n        '83': [0, 0.68333, 0.075, 0.13889],\r\n        '84': [0, 0.68333, 0.25417, 0],\r\n        '85': [0, 0.68333, 0.09931, 0.08334],\r\n        '86': [0, 0.68333, 0.08222, 0],\r\n        '87': [0, 0.68333, 0.08222, 0.08334],\r\n        '88': [0, 0.68333, 0.14643, 0.13889],\r\n        '89': [0.09722, 0.68333, 0.08222, 0.08334],\r\n        '90': [0, 0.68333, 0.07944, 0.13889],\r\n    },\r\n    'Fraktur-Regular': {\r\n        '33': [0, 0.69141, 0, 0],\r\n        '34': [0, 0.69141, 0, 0],\r\n        '38': [0, 0.69141, 0, 0],\r\n        '39': [0, 0.69141, 0, 0],\r\n        '40': [0.24982, 0.74947, 0, 0],\r\n        '41': [0.24982, 0.74947, 0, 0],\r\n        '42': [0, 0.62119, 0, 0],\r\n        '43': [0.08319, 0.58283, 0, 0],\r\n        '44': [0, 0.10803, 0, 0],\r\n        '45': [0.08319, 0.58283, 0, 0],\r\n        '46': [0, 0.10803, 0, 0],\r\n        '47': [0.24982, 0.74947, 0, 0],\r\n        '48': [0, 0.47534, 0, 0],\r\n        '49': [0, 0.47534, 0, 0],\r\n        '50': [0, 0.47534, 0, 0],\r\n        '51': [0.18906, 0.47534, 0, 0],\r\n        '52': [0.18906, 0.47534, 0, 0],\r\n        '53': [0.18906, 0.47534, 0, 0],\r\n        '54': [0, 0.69141, 0, 0],\r\n        '55': [0.18906, 0.47534, 0, 0],\r\n        '56': [0, 0.69141, 0, 0],\r\n        '57': [0.18906, 0.47534, 0, 0],\r\n        '58': [0, 0.47534, 0, 0],\r\n        '59': [0.12604, 0.47534, 0, 0],\r\n        '61': [-0.13099, 0.36866, 0, 0],\r\n        '63': [0, 0.69141, 0, 0],\r\n        '65': [0, 0.69141, 0, 0],\r\n        '66': [0, 0.69141, 0, 0],\r\n        '67': [0, 0.69141, 0, 0],\r\n        '68': [0, 0.69141, 0, 0],\r\n        '69': [0, 0.69141, 0, 0],\r\n        '70': [0.12604, 0.69141, 0, 0],\r\n        '71': [0, 0.69141, 0, 0],\r\n        '72': [0.06302, 0.69141, 0, 0],\r\n        '73': [0, 0.69141, 0, 0],\r\n        '74': [0.12604, 0.69141, 0, 0],\r\n        '75': [0, 0.69141, 0, 0],\r\n        '76': [0, 0.69141, 0, 0],\r\n        '77': [0, 0.69141, 0, 0],\r\n        '78': [0, 0.69141, 0, 0],\r\n        '79': [0, 0.69141, 0, 0],\r\n        '80': [0.18906, 0.69141, 0, 0],\r\n        '81': [0.03781, 0.69141, 0, 0],\r\n        '82': [0, 0.69141, 0, 0],\r\n        '83': [0, 0.69141, 0, 0],\r\n        '84': [0, 0.69141, 0, 0],\r\n        '85': [0, 0.69141, 0, 0],\r\n        '86': [0, 0.69141, 0, 0],\r\n        '87': [0, 0.69141, 0, 0],\r\n        '88': [0, 0.69141, 0, 0],\r\n        '89': [0.18906, 0.69141, 0, 0],\r\n        '90': [0.12604, 0.69141, 0, 0],\r\n        '91': [0.24982, 0.74947, 0, 0],\r\n        '93': [0.24982, 0.74947, 0, 0],\r\n        '94': [0, 0.69141, 0, 0],\r\n        '97': [0, 0.47534, 0, 0],\r\n        '98': [0, 0.69141, 0, 0],\r\n        '99': [0, 0.47534, 0, 0],\r\n        '100': [0, 0.62119, 0, 0],\r\n        '101': [0, 0.47534, 0, 0],\r\n        '102': [0.18906, 0.69141, 0, 0],\r\n        '103': [0.18906, 0.47534, 0, 0],\r\n        '104': [0.18906, 0.69141, 0, 0],\r\n        '105': [0, 0.69141, 0, 0],\r\n        '106': [0, 0.69141, 0, 0],\r\n        '107': [0, 0.69141, 0, 0],\r\n        '108': [0, 0.69141, 0, 0],\r\n        '109': [0, 0.47534, 0, 0],\r\n        '110': [0, 0.47534, 0, 0],\r\n        '111': [0, 0.47534, 0, 0],\r\n        '112': [0.18906, 0.52396, 0, 0],\r\n        '113': [0.18906, 0.47534, 0, 0],\r\n        '114': [0, 0.47534, 0, 0],\r\n        '115': [0, 0.47534, 0, 0],\r\n        '116': [0, 0.62119, 0, 0],\r\n        '117': [0, 0.47534, 0, 0],\r\n        '118': [0, 0.52396, 0, 0],\r\n        '119': [0, 0.52396, 0, 0],\r\n        '120': [0.18906, 0.47534, 0, 0],\r\n        '121': [0.18906, 0.47534, 0, 0],\r\n        '122': [0.18906, 0.47534, 0, 0],\r\n        '8216': [0, 0.69141, 0, 0],\r\n        '8217': [0, 0.69141, 0, 0],\r\n        '58112': [0, 0.62119, 0, 0],\r\n        '58113': [0, 0.62119, 0, 0],\r\n        '58114': [0.18906, 0.69141, 0, 0],\r\n        '58115': [0.18906, 0.69141, 0, 0],\r\n        '58116': [0.18906, 0.47534, 0, 0],\r\n        '58117': [0, 0.69141, 0, 0],\r\n        '58118': [0, 0.62119, 0, 0],\r\n        '58119': [0, 0.47534, 0, 0],\r\n    },\r\n    'Main-Bold': {\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.13333, 0.63333, 0, 0],\r\n        '44': [0.19444, 0.15556, 0, 0],\r\n        '45': [0, 0.44444, 0, 0],\r\n        '46': [0, 0.15556, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.64444, 0, 0],\r\n        '49': [0, 0.64444, 0, 0],\r\n        '50': [0, 0.64444, 0, 0],\r\n        '51': [0, 0.64444, 0, 0],\r\n        '52': [0, 0.64444, 0, 0],\r\n        '53': [0, 0.64444, 0, 0],\r\n        '54': [0, 0.64444, 0, 0],\r\n        '55': [0, 0.64444, 0, 0],\r\n        '56': [0, 0.64444, 0, 0],\r\n        '57': [0, 0.64444, 0, 0],\r\n        '58': [0, 0.44444, 0, 0],\r\n        '59': [0.19444, 0.44444, 0, 0],\r\n        '60': [0.08556, 0.58556, 0, 0],\r\n        '61': [-0.10889, 0.39111, 0, 0],\r\n        '62': [0.08556, 0.58556, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.68611, 0, 0],\r\n        '66': [0, 0.68611, 0, 0],\r\n        '67': [0, 0.68611, 0, 0],\r\n        '68': [0, 0.68611, 0, 0],\r\n        '69': [0, 0.68611, 0, 0],\r\n        '70': [0, 0.68611, 0, 0],\r\n        '71': [0, 0.68611, 0, 0],\r\n        '72': [0, 0.68611, 0, 0],\r\n        '73': [0, 0.68611, 0, 0],\r\n        '74': [0, 0.68611, 0, 0],\r\n        '75': [0, 0.68611, 0, 0],\r\n        '76': [0, 0.68611, 0, 0],\r\n        '77': [0, 0.68611, 0, 0],\r\n        '78': [0, 0.68611, 0, 0],\r\n        '79': [0, 0.68611, 0, 0],\r\n        '80': [0, 0.68611, 0, 0],\r\n        '81': [0.19444, 0.68611, 0, 0],\r\n        '82': [0, 0.68611, 0, 0],\r\n        '83': [0, 0.68611, 0, 0],\r\n        '84': [0, 0.68611, 0, 0],\r\n        '85': [0, 0.68611, 0, 0],\r\n        '86': [0, 0.68611, 0.01597, 0],\r\n        '87': [0, 0.68611, 0.01597, 0],\r\n        '88': [0, 0.68611, 0, 0],\r\n        '89': [0, 0.68611, 0.02875, 0],\r\n        '90': [0, 0.68611, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '92': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.31, 0.13444, 0.03194, 0],\r\n        '97': [0, 0.44444, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.44444, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.44444, 0, 0],\r\n        '102': [0, 0.69444, 0.10903, 0],\r\n        '103': [0.19444, 0.44444, 0.01597, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.69444, 0, 0],\r\n        '106': [0.19444, 0.69444, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.44444, 0, 0],\r\n        '110': [0, 0.44444, 0, 0],\r\n        '111': [0, 0.44444, 0, 0],\r\n        '112': [0.19444, 0.44444, 0, 0],\r\n        '113': [0.19444, 0.44444, 0, 0],\r\n        '114': [0, 0.44444, 0, 0],\r\n        '115': [0, 0.44444, 0, 0],\r\n        '116': [0, 0.63492, 0, 0],\r\n        '117': [0, 0.44444, 0, 0],\r\n        '118': [0, 0.44444, 0.01597, 0],\r\n        '119': [0, 0.44444, 0.01597, 0],\r\n        '120': [0, 0.44444, 0, 0],\r\n        '121': [0.19444, 0.44444, 0.01597, 0],\r\n        '122': [0, 0.44444, 0, 0],\r\n        '123': [0.25, 0.75, 0, 0],\r\n        '124': [0.25, 0.75, 0, 0],\r\n        '125': [0.25, 0.75, 0, 0],\r\n        '126': [0.35, 0.34444, 0, 0],\r\n        '168': [0, 0.69444, 0, 0],\r\n        '172': [0, 0.44444, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '177': [0.13333, 0.63333, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68611, 0, 0],\r\n        '215': [0.13333, 0.63333, 0, 0],\r\n        '216': [0.04861, 0.73472, 0, 0],\r\n        '223': [0, 0.69444, 0, 0],\r\n        '230': [0, 0.44444, 0, 0],\r\n        '247': [0.13333, 0.63333, 0, 0],\r\n        '248': [0.09722, 0.54167, 0, 0],\r\n        '305': [0, 0.44444, 0, 0],\r\n        '338': [0, 0.68611, 0, 0],\r\n        '339': [0, 0.44444, 0, 0],\r\n        '567': [0.19444, 0.44444, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.63194, 0, 0],\r\n        '713': [0, 0.59611, 0, 0],\r\n        '714': [0, 0.69444, 0, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.69444, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.69444, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.68611, 0, 0],\r\n        '916': [0, 0.68611, 0, 0],\r\n        '920': [0, 0.68611, 0, 0],\r\n        '923': [0, 0.68611, 0, 0],\r\n        '926': [0, 0.68611, 0, 0],\r\n        '928': [0, 0.68611, 0, 0],\r\n        '931': [0, 0.68611, 0, 0],\r\n        '933': [0, 0.68611, 0, 0],\r\n        '934': [0, 0.68611, 0, 0],\r\n        '936': [0, 0.68611, 0, 0],\r\n        '937': [0, 0.68611, 0, 0],\r\n        '8211': [0, 0.44444, 0.03194, 0],\r\n        '8212': [0, 0.44444, 0.03194, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n        '8224': [0.19444, 0.69444, 0, 0],\r\n        '8225': [0.19444, 0.69444, 0, 0],\r\n        '8242': [0, 0.55556, 0, 0],\r\n        '8407': [0, 0.72444, 0.15486, 0],\r\n        '8463': [0, 0.69444, 0, 0],\r\n        '8465': [0, 0.69444, 0, 0],\r\n        '8467': [0, 0.69444, 0, 0],\r\n        '8472': [0.19444, 0.44444, 0, 0],\r\n        '8476': [0, 0.69444, 0, 0],\r\n        '8501': [0, 0.69444, 0, 0],\r\n        '8592': [-0.10889, 0.39111, 0, 0],\r\n        '8593': [0.19444, 0.69444, 0, 0],\r\n        '8594': [-0.10889, 0.39111, 0, 0],\r\n        '8595': [0.19444, 0.69444, 0, 0],\r\n        '8596': [-0.10889, 0.39111, 0, 0],\r\n        '8597': [0.25, 0.75, 0, 0],\r\n        '8598': [0.19444, 0.69444, 0, 0],\r\n        '8599': [0.19444, 0.69444, 0, 0],\r\n        '8600': [0.19444, 0.69444, 0, 0],\r\n        '8601': [0.19444, 0.69444, 0, 0],\r\n        '8636': [-0.10889, 0.39111, 0, 0],\r\n        '8637': [-0.10889, 0.39111, 0, 0],\r\n        '8640': [-0.10889, 0.39111, 0, 0],\r\n        '8641': [-0.10889, 0.39111, 0, 0],\r\n        '8656': [-0.10889, 0.39111, 0, 0],\r\n        '8657': [0.19444, 0.69444, 0, 0],\r\n        '8658': [-0.10889, 0.39111, 0, 0],\r\n        '8659': [0.19444, 0.69444, 0, 0],\r\n        '8660': [-0.10889, 0.39111, 0, 0],\r\n        '8661': [0.25, 0.75, 0, 0],\r\n        '8704': [0, 0.69444, 0, 0],\r\n        '8706': [0, 0.69444, 0.06389, 0],\r\n        '8707': [0, 0.69444, 0, 0],\r\n        '8709': [0.05556, 0.75, 0, 0],\r\n        '8711': [0, 0.68611, 0, 0],\r\n        '8712': [0.08556, 0.58556, 0, 0],\r\n        '8715': [0.08556, 0.58556, 0, 0],\r\n        '8722': [0.13333, 0.63333, 0, 0],\r\n        '8723': [0.13333, 0.63333, 0, 0],\r\n        '8725': [0.25, 0.75, 0, 0],\r\n        '8726': [0.25, 0.75, 0, 0],\r\n        '8727': [-0.02778, 0.47222, 0, 0],\r\n        '8728': [-0.02639, 0.47361, 0, 0],\r\n        '8729': [-0.02639, 0.47361, 0, 0],\r\n        '8730': [0.18, 0.82, 0, 0],\r\n        '8733': [0, 0.44444, 0, 0],\r\n        '8734': [0, 0.44444, 0, 0],\r\n        '8736': [0, 0.69224, 0, 0],\r\n        '8739': [0.25, 0.75, 0, 0],\r\n        '8741': [0.25, 0.75, 0, 0],\r\n        '8743': [0, 0.55556, 0, 0],\r\n        '8744': [0, 0.55556, 0, 0],\r\n        '8745': [0, 0.55556, 0, 0],\r\n        '8746': [0, 0.55556, 0, 0],\r\n        '8747': [0.19444, 0.69444, 0.12778, 0],\r\n        '8764': [-0.10889, 0.39111, 0, 0],\r\n        '8768': [0.19444, 0.69444, 0, 0],\r\n        '8771': [0.00222, 0.50222, 0, 0],\r\n        '8776': [0.02444, 0.52444, 0, 0],\r\n        '8781': [0.00222, 0.50222, 0, 0],\r\n        '8801': [0.00222, 0.50222, 0, 0],\r\n        '8804': [0.19667, 0.69667, 0, 0],\r\n        '8805': [0.19667, 0.69667, 0, 0],\r\n        '8810': [0.08556, 0.58556, 0, 0],\r\n        '8811': [0.08556, 0.58556, 0, 0],\r\n        '8826': [0.08556, 0.58556, 0, 0],\r\n        '8827': [0.08556, 0.58556, 0, 0],\r\n        '8834': [0.08556, 0.58556, 0, 0],\r\n        '8835': [0.08556, 0.58556, 0, 0],\r\n        '8838': [0.19667, 0.69667, 0, 0],\r\n        '8839': [0.19667, 0.69667, 0, 0],\r\n        '8846': [0, 0.55556, 0, 0],\r\n        '8849': [0.19667, 0.69667, 0, 0],\r\n        '8850': [0.19667, 0.69667, 0, 0],\r\n        '8851': [0, 0.55556, 0, 0],\r\n        '8852': [0, 0.55556, 0, 0],\r\n        '8853': [0.13333, 0.63333, 0, 0],\r\n        '8854': [0.13333, 0.63333, 0, 0],\r\n        '8855': [0.13333, 0.63333, 0, 0],\r\n        '8856': [0.13333, 0.63333, 0, 0],\r\n        '8857': [0.13333, 0.63333, 0, 0],\r\n        '8866': [0, 0.69444, 0, 0],\r\n        '8867': [0, 0.69444, 0, 0],\r\n        '8868': [0, 0.69444, 0, 0],\r\n        '8869': [0, 0.69444, 0, 0],\r\n        '8900': [-0.02639, 0.47361, 0, 0],\r\n        '8901': [-0.02639, 0.47361, 0, 0],\r\n        '8902': [-0.02778, 0.47222, 0, 0],\r\n        '8968': [0.25, 0.75, 0, 0],\r\n        '8969': [0.25, 0.75, 0, 0],\r\n        '8970': [0.25, 0.75, 0, 0],\r\n        '8971': [0.25, 0.75, 0, 0],\r\n        '8994': [-0.13889, 0.36111, 0, 0],\r\n        '8995': [-0.13889, 0.36111, 0, 0],\r\n        '9651': [0.19444, 0.69444, 0, 0],\r\n        '9657': [-0.02778, 0.47222, 0, 0],\r\n        '9661': [0.19444, 0.69444, 0, 0],\r\n        '9667': [-0.02778, 0.47222, 0, 0],\r\n        '9711': [0.19444, 0.69444, 0, 0],\r\n        '9824': [0.12963, 0.69444, 0, 0],\r\n        '9825': [0.12963, 0.69444, 0, 0],\r\n        '9826': [0.12963, 0.69444, 0, 0],\r\n        '9827': [0.12963, 0.69444, 0, 0],\r\n        '9837': [0, 0.75, 0, 0],\r\n        '9838': [0.19444, 0.69444, 0, 0],\r\n        '9839': [0.19444, 0.69444, 0, 0],\r\n        '10216': [0.25, 0.75, 0, 0],\r\n        '10217': [0.25, 0.75, 0, 0],\r\n        '10815': [0, 0.68611, 0, 0],\r\n        '10927': [0.19667, 0.69667, 0, 0],\r\n        '10928': [0.19667, 0.69667, 0, 0],\r\n        '57376': [0.19444, 0.69444, 0, 0],\r\n    },\r\n    'Main-BoldItalic': {\r\n        '33': [0, 0.69444, 0.11417, 0],\r\n        '34': [0, 0.69444, 0.07939, 0],\r\n        '35': [0.19444, 0.69444, 0.06833, 0],\r\n        '37': [0.05556, 0.75, 0.12861, 0],\r\n        '38': [0, 0.69444, 0.08528, 0],\r\n        '39': [0, 0.69444, 0.12945, 0],\r\n        '40': [0.25, 0.75, 0.15806, 0],\r\n        '41': [0.25, 0.75, 0.03306, 0],\r\n        '42': [0, 0.75, 0.14333, 0],\r\n        '43': [0.10333, 0.60333, 0.03306, 0],\r\n        '44': [0.19444, 0.14722, 0, 0],\r\n        '45': [0, 0.44444, 0.02611, 0],\r\n        '46': [0, 0.14722, 0, 0],\r\n        '47': [0.25, 0.75, 0.15806, 0],\r\n        '48': [0, 0.64444, 0.13167, 0],\r\n        '49': [0, 0.64444, 0.13167, 0],\r\n        '50': [0, 0.64444, 0.13167, 0],\r\n        '51': [0, 0.64444, 0.13167, 0],\r\n        '52': [0.19444, 0.64444, 0.13167, 0],\r\n        '53': [0, 0.64444, 0.13167, 0],\r\n        '54': [0, 0.64444, 0.13167, 0],\r\n        '55': [0.19444, 0.64444, 0.13167, 0],\r\n        '56': [0, 0.64444, 0.13167, 0],\r\n        '57': [0, 0.64444, 0.13167, 0],\r\n        '58': [0, 0.44444, 0.06695, 0],\r\n        '59': [0.19444, 0.44444, 0.06695, 0],\r\n        '61': [-0.10889, 0.39111, 0.06833, 0],\r\n        '63': [0, 0.69444, 0.11472, 0],\r\n        '64': [0, 0.69444, 0.09208, 0],\r\n        '65': [0, 0.68611, 0, 0],\r\n        '66': [0, 0.68611, 0.0992, 0],\r\n        '67': [0, 0.68611, 0.14208, 0],\r\n        '68': [0, 0.68611, 0.09062, 0],\r\n        '69': [0, 0.68611, 0.11431, 0],\r\n        '70': [0, 0.68611, 0.12903, 0],\r\n        '71': [0, 0.68611, 0.07347, 0],\r\n        '72': [0, 0.68611, 0.17208, 0],\r\n        '73': [0, 0.68611, 0.15681, 0],\r\n        '74': [0, 0.68611, 0.145, 0],\r\n        '75': [0, 0.68611, 0.14208, 0],\r\n        '76': [0, 0.68611, 0, 0],\r\n        '77': [0, 0.68611, 0.17208, 0],\r\n        '78': [0, 0.68611, 0.17208, 0],\r\n        '79': [0, 0.68611, 0.09062, 0],\r\n        '80': [0, 0.68611, 0.0992, 0],\r\n        '81': [0.19444, 0.68611, 0.09062, 0],\r\n        '82': [0, 0.68611, 0.02559, 0],\r\n        '83': [0, 0.68611, 0.11264, 0],\r\n        '84': [0, 0.68611, 0.12903, 0],\r\n        '85': [0, 0.68611, 0.17208, 0],\r\n        '86': [0, 0.68611, 0.18625, 0],\r\n        '87': [0, 0.68611, 0.18625, 0],\r\n        '88': [0, 0.68611, 0.15681, 0],\r\n        '89': [0, 0.68611, 0.19803, 0],\r\n        '90': [0, 0.68611, 0.14208, 0],\r\n        '91': [0.25, 0.75, 0.1875, 0],\r\n        '93': [0.25, 0.75, 0.09972, 0],\r\n        '94': [0, 0.69444, 0.06709, 0],\r\n        '95': [0.31, 0.13444, 0.09811, 0],\r\n        '97': [0, 0.44444, 0.09426, 0],\r\n        '98': [0, 0.69444, 0.07861, 0],\r\n        '99': [0, 0.44444, 0.05222, 0],\r\n        '100': [0, 0.69444, 0.10861, 0],\r\n        '101': [0, 0.44444, 0.085, 0],\r\n        '102': [0.19444, 0.69444, 0.21778, 0],\r\n        '103': [0.19444, 0.44444, 0.105, 0],\r\n        '104': [0, 0.69444, 0.09426, 0],\r\n        '105': [0, 0.69326, 0.11387, 0],\r\n        '106': [0.19444, 0.69326, 0.1672, 0],\r\n        '107': [0, 0.69444, 0.11111, 0],\r\n        '108': [0, 0.69444, 0.10861, 0],\r\n        '109': [0, 0.44444, 0.09426, 0],\r\n        '110': [0, 0.44444, 0.09426, 0],\r\n        '111': [0, 0.44444, 0.07861, 0],\r\n        '112': [0.19444, 0.44444, 0.07861, 0],\r\n        '113': [0.19444, 0.44444, 0.105, 0],\r\n        '114': [0, 0.44444, 0.11111, 0],\r\n        '115': [0, 0.44444, 0.08167, 0],\r\n        '116': [0, 0.63492, 0.09639, 0],\r\n        '117': [0, 0.44444, 0.09426, 0],\r\n        '118': [0, 0.44444, 0.11111, 0],\r\n        '119': [0, 0.44444, 0.11111, 0],\r\n        '120': [0, 0.44444, 0.12583, 0],\r\n        '121': [0.19444, 0.44444, 0.105, 0],\r\n        '122': [0, 0.44444, 0.13889, 0],\r\n        '126': [0.35, 0.34444, 0.11472, 0],\r\n        '163': [0, 0.69444, 0, 0],\r\n        '168': [0, 0.69444, 0.11473, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68611, 0.11431, 0],\r\n        '216': [0.04861, 0.73472, 0.09062, 0],\r\n        '223': [0.19444, 0.69444, 0.09736, 0],\r\n        '230': [0, 0.44444, 0.085, 0],\r\n        '248': [0.09722, 0.54167, 0.09458, 0],\r\n        '305': [0, 0.44444, 0.09426, 0],\r\n        '338': [0, 0.68611, 0.11431, 0],\r\n        '339': [0, 0.44444, 0.085, 0],\r\n        '567': [0.19444, 0.44444, 0.04611, 0],\r\n        '710': [0, 0.69444, 0.06709, 0],\r\n        '711': [0, 0.63194, 0.08271, 0],\r\n        '713': [0, 0.59444, 0.10444, 0],\r\n        '714': [0, 0.69444, 0.08528, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0.10333, 0],\r\n        '729': [0, 0.69444, 0.12945, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.69444, 0.11472, 0],\r\n        '733': [0, 0.69444, 0.11472, 0],\r\n        '915': [0, 0.68611, 0.12903, 0],\r\n        '916': [0, 0.68611, 0, 0],\r\n        '920': [0, 0.68611, 0.09062, 0],\r\n        '923': [0, 0.68611, 0, 0],\r\n        '926': [0, 0.68611, 0.15092, 0],\r\n        '928': [0, 0.68611, 0.17208, 0],\r\n        '931': [0, 0.68611, 0.11431, 0],\r\n        '933': [0, 0.68611, 0.10778, 0],\r\n        '934': [0, 0.68611, 0.05632, 0],\r\n        '936': [0, 0.68611, 0.10778, 0],\r\n        '937': [0, 0.68611, 0.0992, 0],\r\n        '8211': [0, 0.44444, 0.09811, 0],\r\n        '8212': [0, 0.44444, 0.09811, 0],\r\n        '8216': [0, 0.69444, 0.12945, 0],\r\n        '8217': [0, 0.69444, 0.12945, 0],\r\n        '8220': [0, 0.69444, 0.16772, 0],\r\n        '8221': [0, 0.69444, 0.07939, 0],\r\n    },\r\n    'Main-Italic': {\r\n        '33': [0, 0.69444, 0.12417, 0],\r\n        '34': [0, 0.69444, 0.06961, 0],\r\n        '35': [0.19444, 0.69444, 0.06616, 0],\r\n        '37': [0.05556, 0.75, 0.13639, 0],\r\n        '38': [0, 0.69444, 0.09694, 0],\r\n        '39': [0, 0.69444, 0.12417, 0],\r\n        '40': [0.25, 0.75, 0.16194, 0],\r\n        '41': [0.25, 0.75, 0.03694, 0],\r\n        '42': [0, 0.75, 0.14917, 0],\r\n        '43': [0.05667, 0.56167, 0.03694, 0],\r\n        '44': [0.19444, 0.10556, 0, 0],\r\n        '45': [0, 0.43056, 0.02826, 0],\r\n        '46': [0, 0.10556, 0, 0],\r\n        '47': [0.25, 0.75, 0.16194, 0],\r\n        '48': [0, 0.64444, 0.13556, 0],\r\n        '49': [0, 0.64444, 0.13556, 0],\r\n        '50': [0, 0.64444, 0.13556, 0],\r\n        '51': [0, 0.64444, 0.13556, 0],\r\n        '52': [0.19444, 0.64444, 0.13556, 0],\r\n        '53': [0, 0.64444, 0.13556, 0],\r\n        '54': [0, 0.64444, 0.13556, 0],\r\n        '55': [0.19444, 0.64444, 0.13556, 0],\r\n        '56': [0, 0.64444, 0.13556, 0],\r\n        '57': [0, 0.64444, 0.13556, 0],\r\n        '58': [0, 0.43056, 0.0582, 0],\r\n        '59': [0.19444, 0.43056, 0.0582, 0],\r\n        '61': [-0.13313, 0.36687, 0.06616, 0],\r\n        '63': [0, 0.69444, 0.1225, 0],\r\n        '64': [0, 0.69444, 0.09597, 0],\r\n        '65': [0, 0.68333, 0, 0],\r\n        '66': [0, 0.68333, 0.10257, 0],\r\n        '67': [0, 0.68333, 0.14528, 0],\r\n        '68': [0, 0.68333, 0.09403, 0],\r\n        '69': [0, 0.68333, 0.12028, 0],\r\n        '70': [0, 0.68333, 0.13305, 0],\r\n        '71': [0, 0.68333, 0.08722, 0],\r\n        '72': [0, 0.68333, 0.16389, 0],\r\n        '73': [0, 0.68333, 0.15806, 0],\r\n        '74': [0, 0.68333, 0.14028, 0],\r\n        '75': [0, 0.68333, 0.14528, 0],\r\n        '76': [0, 0.68333, 0, 0],\r\n        '77': [0, 0.68333, 0.16389, 0],\r\n        '78': [0, 0.68333, 0.16389, 0],\r\n        '79': [0, 0.68333, 0.09403, 0],\r\n        '80': [0, 0.68333, 0.10257, 0],\r\n        '81': [0.19444, 0.68333, 0.09403, 0],\r\n        '82': [0, 0.68333, 0.03868, 0],\r\n        '83': [0, 0.68333, 0.11972, 0],\r\n        '84': [0, 0.68333, 0.13305, 0],\r\n        '85': [0, 0.68333, 0.16389, 0],\r\n        '86': [0, 0.68333, 0.18361, 0],\r\n        '87': [0, 0.68333, 0.18361, 0],\r\n        '88': [0, 0.68333, 0.15806, 0],\r\n        '89': [0, 0.68333, 0.19383, 0],\r\n        '90': [0, 0.68333, 0.14528, 0],\r\n        '91': [0.25, 0.75, 0.1875, 0],\r\n        '93': [0.25, 0.75, 0.10528, 0],\r\n        '94': [0, 0.69444, 0.06646, 0],\r\n        '95': [0.31, 0.12056, 0.09208, 0],\r\n        '97': [0, 0.43056, 0.07671, 0],\r\n        '98': [0, 0.69444, 0.06312, 0],\r\n        '99': [0, 0.43056, 0.05653, 0],\r\n        '100': [0, 0.69444, 0.10333, 0],\r\n        '101': [0, 0.43056, 0.07514, 0],\r\n        '102': [0.19444, 0.69444, 0.21194, 0],\r\n        '103': [0.19444, 0.43056, 0.08847, 0],\r\n        '104': [0, 0.69444, 0.07671, 0],\r\n        '105': [0, 0.65536, 0.1019, 0],\r\n        '106': [0.19444, 0.65536, 0.14467, 0],\r\n        '107': [0, 0.69444, 0.10764, 0],\r\n        '108': [0, 0.69444, 0.10333, 0],\r\n        '109': [0, 0.43056, 0.07671, 0],\r\n        '110': [0, 0.43056, 0.07671, 0],\r\n        '111': [0, 0.43056, 0.06312, 0],\r\n        '112': [0.19444, 0.43056, 0.06312, 0],\r\n        '113': [0.19444, 0.43056, 0.08847, 0],\r\n        '114': [0, 0.43056, 0.10764, 0],\r\n        '115': [0, 0.43056, 0.08208, 0],\r\n        '116': [0, 0.61508, 0.09486, 0],\r\n        '117': [0, 0.43056, 0.07671, 0],\r\n        '118': [0, 0.43056, 0.10764, 0],\r\n        '119': [0, 0.43056, 0.10764, 0],\r\n        '120': [0, 0.43056, 0.12042, 0],\r\n        '121': [0.19444, 0.43056, 0.08847, 0],\r\n        '122': [0, 0.43056, 0.12292, 0],\r\n        '126': [0.35, 0.31786, 0.11585, 0],\r\n        '163': [0, 0.69444, 0, 0],\r\n        '168': [0, 0.66786, 0.10474, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68333, 0.12028, 0],\r\n        '216': [0.04861, 0.73194, 0.09403, 0],\r\n        '223': [0.19444, 0.69444, 0.10514, 0],\r\n        '230': [0, 0.43056, 0.07514, 0],\r\n        '248': [0.09722, 0.52778, 0.09194, 0],\r\n        '305': [0, 0.43056, 0, 0.02778],\r\n        '338': [0, 0.68333, 0.12028, 0],\r\n        '339': [0, 0.43056, 0.07514, 0],\r\n        '567': [0.19444, 0.43056, 0, 0.08334],\r\n        '710': [0, 0.69444, 0.06646, 0],\r\n        '711': [0, 0.62847, 0.08295, 0],\r\n        '713': [0, 0.56167, 0.10333, 0],\r\n        '714': [0, 0.69444, 0.09694, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0.10806, 0],\r\n        '729': [0, 0.66786, 0.11752, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.66786, 0.11585, 0],\r\n        '733': [0, 0.69444, 0.1225, 0],\r\n        '915': [0, 0.68333, 0.13305, 0],\r\n        '916': [0, 0.68333, 0, 0],\r\n        '920': [0, 0.68333, 0.09403, 0],\r\n        '923': [0, 0.68333, 0, 0],\r\n        '926': [0, 0.68333, 0.15294, 0],\r\n        '928': [0, 0.68333, 0.16389, 0],\r\n        '931': [0, 0.68333, 0.12028, 0],\r\n        '933': [0, 0.68333, 0.11111, 0],\r\n        '934': [0, 0.68333, 0.05986, 0],\r\n        '936': [0, 0.68333, 0.11111, 0],\r\n        '937': [0, 0.68333, 0.10257, 0],\r\n        '8211': [0, 0.43056, 0.09208, 0],\r\n        '8212': [0, 0.43056, 0.09208, 0],\r\n        '8216': [0, 0.69444, 0.12417, 0],\r\n        '8217': [0, 0.69444, 0.12417, 0],\r\n        '8220': [0, 0.69444, 0.1685, 0],\r\n        '8221': [0, 0.69444, 0.06961, 0],\r\n        '8463': [0, 0.68889, 0, 0],\r\n    },\r\n    'Main-Regular': {\r\n        '32': [0, 0, 0, 0],\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.08333, 0.58333, 0, 0],\r\n        '44': [0.19444, 0.10556, 0, 0],\r\n        '45': [0, 0.43056, 0, 0],\r\n        '46': [0, 0.10556, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.64444, 0, 0],\r\n        '49': [0, 0.64444, 0, 0],\r\n        '50': [0, 0.64444, 0, 0],\r\n        '51': [0, 0.64444, 0, 0],\r\n        '52': [0, 0.64444, 0, 0],\r\n        '53': [0, 0.64444, 0, 0],\r\n        '54': [0, 0.64444, 0, 0],\r\n        '55': [0, 0.64444, 0, 0],\r\n        '56': [0, 0.64444, 0, 0],\r\n        '57': [0, 0.64444, 0, 0],\r\n        '58': [0, 0.43056, 0, 0],\r\n        '59': [0.19444, 0.43056, 0, 0],\r\n        '60': [0.0391, 0.5391, 0, 0],\r\n        '61': [-0.13313, 0.36687, 0, 0],\r\n        '62': [0.0391, 0.5391, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.68333, 0, 0],\r\n        '66': [0, 0.68333, 0, 0],\r\n        '67': [0, 0.68333, 0, 0],\r\n        '68': [0, 0.68333, 0, 0],\r\n        '69': [0, 0.68333, 0, 0],\r\n        '70': [0, 0.68333, 0, 0],\r\n        '71': [0, 0.68333, 0, 0],\r\n        '72': [0, 0.68333, 0, 0],\r\n        '73': [0, 0.68333, 0, 0],\r\n        '74': [0, 0.68333, 0, 0],\r\n        '75': [0, 0.68333, 0, 0],\r\n        '76': [0, 0.68333, 0, 0],\r\n        '77': [0, 0.68333, 0, 0],\r\n        '78': [0, 0.68333, 0, 0],\r\n        '79': [0, 0.68333, 0, 0],\r\n        '80': [0, 0.68333, 0, 0],\r\n        '81': [0.19444, 0.68333, 0, 0],\r\n        '82': [0, 0.68333, 0, 0],\r\n        '83': [0, 0.68333, 0, 0],\r\n        '84': [0, 0.68333, 0, 0],\r\n        '85': [0, 0.68333, 0, 0],\r\n        '86': [0, 0.68333, 0.01389, 0],\r\n        '87': [0, 0.68333, 0.01389, 0],\r\n        '88': [0, 0.68333, 0, 0],\r\n        '89': [0, 0.68333, 0.025, 0],\r\n        '90': [0, 0.68333, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '92': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.31, 0.12056, 0.02778, 0],\r\n        '97': [0, 0.43056, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.43056, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.43056, 0, 0],\r\n        '102': [0, 0.69444, 0.07778, 0],\r\n        '103': [0.19444, 0.43056, 0.01389, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.66786, 0, 0],\r\n        '106': [0.19444, 0.66786, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.43056, 0, 0],\r\n        '110': [0, 0.43056, 0, 0],\r\n        '111': [0, 0.43056, 0, 0],\r\n        '112': [0.19444, 0.43056, 0, 0],\r\n        '113': [0.19444, 0.43056, 0, 0],\r\n        '114': [0, 0.43056, 0, 0],\r\n        '115': [0, 0.43056, 0, 0],\r\n        '116': [0, 0.61508, 0, 0],\r\n        '117': [0, 0.43056, 0, 0],\r\n        '118': [0, 0.43056, 0.01389, 0],\r\n        '119': [0, 0.43056, 0.01389, 0],\r\n        '120': [0, 0.43056, 0, 0],\r\n        '121': [0.19444, 0.43056, 0.01389, 0],\r\n        '122': [0, 0.43056, 0, 0],\r\n        '123': [0.25, 0.75, 0, 0],\r\n        '124': [0.25, 0.75, 0, 0],\r\n        '125': [0.25, 0.75, 0, 0],\r\n        '126': [0.35, 0.31786, 0, 0],\r\n        '160': [0, 0, 0, 0],\r\n        '167': [0.19444, 0.69444, 0, 0],\r\n        '168': [0, 0.66786, 0, 0],\r\n        '172': [0, 0.43056, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '177': [0.08333, 0.58333, 0, 0],\r\n        '182': [0.19444, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '198': [0, 0.68333, 0, 0],\r\n        '215': [0.08333, 0.58333, 0, 0],\r\n        '216': [0.04861, 0.73194, 0, 0],\r\n        '223': [0, 0.69444, 0, 0],\r\n        '230': [0, 0.43056, 0, 0],\r\n        '247': [0.08333, 0.58333, 0, 0],\r\n        '248': [0.09722, 0.52778, 0, 0],\r\n        '305': [0, 0.43056, 0, 0],\r\n        '338': [0, 0.68333, 0, 0],\r\n        '339': [0, 0.43056, 0, 0],\r\n        '567': [0.19444, 0.43056, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.62847, 0, 0],\r\n        '713': [0, 0.56778, 0, 0],\r\n        '714': [0, 0.69444, 0, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.66786, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.66786, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.68333, 0, 0],\r\n        '916': [0, 0.68333, 0, 0],\r\n        '920': [0, 0.68333, 0, 0],\r\n        '923': [0, 0.68333, 0, 0],\r\n        '926': [0, 0.68333, 0, 0],\r\n        '928': [0, 0.68333, 0, 0],\r\n        '931': [0, 0.68333, 0, 0],\r\n        '933': [0, 0.68333, 0, 0],\r\n        '934': [0, 0.68333, 0, 0],\r\n        '936': [0, 0.68333, 0, 0],\r\n        '937': [0, 0.68333, 0, 0],\r\n        '8211': [0, 0.43056, 0.02778, 0],\r\n        '8212': [0, 0.43056, 0.02778, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n        '8224': [0.19444, 0.69444, 0, 0],\r\n        '8225': [0.19444, 0.69444, 0, 0],\r\n        '8230': [0, 0.12, 0, 0],\r\n        '8242': [0, 0.55556, 0, 0],\r\n        '8407': [0, 0.71444, 0.15382, 0],\r\n        '8463': [0, 0.68889, 0, 0],\r\n        '8465': [0, 0.69444, 0, 0],\r\n        '8467': [0, 0.69444, 0, 0.11111],\r\n        '8472': [0.19444, 0.43056, 0, 0.11111],\r\n        '8476': [0, 0.69444, 0, 0],\r\n        '8501': [0, 0.69444, 0, 0],\r\n        '8592': [-0.13313, 0.36687, 0, 0],\r\n        '8593': [0.19444, 0.69444, 0, 0],\r\n        '8594': [-0.13313, 0.36687, 0, 0],\r\n        '8595': [0.19444, 0.69444, 0, 0],\r\n        '8596': [-0.13313, 0.36687, 0, 0],\r\n        '8597': [0.25, 0.75, 0, 0],\r\n        '8598': [0.19444, 0.69444, 0, 0],\r\n        '8599': [0.19444, 0.69444, 0, 0],\r\n        '8600': [0.19444, 0.69444, 0, 0],\r\n        '8601': [0.19444, 0.69444, 0, 0],\r\n        '8614': [0.011, 0.511, 0, 0],\r\n        '8617': [0.011, 0.511, 0, 0],\r\n        '8618': [0.011, 0.511, 0, 0],\r\n        '8636': [-0.13313, 0.36687, 0, 0],\r\n        '8637': [-0.13313, 0.36687, 0, 0],\r\n        '8640': [-0.13313, 0.36687, 0, 0],\r\n        '8641': [-0.13313, 0.36687, 0, 0],\r\n        '8652': [0.011, 0.671, 0, 0],\r\n        '8656': [-0.13313, 0.36687, 0, 0],\r\n        '8657': [0.19444, 0.69444, 0, 0],\r\n        '8658': [-0.13313, 0.36687, 0, 0],\r\n        '8659': [0.19444, 0.69444, 0, 0],\r\n        '8660': [-0.13313, 0.36687, 0, 0],\r\n        '8661': [0.25, 0.75, 0, 0],\r\n        '8704': [0, 0.69444, 0, 0],\r\n        '8706': [0, 0.69444, 0.05556, 0.08334],\r\n        '8707': [0, 0.69444, 0, 0],\r\n        '8709': [0.05556, 0.75, 0, 0],\r\n        '8711': [0, 0.68333, 0, 0],\r\n        '8712': [0.0391, 0.5391, 0, 0],\r\n        '8715': [0.0391, 0.5391, 0, 0],\r\n        '8722': [0.08333, 0.58333, 0, 0],\r\n        '8723': [0.08333, 0.58333, 0, 0],\r\n        '8725': [0.25, 0.75, 0, 0],\r\n        '8726': [0.25, 0.75, 0, 0],\r\n        '8727': [-0.03472, 0.46528, 0, 0],\r\n        '8728': [-0.05555, 0.44445, 0, 0],\r\n        '8729': [-0.05555, 0.44445, 0, 0],\r\n        '8730': [0.2, 0.8, 0, 0],\r\n        '8733': [0, 0.43056, 0, 0],\r\n        '8734': [0, 0.43056, 0, 0],\r\n        '8736': [0, 0.69224, 0, 0],\r\n        '8739': [0.25, 0.75, 0, 0],\r\n        '8741': [0.25, 0.75, 0, 0],\r\n        '8743': [0, 0.55556, 0, 0],\r\n        '8744': [0, 0.55556, 0, 0],\r\n        '8745': [0, 0.55556, 0, 0],\r\n        '8746': [0, 0.55556, 0, 0],\r\n        '8747': [0.19444, 0.69444, 0.11111, 0],\r\n        '8764': [-0.13313, 0.36687, 0, 0],\r\n        '8768': [0.19444, 0.69444, 0, 0],\r\n        '8771': [-0.03625, 0.46375, 0, 0],\r\n        '8773': [-0.022, 0.589, 0, 0],\r\n        '8776': [-0.01688, 0.48312, 0, 0],\r\n        '8781': [-0.03625, 0.46375, 0, 0],\r\n        '8784': [-0.133, 0.67, 0, 0],\r\n        '8801': [-0.03625, 0.46375, 0, 0],\r\n        '8804': [0.13597, 0.63597, 0, 0],\r\n        '8805': [0.13597, 0.63597, 0, 0],\r\n        '8810': [0.0391, 0.5391, 0, 0],\r\n        '8811': [0.0391, 0.5391, 0, 0],\r\n        '8826': [0.0391, 0.5391, 0, 0],\r\n        '8827': [0.0391, 0.5391, 0, 0],\r\n        '8834': [0.0391, 0.5391, 0, 0],\r\n        '8835': [0.0391, 0.5391, 0, 0],\r\n        '8838': [0.13597, 0.63597, 0, 0],\r\n        '8839': [0.13597, 0.63597, 0, 0],\r\n        '8846': [0, 0.55556, 0, 0],\r\n        '8849': [0.13597, 0.63597, 0, 0],\r\n        '8850': [0.13597, 0.63597, 0, 0],\r\n        '8851': [0, 0.55556, 0, 0],\r\n        '8852': [0, 0.55556, 0, 0],\r\n        '8853': [0.08333, 0.58333, 0, 0],\r\n        '8854': [0.08333, 0.58333, 0, 0],\r\n        '8855': [0.08333, 0.58333, 0, 0],\r\n        '8856': [0.08333, 0.58333, 0, 0],\r\n        '8857': [0.08333, 0.58333, 0, 0],\r\n        '8866': [0, 0.69444, 0, 0],\r\n        '8867': [0, 0.69444, 0, 0],\r\n        '8868': [0, 0.69444, 0, 0],\r\n        '8869': [0, 0.69444, 0, 0],\r\n        '8872': [0.249, 0.75, 0, 0],\r\n        '8900': [-0.05555, 0.44445, 0, 0],\r\n        '8901': [-0.05555, 0.44445, 0, 0],\r\n        '8902': [-0.03472, 0.46528, 0, 0],\r\n        '8904': [0.005, 0.505, 0, 0],\r\n        '8942': [0.03, 0.9, 0, 0],\r\n        '8943': [-0.19, 0.31, 0, 0],\r\n        '8945': [-0.1, 0.82, 0, 0],\r\n        '8968': [0.25, 0.75, 0, 0],\r\n        '8969': [0.25, 0.75, 0, 0],\r\n        '8970': [0.25, 0.75, 0, 0],\r\n        '8971': [0.25, 0.75, 0, 0],\r\n        '8994': [-0.14236, 0.35764, 0, 0],\r\n        '8995': [-0.14236, 0.35764, 0, 0],\r\n        '9136': [0.244, 0.744, 0, 0],\r\n        '9137': [0.244, 0.744, 0, 0],\r\n        '9651': [0.19444, 0.69444, 0, 0],\r\n        '9657': [-0.03472, 0.46528, 0, 0],\r\n        '9661': [0.19444, 0.69444, 0, 0],\r\n        '9667': [-0.03472, 0.46528, 0, 0],\r\n        '9711': [0.19444, 0.69444, 0, 0],\r\n        '9824': [0.12963, 0.69444, 0, 0],\r\n        '9825': [0.12963, 0.69444, 0, 0],\r\n        '9826': [0.12963, 0.69444, 0, 0],\r\n        '9827': [0.12963, 0.69444, 0, 0],\r\n        '9837': [0, 0.75, 0, 0],\r\n        '9838': [0.19444, 0.69444, 0, 0],\r\n        '9839': [0.19444, 0.69444, 0, 0],\r\n        '10216': [0.25, 0.75, 0, 0],\r\n        '10217': [0.25, 0.75, 0, 0],\r\n        '10222': [0.244, 0.744, 0, 0],\r\n        '10223': [0.244, 0.744, 0, 0],\r\n        '10229': [0.011, 0.511, 0, 0],\r\n        '10230': [0.011, 0.511, 0, 0],\r\n        '10231': [0.011, 0.511, 0, 0],\r\n        '10232': [0.024, 0.525, 0, 0],\r\n        '10233': [0.024, 0.525, 0, 0],\r\n        '10234': [0.024, 0.525, 0, 0],\r\n        '10236': [0.011, 0.511, 0, 0],\r\n        '10815': [0, 0.68333, 0, 0],\r\n        '10927': [0.13597, 0.63597, 0, 0],\r\n        '10928': [0.13597, 0.63597, 0, 0],\r\n        '57376': [0.19444, 0.69444, 0, 0],\r\n    },\r\n    'Math-BoldItalic': {\r\n        '65': [0, 0.68611, 0, 0],\r\n        '66': [0, 0.68611, 0.04835, 0],\r\n        '67': [0, 0.68611, 0.06979, 0],\r\n        '68': [0, 0.68611, 0.03194, 0],\r\n        '69': [0, 0.68611, 0.05451, 0],\r\n        '70': [0, 0.68611, 0.15972, 0],\r\n        '71': [0, 0.68611, 0, 0],\r\n        '72': [0, 0.68611, 0.08229, 0],\r\n        '73': [0, 0.68611, 0.07778, 0],\r\n        '74': [0, 0.68611, 0.10069, 0],\r\n        '75': [0, 0.68611, 0.06979, 0],\r\n        '76': [0, 0.68611, 0, 0],\r\n        '77': [0, 0.68611, 0.11424, 0],\r\n        '78': [0, 0.68611, 0.11424, 0],\r\n        '79': [0, 0.68611, 0.03194, 0],\r\n        '80': [0, 0.68611, 0.15972, 0],\r\n        '81': [0.19444, 0.68611, 0, 0],\r\n        '82': [0, 0.68611, 0.00421, 0],\r\n        '83': [0, 0.68611, 0.05382, 0],\r\n        '84': [0, 0.68611, 0.15972, 0],\r\n        '85': [0, 0.68611, 0.11424, 0],\r\n        '86': [0, 0.68611, 0.25555, 0],\r\n        '87': [0, 0.68611, 0.15972, 0],\r\n        '88': [0, 0.68611, 0.07778, 0],\r\n        '89': [0, 0.68611, 0.25555, 0],\r\n        '90': [0, 0.68611, 0.06979, 0],\r\n        '97': [0, 0.44444, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.44444, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.44444, 0, 0],\r\n        '102': [0.19444, 0.69444, 0.11042, 0],\r\n        '103': [0.19444, 0.44444, 0.03704, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.69326, 0, 0],\r\n        '106': [0.19444, 0.69326, 0.0622, 0],\r\n        '107': [0, 0.69444, 0.01852, 0],\r\n        '108': [0, 0.69444, 0.0088, 0],\r\n        '109': [0, 0.44444, 0, 0],\r\n        '110': [0, 0.44444, 0, 0],\r\n        '111': [0, 0.44444, 0, 0],\r\n        '112': [0.19444, 0.44444, 0, 0],\r\n        '113': [0.19444, 0.44444, 0.03704, 0],\r\n        '114': [0, 0.44444, 0.03194, 0],\r\n        '115': [0, 0.44444, 0, 0],\r\n        '116': [0, 0.63492, 0, 0],\r\n        '117': [0, 0.44444, 0, 0],\r\n        '118': [0, 0.44444, 0.03704, 0],\r\n        '119': [0, 0.44444, 0.02778, 0],\r\n        '120': [0, 0.44444, 0, 0],\r\n        '121': [0.19444, 0.44444, 0.03704, 0],\r\n        '122': [0, 0.44444, 0.04213, 0],\r\n        '915': [0, 0.68611, 0.15972, 0],\r\n        '916': [0, 0.68611, 0, 0],\r\n        '920': [0, 0.68611, 0.03194, 0],\r\n        '923': [0, 0.68611, 0, 0],\r\n        '926': [0, 0.68611, 0.07458, 0],\r\n        '928': [0, 0.68611, 0.08229, 0],\r\n        '931': [0, 0.68611, 0.05451, 0],\r\n        '933': [0, 0.68611, 0.15972, 0],\r\n        '934': [0, 0.68611, 0, 0],\r\n        '936': [0, 0.68611, 0.11653, 0],\r\n        '937': [0, 0.68611, 0.04835, 0],\r\n        '945': [0, 0.44444, 0, 0],\r\n        '946': [0.19444, 0.69444, 0.03403, 0],\r\n        '947': [0.19444, 0.44444, 0.06389, 0],\r\n        '948': [0, 0.69444, 0.03819, 0],\r\n        '949': [0, 0.44444, 0, 0],\r\n        '950': [0.19444, 0.69444, 0.06215, 0],\r\n        '951': [0.19444, 0.44444, 0.03704, 0],\r\n        '952': [0, 0.69444, 0.03194, 0],\r\n        '953': [0, 0.44444, 0, 0],\r\n        '954': [0, 0.44444, 0, 0],\r\n        '955': [0, 0.69444, 0, 0],\r\n        '956': [0.19444, 0.44444, 0, 0],\r\n        '957': [0, 0.44444, 0.06898, 0],\r\n        '958': [0.19444, 0.69444, 0.03021, 0],\r\n        '959': [0, 0.44444, 0, 0],\r\n        '960': [0, 0.44444, 0.03704, 0],\r\n        '961': [0.19444, 0.44444, 0, 0],\r\n        '962': [0.09722, 0.44444, 0.07917, 0],\r\n        '963': [0, 0.44444, 0.03704, 0],\r\n        '964': [0, 0.44444, 0.13472, 0],\r\n        '965': [0, 0.44444, 0.03704, 0],\r\n        '966': [0.19444, 0.44444, 0, 0],\r\n        '967': [0.19444, 0.44444, 0, 0],\r\n        '968': [0.19444, 0.69444, 0.03704, 0],\r\n        '969': [0, 0.44444, 0.03704, 0],\r\n        '977': [0, 0.69444, 0, 0],\r\n        '981': [0.19444, 0.69444, 0, 0],\r\n        '982': [0, 0.44444, 0.03194, 0],\r\n        '1009': [0.19444, 0.44444, 0, 0],\r\n        '1013': [0, 0.44444, 0, 0],\r\n    },\r\n    'Math-Italic': {\r\n        '65': [0, 0.68333, 0, 0.13889],\r\n        '66': [0, 0.68333, 0.05017, 0.08334],\r\n        '67': [0, 0.68333, 0.07153, 0.08334],\r\n        '68': [0, 0.68333, 0.02778, 0.05556],\r\n        '69': [0, 0.68333, 0.05764, 0.08334],\r\n        '70': [0, 0.68333, 0.13889, 0.08334],\r\n        '71': [0, 0.68333, 0, 0.08334],\r\n        '72': [0, 0.68333, 0.08125, 0.05556],\r\n        '73': [0, 0.68333, 0.07847, 0.11111],\r\n        '74': [0, 0.68333, 0.09618, 0.16667],\r\n        '75': [0, 0.68333, 0.07153, 0.05556],\r\n        '76': [0, 0.68333, 0, 0.02778],\r\n        '77': [0, 0.68333, 0.10903, 0.08334],\r\n        '78': [0, 0.68333, 0.10903, 0.08334],\r\n        '79': [0, 0.68333, 0.02778, 0.08334],\r\n        '80': [0, 0.68333, 0.13889, 0.08334],\r\n        '81': [0.19444, 0.68333, 0, 0.08334],\r\n        '82': [0, 0.68333, 0.00773, 0.08334],\r\n        '83': [0, 0.68333, 0.05764, 0.08334],\r\n        '84': [0, 0.68333, 0.13889, 0.08334],\r\n        '85': [0, 0.68333, 0.10903, 0.02778],\r\n        '86': [0, 0.68333, 0.22222, 0],\r\n        '87': [0, 0.68333, 0.13889, 0],\r\n        '88': [0, 0.68333, 0.07847, 0.08334],\r\n        '89': [0, 0.68333, 0.22222, 0],\r\n        '90': [0, 0.68333, 0.07153, 0.08334],\r\n        '97': [0, 0.43056, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.43056, 0, 0.05556],\r\n        '100': [0, 0.69444, 0, 0.16667],\r\n        '101': [0, 0.43056, 0, 0.05556],\r\n        '102': [0.19444, 0.69444, 0.10764, 0.16667],\r\n        '103': [0.19444, 0.43056, 0.03588, 0.02778],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.65952, 0, 0],\r\n        '106': [0.19444, 0.65952, 0.05724, 0],\r\n        '107': [0, 0.69444, 0.03148, 0],\r\n        '108': [0, 0.69444, 0.01968, 0.08334],\r\n        '109': [0, 0.43056, 0, 0],\r\n        '110': [0, 0.43056, 0, 0],\r\n        '111': [0, 0.43056, 0, 0.05556],\r\n        '112': [0.19444, 0.43056, 0, 0.08334],\r\n        '113': [0.19444, 0.43056, 0.03588, 0.08334],\r\n        '114': [0, 0.43056, 0.02778, 0.05556],\r\n        '115': [0, 0.43056, 0, 0.05556],\r\n        '116': [0, 0.61508, 0, 0.08334],\r\n        '117': [0, 0.43056, 0, 0.02778],\r\n        '118': [0, 0.43056, 0.03588, 0.02778],\r\n        '119': [0, 0.43056, 0.02691, 0.08334],\r\n        '120': [0, 0.43056, 0, 0.02778],\r\n        '121': [0.19444, 0.43056, 0.03588, 0.05556],\r\n        '122': [0, 0.43056, 0.04398, 0.05556],\r\n        '915': [0, 0.68333, 0.13889, 0.08334],\r\n        '916': [0, 0.68333, 0, 0.16667],\r\n        '920': [0, 0.68333, 0.02778, 0.08334],\r\n        '923': [0, 0.68333, 0, 0.16667],\r\n        '926': [0, 0.68333, 0.07569, 0.08334],\r\n        '928': [0, 0.68333, 0.08125, 0.05556],\r\n        '931': [0, 0.68333, 0.05764, 0.08334],\r\n        '933': [0, 0.68333, 0.13889, 0.05556],\r\n        '934': [0, 0.68333, 0, 0.08334],\r\n        '936': [0, 0.68333, 0.11, 0.05556],\r\n        '937': [0, 0.68333, 0.05017, 0.08334],\r\n        '945': [0, 0.43056, 0.0037, 0.02778],\r\n        '946': [0.19444, 0.69444, 0.05278, 0.08334],\r\n        '947': [0.19444, 0.43056, 0.05556, 0],\r\n        '948': [0, 0.69444, 0.03785, 0.05556],\r\n        '949': [0, 0.43056, 0, 0.08334],\r\n        '950': [0.19444, 0.69444, 0.07378, 0.08334],\r\n        '951': [0.19444, 0.43056, 0.03588, 0.05556],\r\n        '952': [0, 0.69444, 0.02778, 0.08334],\r\n        '953': [0, 0.43056, 0, 0.05556],\r\n        '954': [0, 0.43056, 0, 0],\r\n        '955': [0, 0.69444, 0, 0],\r\n        '956': [0.19444, 0.43056, 0, 0.02778],\r\n        '957': [0, 0.43056, 0.06366, 0.02778],\r\n        '958': [0.19444, 0.69444, 0.04601, 0.11111],\r\n        '959': [0, 0.43056, 0, 0.05556],\r\n        '960': [0, 0.43056, 0.03588, 0],\r\n        '961': [0.19444, 0.43056, 0, 0.08334],\r\n        '962': [0.09722, 0.43056, 0.07986, 0.08334],\r\n        '963': [0, 0.43056, 0.03588, 0],\r\n        '964': [0, 0.43056, 0.1132, 0.02778],\r\n        '965': [0, 0.43056, 0.03588, 0.02778],\r\n        '966': [0.19444, 0.43056, 0, 0.08334],\r\n        '967': [0.19444, 0.43056, 0, 0.05556],\r\n        '968': [0.19444, 0.69444, 0.03588, 0.11111],\r\n        '969': [0, 0.43056, 0.03588, 0],\r\n        '977': [0, 0.69444, 0, 0.08334],\r\n        '981': [0.19444, 0.69444, 0, 0.08334],\r\n        '982': [0, 0.43056, 0.02778, 0],\r\n        '1009': [0.19444, 0.43056, 0, 0.08334],\r\n        '1013': [0, 0.43056, 0, 0.05556],\r\n    },\r\n    'SansSerif-Bold': {\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.11667, 0.61667, 0, 0],\r\n        '44': [0.10556, 0.13056, 0, 0],\r\n        '45': [0, 0.45833, 0, 0],\r\n        '46': [0, 0.13056, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.69444, 0, 0],\r\n        '49': [0, 0.69444, 0, 0],\r\n        '50': [0, 0.69444, 0, 0],\r\n        '51': [0, 0.69444, 0, 0],\r\n        '52': [0, 0.69444, 0, 0],\r\n        '53': [0, 0.69444, 0, 0],\r\n        '54': [0, 0.69444, 0, 0],\r\n        '55': [0, 0.69444, 0, 0],\r\n        '56': [0, 0.69444, 0, 0],\r\n        '57': [0, 0.69444, 0, 0],\r\n        '58': [0, 0.45833, 0, 0],\r\n        '59': [0.10556, 0.45833, 0, 0],\r\n        '61': [-0.09375, 0.40625, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.69444, 0, 0],\r\n        '66': [0, 0.69444, 0, 0],\r\n        '67': [0, 0.69444, 0, 0],\r\n        '68': [0, 0.69444, 0, 0],\r\n        '69': [0, 0.69444, 0, 0],\r\n        '70': [0, 0.69444, 0, 0],\r\n        '71': [0, 0.69444, 0, 0],\r\n        '72': [0, 0.69444, 0, 0],\r\n        '73': [0, 0.69444, 0, 0],\r\n        '74': [0, 0.69444, 0, 0],\r\n        '75': [0, 0.69444, 0, 0],\r\n        '76': [0, 0.69444, 0, 0],\r\n        '77': [0, 0.69444, 0, 0],\r\n        '78': [0, 0.69444, 0, 0],\r\n        '79': [0, 0.69444, 0, 0],\r\n        '80': [0, 0.69444, 0, 0],\r\n        '81': [0.10556, 0.69444, 0, 0],\r\n        '82': [0, 0.69444, 0, 0],\r\n        '83': [0, 0.69444, 0, 0],\r\n        '84': [0, 0.69444, 0, 0],\r\n        '85': [0, 0.69444, 0, 0],\r\n        '86': [0, 0.69444, 0.01528, 0],\r\n        '87': [0, 0.69444, 0.01528, 0],\r\n        '88': [0, 0.69444, 0, 0],\r\n        '89': [0, 0.69444, 0.0275, 0],\r\n        '90': [0, 0.69444, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.35, 0.10833, 0.03056, 0],\r\n        '97': [0, 0.45833, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.45833, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.45833, 0, 0],\r\n        '102': [0, 0.69444, 0.07639, 0],\r\n        '103': [0.19444, 0.45833, 0.01528, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.69444, 0, 0],\r\n        '106': [0.19444, 0.69444, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.45833, 0, 0],\r\n        '110': [0, 0.45833, 0, 0],\r\n        '111': [0, 0.45833, 0, 0],\r\n        '112': [0.19444, 0.45833, 0, 0],\r\n        '113': [0.19444, 0.45833, 0, 0],\r\n        '114': [0, 0.45833, 0.01528, 0],\r\n        '115': [0, 0.45833, 0, 0],\r\n        '116': [0, 0.58929, 0, 0],\r\n        '117': [0, 0.45833, 0, 0],\r\n        '118': [0, 0.45833, 0.01528, 0],\r\n        '119': [0, 0.45833, 0.01528, 0],\r\n        '120': [0, 0.45833, 0, 0],\r\n        '121': [0.19444, 0.45833, 0.01528, 0],\r\n        '122': [0, 0.45833, 0, 0],\r\n        '126': [0.35, 0.34444, 0, 0],\r\n        '168': [0, 0.69444, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '180': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '305': [0, 0.45833, 0, 0],\r\n        '567': [0.19444, 0.45833, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.63542, 0, 0],\r\n        '713': [0, 0.63778, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.69444, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.69444, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.69444, 0, 0],\r\n        '916': [0, 0.69444, 0, 0],\r\n        '920': [0, 0.69444, 0, 0],\r\n        '923': [0, 0.69444, 0, 0],\r\n        '926': [0, 0.69444, 0, 0],\r\n        '928': [0, 0.69444, 0, 0],\r\n        '931': [0, 0.69444, 0, 0],\r\n        '933': [0, 0.69444, 0, 0],\r\n        '934': [0, 0.69444, 0, 0],\r\n        '936': [0, 0.69444, 0, 0],\r\n        '937': [0, 0.69444, 0, 0],\r\n        '8211': [0, 0.45833, 0.03056, 0],\r\n        '8212': [0, 0.45833, 0.03056, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n    },\r\n    'SansSerif-Italic': {\r\n        '33': [0, 0.69444, 0.05733, 0],\r\n        '34': [0, 0.69444, 0.00316, 0],\r\n        '35': [0.19444, 0.69444, 0.05087, 0],\r\n        '36': [0.05556, 0.75, 0.11156, 0],\r\n        '37': [0.05556, 0.75, 0.03126, 0],\r\n        '38': [0, 0.69444, 0.03058, 0],\r\n        '39': [0, 0.69444, 0.07816, 0],\r\n        '40': [0.25, 0.75, 0.13164, 0],\r\n        '41': [0.25, 0.75, 0.02536, 0],\r\n        '42': [0, 0.75, 0.11775, 0],\r\n        '43': [0.08333, 0.58333, 0.02536, 0],\r\n        '44': [0.125, 0.08333, 0, 0],\r\n        '45': [0, 0.44444, 0.01946, 0],\r\n        '46': [0, 0.08333, 0, 0],\r\n        '47': [0.25, 0.75, 0.13164, 0],\r\n        '48': [0, 0.65556, 0.11156, 0],\r\n        '49': [0, 0.65556, 0.11156, 0],\r\n        '50': [0, 0.65556, 0.11156, 0],\r\n        '51': [0, 0.65556, 0.11156, 0],\r\n        '52': [0, 0.65556, 0.11156, 0],\r\n        '53': [0, 0.65556, 0.11156, 0],\r\n        '54': [0, 0.65556, 0.11156, 0],\r\n        '55': [0, 0.65556, 0.11156, 0],\r\n        '56': [0, 0.65556, 0.11156, 0],\r\n        '57': [0, 0.65556, 0.11156, 0],\r\n        '58': [0, 0.44444, 0.02502, 0],\r\n        '59': [0.125, 0.44444, 0.02502, 0],\r\n        '61': [-0.13, 0.37, 0.05087, 0],\r\n        '63': [0, 0.69444, 0.11809, 0],\r\n        '64': [0, 0.69444, 0.07555, 0],\r\n        '65': [0, 0.69444, 0, 0],\r\n        '66': [0, 0.69444, 0.08293, 0],\r\n        '67': [0, 0.69444, 0.11983, 0],\r\n        '68': [0, 0.69444, 0.07555, 0],\r\n        '69': [0, 0.69444, 0.11983, 0],\r\n        '70': [0, 0.69444, 0.13372, 0],\r\n        '71': [0, 0.69444, 0.11983, 0],\r\n        '72': [0, 0.69444, 0.08094, 0],\r\n        '73': [0, 0.69444, 0.13372, 0],\r\n        '74': [0, 0.69444, 0.08094, 0],\r\n        '75': [0, 0.69444, 0.11983, 0],\r\n        '76': [0, 0.69444, 0, 0],\r\n        '77': [0, 0.69444, 0.08094, 0],\r\n        '78': [0, 0.69444, 0.08094, 0],\r\n        '79': [0, 0.69444, 0.07555, 0],\r\n        '80': [0, 0.69444, 0.08293, 0],\r\n        '81': [0.125, 0.69444, 0.07555, 0],\r\n        '82': [0, 0.69444, 0.08293, 0],\r\n        '83': [0, 0.69444, 0.09205, 0],\r\n        '84': [0, 0.69444, 0.13372, 0],\r\n        '85': [0, 0.69444, 0.08094, 0],\r\n        '86': [0, 0.69444, 0.1615, 0],\r\n        '87': [0, 0.69444, 0.1615, 0],\r\n        '88': [0, 0.69444, 0.13372, 0],\r\n        '89': [0, 0.69444, 0.17261, 0],\r\n        '90': [0, 0.69444, 0.11983, 0],\r\n        '91': [0.25, 0.75, 0.15942, 0],\r\n        '93': [0.25, 0.75, 0.08719, 0],\r\n        '94': [0, 0.69444, 0.0799, 0],\r\n        '95': [0.35, 0.09444, 0.08616, 0],\r\n        '97': [0, 0.44444, 0.00981, 0],\r\n        '98': [0, 0.69444, 0.03057, 0],\r\n        '99': [0, 0.44444, 0.08336, 0],\r\n        '100': [0, 0.69444, 0.09483, 0],\r\n        '101': [0, 0.44444, 0.06778, 0],\r\n        '102': [0, 0.69444, 0.21705, 0],\r\n        '103': [0.19444, 0.44444, 0.10836, 0],\r\n        '104': [0, 0.69444, 0.01778, 0],\r\n        '105': [0, 0.67937, 0.09718, 0],\r\n        '106': [0.19444, 0.67937, 0.09162, 0],\r\n        '107': [0, 0.69444, 0.08336, 0],\r\n        '108': [0, 0.69444, 0.09483, 0],\r\n        '109': [0, 0.44444, 0.01778, 0],\r\n        '110': [0, 0.44444, 0.01778, 0],\r\n        '111': [0, 0.44444, 0.06613, 0],\r\n        '112': [0.19444, 0.44444, 0.0389, 0],\r\n        '113': [0.19444, 0.44444, 0.04169, 0],\r\n        '114': [0, 0.44444, 0.10836, 0],\r\n        '115': [0, 0.44444, 0.0778, 0],\r\n        '116': [0, 0.57143, 0.07225, 0],\r\n        '117': [0, 0.44444, 0.04169, 0],\r\n        '118': [0, 0.44444, 0.10836, 0],\r\n        '119': [0, 0.44444, 0.10836, 0],\r\n        '120': [0, 0.44444, 0.09169, 0],\r\n        '121': [0.19444, 0.44444, 0.10836, 0],\r\n        '122': [0, 0.44444, 0.08752, 0],\r\n        '126': [0.35, 0.32659, 0.08826, 0],\r\n        '168': [0, 0.67937, 0.06385, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '305': [0, 0.44444, 0.04169, 0],\r\n        '567': [0.19444, 0.44444, 0.04169, 0],\r\n        '710': [0, 0.69444, 0.0799, 0],\r\n        '711': [0, 0.63194, 0.08432, 0],\r\n        '713': [0, 0.60889, 0.08776, 0],\r\n        '714': [0, 0.69444, 0.09205, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0.09483, 0],\r\n        '729': [0, 0.67937, 0.07774, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.67659, 0.08826, 0],\r\n        '733': [0, 0.69444, 0.09205, 0],\r\n        '915': [0, 0.69444, 0.13372, 0],\r\n        '916': [0, 0.69444, 0, 0],\r\n        '920': [0, 0.69444, 0.07555, 0],\r\n        '923': [0, 0.69444, 0, 0],\r\n        '926': [0, 0.69444, 0.12816, 0],\r\n        '928': [0, 0.69444, 0.08094, 0],\r\n        '931': [0, 0.69444, 0.11983, 0],\r\n        '933': [0, 0.69444, 0.09031, 0],\r\n        '934': [0, 0.69444, 0.04603, 0],\r\n        '936': [0, 0.69444, 0.09031, 0],\r\n        '937': [0, 0.69444, 0.08293, 0],\r\n        '8211': [0, 0.44444, 0.08616, 0],\r\n        '8212': [0, 0.44444, 0.08616, 0],\r\n        '8216': [0, 0.69444, 0.07816, 0],\r\n        '8217': [0, 0.69444, 0.07816, 0],\r\n        '8220': [0, 0.69444, 0.14205, 0],\r\n        '8221': [0, 0.69444, 0.00316, 0],\r\n    },\r\n    'SansSerif-Regular': {\r\n        '33': [0, 0.69444, 0, 0],\r\n        '34': [0, 0.69444, 0, 0],\r\n        '35': [0.19444, 0.69444, 0, 0],\r\n        '36': [0.05556, 0.75, 0, 0],\r\n        '37': [0.05556, 0.75, 0, 0],\r\n        '38': [0, 0.69444, 0, 0],\r\n        '39': [0, 0.69444, 0, 0],\r\n        '40': [0.25, 0.75, 0, 0],\r\n        '41': [0.25, 0.75, 0, 0],\r\n        '42': [0, 0.75, 0, 0],\r\n        '43': [0.08333, 0.58333, 0, 0],\r\n        '44': [0.125, 0.08333, 0, 0],\r\n        '45': [0, 0.44444, 0, 0],\r\n        '46': [0, 0.08333, 0, 0],\r\n        '47': [0.25, 0.75, 0, 0],\r\n        '48': [0, 0.65556, 0, 0],\r\n        '49': [0, 0.65556, 0, 0],\r\n        '50': [0, 0.65556, 0, 0],\r\n        '51': [0, 0.65556, 0, 0],\r\n        '52': [0, 0.65556, 0, 0],\r\n        '53': [0, 0.65556, 0, 0],\r\n        '54': [0, 0.65556, 0, 0],\r\n        '55': [0, 0.65556, 0, 0],\r\n        '56': [0, 0.65556, 0, 0],\r\n        '57': [0, 0.65556, 0, 0],\r\n        '58': [0, 0.44444, 0, 0],\r\n        '59': [0.125, 0.44444, 0, 0],\r\n        '61': [-0.13, 0.37, 0, 0],\r\n        '63': [0, 0.69444, 0, 0],\r\n        '64': [0, 0.69444, 0, 0],\r\n        '65': [0, 0.69444, 0, 0],\r\n        '66': [0, 0.69444, 0, 0],\r\n        '67': [0, 0.69444, 0, 0],\r\n        '68': [0, 0.69444, 0, 0],\r\n        '69': [0, 0.69444, 0, 0],\r\n        '70': [0, 0.69444, 0, 0],\r\n        '71': [0, 0.69444, 0, 0],\r\n        '72': [0, 0.69444, 0, 0],\r\n        '73': [0, 0.69444, 0, 0],\r\n        '74': [0, 0.69444, 0, 0],\r\n        '75': [0, 0.69444, 0, 0],\r\n        '76': [0, 0.69444, 0, 0],\r\n        '77': [0, 0.69444, 0, 0],\r\n        '78': [0, 0.69444, 0, 0],\r\n        '79': [0, 0.69444, 0, 0],\r\n        '80': [0, 0.69444, 0, 0],\r\n        '81': [0.125, 0.69444, 0, 0],\r\n        '82': [0, 0.69444, 0, 0],\r\n        '83': [0, 0.69444, 0, 0],\r\n        '84': [0, 0.69444, 0, 0],\r\n        '85': [0, 0.69444, 0, 0],\r\n        '86': [0, 0.69444, 0.01389, 0],\r\n        '87': [0, 0.69444, 0.01389, 0],\r\n        '88': [0, 0.69444, 0, 0],\r\n        '89': [0, 0.69444, 0.025, 0],\r\n        '90': [0, 0.69444, 0, 0],\r\n        '91': [0.25, 0.75, 0, 0],\r\n        '93': [0.25, 0.75, 0, 0],\r\n        '94': [0, 0.69444, 0, 0],\r\n        '95': [0.35, 0.09444, 0.02778, 0],\r\n        '97': [0, 0.44444, 0, 0],\r\n        '98': [0, 0.69444, 0, 0],\r\n        '99': [0, 0.44444, 0, 0],\r\n        '100': [0, 0.69444, 0, 0],\r\n        '101': [0, 0.44444, 0, 0],\r\n        '102': [0, 0.69444, 0.06944, 0],\r\n        '103': [0.19444, 0.44444, 0.01389, 0],\r\n        '104': [0, 0.69444, 0, 0],\r\n        '105': [0, 0.67937, 0, 0],\r\n        '106': [0.19444, 0.67937, 0, 0],\r\n        '107': [0, 0.69444, 0, 0],\r\n        '108': [0, 0.69444, 0, 0],\r\n        '109': [0, 0.44444, 0, 0],\r\n        '110': [0, 0.44444, 0, 0],\r\n        '111': [0, 0.44444, 0, 0],\r\n        '112': [0.19444, 0.44444, 0, 0],\r\n        '113': [0.19444, 0.44444, 0, 0],\r\n        '114': [0, 0.44444, 0.01389, 0],\r\n        '115': [0, 0.44444, 0, 0],\r\n        '116': [0, 0.57143, 0, 0],\r\n        '117': [0, 0.44444, 0, 0],\r\n        '118': [0, 0.44444, 0.01389, 0],\r\n        '119': [0, 0.44444, 0.01389, 0],\r\n        '120': [0, 0.44444, 0, 0],\r\n        '121': [0.19444, 0.44444, 0.01389, 0],\r\n        '122': [0, 0.44444, 0, 0],\r\n        '126': [0.35, 0.32659, 0, 0],\r\n        '168': [0, 0.67937, 0, 0],\r\n        '176': [0, 0.69444, 0, 0],\r\n        '184': [0.17014, 0, 0, 0],\r\n        '305': [0, 0.44444, 0, 0],\r\n        '567': [0.19444, 0.44444, 0, 0],\r\n        '710': [0, 0.69444, 0, 0],\r\n        '711': [0, 0.63194, 0, 0],\r\n        '713': [0, 0.60889, 0, 0],\r\n        '714': [0, 0.69444, 0, 0],\r\n        '715': [0, 0.69444, 0, 0],\r\n        '728': [0, 0.69444, 0, 0],\r\n        '729': [0, 0.67937, 0, 0],\r\n        '730': [0, 0.69444, 0, 0],\r\n        '732': [0, 0.67659, 0, 0],\r\n        '733': [0, 0.69444, 0, 0],\r\n        '915': [0, 0.69444, 0, 0],\r\n        '916': [0, 0.69444, 0, 0],\r\n        '920': [0, 0.69444, 0, 0],\r\n        '923': [0, 0.69444, 0, 0],\r\n        '926': [0, 0.69444, 0, 0],\r\n        '928': [0, 0.69444, 0, 0],\r\n        '931': [0, 0.69444, 0, 0],\r\n        '933': [0, 0.69444, 0, 0],\r\n        '934': [0, 0.69444, 0, 0],\r\n        '936': [0, 0.69444, 0, 0],\r\n        '937': [0, 0.69444, 0, 0],\r\n        '8211': [0, 0.44444, 0.02778, 0],\r\n        '8212': [0, 0.44444, 0.02778, 0],\r\n        '8216': [0, 0.69444, 0, 0],\r\n        '8217': [0, 0.69444, 0, 0],\r\n        '8220': [0, 0.69444, 0, 0],\r\n        '8221': [0, 0.69444, 0, 0],\r\n    },\r\n    'Script-Regular': {\r\n        '65': [0, 0.7, 0.22925, 0],\r\n        '66': [0, 0.7, 0.04087, 0],\r\n        '67': [0, 0.7, 0.1689, 0],\r\n        '68': [0, 0.7, 0.09371, 0],\r\n        '69': [0, 0.7, 0.18583, 0],\r\n        '70': [0, 0.7, 0.13634, 0],\r\n        '71': [0, 0.7, 0.17322, 0],\r\n        '72': [0, 0.7, 0.29694, 0],\r\n        '73': [0, 0.7, 0.19189, 0],\r\n        '74': [0.27778, 0.7, 0.19189, 0],\r\n        '75': [0, 0.7, 0.31259, 0],\r\n        '76': [0, 0.7, 0.19189, 0],\r\n        '77': [0, 0.7, 0.15981, 0],\r\n        '78': [0, 0.7, 0.3525, 0],\r\n        '79': [0, 0.7, 0.08078, 0],\r\n        '80': [0, 0.7, 0.08078, 0],\r\n        '81': [0, 0.7, 0.03305, 0],\r\n        '82': [0, 0.7, 0.06259, 0],\r\n        '83': [0, 0.7, 0.19189, 0],\r\n        '84': [0, 0.7, 0.29087, 0],\r\n        '85': [0, 0.7, 0.25815, 0],\r\n        '86': [0, 0.7, 0.27523, 0],\r\n        '87': [0, 0.7, 0.27523, 0],\r\n        '88': [0, 0.7, 0.26006, 0],\r\n        '89': [0, 0.7, 0.2939, 0],\r\n        '90': [0, 0.7, 0.24037, 0],\r\n    },\r\n    'Size1-Regular': {\r\n        '40': [0.35001, 0.85, 0, 0],\r\n        '41': [0.35001, 0.85, 0, 0],\r\n        '47': [0.35001, 0.85, 0, 0],\r\n        '91': [0.35001, 0.85, 0, 0],\r\n        '92': [0.35001, 0.85, 0, 0],\r\n        '93': [0.35001, 0.85, 0, 0],\r\n        '123': [0.35001, 0.85, 0, 0],\r\n        '125': [0.35001, 0.85, 0, 0],\r\n        '710': [0, 0.72222, 0, 0],\r\n        '732': [0, 0.72222, 0, 0],\r\n        '770': [0, 0.72222, 0, 0],\r\n        '771': [0, 0.72222, 0, 0],\r\n        '8214': [-0.00099, 0.601, 0, 0],\r\n        '8593': [1e-5, 0.6, 0, 0],\r\n        '8595': [1e-5, 0.6, 0, 0],\r\n        '8657': [1e-5, 0.6, 0, 0],\r\n        '8659': [1e-5, 0.6, 0, 0],\r\n        '8719': [0.25001, 0.75, 0, 0],\r\n        '8720': [0.25001, 0.75, 0, 0],\r\n        '8721': [0.25001, 0.75, 0, 0],\r\n        '8730': [0.35001, 0.85, 0, 0],\r\n        '8739': [-0.00599, 0.606, 0, 0],\r\n        '8741': [-0.00599, 0.606, 0, 0],\r\n        '8747': [0.30612, 0.805, 0.19445, 0],\r\n        '8748': [0.306, 0.805, 0.19445, 0],\r\n        '8749': [0.306, 0.805, 0.19445, 0],\r\n        '8750': [0.30612, 0.805, 0.19445, 0],\r\n        '8896': [0.25001, 0.75, 0, 0],\r\n        '8897': [0.25001, 0.75, 0, 0],\r\n        '8898': [0.25001, 0.75, 0, 0],\r\n        '8899': [0.25001, 0.75, 0, 0],\r\n        '8968': [0.35001, 0.85, 0, 0],\r\n        '8969': [0.35001, 0.85, 0, 0],\r\n        '8970': [0.35001, 0.85, 0, 0],\r\n        '8971': [0.35001, 0.85, 0, 0],\r\n        '9168': [-0.00099, 0.601, 0, 0],\r\n        '10216': [0.35001, 0.85, 0, 0],\r\n        '10217': [0.35001, 0.85, 0, 0],\r\n        '10752': [0.25001, 0.75, 0, 0],\r\n        '10753': [0.25001, 0.75, 0, 0],\r\n        '10754': [0.25001, 0.75, 0, 0],\r\n        '10756': [0.25001, 0.75, 0, 0],\r\n        '10758': [0.25001, 0.75, 0, 0],\r\n    },\r\n    'Size2-Regular': {\r\n        '40': [0.65002, 1.15, 0, 0],\r\n        '41': [0.65002, 1.15, 0, 0],\r\n        '47': [0.65002, 1.15, 0, 0],\r\n        '91': [0.65002, 1.15, 0, 0],\r\n        '92': [0.65002, 1.15, 0, 0],\r\n        '93': [0.65002, 1.15, 0, 0],\r\n        '123': [0.65002, 1.15, 0, 0],\r\n        '125': [0.65002, 1.15, 0, 0],\r\n        '710': [0, 0.75, 0, 0],\r\n        '732': [0, 0.75, 0, 0],\r\n        '770': [0, 0.75, 0, 0],\r\n        '771': [0, 0.75, 0, 0],\r\n        '8719': [0.55001, 1.05, 0, 0],\r\n        '8720': [0.55001, 1.05, 0, 0],\r\n        '8721': [0.55001, 1.05, 0, 0],\r\n        '8730': [0.65002, 1.15, 0, 0],\r\n        '8747': [0.86225, 1.36, 0.44445, 0],\r\n        '8748': [0.862, 1.36, 0.44445, 0],\r\n        '8749': [0.862, 1.36, 0.44445, 0],\r\n        '8750': [0.86225, 1.36, 0.44445, 0],\r\n        '8896': [0.55001, 1.05, 0, 0],\r\n        '8897': [0.55001, 1.05, 0, 0],\r\n        '8898': [0.55001, 1.05, 0, 0],\r\n        '8899': [0.55001, 1.05, 0, 0],\r\n        '8968': [0.65002, 1.15, 0, 0],\r\n        '8969': [0.65002, 1.15, 0, 0],\r\n        '8970': [0.65002, 1.15, 0, 0],\r\n        '8971': [0.65002, 1.15, 0, 0],\r\n        '10216': [0.65002, 1.15, 0, 0],\r\n        '10217': [0.65002, 1.15, 0, 0],\r\n        '10752': [0.55001, 1.05, 0, 0],\r\n        '10753': [0.55001, 1.05, 0, 0],\r\n        '10754': [0.55001, 1.05, 0, 0],\r\n        '10756': [0.55001, 1.05, 0, 0],\r\n        '10758': [0.55001, 1.05, 0, 0],\r\n    },\r\n    'Size3-Regular': {\r\n        '40': [0.95003, 1.45, 0, 0],\r\n        '41': [0.95003, 1.45, 0, 0],\r\n        '47': [0.95003, 1.45, 0, 0],\r\n        '91': [0.95003, 1.45, 0, 0],\r\n        '92': [0.95003, 1.45, 0, 0],\r\n        '93': [0.95003, 1.45, 0, 0],\r\n        '123': [0.95003, 1.45, 0, 0],\r\n        '125': [0.95003, 1.45, 0, 0],\r\n        '710': [0, 0.75, 0, 0],\r\n        '732': [0, 0.75, 0, 0],\r\n        '770': [0, 0.75, 0, 0],\r\n        '771': [0, 0.75, 0, 0],\r\n        '8730': [0.95003, 1.45, 0, 0],\r\n        '8968': [0.95003, 1.45, 0, 0],\r\n        '8969': [0.95003, 1.45, 0, 0],\r\n        '8970': [0.95003, 1.45, 0, 0],\r\n        '8971': [0.95003, 1.45, 0, 0],\r\n        '10216': [0.95003, 1.45, 0, 0],\r\n        '10217': [0.95003, 1.45, 0, 0],\r\n    },\r\n    'Size4-Regular': {\r\n        '40': [1.25003, 1.75, 0, 0],\r\n        '41': [1.25003, 1.75, 0, 0],\r\n        '47': [1.25003, 1.75, 0, 0],\r\n        '91': [1.25003, 1.75, 0, 0],\r\n        '92': [1.25003, 1.75, 0, 0],\r\n        '93': [1.25003, 1.75, 0, 0],\r\n        '123': [1.25003, 1.75, 0, 0],\r\n        '125': [1.25003, 1.75, 0, 0],\r\n        '710': [0, 0.825, 0, 0],\r\n        '732': [0, 0.825, 0, 0],\r\n        '770': [0, 0.825, 0, 0],\r\n        '771': [0, 0.825, 0, 0],\r\n        '8730': [1.25003, 1.75, 0, 0],\r\n        '8968': [1.25003, 1.75, 0, 0],\r\n        '8969': [1.25003, 1.75, 0, 0],\r\n        '8970': [1.25003, 1.75, 0, 0],\r\n        '8971': [1.25003, 1.75, 0, 0],\r\n        '9115': [0.64502, 1.155, 0, 0],\r\n        '9116': [1e-5, 0.6, 0, 0],\r\n        '9117': [0.64502, 1.155, 0, 0],\r\n        '9118': [0.64502, 1.155, 0, 0],\r\n        '9119': [1e-5, 0.6, 0, 0],\r\n        '9120': [0.64502, 1.155, 0, 0],\r\n        '9121': [0.64502, 1.155, 0, 0],\r\n        '9122': [-0.00099, 0.601, 0, 0],\r\n        '9123': [0.64502, 1.155, 0, 0],\r\n        '9124': [0.64502, 1.155, 0, 0],\r\n        '9125': [-0.00099, 0.601, 0, 0],\r\n        '9126': [0.64502, 1.155, 0, 0],\r\n        '9127': [1e-5, 0.9, 0, 0],\r\n        '9128': [0.65002, 1.15, 0, 0],\r\n        '9129': [0.90001, 0, 0, 0],\r\n        '9130': [0, 0.3, 0, 0],\r\n        '9131': [1e-5, 0.9, 0, 0],\r\n        '9132': [0.65002, 1.15, 0, 0],\r\n        '9133': [0.90001, 0, 0, 0],\r\n        '9143': [0.88502, 0.915, 0, 0],\r\n        '10216': [1.25003, 1.75, 0, 0],\r\n        '10217': [1.25003, 1.75, 0, 0],\r\n        '57344': [-0.00499, 0.605, 0, 0],\r\n        '57345': [-0.00499, 0.605, 0, 0],\r\n        '57680': [0, 0.12, 0, 0],\r\n        '57681': [0, 0.12, 0, 0],\r\n        '57682': [0, 0.12, 0, 0],\r\n        '57683': [0, 0.12, 0, 0],\r\n    },\r\n    'Typewriter-Regular': {\r\n        '32': [0, 0, 0, 0],\r\n        '33': [0, 0.61111, 0, 0],\r\n        '34': [0, 0.61111, 0, 0],\r\n        '35': [0, 0.61111, 0, 0],\r\n        '36': [0.08333, 0.69444, 0, 0],\r\n        '37': [0.08333, 0.69444, 0, 0],\r\n        '38': [0, 0.61111, 0, 0],\r\n        '39': [0, 0.61111, 0, 0],\r\n        '40': [0.08333, 0.69444, 0, 0],\r\n        '41': [0.08333, 0.69444, 0, 0],\r\n        '42': [0, 0.52083, 0, 0],\r\n        '43': [-0.08056, 0.53055, 0, 0],\r\n        '44': [0.13889, 0.125, 0, 0],\r\n        '45': [-0.08056, 0.53055, 0, 0],\r\n        '46': [0, 0.125, 0, 0],\r\n        '47': [0.08333, 0.69444, 0, 0],\r\n        '48': [0, 0.61111, 0, 0],\r\n        '49': [0, 0.61111, 0, 0],\r\n        '50': [0, 0.61111, 0, 0],\r\n        '51': [0, 0.61111, 0, 0],\r\n        '52': [0, 0.61111, 0, 0],\r\n        '53': [0, 0.61111, 0, 0],\r\n        '54': [0, 0.61111, 0, 0],\r\n        '55': [0, 0.61111, 0, 0],\r\n        '56': [0, 0.61111, 0, 0],\r\n        '57': [0, 0.61111, 0, 0],\r\n        '58': [0, 0.43056, 0, 0],\r\n        '59': [0.13889, 0.43056, 0, 0],\r\n        '60': [-0.05556, 0.55556, 0, 0],\r\n        '61': [-0.19549, 0.41562, 0, 0],\r\n        '62': [-0.05556, 0.55556, 0, 0],\r\n        '63': [0, 0.61111, 0, 0],\r\n        '64': [0, 0.61111, 0, 0],\r\n        '65': [0, 0.61111, 0, 0],\r\n        '66': [0, 0.61111, 0, 0],\r\n        '67': [0, 0.61111, 0, 0],\r\n        '68': [0, 0.61111, 0, 0],\r\n        '69': [0, 0.61111, 0, 0],\r\n        '70': [0, 0.61111, 0, 0],\r\n        '71': [0, 0.61111, 0, 0],\r\n        '72': [0, 0.61111, 0, 0],\r\n        '73': [0, 0.61111, 0, 0],\r\n        '74': [0, 0.61111, 0, 0],\r\n        '75': [0, 0.61111, 0, 0],\r\n        '76': [0, 0.61111, 0, 0],\r\n        '77': [0, 0.61111, 0, 0],\r\n        '78': [0, 0.61111, 0, 0],\r\n        '79': [0, 0.61111, 0, 0],\r\n        '80': [0, 0.61111, 0, 0],\r\n        '81': [0.13889, 0.61111, 0, 0],\r\n        '82': [0, 0.61111, 0, 0],\r\n        '83': [0, 0.61111, 0, 0],\r\n        '84': [0, 0.61111, 0, 0],\r\n        '85': [0, 0.61111, 0, 0],\r\n        '86': [0, 0.61111, 0, 0],\r\n        '87': [0, 0.61111, 0, 0],\r\n        '88': [0, 0.61111, 0, 0],\r\n        '89': [0, 0.61111, 0, 0],\r\n        '90': [0, 0.61111, 0, 0],\r\n        '91': [0.08333, 0.69444, 0, 0],\r\n        '92': [0.08333, 0.69444, 0, 0],\r\n        '93': [0.08333, 0.69444, 0, 0],\r\n        '94': [0, 0.61111, 0, 0],\r\n        '95': [0.09514, 0, 0, 0],\r\n        '96': [0, 0.61111, 0, 0],\r\n        '97': [0, 0.43056, 0, 0],\r\n        '98': [0, 0.61111, 0, 0],\r\n        '99': [0, 0.43056, 0, 0],\r\n        '100': [0, 0.61111, 0, 0],\r\n        '101': [0, 0.43056, 0, 0],\r\n        '102': [0, 0.61111, 0, 0],\r\n        '103': [0.22222, 0.43056, 0, 0],\r\n        '104': [0, 0.61111, 0, 0],\r\n        '105': [0, 0.61111, 0, 0],\r\n        '106': [0.22222, 0.61111, 0, 0],\r\n        '107': [0, 0.61111, 0, 0],\r\n        '108': [0, 0.61111, 0, 0],\r\n        '109': [0, 0.43056, 0, 0],\r\n        '110': [0, 0.43056, 0, 0],\r\n        '111': [0, 0.43056, 0, 0],\r\n        '112': [0.22222, 0.43056, 0, 0],\r\n        '113': [0.22222, 0.43056, 0, 0],\r\n        '114': [0, 0.43056, 0, 0],\r\n        '115': [0, 0.43056, 0, 0],\r\n        '116': [0, 0.55358, 0, 0],\r\n        '117': [0, 0.43056, 0, 0],\r\n        '118': [0, 0.43056, 0, 0],\r\n        '119': [0, 0.43056, 0, 0],\r\n        '120': [0, 0.43056, 0, 0],\r\n        '121': [0.22222, 0.43056, 0, 0],\r\n        '122': [0, 0.43056, 0, 0],\r\n        '123': [0.08333, 0.69444, 0, 0],\r\n        '124': [0.08333, 0.69444, 0, 0],\r\n        '125': [0.08333, 0.69444, 0, 0],\r\n        '126': [0, 0.61111, 0, 0],\r\n        '127': [0, 0.61111, 0, 0],\r\n        '160': [0, 0, 0, 0],\r\n        '176': [0, 0.61111, 0, 0],\r\n        '184': [0.19445, 0, 0, 0],\r\n        '305': [0, 0.43056, 0, 0],\r\n        '567': [0.22222, 0.43056, 0, 0],\r\n        '711': [0, 0.56597, 0, 0],\r\n        '713': [0, 0.56555, 0, 0],\r\n        '714': [0, 0.61111, 0, 0],\r\n        '715': [0, 0.61111, 0, 0],\r\n        '728': [0, 0.61111, 0, 0],\r\n        '730': [0, 0.61111, 0, 0],\r\n        '770': [0, 0.61111, 0, 0],\r\n        '771': [0, 0.61111, 0, 0],\r\n        '776': [0, 0.61111, 0, 0],\r\n        '915': [0, 0.61111, 0, 0],\r\n        '916': [0, 0.61111, 0, 0],\r\n        '920': [0, 0.61111, 0, 0],\r\n        '923': [0, 0.61111, 0, 0],\r\n        '926': [0, 0.61111, 0, 0],\r\n        '928': [0, 0.61111, 0, 0],\r\n        '931': [0, 0.61111, 0, 0],\r\n        '933': [0, 0.61111, 0, 0],\r\n        '934': [0, 0.61111, 0, 0],\r\n        '936': [0, 0.61111, 0, 0],\r\n        '937': [0, 0.61111, 0, 0],\r\n        '8216': [0, 0.61111, 0, 0],\r\n        '8217': [0, 0.61111, 0, 0],\r\n        '8242': [0, 0.61111, 0, 0],\r\n        '9251': [0.11111, 0.21944, 0, 0],\r\n    },\r\n};\n\n/**\r\n * This module contains metrics regarding fonts and individual symbols. The sigma\r\n * and xi variables, as well as the METRICS_MAP map contain data extracted from\r\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\r\n * `metrics` variable and the getCharacterMetrics function.\r\n */\r\n// const hangulRegex = /[\\uAC00-\\uD7AF]/;\r\n// This regex combines\r\n// - Hiragana: [\\u3040-\\u309F]\r\n// - Katakana: [\\u30A0-\\u30FF]\r\n// - CJK ideograms: [\\u4E00-\\u9FAF]\r\n// - Hangul syllables: [\\uAC00-\\uD7AF]\r\n// Notably missing are half width Katakana and Romaji glyphs.\r\nconst cjkRegex = /[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\u4E00-\\u9FAF]|[\\uAC00-\\uD7AF]/;\r\n/*\r\n *\r\n * In TeX, there are actually three sets of dimensions, one for each of\r\n * textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the\r\n * the arrays below, in that order.\r\n *\r\n * The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respectively.\r\n * This was determined by running the following script:\r\n *``` bash\r\n      latex -interaction=nonstopmode \\\r\n      '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\r\n      '$a$ \\expandafter\\show\\the\\textfont2' \\\r\n      '\\expandafter\\show\\the\\scriptfont2' \\\r\n      '\\expandafter\\show\\the\\scriptscriptfont2' \\\r\n      '\\stop'\r\n  ```\r\n * The metrics themselves were retrieved using the following commands:\r\n * ``` bash\r\n      tftopl cmsy10\r\n      tftopl cmsy7\r\n      tftopl cmsy5\r\n    ```\r\n *\r\n * The output of each of these commands is quite lengthy.  The only part we\r\n * care about is the FONTDIMEN section. Each value is measured in EMs.\r\n * @memberof module:fontMetrics\r\n */\r\nconst SIGMAS = {\r\n    slant: [0.25, 0.25, 0.25],\r\n    space: [0.0, 0.0, 0.0],\r\n    stretch: [0.0, 0.0, 0.0],\r\n    shrink: [0.0, 0.0, 0.0],\r\n    xHeight: [0.431, 0.431, 0.431],\r\n    quad: [1.0, 1.171, 1.472],\r\n    extraSpace: [0.0, 0.0, 0.0],\r\n    num1: [0.677, 0.732, 0.925],\r\n    num2: [0.394, 0.384, 0.387],\r\n    num3: [0.444, 0.471, 0.504],\r\n    denom1: [0.686, 0.752, 1.025],\r\n    denom2: [0.345, 0.344, 0.532],\r\n    sup1: [0.413, 0.503, 0.504],\r\n    sup2: [0.363, 0.431, 0.404],\r\n    sup3: [0.289, 0.286, 0.294],\r\n    sub1: [0.15, 0.143, 0.2],\r\n    sub2: [0.247, 0.286, 0.4],\r\n    supDrop: [0.386, 0.353, 0.494],\r\n    subDrop: [0.05, 0.071, 0.1],\r\n    delim1: [2.39, 1.7, 1.98],\r\n    delim2: [1.01, 1.157, 1.42],\r\n    axisHeight: [0.25, 0.25, 0.25],\r\n};\r\n// These font metrics are extracted from TeX by using\r\n// \\font\\a=cmex10\r\n// \\showthe\\fontdimenX\\a\r\n// where X is the corresponding variable number. These correspond to the font\r\n// parameters of the extension fonts (family 3). See the TeXbook, page 433\r\n// const xi1 = 0; // Slant per pt\r\n// const xi2 = 0; // Interword space\r\n// const xi3 = 0; // Interword stretch\r\n// const xi4 = 0; // Interword shrink\r\n// const xi5 = 0.431; // x-height\r\n// const xi6 = 1; // Quad width\r\n// const xi7 = 0; // Extra space\r\nconst xi8 = 0.04; // Default rule thickness, TexBook p.390\r\nconst xi9 = 0.111;\r\nconst xi10 = 0.166;\r\nconst xi11 = 0.2;\r\nconst xi12 = 0.6;\r\nconst xi13 = 0.1;\r\n// Note: xi14: offset from baseline for superscript TexBook p. 179\r\n// Note: xi16: offset from baseline for subscript\r\n// This value determines how large a pt is, for metrics which are defined in\r\n// terms of pts.\r\n// This value is also used in katex.less; if you change it make sure the values\r\n// match.\r\nconst ptPerEm = 10.0;\r\n/*\r\n * This is just a mapping from common names to real metrics\r\n */\r\nconst METRICS = {\r\n    defaultRuleThickness: xi8,\r\n    bigOpSpacing1: xi9,\r\n    bigOpSpacing2: xi10,\r\n    bigOpSpacing3: xi11,\r\n    bigOpSpacing4: xi12,\r\n    bigOpSpacing5: xi13,\r\n    ptPerEm: ptPerEm,\r\n    pxPerEm: (ptPerEm * 4.0) / 3.0,\r\n    doubleRuleSep: 2.0 / ptPerEm,\r\n    // article.cls.txt:455\r\n    arraycolsep: 5.0 / ptPerEm,\r\n    baselineskip: 12.0 / ptPerEm,\r\n    arrayrulewidth: 0.4 / ptPerEm,\r\n    fboxsep: 3 / ptPerEm,\r\n    fboxrule: 0.4 / ptPerEm,\r\n};\r\n// These are very rough approximations.  We default to Times New Roman which\r\n// should have Latin-1 and Cyrillic characters, but may not depending on the\r\n// operating system.  The metrics do not account for extra height from the\r\n// accents.  In the case of Cyrillic characters which have both ascenders and\r\n// descenders we prefer approximations with ascenders, primarily to prevent\r\n// the fraction bar or root line from intersecting the glyph.\r\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\r\nconst extraCharacterMap = {\r\n    '\\u00a0': '\\u0020',\r\n    '\\u200b': '\\u0020',\r\n    // Latin-1\r\n    Å: 'A',\r\n    Ç: 'C',\r\n    Ð: 'D',\r\n    Þ: 'o',\r\n    å: 'a',\r\n    ç: 'c',\r\n    ð: 'd',\r\n    þ: 'o',\r\n    // Cyrillic\r\n    А: 'A',\r\n    Б: 'B',\r\n    В: 'B',\r\n    Г: 'F',\r\n    Д: 'A',\r\n    Е: 'E',\r\n    Ж: 'K',\r\n    З: '3',\r\n    И: 'N',\r\n    Й: 'N',\r\n    К: 'K',\r\n    Л: 'N',\r\n    М: 'M',\r\n    Н: 'H',\r\n    О: 'O',\r\n    П: 'N',\r\n    Р: 'P',\r\n    С: 'C',\r\n    Т: 'T',\r\n    У: 'y',\r\n    Ф: 'O',\r\n    Х: 'X',\r\n    Ц: 'U',\r\n    Ч: 'h',\r\n    Ш: 'W',\r\n    Щ: 'W',\r\n    Ъ: 'B',\r\n    Ы: 'X',\r\n    Ь: 'B',\r\n    Э: '3',\r\n    Ю: 'X',\r\n    Я: 'R',\r\n    а: 'a',\r\n    б: 'b',\r\n    в: 'a',\r\n    г: 'r',\r\n    д: 'y',\r\n    е: 'e',\r\n    ж: 'm',\r\n    з: 'e',\r\n    и: 'n',\r\n    й: 'n',\r\n    к: 'n',\r\n    л: 'n',\r\n    м: 'm',\r\n    н: 'n',\r\n    о: 'o',\r\n    п: 'n',\r\n    р: 'p',\r\n    с: 'c',\r\n    т: 'o',\r\n    у: 'y',\r\n    ф: 'b',\r\n    х: 'x',\r\n    ц: 'n',\r\n    ч: 'n',\r\n    ш: 'w',\r\n    щ: 'w',\r\n    ъ: 'a',\r\n    ы: 'm',\r\n    ь: 'a',\r\n    э: 'e',\r\n    ю: 'm',\r\n    я: 'r',\r\n};\r\n/**\r\n * This function is a convenience function for looking up information in the\r\n * METRICS_MAP table. It takes a character as a string, and a font name.\r\n *\r\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\r\n * built using `Make extended_metrics`.\r\n * @param fontName e.g. 'Main-Regular', 'Typewriter-Regular', etc...\r\n */\r\nfunction getCharacterMetrics(character, fontName) {\r\n    // console.assert(character.length === 1);\r\n    console.assert(METRICS_MAP[fontName], 'Unknown font \"' + fontName + '\"');\r\n    let ch = character.charCodeAt(0);\r\n    if (character[0] in extraCharacterMap) {\r\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\r\n    }\r\n    else if (cjkRegex.test(character[0])) {\r\n        ch = 77; // 'M'.charCodeAt(0);\r\n        return {\r\n            defaultMetrics: true,\r\n            depth: 0.2,\r\n            height: 0.9,\r\n            italic: 0,\r\n            skew: 0,\r\n        };\r\n    }\r\n    const metrics = METRICS_MAP[fontName][ch];\r\n    if (!metrics) {\r\n        // console.warn(\r\n        //     'No metrics for ' +\r\n        //     '\"' + character + '\" (U+' + ('000000' + ch.toString(16)).substr(-6) + ')' +\r\n        //     ' in font \"' + fontName + '\"');\r\n        // Assume default values.\r\n        // depth + height should be less than 1.0 em\r\n        if (ch === 11034) {\r\n            // Placeholder character\r\n            return {\r\n                defaultMetrics: true,\r\n                depth: 0,\r\n                height: 1.0,\r\n                italic: 0,\r\n                skew: 0,\r\n            };\r\n        }\r\n        return {\r\n            defaultMetrics: true,\r\n            depth: 0.2,\r\n            height: 0.7,\r\n            italic: 0,\r\n            skew: 0,\r\n        };\r\n    }\r\n    return {\r\n        defaultMetrics: false,\r\n        depth: metrics[0],\r\n        height: metrics[1],\r\n        italic: metrics[2],\r\n        skew: metrics[3],\r\n    };\r\n}\r\n/**\r\n *\r\n * @param value If value is a string, it may be suffixed\r\n * with a unit, which will override the `unit` paramter\r\n */\r\nfunction convertDimenToEm(value, unit, precision = NaN) {\r\n    if (typeof value === 'string') {\r\n        const m = value.match(/([-+]?[0-9.]*)\\s*([a-zA-Z]+)/);\r\n        if (!m) {\r\n            value = parseFloat(value);\r\n        }\r\n        else {\r\n            value = parseFloat(m[1]);\r\n            unit = m[2].toLowerCase();\r\n        }\r\n    }\r\n    // If the units are missing, TeX assumes 'pt'\r\n    const f = {\r\n        pt: 1.0,\r\n        mm: 7227 / 2540,\r\n        cm: 7227 / 254,\r\n        ex: 35271 / 8192,\r\n        px: 3.0 / 4.0,\r\n        em: METRICS.ptPerEm,\r\n        bp: 803 / 800,\r\n        dd: 1238 / 1157,\r\n        pc: 12.0,\r\n        in: 72.27,\r\n        mu: 10 / 18,\r\n    }[unit] || 1.0;\r\n    if (isFinite(precision)) {\r\n        const factor = Math.pow(10, precision);\r\n        return Math.round((value / METRICS.ptPerEm) * f * factor) / factor;\r\n    }\r\n    return (value / METRICS.ptPerEm) * f;\r\n}\r\nfunction convertDimenToPx(value, unit) {\r\n    return convertDimenToEm(value, unit) * (4.0 / 3.0) * METRICS.ptPerEm;\r\n}\n\n/**\r\n * This file contains information and classes for the 'math styles' used by TeX,\r\n * which are specific layout\r\n * algorithms for math. They get progressively smaller and tighter:\r\n * - displaystyle is used for expressions laid out on their own (in a block)\r\n * - textstyle is for expressions displayed on a line (usually wiht some text\r\n * around)\r\n * - scriptstyle is for expressions displayed as a superscript for example\r\n * - scriptscriptstyle is for expressions displayed as a superscript of a superscript\r\n * - the 'cramped' variations are used in various places, for examples a subscript\r\n * is using the 'scriptstyle', but cramped (so it's a bit more tight than a\r\n * superscript which is just using the 'scriptstyle')\r\n *\r\n * See Texbook, p.441:\r\n *\r\n * A math list is a sequence of items of the various kinds listed in Chapter 17,\r\n * and TEX typesets a formula by converting a math list to a horizontal list.\r\n * When such typesetting begins, TEX has two other pieces of information in\r\n * addition to the math list itself. (a) The starting style tells what style\r\n * should be used for the math list, unless another style is specified by a\r\n * style item. For example, the starting style for a displayed formula is D,\r\n * but for an equation in the text or an equation number it is T; and for a\r\n * subformula it can be any one of the eight styles defined in Chapter 17.\r\n *\r\n * We shall use C to stand for the current style, and we shall say that the\r\n * math list is being typeset in style C. (b) The typesetting is done either\r\n * with or without penalties. Formulas in the text of a paragraph are converted\r\n * to horizontal lists in which additional penalty items are inserted after\r\n * binary operations and relations, in order to aid in line breaking. Such\r\n * penalties are not inserted in other cases, because they would serve no\r\n * useful function.\r\n *\r\n * The eight styles are considered to be D > D′ > T > T′ > S > S′ > SS > SS′,\r\n * in decreasing order. Thus, C ≤ S means that the current style is S, S , SS,\r\n * or SS . Style C′ means the current style with a prime added if one isn’t\r\n * there; for example, we have C =T if and only if C = T or C = T'.\r\n * Style C↑ is the superscript style for C; this means style S if C is D or T,\r\n * style S′ if C is D′ or T′, style SS if C is S or SS,\r\n * and style SS if C is S or SS.\r\n * Finally, style C↓ is the subscript style, which is (C↑) .\r\n */\r\n// IDs of the different MATHSTYLES\r\nconst D = 0; // displaystyle\r\nconst Dc = 1; // displaystyle, cramped\r\nconst T = 2; // textstyle\r\nconst Tc = 3;\r\nconst S = 4; // scriptstyle\r\nconst Sc = 5;\r\nconst SS = 6; // scriptscriptstyle\r\nconst SSc = 7;\r\n/**\r\n * @property {number} id unique id for the style\r\n * @property {number} size (which is the same for cramped and uncramped version\r\n * of a style)\r\n * @property {number}  multiplier, size multiplier which gives the size difference between\r\n * a style and textstyle.\r\n * @property {boolean}  cramped flag\r\n */\r\nclass Mathstyle {\r\n    constructor(id, size, multiplier, cramped) {\r\n        this.id = id;\r\n        this.size = size;\r\n        this.cramped = cramped;\r\n        this.sizeMultiplier = multiplier;\r\n        this.metrics = Object.keys(SIGMAS).reduce((acc, x) => {\r\n            return { ...acc, [x]: SIGMAS[x][this.size] };\r\n        }, {});\r\n        this.metrics.emPerEx =\r\n            SIGMAS.xHeight[this.size] / SIGMAS.quad[this.size];\r\n    }\r\n    /**\r\n     * Get the style of a superscript given a base in the current style.\r\n     */\r\n    sup() {\r\n        return MATHSTYLES[[S, Sc, S, Sc, SS, SSc, SS, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the style of a subscript given a base in the current style.\r\n     */\r\n    sub() {\r\n        return MATHSTYLES[[Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the style of a fraction numerator given the fraction in the current\r\n     * style.\r\n     */\r\n    fracNum() {\r\n        return MATHSTYLES[[T, Tc, S, Sc, SS, SSc, SS, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the style of a fraction denominator given the fraction in the current\r\n     * style.\r\n     */\r\n    fracDen() {\r\n        return MATHSTYLES[[Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc][this.id]];\r\n    }\r\n    /**\r\n     * Get the cramped version of a style (in particular, cramping a cramped style\r\n     * doesn't change the style).\r\n     */\r\n    cramp() {\r\n        return MATHSTYLES[[Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc][this.id]];\r\n    }\r\n    /**\r\n     * CSS class name, for example `displaystyle cramped`\r\n     */\r\n    cls() {\r\n        return [\r\n            'displaystyle textstyle',\r\n            'textstyle',\r\n            'scriptstyle',\r\n            'scriptscriptstyle',\r\n        ][this.size]; // @revisit: use this.id to include 'cramped' variants\r\n    }\r\n    /**\r\n     * CSS class name to adjust from one style to another, like 'reset-textstyle'\r\n     */\r\n    adjustTo(newStyle) {\r\n        // @revisit the values used here\r\n        let result = [\r\n            [\r\n                '',\r\n                '',\r\n                'reset-textstyle scriptstyle',\r\n                'reset-textstyle scriptscriptstyle',\r\n            ],\r\n            [\r\n                'reset-textstyle displaystyle textstyle',\r\n                '',\r\n                'reset-textstyle scriptstyle',\r\n                'reset-textstyle scriptscriptstyle',\r\n            ],\r\n            [\r\n                'reset-scriptstyle textstyle displaystyle',\r\n                'reset-scriptstyle textstyle',\r\n                '',\r\n                'reset-scriptstyle scriptscriptstyle',\r\n            ],\r\n            [\r\n                'reset-scriptscriptstyle textstyle displaystyle',\r\n                'reset-scriptscriptstyle textstyle',\r\n                'reset-scriptscriptstyle scriptstyle',\r\n                '',\r\n            ],\r\n        ][this.size][newStyle.size];\r\n        if (result.length > 0)\r\n            result = ' ' + result;\r\n        return result;\r\n    }\r\n    /**\r\n     * Return if this style is tightly spaced (scriptstyle/scriptscriptstyle)\r\n     */\r\n    isTight() {\r\n        return this.size >= 2;\r\n    }\r\n}\r\nconst MATHSTYLES = {\r\n    0: new Mathstyle(D, 0, 1.0, false),\r\n    1: new Mathstyle(Dc, 0, 1.0, true),\r\n    2: new Mathstyle(T, 1, 1.0, false),\r\n    3: new Mathstyle(Tc, 1, 1.0, true),\r\n    4: new Mathstyle(S, 2, 0.7, false),\r\n    5: new Mathstyle(Sc, 2, 0.7, true),\r\n    6: new Mathstyle(SS, 3, 0.5, false),\r\n    7: new Mathstyle(SSc, 3, 0.5, true),\r\n};\r\n// Aliases\r\nMATHSTYLES.displaystyle = MATHSTYLES[0];\r\nMATHSTYLES.textstyle = MATHSTYLES[2];\r\nMATHSTYLES.scriptstyle = MATHSTYLES[4];\r\nMATHSTYLES.scriptscriptstyle = MATHSTYLES[6];\n\n/**\r\n * This structure contains the rendering context of the current parse level.\r\n *\r\n * It also holds information about the parent context to handle scaling\r\n * adjustments.\r\n *\r\n * When a new scope is entered, a clone of the context is created with `.clone()`\r\n * so that any further changes remain local to the scope.\r\n *\r\n * A scope is defined for example by:\r\n * - an explicit group enclosed in braces `{...}`\r\n * - a semi-simple group enclosed in `\\bgroup...\\endgroup`\r\n * - an environment delimited by `\\begin{<envname>}...\\end{<envname>}`\r\n *\r\n * @property {Mathstyle} mathstyle\r\n * @property {number} opacity\r\n * @property {number} size\r\n * @property {object} atomIdsSettings - If not undefined, unique IDs should be\r\n * generated for each span so they can be mapped back to an atom.\r\n * The `seed` field should be a number to generate a specific range of\r\n * IDs or the string \"random\" to generate a random number.\r\n * Optionally, if a `groupNumbers` property is set to true, an additional\r\n * span will enclose strings of digits. This is used by read aloud to properly\r\n * pronounce (and highlight) numbers in expressions.\r\n * @property {Mathstyle} parentMathstyle\r\n * @property {number} parentSize\r\n * @property {object} macros A macros dictionary\r\n * @property {string} color\r\n */\r\nclass Context {\r\n    constructor(from) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        this.macros = (_a = from.macros) !== null && _a !== void 0 ? _a : {};\r\n        this.atomIdsSettings = from.atomIdsSettings;\r\n        this.mathstyle = (_b = from.mathstyle) !== null && _b !== void 0 ? _b : MATHSTYLES.displaystyle;\r\n        this.letterShapeStyle = (_c = from.letterShapeStyle) !== null && _c !== void 0 ? _c : 'tex';\r\n        this.size = (_d = from.size) !== null && _d !== void 0 ? _d : 'size5'; // medium size\r\n        this.parentMathstyle = (_e = from.parentMathstyle) !== null && _e !== void 0 ? _e : this.mathstyle;\r\n        this.parentSize = (_f = from.parentSize) !== null && _f !== void 0 ? _f : this.size;\r\n        this.opacity = from.opacity;\r\n        this.smartFence = from.smartFence;\r\n    }\r\n    /**\r\n     * Returns a new context with the same properties as 'this',\r\n     * except for the ones provided in `override`\r\n     */\r\n    clone(override = {}) {\r\n        const result = new Context(this);\r\n        if (typeof override !== 'undefined') {\r\n            // `'auto'` (or undefined) to indicate that the mathstyle should in\r\n            // fact not be changed. This is used when specifying the mathstyle\r\n            // for some environments.\r\n            Object.assign(result, override);\r\n            if (!override.mathstyle) {\r\n                result.mathstyle = this.mathstyle;\r\n            }\r\n            else {\r\n                result.parentMathstyle = this.mathstyle;\r\n                result.parentSize = this.size;\r\n                if (typeof override.mathstyle === 'string') {\r\n                    result.mathstyle = MATHSTYLES[override.mathstyle];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Change the mathstyle of this context\r\n     * @param value - `'auto'` to indicate that the mathstyle should in\r\n     * fact not be changed. This is used when specifying the mathstyle for some\r\n     * environments.\r\n     */\r\n    setMathstyle(value) {\r\n        if (value && value !== 'auto') {\r\n            this.mathstyle = MATHSTYLES[value];\r\n        }\r\n    }\r\n    cramp() {\r\n        return this.clone({ mathstyle: this.mathstyle.cramp() });\r\n    }\r\n    sup() {\r\n        return this.clone({ mathstyle: this.mathstyle.sup() });\r\n    }\r\n    sub() {\r\n        return this.clone({ mathstyle: this.mathstyle.sub() });\r\n    }\r\n}\n\nconst SVG_BODY = {\r\n    // Adapted from https://github.com/KaTeX/KaTeX/blob/master/src/stretchy.js\r\n    overrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],\r\n    overleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],\r\n    underrightarrow: [['rightarrow'], 0.888, 522, 'xMaxYMin'],\r\n    underleftarrow: [['leftarrow'], 0.888, 522, 'xMinYMin'],\r\n    xrightarrow: [['rightarrow'], 1.469, 522, 'xMaxYMin'],\r\n    xleftarrow: [['leftarrow'], 1.469, 522, 'xMinYMin'],\r\n    Overrightarrow: [['doublerightarrow'], 0.888, 560, 'xMaxYMin'],\r\n    xRightarrow: [['doublerightarrow'], 1.526, 560, 'xMaxYMin'],\r\n    xLeftarrow: [['doubleleftarrow'], 1.526, 560, 'xMinYMin'],\r\n    overleftharpoon: [['leftharpoon'], 0.888, 522, 'xMinYMin'],\r\n    xleftharpoonup: [['leftharpoon'], 0.888, 522, 'xMinYMin'],\r\n    xleftharpoondown: [['leftharpoondown'], 0.888, 522, 'xMinYMin'],\r\n    overrightharpoon: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],\r\n    xrightharpoonup: [['rightharpoon'], 0.888, 522, 'xMaxYMin'],\r\n    xrightharpoondown: [['rightharpoondown'], 0.888, 522, 'xMaxYMin'],\r\n    xlongequal: [['longequal'], 0.888, 334, 'xMinYMin'],\r\n    xtwoheadleftarrow: [['twoheadleftarrow'], 0.888, 334, 'xMinYMin'],\r\n    xtwoheadrightarrow: [['twoheadrightarrow'], 0.888, 334, 'xMaxYMin'],\r\n    overleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],\r\n    overbrace: [['leftbrace', 'midbrace', 'rightbrace'], 1.6, 548],\r\n    underbrace: [\r\n        ['leftbraceunder', 'midbraceunder', 'rightbraceunder'],\r\n        1.6,\r\n        548,\r\n    ],\r\n    underleftrightarrow: [['leftarrow', 'rightarrow'], 0.888, 522],\r\n    xleftrightarrow: [['leftarrow', 'rightarrow'], 1.75, 522],\r\n    xLeftrightarrow: [['doubleleftarrow', 'doublerightarrow'], 1.75, 560],\r\n    xrightleftharpoons: [\r\n        ['leftharpoondownplus', 'rightharpoonplus'],\r\n        1.75,\r\n        716,\r\n    ],\r\n    xleftrightharpoons: [\r\n        ['leftharpoonplus', 'rightharpoondownplus'],\r\n        1.75,\r\n        716,\r\n    ],\r\n    xhookleftarrow: [['leftarrow', 'righthook'], 1.08, 522],\r\n    xhookrightarrow: [['lefthook', 'rightarrow'], 1.08, 522],\r\n    overlinesegment: [['leftlinesegment', 'rightlinesegment'], 0.888, 522],\r\n    underlinesegment: [['leftlinesegment', 'rightlinesegment'], 0.888, 522],\r\n    overgroup: [['leftgroup', 'rightgroup'], 0.888, 342],\r\n    undergroup: [['leftgroupunder', 'rightgroupunder'], 0.888, 342],\r\n    xmapsto: [['leftmapsto', 'rightarrow'], 1.5, 522],\r\n    xtofrom: [['leftToFrom', 'rightToFrom'], 1.75, 528],\r\n    // The next three arrows are from the mhchem package.\r\n    // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\r\n    // document as \\xrightarrow or \\xrightleftharpoons. Those have\r\n    // min-length = 1.75em, so we set min-length on these next three to match.\r\n    xrightleftarrows: [['baraboveleftarrow', 'rightarrowabovebar'], 1.75, 901],\r\n    xrightequilibrium: [\r\n        ['baraboveshortleftharpoon', 'rightharpoonaboveshortbar'],\r\n        1.75,\r\n        716,\r\n    ],\r\n    xleftequilibrium: [\r\n        ['shortbaraboveleftharpoon', 'shortrightharpoonabovebar'],\r\n        1.75,\r\n        716,\r\n    ],\r\n};\r\n// While the images above are sliced, \"accents\" are stretched\r\n// The variants (xxx1, xxx2, etc...) are used depending on the length\r\n// (in number of characters) of the base.\r\nconst SVG_ACCENTS = {\r\n    // viewBoxWidth, viewBoxHeight, height\r\n    widehat1: [1062, 239, 0.24],\r\n    widehat2: [2364, 300, 0.3],\r\n    widehat3: [2364, 360, 0.36],\r\n    widehat4: [2364, 420, 0.42],\r\n    widecheck1: [1062, 239, 0.24],\r\n    widecheck2: [2364, 300, 0.3],\r\n    widecheck3: [2364, 360, 0.36],\r\n    widecheck4: [2364, 420, 0.42],\r\n    widetilde1: [600, 260, 0.26],\r\n    widetilde2: [1033, 286, 0.286],\r\n    widetilde3: [2339, 306, 0.306],\r\n    widetilde4: [2340, 312, 0.34],\r\n};\r\n// From https://github.com/KaTeX/KaTeX/blob/master/src/svgGeometry.js\r\nconst PATHS = {\r\n    // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\r\n    doubleleftarrow: `M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z`,\r\n    // doublerightarrow is from glyph U+21D2 in font KaTeX Main\r\n    doublerightarrow: `M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,\r\n    // leftarrow is from glyph U+2190 in font KaTeX Main\r\n    leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z`,\r\n    // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\r\n    leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,\r\n    leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,\r\n    // overgroup is from the MnSymbol package (public domain)\r\n    leftgroup: `M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z`,\r\n    leftgroupunder: `M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z`,\r\n    // Harpoons are from glyph U+21BD in font KaTeX Main\r\n    leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,\r\n    leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z`,\r\n    leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,\r\n    leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,\r\n    // hook is from glyph U+21A9 in font KaTeX Main\r\n    lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z`,\r\n    leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z`,\r\n    leftmapsto: `M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z`,\r\n    // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\r\n    leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,\r\n    longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z`,\r\n    midbrace: `M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,\r\n    midbraceunder: `M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,\r\n    oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,\r\n    oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z`,\r\n    oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,\r\n    oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,\r\n    rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z`,\r\n    rightbrace: `M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,\r\n    rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,\r\n    rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z`,\r\n    rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,\r\n    rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z`,\r\n    rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,\r\n    rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,\r\n    rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z`,\r\n    righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,\r\n    rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,\r\n    rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,\r\n    // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\r\n    twoheadleftarrow: `M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,\r\n    twoheadrightarrow: `M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,\r\n    // tilde1 is a modified version of a glyph from the MnSymbol package\r\n    widetilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z`,\r\n    // ditto tilde2, tilde3, & tilde4\r\n    widetilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,\r\n    widetilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z`,\r\n    widetilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z`,\r\n    // vec is from glyph U+20D7 in font KaTeX Main\r\n    vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z`,\r\n    // widehat1 is a modified version of a glyph from the MnSymbol package\r\n    widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,\r\n    // ditto widehat2, widehat3, & widehat4\r\n    widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\r\n    widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\r\n    widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\r\n    // widecheck paths are all inverted versions of widehat\r\n    widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,\r\n    widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\r\n    widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\r\n    widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\r\n    // The next ten paths support reaction arrows from the mhchem package.\r\n    // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\r\n    // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\r\n    baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,\r\n    // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\r\n    rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,\r\n    // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\r\n    // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\r\n    baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,\r\n    rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,\r\n    shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,\r\n    shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`,\r\n};\r\n/**\r\n * Generate the HTML markup to represent a SVG span.\r\n *\r\n */\r\nfunction svgBodyToMarkup(svgBodyName) {\r\n    if (SVG_ACCENTS[svgBodyName]) {\r\n        const height = SVG_ACCENTS[svgBodyName][2];\r\n        const result = `<span class=\"stretchy\" style=\"height:${height}em\">` +\r\n            `<svg width=\"100%\" height=\"${height}em\"` +\r\n            `viewBox=\"0 0 ${SVG_ACCENTS[svgBodyName][0]} ${SVG_ACCENTS[svgBodyName][1]}\"` +\r\n            `preserveAspectRatio=\"none\">` +\r\n            `<path d=\"${PATHS[svgBodyName]}\"></path>` +\r\n            `</svg></span>`;\r\n        return `<span style=\"height:${height}em;min-width:0\">${result}</span>`;\r\n    }\r\n    const [paths, minWidth, viewBoxHeight, align] = SVG_BODY[svgBodyName];\r\n    let widthClasses;\r\n    let aligns;\r\n    const height = viewBoxHeight / 1000;\r\n    if (paths.length === 3) {\r\n        widthClasses = ['slice-1-of-3', 'slice-2-of-3', 'slice-3-of-3'];\r\n        aligns = ['xMinYMin', 'xMidYMin', 'xMaxYMin'];\r\n    }\r\n    else if (paths.length === 2) {\r\n        widthClasses = ['slice-1-of-2', 'slice-2-of-2'];\r\n        aligns = ['xMinYMin', 'xMaxYMin'];\r\n    }\r\n    else {\r\n        widthClasses = ['slice-1-of-1'];\r\n        aligns = [align];\r\n    }\r\n    const body = paths\r\n        .map((path, i) => `<span class=\"${widthClasses[i]}\" style=\"height:${height}em\">` +\r\n        `<svg width=\"400em\" height=\"${height}em\"` +\r\n        `viewBox=\"0 0 400000 ${viewBoxHeight}\"` +\r\n        `preserveAspectRatio=\"${aligns[i]} slice\">` +\r\n        `<path d=\"${PATHS[path]}\"></path>` +\r\n        `</svg></span>`)\r\n        .join('');\r\n    return `<span style=\"height:${height}em;min-width:${minWidth}em;display:inline-block;\">${body}</span>`;\r\n}\r\nfunction svgBodyHeight(svgBodyName) {\r\n    if (SVG_BODY[svgBodyName]) {\r\n        return SVG_BODY[svgBodyName][2] / 1000;\r\n    }\r\n    return SVG_ACCENTS[svgBodyName][2];\r\n}\n\n/*\r\n * Return an array of runs (array of atoms with the same value\r\n *   for the specified property)\r\n */\r\nfunction getPropertyRuns(atoms, property) {\r\n    const result = [];\r\n    let run = [];\r\n    let currentValue;\r\n    atoms.forEach((atom) => {\r\n        if (atom.type !== 'first') {\r\n            let value;\r\n            if (property === 'variant') {\r\n                value = atom.variant;\r\n                if (atom.variantStyle && atom.variantStyle !== 'up') {\r\n                    value += '-' + atom.variantStyle;\r\n                }\r\n            }\r\n            else {\r\n                value = atom[property];\r\n            }\r\n            // If the value of this atom is different from the\r\n            // current value, start a new run\r\n            if (value !== currentValue) {\r\n                if (run.length > 0)\r\n                    result.push(run);\r\n                run = [atom];\r\n                currentValue = value;\r\n            }\r\n            else {\r\n                // Same value, add it to the current run\r\n                run.push(atom);\r\n            }\r\n        }\r\n    });\r\n    // Push whatever is left\r\n    if (run.length > 0)\r\n        result.push(run);\r\n    return result;\r\n}\r\nconst MODES_REGISTRY = {};\r\nfunction register(name, definition) {\r\n    MODES_REGISTRY[name] = { ...definition };\r\n}\r\nfunction emitLatexRun(parent, run, expandMacro) {\r\n    var _a;\r\n    if ((_a = MODES_REGISTRY[run[0].mode]) === null || _a === void 0 ? void 0 : _a.emitLatexRun) {\r\n        return MODES_REGISTRY[run[0].mode].emitLatexRun(parent, run, expandMacro);\r\n    }\r\n    return '';\r\n}\r\nfunction parseTokens(mode, tokens, onError, options) {\r\n    var _a;\r\n    if ((_a = MODES_REGISTRY[mode]) === null || _a === void 0 ? void 0 : _a.parse) {\r\n        return MODES_REGISTRY[mode].parse(tokens, onError, options);\r\n    }\r\n    return null;\r\n}\r\n/*\r\n * Apply the styling (bold, italic, etc..) as classes to the atom, and return\r\n * the effective font name to be used for metrics\r\n * ('Main-Regular', 'Caligraphic-Regualr' etc...)\r\n */\r\nfunction applyStyle(span, style) {\r\n    var _a;\r\n    if ((_a = MODES_REGISTRY[style.mode]) === null || _a === void 0 ? void 0 : _a.applyStyle) {\r\n        return MODES_REGISTRY[style.mode].applyStyle(span, style);\r\n    }\r\n    return '';\r\n}\n\n/*\r\n * See https://tex.stackexchange.com/questions/81752/\r\n * for a thorough description of the TeXt atom type and their relevance to\r\n * proper kerning.\r\n */\r\nconst SPAN_TYPE = [\r\n    '',\r\n    'mord',\r\n    'mbin',\r\n    'mop',\r\n    'mrel',\r\n    'mopen',\r\n    'mclose',\r\n    'mpunct',\r\n    'minner',\r\n    'spacing',\r\n    // 'mtable',\r\n    'first',\r\n    'command',\r\n    'composition',\r\n    'error',\r\n    'placeholder',\r\n    'textord',\r\n    'none',\r\n]; // The const assertion prevents widening to string[]\r\nfunction isSpanType(type) {\r\n    return SPAN_TYPE.includes(type);\r\n}\r\n/*\r\n * See http://www.tug.org/TUGboat/tb30-3/tb96vieth.pdf for\r\n * typesetting conventions for mathematical physics (units, etc...)\r\n */\r\nconst INTER_ATOM_SPACING = {\r\n    'mord+mop': 3,\r\n    'mord+mbin': 4,\r\n    'mord+mrel': 5,\r\n    'mord+minner': 3,\r\n    'mop+mord': 3,\r\n    'mop+mop': 3,\r\n    'mop+mbin': 5,\r\n    'mop+minner': 3,\r\n    'mbin+mord': 4,\r\n    'mbin+mop': 4,\r\n    'mbin+mopen': 4,\r\n    'mbin+minner': 4,\r\n    'mrel+mord': 5,\r\n    'mrel+mop': 5,\r\n    'mrel+mopen': 5,\r\n    'mrel+minner': 5,\r\n    'mclose+mop': 3,\r\n    'mclose+mbin': 4,\r\n    'mclose+mrel': 5,\r\n    'mclose+minner': 3,\r\n    'mpunct+mord': 3,\r\n    'mpunct+mop': 3,\r\n    'mpunct+mbin': 4,\r\n    'mpunct+mrel': 5,\r\n    'mpunct+mopen': 3,\r\n    'mpunct+mpunct': 3,\r\n    'mpunct+minner': 3,\r\n};\r\nconst INTER_ATOM_TIGHT_SPACING = {\r\n    'mord+mop': 3,\r\n    'mop+mord': 3,\r\n    'mop+mop': 3,\r\n    'mclose+mop': 3,\r\n    'minner+mop': 3,\r\n};\r\n/**\r\n * Return a string made up of the concatenated arguments.\r\n * Each arguments can be either a string, which is unchanged,\r\n * or a number, which is converted to a string with at most 2 fractional digits.\r\n *\r\n */\r\nfunction toString(arg) {\r\n    if (typeof arg === 'string') {\r\n        return arg;\r\n    }\r\n    if (typeof arg === 'number') {\r\n        return Number(Math.ceil(1e2 * arg) / 1e2).toString();\r\n    }\r\n    if (typeof arg === 'undefined') {\r\n        return '';\r\n    }\r\n    if (isArray(arg)) {\r\n        let result = '';\r\n        for (const elem of arg) {\r\n            result += toString(elem);\r\n        }\r\n        return result;\r\n        // } else if (arg) {\r\n        //     result += (arg as number).toString();\r\n    }\r\n    console.error('Span.toStringUnexpected argument type');\r\n    return '';\r\n}\r\n//----------------------------------------------------------------------------\r\n// SPAN\r\n//----------------------------------------------------------------------------\r\n/**\r\n * A span is the most elementary element that can be rendered.\r\n * It is composed of an optional body of text and an optional list\r\n * of children (other spans). Each span can be decorated with\r\n * CSS classes and style attributes.\r\n *\r\n * @param content the items 'contained' by this node\r\n * @param classes list of classes attributes associated with this node\r\n\n\n * @property  type - For example, `'command'`, `'mrel'`, etc...\r\n * @property classes - A string of space separated CSS classes\r\n * associated with this element\r\n * @property cssId - A CSS ID assigned to this span (optional)\r\n * @property children - An array, potentially empty, of spans which\r\n * this span encloses\r\n * @property body - Content of this span. Can be empty.\r\n * @property style - A set of key/value pairs specifying CSS properties\r\n * associated with this element.\r\n * @property height - The measurement from baseline to top, in em.\r\n * @property depth - The measurement from baseline to bottom, in em.\r\n * @property width\r\n */\r\nclass Span {\r\n    constructor(content, classes = '', type = '') {\r\n        // CLASSES\r\n        this.classes = classes;\r\n        // CONTENT\r\n        if (isArray(content)) {\r\n            // Check if isArray first, since an array is also an object\r\n            // Flatten it (i.e. [[a1, a2], b1, b2] -> [a1, a2, b1, b2]\r\n            this.children = [].concat(...content);\r\n        }\r\n        else if (typeof content === 'string') {\r\n            this.body = content;\r\n        }\r\n        else if (content && typeof content === 'object') {\r\n            this.children = [content];\r\n        }\r\n        this.type = type;\r\n        // STYLE\r\n        // CSS style, as an array of key value pairs.\r\n        // Use this.setStyle() to modify it.\r\n        this.style = null;\r\n        // Calculate the dimensions of this span based on its children\r\n        this.updateDimensions();\r\n    }\r\n    /**\r\n     * Update the dimensions of this node based on its children:\r\n     * - height: distance from bottom to top\r\n     * - depth: distance from bottom to baseline\r\n     * - maxFontSize: a size multiplier (typically set with commands such as \\huge)\r\n     */\r\n    updateDimensions() {\r\n        let height = 0.0;\r\n        let depth = 0.0;\r\n        let maxFontSize = 1.0;\r\n        if (this.children) {\r\n            this.children.forEach((x) => {\r\n                if (x.height > height)\r\n                    height = x.height;\r\n                if (x.depth > depth)\r\n                    depth = x.depth;\r\n                if (x.maxFontSize > maxFontSize)\r\n                    maxFontSize = x.maxFontSize;\r\n            });\r\n        }\r\n        else if (typeof this.body === 'string') {\r\n            height = METRICS.baselineskip;\r\n            depth = 0;\r\n        }\r\n        this.height = height;\r\n        this.depth = depth;\r\n        this.maxFontSize = maxFontSize;\r\n    }\r\n    selected(isSelected) {\r\n        if (isSelected && !/ML__selected/.test(this.classes)) {\r\n            if (this.classes.length > 0)\r\n                this.classes += ' ';\r\n            this.classes += 'ML__selected';\r\n        }\r\n        if (!isSelected && /ML__selected/.test(this.classes)) {\r\n            this.classes = this.classes.replace('ML__selected', '');\r\n        }\r\n        if (this.children) {\r\n            this.children.forEach((x) => x.selected(isSelected));\r\n        }\r\n    }\r\n    applyStyle(style) {\r\n        if (!style)\r\n            return;\r\n        //\r\n        // 1. Apply color\r\n        //\r\n        if (style.color) {\r\n            if (style.color !== 'none') {\r\n                this.setStyle('color', style.color);\r\n            }\r\n            else {\r\n                this.setStyle('color', '');\r\n            }\r\n        }\r\n        if (style.backgroundColor) {\r\n            if (style.backgroundColor !== 'none') {\r\n                this.setStyle('background-color', style.backgroundColor);\r\n            }\r\n            else {\r\n                this.setStyle('background-color', '');\r\n            }\r\n        }\r\n        //\r\n        // 2. Add any custom style classes\r\n        //\r\n        if (style.cssClass) {\r\n            this.classes += ' ' + style.cssClass;\r\n        }\r\n        // If the body is null (for example for a line), we're done.\r\n        if (!this.body)\r\n            return;\r\n        //\r\n        // 3. Determine the font family (i.e. 'ams', 'mathcal', etc...)\r\n        // and apply styling by adding appropriate classes to the atom\r\n        //\r\n        console.assert(typeof this.body === 'string');\r\n        const fontName = applyStyle(this, style);\r\n        //\r\n        // 5. Get the metrics information\r\n        //\r\n        if (this.body && fontName) {\r\n            this.maxFontSize =\r\n                {\r\n                    size1: 0.5,\r\n                    size2: 0.7,\r\n                    size3: 0.8,\r\n                    size4: 0.9,\r\n                    size5: 1.0,\r\n                    size6: 1.2,\r\n                    size7: 1.44,\r\n                    size8: 1.73,\r\n                    size9: 2.07,\r\n                    size10: 2.49,\r\n                }[style.fontSize] || 1.0;\r\n            this.height = 0.0;\r\n            this.depth = 0.0;\r\n            this.skew = 0.0;\r\n            this.italic = 0.0;\r\n            for (let i = 0; i < this.body.length; i++) {\r\n                const metrics = getCharacterMetrics(this.body.charAt(i), fontName);\r\n                // If we were able to get metrics info for this character, store it.\r\n                if (metrics) {\r\n                    this.height = Math.max(this.height, metrics.height);\r\n                    this.depth = Math.max(this.depth, metrics.depth);\r\n                    this.skew = metrics.skew;\r\n                    this.italic = metrics.italic;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Set the value of a CSS property associated with this span.\r\n     * For example, setStyle('border-right', 5.6, 'em');\r\n     *\r\n     * @param prop the CSS property to set\r\n     * @param value a series of strings and numbers that will be concatenated.\r\n     */\r\n    setStyle(prop, ...value) {\r\n        const v = toString(value);\r\n        if (v.length > 0) {\r\n            if (!this.style)\r\n                this.style = {};\r\n            this.style[prop] = v;\r\n        }\r\n    }\r\n    setTop(top) {\r\n        if (top && top !== 0) {\r\n            if (!this.style)\r\n                this.style = {};\r\n            this.style['top'] = toString(top) + 'em';\r\n            this.height -= top;\r\n            this.depth += top;\r\n        }\r\n    }\r\n    setLeft(left) {\r\n        if (left && left !== 0) {\r\n            if (!this.style)\r\n                this.style = {};\r\n            this.style['margin-left'] = toString(left) + 'em';\r\n        }\r\n    }\r\n    setRight(right) {\r\n        if (right && right !== 0) {\r\n            if (!this.style)\r\n                this.style = {};\r\n            this.style['margin-right'] = toString(right) + 'em';\r\n        }\r\n    }\r\n    setWidth(width) {\r\n        if (width && width !== 0) {\r\n            if (!this.style)\r\n                this.style = {};\r\n            this.style['width'] = toString(width) + 'em';\r\n        }\r\n    }\r\n    /**\r\n     * Generate the HTML markup to represent this span.\r\n     *\r\n     * @param hskip - Space (in mu, 1/18em) to leave on the left side\r\n     * of the span. Implemented as a Unicode character if possible, a margin-left otherwise.\r\n     * This is used to adjust the inter-spacing between spans of different types,\r\n     * e.g. 'bin' and 'rel', according to the TeX rules (TexBook p.170)\r\n     *\r\n     * @param hscale - If a value is provided, the margins are scaled by\r\n     * this factor.\r\n     *\r\n     * @return HTML markup\r\n     */\r\n    toMarkup(hskip = 1.0, hscale = 1.0) {\r\n        var _a, _b, _c, _d, _e;\r\n        let result = '';\r\n        let body = this.body || '';\r\n        //\r\n        // 1. Calculate the spacing between atoms, based on their type\r\n        // (`mord`, `mbin`, `mrel`, etc...)\r\n        //\r\n        if (this.children) {\r\n            let previousType = 'none';\r\n            for (let i = 0; i < this.children.length; i++) {\r\n                const child = this.children[i];\r\n                let spacing = 0;\r\n                const type = getEffectiveType(this.children, i);\r\n                const combinedType = previousType + '+' + type;\r\n                if (child.isTight) {\r\n                    spacing = (_a = INTER_ATOM_TIGHT_SPACING[combinedType]) !== null && _a !== void 0 ? _a : 0;\r\n                }\r\n                else {\r\n                    spacing = (_b = INTER_ATOM_SPACING[combinedType]) !== null && _b !== void 0 ? _b : 0;\r\n                }\r\n                body += child.toMarkup(spacing, hscale);\r\n                previousType = type;\r\n            }\r\n        }\r\n        // Collapse 'empty' spans\r\n        if ((body === '\\u200b' || (!body && !this.svgBody)) &&\r\n            (!this.classes || this.classes === 'ML__selected') &&\r\n            !this.cssId &&\r\n            !this.style &&\r\n            !this.svgOverlay) {\r\n            result = '';\r\n        }\r\n        else {\r\n            // Note: We can't omit the tag, even if it has no class and no style,\r\n            // as some layouts (vlist) depends on the presence of the tag to function\r\n            result = '<span';\r\n            if (this.cssId) {\r\n                result += ' id=\"' + this.cssId + '\" ';\r\n            }\r\n            if (this.attributes) {\r\n                result +=\r\n                    ' ' +\r\n                        Object.keys(this.attributes)\r\n                            .map((attribute) => `${attribute}=\"${this.attributes[attribute]}\"`)\r\n                            .join(' ');\r\n            }\r\n            const classes = this.classes.split(' ');\r\n            // Add the type (mbin, mrel, etc...) if specified\r\n            classes.push((_c = {\r\n                command: 'ML__command',\r\n                placeholder: 'ML__placeholder',\r\n                error: 'ML__error',\r\n            }[this.type]) !== null && _c !== void 0 ? _c : '');\r\n            if (this.caret && this.type === 'command') {\r\n                classes.push('ML__command-caret');\r\n            }\r\n            // Remove duplicate and empty classes\r\n            let classList = '';\r\n            if (classes.length > 1) {\r\n                classList = classes\r\n                    .filter((x, e, a) => {\r\n                    return x.length > 0 && a.indexOf(x) === e;\r\n                })\r\n                    .join(' ');\r\n            }\r\n            else {\r\n                classList = classes[0];\r\n            }\r\n            if (classList.length > 0) {\r\n                result += ` class=\"${classList}\"`;\r\n            }\r\n            // If a `hskip` value was provided, add it to the margin-left\r\n            if (hskip) {\r\n                if ((_d = this.style) === null || _d === void 0 ? void 0 : _d['margin-left']) {\r\n                    // There was already a margin, add to it\r\n                    this.style['margin-left'] =\r\n                        toString(parseFloat(this.style['margin-left']) + hskip / 18) + 'em';\r\n                }\r\n                else {\r\n                    if (!this.style)\r\n                        this.style = {};\r\n                    this.style['margin-left'] = toString(hskip / 18) + 'em';\r\n                }\r\n            }\r\n            if (this.style) {\r\n                let styleString = '';\r\n                const isSelected = /ML__selected/.test(this.classes);\r\n                for (const style in this.style) {\r\n                    if (Object.prototype.hasOwnProperty.call(this.style, style)) {\r\n                        // Render the style property, except the background\r\n                        // of selected spans\r\n                        if (style !== 'background-color' || !isSelected) {\r\n                            styleString +=\r\n                                style + ':' + this.style[style] + ';';\r\n                        }\r\n                    }\r\n                }\r\n                if (styleString.length > 0) {\r\n                    result += ' style=\"' + styleString + '\"';\r\n                }\r\n            }\r\n            result += '>';\r\n            // If there is some SVG markup associated with this span,\r\n            // include it now\r\n            if (this.svgBody) {\r\n                result += svgBodyToMarkup(this.svgBody);\r\n            }\r\n            else if (this.svgOverlay) {\r\n                result += '<span style=\"';\r\n                result += 'display: inline-block;';\r\n                result += 'height:' + (this.height + this.depth) + 'em;';\r\n                result += 'vertical-align:' + this.depth + 'em;';\r\n                result += '\">';\r\n                result += body;\r\n                result += '</span>';\r\n                result += '<svg ';\r\n                result += 'style=\"position:absolute;';\r\n                result += 'overflow:overlay;';\r\n                result += 'height:' + (this.height + this.depth) + 'em;';\r\n                if ((_e = this.style) === null || _e === void 0 ? void 0 : _e.padding) {\r\n                    result += 'top:' + this.style.padding + ';';\r\n                    result += 'left:' + this.style.padding + ';';\r\n                    result +=\r\n                        'width:calc(100% - 2 * ' + this.style.padding + ' );';\r\n                }\r\n                else {\r\n                    result += 'top:0;';\r\n                    result += 'left:0;';\r\n                    result += 'width:100%;';\r\n                }\r\n                result += 'z-index:2;';\r\n                result += '\"';\r\n                if (this.svgStyle) {\r\n                    result += ' style=\"' + this.svgStyle + '\"';\r\n                }\r\n                result += '>';\r\n                result += this.svgOverlay;\r\n                result += '</svg>';\r\n            }\r\n            else {\r\n                result += body;\r\n            }\r\n            result = result + '</span>';\r\n        }\r\n        if (this.caret && this.type !== 'command') {\r\n            if (this.caret === 'text') {\r\n                result = result + '<span class=\"ML__text-caret\"></span>';\r\n            }\r\n            else {\r\n                result = result + '<span class=\"ML__caret\"></span>';\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Can this span be coalesced with 'span'?\r\n     * This is used to 'coalesce' (i.e. group together) a series of spans that are\r\n     * identical except for their value, and to avoid generating redundant spans.\r\n     * That is: '12' ->\r\n     *      \"<span class='mord mathrm'>12</span>\"\r\n     * rather than:\r\n     *      \"<span class='mord mathrm'>1</span><span class='mord mathrm'>2</span>\"\r\n     */\r\n    tryCoalesceWith(span) {\r\n        // Don't coalesce if the tag or type are different\r\n        if (this.type !== span.type)\r\n            return false;\r\n        // Don't coalesce consecutive errors, placeholders or commands\r\n        if (this.type === 'error' ||\r\n            this.type === 'placeholder' ||\r\n            this.type === 'command') {\r\n            return false;\r\n        }\r\n        // Don't coalesce if some of the content is SVG\r\n        if (this.svgBody || !this.body)\r\n            return false;\r\n        if (span.svgBody || !span.body)\r\n            return false;\r\n        // If this span or the candidate span have children, we can't\r\n        // coalesce them, but we'll try to coalesce their children\r\n        const hasChildren = this.children && this.children.length > 0;\r\n        const spanHasChildren = span.children && span.children.length > 0;\r\n        if (hasChildren || spanHasChildren)\r\n            return false;\r\n        // If they have a different number of styles, can't coalesce\r\n        const thisStyleCount = this.style ? this.style.length : 0;\r\n        const spanStyleCount = span.style ? span.style.length : 0;\r\n        if (thisStyleCount !== spanStyleCount)\r\n            return false;\r\n        // For the purpose of our comparison,\r\n        // any 'empty' classes (whitespace)\r\n        const classes = this.classes.trim().replace(/\\s+/g, ' ').split(' ');\r\n        const spanClasses = span.classes.trim().replace(/\\s+/g, ' ').split(' ');\r\n        // If they have a different number of classes, can't coalesce\r\n        if (classes.length !== spanClasses.length)\r\n            return false;\r\n        // OK, let's do the more expensive comparison now.\r\n        // If they have different classes, can't coalesce\r\n        classes.sort();\r\n        spanClasses.sort();\r\n        for (let i = 0; i < classes.length; i++) {\r\n            // Don't coalesce vertical separators\r\n            // (used in column formating with {l||r} for example\r\n            if (classes[i] === 'vertical-separator')\r\n                return false;\r\n            if (classes[i] !== spanClasses[i])\r\n                return false;\r\n        }\r\n        // If the styles are different, can't coalesce\r\n        if (this.style && span.style) {\r\n            for (const style in this.style) {\r\n                if (Object.prototype.hasOwnProperty.call(this.style, style) &&\r\n                    Object.prototype.hasOwnProperty.call(span.style, style)) {\r\n                    if (this.style[style] !== span.style[style])\r\n                        return false;\r\n                }\r\n            }\r\n        }\r\n        // OK, the attributes of those spans are compatible.\r\n        // Merge span into this\r\n        this.body += span.body;\r\n        this.height = Math.max(this.height, span.height);\r\n        this.depth = Math.max(this.depth, span.depth);\r\n        this.maxFontSize = Math.max(this.maxFontSize, span.maxFontSize);\r\n        // The italic correction for the coalesced spans is the\r\n        // italic correction of the last span.\r\n        this.italic = span.italic;\r\n        return true;\r\n    }\r\n}\r\nfunction getEffectiveType(xs, i) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (i < 0 || i >= xs.length)\r\n        return 'none';\r\n    const prevType = (_b = (_a = xs[i - 1]) === null || _a === void 0 ? void 0 : _a.type) !== null && _b !== void 0 ? _b : 'none';\r\n    const nextType = (_d = (_c = xs[i + 1]) === null || _c === void 0 ? void 0 : _c.type) !== null && _d !== void 0 ? _d : 'none';\r\n    let result = (_e = xs[i].type) !== null && _e !== void 0 ? _e : 'none';\r\n    if (result === 'first')\r\n        return 'none';\r\n    if (result === 'textord')\r\n        return 'mord';\r\n    if (result === 'mbin') {\r\n        // If a `mbin` span, i.e. \"+\" is after or before spans\r\n        // of a certain type, consider it to be a `mord` instead.\r\n        // This is to handle proper spacing of, e.g. \"-4\" vs \"1-4\"\r\n        if (/first|none|mrel|mpunct|mopen|mbin|mop/.test(prevType) ||\r\n            /none|mrel|mpunct|mclose/.test(nextType)) {\r\n            result = 'mord';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Attempts to coalesce (merge) spans, for example consecutive text spans.\r\n * Return a new tree with coalesced spans.\r\n *\r\n */\r\nfunction coalesce(spans) {\r\n    if (!spans || spans.length === 0)\r\n        return [];\r\n    spans[0].children = coalesce(spans[0].children);\r\n    const result = [spans[0]];\r\n    for (let i = 1; i < spans.length; i++) {\r\n        if (!result[result.length - 1].tryCoalesceWith(spans[i])) {\r\n            spans[i].children = coalesce(spans[i].children);\r\n            result.push(spans[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//----------------------------------------------------------------------------\r\n// UTILITY FUNCTIONS\r\n//----------------------------------------------------------------------------\r\nfunction height(spans) {\r\n    if (!spans)\r\n        return 0;\r\n    if (isArray(spans)) {\r\n        return spans.reduce((acc, x) => Math.max(acc, x.height), 0);\r\n    }\r\n    return spans.height;\r\n}\r\nfunction depth(spans) {\r\n    if (!spans)\r\n        return 0;\r\n    if (isArray(spans)) {\r\n        return spans.reduce((acc, x) => Math.max(acc, x.depth), 0);\r\n    }\r\n    return spans.depth;\r\n}\r\nfunction skew(spans) {\r\n    if (!spans)\r\n        return 0;\r\n    if (isArray(spans)) {\r\n        let result = 0;\r\n        for (const span of spans) {\r\n            result += span.skew || 0;\r\n        }\r\n        return result;\r\n    }\r\n    return spans.skew;\r\n}\r\nfunction italic(spans) {\r\n    if (!spans)\r\n        return 0;\r\n    if (isArray(spans)) {\r\n        return spans[spans.length - 1].italic;\r\n    }\r\n    return spans.italic;\r\n}\r\n/**\r\n * Make an element made of a sequence of children with classes\r\n * @param content the items 'contained' by this node\r\n * @param classes list of classes attributes associated with this node\r\n */\r\nfunction makeSpan(content, classes = '', type = '') {\r\n    if (isArray(content)) {\r\n        const c = content.filter((x) => Boolean(x));\r\n        if (c.length === 1) {\r\n            return new Span(c[0], classes, type);\r\n        }\r\n        return new Span(c, classes, type);\r\n    }\r\n    return new Span(content, classes, type);\r\n}\r\nfunction makeSymbol(fontFamily, symbol, classes = '', type = '') {\r\n    const result = new Span(symbol, classes, type);\r\n    const metrics = getCharacterMetrics(symbol, fontFamily);\r\n    result.height = metrics.height;\r\n    result.depth = metrics.depth;\r\n    result.skew = metrics.skew;\r\n    result.italic = metrics.italic;\r\n    result.setRight(result.italic);\r\n    return result;\r\n}\r\n/**\r\n * Makes an element placed in each of the vlist elements to ensure that each\r\n * element has the same max font size. To do this, we create a zero-width space\r\n * with the correct font size.\r\n//  * Note: without this, even when fontSize = 0, the fraction bar is no\r\n//  * longer positioned correctly\r\n */\r\nfunction makeFontSizer(context, fontSize) {\r\n    const fontSizeAdjustment = fontSize\r\n        ? fontSize / context.mathstyle.sizeMultiplier\r\n        : 0;\r\n    const fontSizeInner = new Span('\\u200b'); // ZERO WIDTH SPACE\r\n    fontSizeInner.depth = 0;\r\n    fontSizeInner.height = 0;\r\n    if (fontSizeAdjustment !== 1) {\r\n        fontSizeInner.setStyle('font-size', fontSizeAdjustment, fontSizeAdjustment > 0 ? 'em' : '');\r\n        fontSizeInner.attributes = {\r\n            'aria-hidden': 'true',\r\n        };\r\n    }\r\n    if (context.size !== 'size5') {\r\n        return new Span(fontSizeInner, 'fontsize-ensurer reset-' + context.size + ' size5');\r\n    }\r\n    return fontSizeAdjustment !== 0 ? fontSizeInner : null;\r\n}\r\nfunction makeStruts(content, classes = '', type = '') {\r\n    const topStrut = makeSpan('', 'ML__strut');\r\n    topStrut.setStyle('height', height(content), 'em');\r\n    let bottomStrut;\r\n    if (depth(content) !== 0) {\r\n        bottomStrut = makeSpan('', 'ML__strut--bottom');\r\n        bottomStrut.setStyle('height', height(content) + depth(content), 'em');\r\n        bottomStrut.setStyle('vertical-align', -depth(content), 'em');\r\n    }\r\n    let struts;\r\n    if (isArray(content)) {\r\n        struts = [topStrut, bottomStrut, ...content];\r\n    }\r\n    else {\r\n        struts = [topStrut, bottomStrut, content];\r\n    }\r\n    const result = makeSpan(struts, classes, type);\r\n    // result.setStyle('display', 'inline-block');\r\n    return result;\r\n}\r\nfunction makeStyleWrap(type, children, fromStyle, toStyle, classes) {\r\n    classes = classes || '';\r\n    classes += ' style-wrap ';\r\n    const result = makeHlist(children, classes + fromStyle.adjustTo(toStyle));\r\n    result.type = type;\r\n    const multiplier = toStyle.sizeMultiplier / fromStyle.sizeMultiplier;\r\n    result.height *= multiplier; // @revisit. Use spanHeight()? is height set at this point?\r\n    result.depth *= multiplier;\r\n    result.maxFontSize = toStyle.sizeMultiplier;\r\n    return result;\r\n}\r\n/**\r\n * Add some SVG markup to be overlaid on top of the span\r\n */\r\nfunction addSVGOverlay(body, svgMarkup, svgStyle) {\r\n    body.svgOverlay = svgMarkup;\r\n    body.svgStyle = svgStyle;\r\n    return body;\r\n}\r\nfunction makeHlist(spans, classes = '', type = '') {\r\n    // Note: do not try to optimize and avoid creating the span below\r\n    // Some layouts, e.g. vlist, depend on that span being there.\r\n    const result = new Span(spans, classes, type);\r\n    let multiplier = 1.0;\r\n    if (spans instanceof Span) {\r\n        multiplier = spans.maxFontSize;\r\n    }\r\n    else {\r\n        multiplier = spans.reduce((acc, x) => Math.max(acc, x.maxFontSize), multiplier);\r\n    }\r\n    result.height *= multiplier;\r\n    result.depth *= multiplier;\r\n    return result;\r\n}\r\n/**\r\n * Create a new span of type `vlist`, a set of vertically stacked items\r\n * @param elements  An array of Span and integer. The integer can be either some kerning information\r\n * or the value of an individual shift of the preceding child if in 'individualShift' mode\r\n * @param pos The method that will be used to position the elements in the vlist.\r\n *\r\n * One of:\r\n * - `\"individualShift\"`: each child must be followed by a number indicating how much to shift it (i.e. moved downwards)\r\n * - `\"top\"`: posData specifies the topmost point of the vlist (>0 move up)\r\n * - `\"bottom\"`: posData specifies the bottommost point of the vlist (>0 move down)\r\n * - `\"shift\"`: the baseline of the vlist will be positioned posData away from the baseline\r\n * of the first child. (>0 moves down)\r\n */\r\nfunction makeVlist(context, elements, pos = 'shift', posData = 0) {\r\n    let listDepth = 0;\r\n    let currPos = 0;\r\n    pos = pos || 'shift';\r\n    // Normalize the elements so that they're all either a number or\r\n    // a single span. If a child is an array of spans,\r\n    // wrap it in a span\r\n    for (let i = 0; i < elements.length; i++) {\r\n        if (isArray(elements[i])) {\r\n            if (elements[i].length === 1) {\r\n                // If that's an array made up of a single span, use that span\r\n                elements[i] = elements[i][0];\r\n            }\r\n            else {\r\n                // Otherwise, wrap it in a span\r\n                elements[i] = makeSpan(elements[i]);\r\n            }\r\n        }\r\n    }\r\n    if (pos === 'shift') {\r\n        console.assert(elements[0] instanceof Span);\r\n        listDepth = -elements[0].depth - posData;\r\n    }\r\n    else if (pos === 'bottom') {\r\n        listDepth = -posData;\r\n    }\r\n    else if (pos === 'top') {\r\n        let bottom = posData;\r\n        for (const element of elements) {\r\n            if (element instanceof Span) {\r\n                // It's a Span, use the dimension data\r\n                bottom -= element.height + element.depth;\r\n            }\r\n            else if (typeof element === 'number') {\r\n                // It's a kern adjustment\r\n                bottom -= element;\r\n            }\r\n        }\r\n        listDepth = bottom;\r\n    }\r\n    else if (pos === 'individualShift') {\r\n        // Individual adjustment to each elements.\r\n        // The elements list is made up of a Span followed\r\n        // by a shift adjustment as an integer\r\n        const originalElements = elements;\r\n        elements = [originalElements[0]];\r\n        // Add in kerns to the list of elements to get each element to be\r\n        // shifted to the correct specified shift\r\n        console.assert(originalElements[0] instanceof Span);\r\n        listDepth = -originalElements[1] - originalElements[0].depth;\r\n        currPos = listDepth;\r\n        for (let i = 2; i < originalElements.length; i += 2) {\r\n            console.assert(originalElements[i] instanceof Span);\r\n            const diff = -originalElements[i + 1] -\r\n                currPos -\r\n                originalElements[i].depth;\r\n            currPos = currPos + diff;\r\n            console.assert(originalElements[i - 2] instanceof Span);\r\n            const kern = diff -\r\n                (originalElements[i - 2].height +\r\n                    originalElements[i - 2].depth);\r\n            elements.push(kern);\r\n            elements.push(originalElements[i]);\r\n        }\r\n    }\r\n    else {\r\n        console.assert(false, 'makeVList with unknown method: \"' + pos + '\"');\r\n    }\r\n    // Make the fontSizer\r\n    let maxFontSize = 1.0;\r\n    for (const element of elements) {\r\n        if (element instanceof Span) {\r\n            maxFontSize = Math.max(maxFontSize, element.maxFontSize);\r\n        }\r\n    }\r\n    const fontSizer = makeFontSizer(context, maxFontSize);\r\n    const newElements = [];\r\n    currPos = listDepth;\r\n    for (const element of elements) {\r\n        if (typeof element === 'number') {\r\n            // It's a kern adjustment\r\n            currPos += element;\r\n        }\r\n        else if (element instanceof Span) {\r\n            const wrap = makeSpan([fontSizer, element]);\r\n            wrap.setTop(-element.depth - currPos);\r\n            newElements.push(wrap);\r\n            currPos += element.height + element.depth;\r\n        }\r\n    }\r\n    const result = makeSpan(newElements, 'vlist');\r\n    // Fix the final height and depth, in case there were kerns at the ends\r\n    // since makeSpan won't take that into account.\r\n    result.depth = Math.max(listDepth, depth(result) || 0);\r\n    result.height = Math.max(-currPos, height(result) || 0);\r\n    return result;\r\n}\r\n/**\r\n * Create a span that consist of a (stretchy) SVG element\r\n *\r\n * @param classes list of classes attributes associated with this node\r\n */\r\nfunction makeSVGSpan(svgBodyName) {\r\n    const span = new Span(null);\r\n    span.svgBody = svgBodyName;\r\n    span.height = svgBodyHeight(svgBodyName) / 2;\r\n    span.depth = span.height;\r\n    return span;\r\n}\n\nconst MATH_SYMBOLS = {};\r\n// Map a character to some corresponding Latex\r\n// This is used for some characters such as ² SUPERSCRIPT TWO.\r\n// This is also an opportunity to specify the prefered form when\r\n// a unicode character is encountered that maps to multiple commands,\r\n// for example ≠ could map either to \\ne or \\neq\r\n// The table will also be populated by any registered symbol\r\n// from MATH_SYMBOLS\r\n// prettier-ignore\r\nconst REVERSE_MATH_SYMBOLS = {\r\n    '<': '<',\r\n    '>': '>',\r\n    'o': 'o',\r\n    '&': '\\\\&',\r\n    '{': '\\\\{',\r\n    '}': '\\\\}',\r\n    '[': '\\\\lbrack',\r\n    ']': '\\\\rbrack',\r\n    ':': '\\\\colon',\r\n    '\\u00a0': '~',\r\n    '\\u00ac': '\\\\neg',\r\n    '\\u00b7': '\\\\cdot',\r\n    '\\u00bc': '\\\\frac{1}{4}',\r\n    '\\u00bd': '\\\\frac{1}{2}',\r\n    '\\u00be': '\\\\frac{3}{4}',\r\n    '\\u2070': '^{0}',\r\n    '\\u2071': '^{i}',\r\n    '\\u00b9': '^{1}',\r\n    '\\u00b2': '^{2}',\r\n    '\\u00b3': '^{3}',\r\n    '\\u2020': '\\\\dagger',\r\n    '\\u2021': '\\\\ddagger',\r\n    '\\u2026': '\\\\ldots',\r\n    '\\u2074': '^{4}',\r\n    '\\u2075': '^{5}',\r\n    '\\u2076': '^{6}',\r\n    '\\u2077': '^{7}',\r\n    '\\u2078': '^{8}',\r\n    '\\u2079': '^{9}',\r\n    '\\u207a': '^{+}',\r\n    '\\u207b': '^{-}',\r\n    '\\u207c': '^{=}',\r\n    '\\u207f': '^{n}',\r\n    '\\u2080': '_{0}',\r\n    '\\u2081': '_{1}',\r\n    '\\u2082': '_{2}',\r\n    '\\u2083': '_{3}',\r\n    '\\u2084': '_{4}',\r\n    '\\u2085': '_{5}',\r\n    '\\u2086': '_{6}',\r\n    '\\u2087': '_{7}',\r\n    '\\u2088': '_{8}',\r\n    '\\u2089': '_{9}',\r\n    '\\u208a': '_{+}',\r\n    '\\u208b': '_{-}',\r\n    '\\u208c': '_{=}',\r\n    '\\u2090': '_{a}',\r\n    '\\u2091': '_{e}',\r\n    '\\u2092': '_{o}',\r\n    '\\u2093': '_{x}',\r\n    '\\u2032': '\\\\prime',\r\n    '\\'': '\\\\prime',\r\n    '\\u2190': '\\\\gets',\r\n    '\\u2192': '\\\\to',\r\n    '\\u25b3': '\\\\triangle',\r\n    '\\u25bd': '\\\\triangledown',\r\n    '\\u220b': '\\\\owns',\r\n    '\\u2217': '\\\\ast',\r\n    '\\u2223': '\\\\vert',\r\n    '\\u2225': '\\\\Vert',\r\n    '\\u2227': '\\\\land',\r\n    '\\u2228': '\\\\lor',\r\n    '\\u22c5': '\\\\cdot',\r\n    '\\u22c8': '\\\\bowtie',\r\n    '\\u2260': '\\\\ne',\r\n    '\\u2264': '\\\\le',\r\n    '\\u2265': '\\\\ge',\r\n    '\\u22a5': '\\\\bot',\r\n    '\\u27f7': '\\\\biconditional',\r\n    '\\u27f8': '\\\\impliedby',\r\n    '\\u27f9': '\\\\implies',\r\n    '\\u2102': '\\\\C',\r\n    '\\u2115': '\\\\N',\r\n    '\\u2119': '\\\\P',\r\n    '\\u211a': '\\\\Q',\r\n    '\\u211d': '\\\\R',\r\n    '\\u2124': '\\\\Z',\r\n};\r\nconst FUNCTIONS = {};\r\nconst ENVIRONMENTS = {};\r\nconst MACROS = {\r\n    iff: '\\\\;\\u27fa\\\\;',\r\n    nicefrac: '^{#1}\\\\!\\\\!/\\\\!_{#2}',\r\n    // From bracket.sty, Dirac notation\r\n    bra: '\\\\mathinner{\\\\langle{#1}|}',\r\n    ket: '\\\\mathinner{|{#1}\\\\rangle}',\r\n    braket: '\\\\mathinner{\\\\langle{#1}\\\\rangle}',\r\n    set: '\\\\mathinner{\\\\lbrace #1 \\\\rbrace}',\r\n    Bra: '\\\\left\\\\langle #1\\\\right|',\r\n    Ket: '\\\\left|#1\\\\right\\\\rangle',\r\n    Braket: '\\\\left\\\\langle{#1}\\\\right\\\\rangle',\r\n    Set: '\\\\left\\\\lbrace #1 \\\\right\\\\rbrace',\r\n    // Proof Wiki\r\n    rd: '\\\\mathrm{d}',\r\n    rD: '\\\\mathrm{D}',\r\n    // From Wolfram Alpha\r\n    doubleStruckCapitalN: '\\\\mathbb{N}',\r\n    doubleStruckCapitalR: '\\\\mathbb{R}',\r\n    doubleStruckCapitalQ: '\\\\mathbb{Q}',\r\n    doubleStruckCapitalZ: '\\\\mathbb{Z}',\r\n    doubleStruckCapitalP: '\\\\mathbb{P}',\r\n    scriptCapitalE: '\\\\mathscr{E}',\r\n    scriptCapitalH: '\\\\mathscr{H}',\r\n    scriptCapitalL: '\\\\mathscr{L}',\r\n    gothicCapitalC: '\\\\mathfrak{C}',\r\n    gothicCapitalH: '\\\\mathfrak{H}',\r\n    gothicCapitalI: '\\\\mathfrak{I}',\r\n    gothicCapitalR: '\\\\mathfrak{R}',\r\n    imaginaryI: '\\\\mathrm{i}',\r\n    imaginaryJ: '\\\\mathrm{j}',\r\n    exponentialE: '\\\\mathrm{e}',\r\n    differentialD: '\\\\mathrm{d}',\r\n    capitalDifferentialD: '\\\\mathrm{D}',\r\n};\r\nconst RIGHT_DELIM = {\r\n    '(': ')',\r\n    '{': '}',\r\n    '[': ']',\r\n    '|': '|',\r\n    '\\\\lbrace': '\\\\rbrace',\r\n    '\\\\{': '\\\\}',\r\n    '\\\\langle': '\\\\rangle',\r\n    '\\\\lfloor': '\\\\rfloor',\r\n    '\\\\lceil': '\\\\rceil',\r\n    '\\\\vert': '\\\\vert',\r\n    '\\\\lvert': '\\\\rvert',\r\n    '\\\\Vert': '\\\\Vert',\r\n    '\\\\lVert': '\\\\rVert',\r\n    '\\\\lbrack': '\\\\rbrack',\r\n    '\\\\ulcorner': '\\\\urcorner',\r\n    '\\\\llcorner': '\\\\lrcorner',\r\n    '\\\\lgroup': '\\\\rgroup',\r\n    '\\\\lmoustache': '\\\\rmoustache',\r\n};\r\n// Body-text symbols\r\n// See http://ctan.mirrors.hoobly.com/info/symbols/comprehensive/symbols-a4.pdf, p14\r\nconst TEXT_SYMBOLS = {\r\n    '\\\\#': '\\u0023',\r\n    '\\\\&': '\\u0026',\r\n    '\\\\$': '$',\r\n    '\\\\%': '%',\r\n    '\\\\_': '_',\r\n    '\\\\euro': '\\u20AC',\r\n    '\\\\maltese': '\\u2720',\r\n    '\\\\{': '{',\r\n    '\\\\}': '}',\r\n    '\\\\nobreakspace': '\\u00A0',\r\n    '\\\\ldots': '\\u2026',\r\n    '\\\\textellipsis': '\\u2026',\r\n    '\\\\backslash': '\\\\',\r\n    '`': '\\u2018',\r\n    \"'\": '\\u2019',\r\n    '``': '\\u201c',\r\n    \"''\": '\\u201d',\r\n    '\\\\degree': '\\u00b0',\r\n    '\\\\textasciicircum': '^',\r\n    '\\\\textasciitilde': '~',\r\n    '\\\\textasteriskcentered': '*',\r\n    '\\\\textbackslash': '\\\\',\r\n    '\\\\textbraceleft': '{',\r\n    '\\\\textbraceright': '}',\r\n    '\\\\textbullet': '•',\r\n    '\\\\textdollar': '$',\r\n    '\\\\textsterling': '£',\r\n    '\\\\textdagger': '\\u2020',\r\n    '\\\\textdaggerdbl': '\\u2021',\r\n    '–': '\\u2013',\r\n    '—': '\\u2014',\r\n    '‘': '\\u2018',\r\n    '’': '\\u2019',\r\n    '“': '\\u201C',\r\n    '”': '\\u201D',\r\n    '\"': '\\u201D',\r\n    '\\\\ss': '\\u00df',\r\n    '\\\\ae': '\\u00E6',\r\n    '\\\\oe': '\\u0153',\r\n    '\\\\AE': '\\u00c6',\r\n    '\\\\OE': '\\u0152',\r\n    '\\\\O': '\\u00d8',\r\n    '\\\\i': '\\u0131',\r\n    '\\\\j': '\\u0237',\r\n    '\\\\aa': '\\u00e5',\r\n    '\\\\AA': '\\u00c5',\r\n};\r\nconst COMMAND_MODE_CHARACTERS = /[a-zA-Z0-9!@*()-=+{}[\\]\\\\';:?/.,~<>`|'$%#&^_\" ]/;\r\n// Word boundaries for Cyrillic, Polish, French, German, Italian\r\n// and Spanish. We use \\p{L} (Unicode property escapes: \"Letter\")\r\n// but Firefox doesn't support it\r\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1361876). Booo...\r\n// See also https://stackoverflow.com/questions/26133593/using-regex-to-match-international-unicode-alphanumeric-characters-in-javascript\r\nconst LETTER = typeof navigator !== 'undefined' &&\r\n    /firefox|edge|Trident/i.test(navigator.userAgent)\r\n    ? /[a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/\r\n    : new RegExp('\\\\p{Letter}', 'u');\r\nconst LETTER_AND_DIGITS = typeof navigator !== 'undefined' &&\r\n    /firefox|edge|Trident/i.test(navigator.userAgent)\r\n    ? /[0-9a-zA-ZаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяĄąĆćĘęŁłŃńÓóŚśŹźŻżàâäôéèëêïîçùûüÿæœÀÂÄÔÉÈËÊÏÎŸÇÙÛÜÆŒäöüßÄÖÜẞàèéìíîòóùúÀÈÉÌÍÎÒÓÙÚáéíñóúüÁÉÍÑÓÚÜ]/\r\n    : new RegExp('[0-9\\\\p{Letter}]', 'u');\r\n/**\r\n * @param symbol    The LaTeX command for this symbol, for\r\n * example `\\alpha` or `+`\r\n */\r\nfunction defineSymbol(symbol, value, type = 'mord', variant = '') {\r\n    MATH_SYMBOLS[symbol] = {\r\n        type,\r\n        variant,\r\n        value,\r\n    };\r\n    if (!REVERSE_MATH_SYMBOLS[value] && !variant) {\r\n        REVERSE_MATH_SYMBOLS[value] = symbol;\r\n    }\r\n    // We accept all math symbols in text mode as well\r\n    // which is a bit more permissive than TeX\r\n    TEXT_SYMBOLS[symbol] = value;\r\n}\r\n/**\r\n * Define a set of single-character symbols as 'mord' symbols.\r\n * @param string a string of single character symbols\r\n */\r\nfunction defineSymbols(string) {\r\n    for (let i = 0; i < string.length; i++) {\r\n        const ch = string.charAt(i);\r\n        defineSymbol(ch, ch);\r\n    }\r\n}\r\n/**\r\n * Define a set of single-character symbols as a range of Unicode codepoints\r\n * @param from First Unicode codepoint\r\n * @param to Last Unicode codepoint\r\n */\r\nfunction defineSymbolRange(from, to) {\r\n    for (let i = from; i <= to; i++) {\r\n        const ch = String.fromCodePoint(i);\r\n        defineSymbol(ch, ch);\r\n    }\r\n}\r\n/**\r\n * Given a character, return a LaTeX expression matching its Unicode codepoint.\r\n * If there is a matching symbol (e.g. \\alpha) it is returned.\r\n */\r\nfunction charToLatex(parseMode, s) {\r\n    if (parseMode === 'math') {\r\n        return REVERSE_MATH_SYMBOLS[s] || s;\r\n    }\r\n    if (parseMode === 'text') {\r\n        let textSymbol = Object.keys(TEXT_SYMBOLS).find((x) => TEXT_SYMBOLS[x] === s);\r\n        if (!textSymbol) {\r\n            const hex = s.codePointAt(0).toString(16);\r\n            textSymbol = '^'.repeat(hex.length) + hex;\r\n        }\r\n        return textSymbol;\r\n    }\r\n    return s;\r\n}\r\n/* Some symbols in the MATHEMATICAL ALPHANUMERICAL SYMBOLS block had\r\n   been previously defined in other blocks. Remap them */\r\nconst MATH_LETTER_EXCEPTIONS = {\r\n    0x1d455: 0x0210e,\r\n    0x1d49d: 0x0212c,\r\n    0x1d4a0: 0x02130,\r\n    0x1d4a1: 0x02131,\r\n    0x1d4a3: 0x0210b,\r\n    0x1d4a4: 0x02110,\r\n    0x1d4a7: 0x02112,\r\n    0x1d4a8: 0x02133,\r\n    0x1d4ad: 0x0211b,\r\n    0x1d4ba: 0x0212f,\r\n    0x1d4bc: 0x0210a,\r\n    0x1d4c4: 0x02134,\r\n    0x1d506: 0x0212d,\r\n    0x1d50b: 0x0210c,\r\n    0x1d50c: 0x02111,\r\n    0x1d515: 0x0211c,\r\n    0x1d51d: 0x02128,\r\n    0x1d53a: 0x02102,\r\n    0x1d53f: 0x0210d,\r\n    0x1d545: 0x02115,\r\n    0x1d547: 0x02119,\r\n    0x1d548: 0x0211a,\r\n    0x1d549: 0x0211d,\r\n    0x1d551: 0x02124,\r\n};\r\nconst MATH_UNICODE_BLOCKS = [\r\n    { start: 0x1d400, len: 26, offset: 65, style: 'bold' },\r\n    { start: 0x1d41a, len: 26, offset: 97, style: 'bold' },\r\n    { start: 0x1d434, len: 26, offset: 65, style: 'italic' },\r\n    { start: 0x1d44e, len: 26, offset: 97, style: 'italic' },\r\n    { start: 0x1d468, len: 26, offset: 65, style: 'bolditalic' },\r\n    { start: 0x1d482, len: 26, offset: 97, style: 'bolditalic' },\r\n    { start: 0x1d49c, len: 26, offset: 65, variant: 'script' },\r\n    { start: 0x1d4b6, len: 26, offset: 97, variant: 'script' },\r\n    { start: 0x1d4d0, len: 26, offset: 65, variant: 'script', style: 'bold' },\r\n    { start: 0x1d4ea, len: 26, offset: 97, variant: 'script', style: 'bold' },\r\n    { start: 0x1d504, len: 26, offset: 65, variant: 'fraktur' },\r\n    { start: 0x1d51e, len: 26, offset: 97, variant: 'fraktur' },\r\n    { start: 0x1d56c, len: 26, offset: 65, variant: 'fraktur', style: 'bold' },\r\n    { start: 0x1d586, len: 26, offset: 97, variant: 'fraktur', style: 'bold' },\r\n    { start: 0x1d538, len: 26, offset: 65, variant: 'double-struck' },\r\n    { start: 0x1d552, len: 26, offset: 97, variant: 'double-struck' },\r\n    { start: 0x1d5a0, len: 26, offset: 65, variant: 'sans-serif' },\r\n    { start: 0x1d5ba, len: 26, offset: 97, variant: 'sans-serif' },\r\n    {\r\n        start: 0x1d5d4,\r\n        len: 26,\r\n        offset: 65,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d5ee,\r\n        len: 26,\r\n        offset: 97,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d608,\r\n        len: 26,\r\n        offset: 65,\r\n        variant: 'sans-serif',\r\n        style: 'italic',\r\n    },\r\n    {\r\n        start: 0x1d622,\r\n        len: 26,\r\n        offset: 97,\r\n        variant: 'sans-serif',\r\n        style: 'italic',\r\n    },\r\n    {\r\n        start: 0x1d63c,\r\n        len: 26,\r\n        offset: 65,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n    {\r\n        start: 0x1d656,\r\n        len: 26,\r\n        offset: 97,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n    { start: 0x1d670, len: 26, offset: 65, variant: 'monospace' },\r\n    { start: 0x1d68a, len: 26, offset: 97, variant: 'monospace' },\r\n    { start: 0x1d6a8, len: 25, offset: 0x391, style: 'bold' },\r\n    { start: 0x1d6c2, len: 25, offset: 0x3b1, style: 'bold' },\r\n    { start: 0x1d6e2, len: 25, offset: 0x391, style: 'italic' },\r\n    { start: 0x1d6fc, len: 25, offset: 0x3b1, style: 'italic' },\r\n    { start: 0x1d71c, len: 25, offset: 0x391, style: 'bolditalic' },\r\n    { start: 0x1d736, len: 25, offset: 0x3b1, style: 'bolditalic' },\r\n    {\r\n        start: 0x1d756,\r\n        len: 25,\r\n        offset: 0x391,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d770,\r\n        len: 25,\r\n        offset: 0x3b1,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    {\r\n        start: 0x1d790,\r\n        len: 25,\r\n        offset: 0x391,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n    {\r\n        start: 0x1d7aa,\r\n        len: 25,\r\n        offset: 0x3b1,\r\n        variant: 'sans-serif',\r\n        style: 'bolditalic',\r\n    },\r\n    { start: 0x1d7ce, len: 10, offset: 48, variant: '', style: 'bold' },\r\n    { start: 0x1d7d8, len: 10, offset: 48, variant: 'double-struck' },\r\n    { start: 0x1d7e3, len: 10, offset: 48, variant: 'sans-serif' },\r\n    {\r\n        start: 0x1d7ec,\r\n        len: 10,\r\n        offset: 48,\r\n        variant: 'sans-serif',\r\n        style: 'bold',\r\n    },\r\n    { start: 0x1d7f6, len: 10, offset: 48, variant: 'monospace' },\r\n];\r\nfunction unicodeToMathVariant(codepoint) {\r\n    var _a;\r\n    if ((codepoint < 0x1d400 || codepoint > 0x1d7ff) &&\r\n        (codepoint < 0x2100 || codepoint > 0x214f)) {\r\n        return { char: String.fromCodePoint(codepoint) };\r\n    }\r\n    // Handle the 'gap' letters by converting them back into their logical range\r\n    for (const c in MATH_LETTER_EXCEPTIONS) {\r\n        if (Object.prototype.hasOwnProperty.call(MATH_LETTER_EXCEPTIONS, c)) {\r\n            if (MATH_LETTER_EXCEPTIONS[c] === codepoint) {\r\n                codepoint = (_a = c.codePointAt(0)) !== null && _a !== void 0 ? _a : 0;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i < MATH_UNICODE_BLOCKS.length; i++) {\r\n        if (codepoint >= MATH_UNICODE_BLOCKS[i].start &&\r\n            codepoint <\r\n                MATH_UNICODE_BLOCKS[i].start + MATH_UNICODE_BLOCKS[i].len) {\r\n            return {\r\n                char: String.fromCodePoint(codepoint -\r\n                    MATH_UNICODE_BLOCKS[i].start +\r\n                    MATH_UNICODE_BLOCKS[i].offset),\r\n                variant: MATH_UNICODE_BLOCKS[i].variant,\r\n                style: MATH_UNICODE_BLOCKS[i].style,\r\n            };\r\n        }\r\n    }\r\n    return { char: String.fromCodePoint(codepoint) };\r\n}\r\n/**\r\n * Given a character and variant ('double-struck', 'fraktur', etc...)\r\n * return the corresponding unicode character (a string)\r\n */\r\nfunction mathVariantToUnicode(char, variant, style) {\r\n    if (!/[A-Za-z0-9]/.test(char))\r\n        return char;\r\n    if (!variant && !style)\r\n        return char;\r\n    const codepoint = char.codePointAt(0);\r\n    for (let i = 0; i < MATH_UNICODE_BLOCKS.length; i++) {\r\n        if (!variant || MATH_UNICODE_BLOCKS[i].variant === variant) {\r\n            if (!style || MATH_UNICODE_BLOCKS[i].style === style) {\r\n                if (codepoint >= MATH_UNICODE_BLOCKS[i].offset &&\r\n                    codepoint <\r\n                        MATH_UNICODE_BLOCKS[i].offset +\r\n                            MATH_UNICODE_BLOCKS[i].len) {\r\n                    const result = MATH_UNICODE_BLOCKS[i].start +\r\n                        codepoint -\r\n                        MATH_UNICODE_BLOCKS[i].offset;\r\n                    return String.fromCodePoint(MATH_LETTER_EXCEPTIONS[result] || result);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return char;\r\n}\r\nfunction unicodeCharToLatex(parseMode, char) {\r\n    if (parseMode === 'text') {\r\n        return charToLatex(parseMode, char) || char;\r\n    }\r\n    let result;\r\n    // Codepoint shortcuts have priority over variants\r\n    // That is, \"\\N\" vs \"\\mathbb{N}\"\r\n    // if (CODEPOINT_SHORTCUTS[cp]) return CODEPOINT_SHORTCUTS[cp];\r\n    result = charToLatex(parseMode, char);\r\n    if (result)\r\n        return result;\r\n    const cp = char.codePointAt(0);\r\n    const v = unicodeToMathVariant(cp);\r\n    if (!v.style && !v.variant)\r\n        return '';\r\n    result = v.char;\r\n    if (v.variant) {\r\n        result = '\\\\' + v.variant + '{' + result + '}';\r\n    }\r\n    if (v.style === 'bold') {\r\n        result = '\\\\mathbf{' + result + '}';\r\n    }\r\n    else if (v.style === 'italic') {\r\n        result = '\\\\mathit{' + result + '}';\r\n    }\r\n    else if (v.style === 'bolditalic') {\r\n        result = '\\\\mathbfit{' + result + '}';\r\n    }\r\n    return '\\\\mathord{' + result + '}';\r\n}\r\nfunction unicodeStringToLatex(parseMode, s) {\r\n    let result = '';\r\n    let needSpace = false;\r\n    for (const c of s) {\r\n        if (needSpace) {\r\n            if (parseMode === 'text') {\r\n                result += '{}';\r\n            }\r\n            else {\r\n                result += ' ';\r\n            }\r\n        }\r\n        needSpace = false;\r\n        const latex = unicodeCharToLatex(parseMode, c);\r\n        if (latex) {\r\n            result += latex;\r\n            needSpace = /\\\\[a-zA-Z0-9]+\\*?$/.test(latex);\r\n        }\r\n        else {\r\n            result += c;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Gets the value of a symbol in math mode\r\n */\r\nfunction getValue(symbol) {\r\n    var _a, _b;\r\n    return (_b = (_a = MATH_SYMBOLS[symbol]) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : symbol;\r\n}\r\nfunction emit(symbol, parent, atom, emitFn) {\r\n    var _a, _b, _c;\r\n    console.assert(Boolean(atom));\r\n    console.assert(Boolean(symbol), 'Missing command for ', atom.body);\r\n    if ((_a = FUNCTIONS[symbol]) === null || _a === void 0 ? void 0 : _a.emit) {\r\n        return FUNCTIONS[symbol].emit(symbol, parent, atom, emitFn);\r\n    }\r\n    if (MATH_SYMBOLS[symbol] || TEXT_SYMBOLS[symbol]) {\r\n        return symbol;\r\n    }\r\n    if (atom.body && ((_c = (_b = FUNCTIONS[symbol]) === null || _b === void 0 ? void 0 : _b.params) === null || _c === void 0 ? void 0 : _c.length) === 1) {\r\n        return symbol + '{' + emitFn(atom, atom.body) + '}';\r\n    }\r\n    // No custom emit function provided, return an escaped version of the symbol\r\n    const hex = symbol.codePointAt(0).toString(16);\r\n    return '^'.repeat(hex.length) + hex;\r\n}\r\nfunction getEnvironmentDefinition(name) {\r\n    var _a;\r\n    return (_a = ENVIRONMENTS[name]) !== null && _a !== void 0 ? _a : null;\r\n}\r\n/**\r\n * @param symbol    A command (e.g. '\\alpha') or a character (e.g. 'a')\r\n * @param parseMode One of 'math' or 'text'\r\n * @param macros A macros dictionary\r\n * @return {object} An info structure about the symbol, or null\r\n */\r\nfunction getInfo(symbol, parseMode, macros) {\r\n    if (!symbol || symbol.length === 0)\r\n        return null;\r\n    let info = null;\r\n    if (symbol.charAt(0) === '\\\\') {\r\n        // This could be a function or a symbol\r\n        info = FUNCTIONS[symbol];\r\n        if (info) {\r\n            // We've got a match\r\n            return info;\r\n        }\r\n        // It wasn't a function, maybe it's a symbol?\r\n        if (parseMode === 'math') {\r\n            info = MATH_SYMBOLS[symbol];\r\n        }\r\n        else if (TEXT_SYMBOLS[symbol]) {\r\n            info = { value: TEXT_SYMBOLS[symbol] };\r\n        }\r\n        if (!info) {\r\n            // Maybe it's a macro\r\n            const command = symbol.slice(1);\r\n            if (macros === null || macros === void 0 ? void 0 : macros[command]) {\r\n                let def = macros[command];\r\n                if (typeof def === 'object') {\r\n                    def = def.def;\r\n                }\r\n                let argCount = 0;\r\n                // Let's see if there are arguments in the definition.\r\n                if (/(^|[^\\\\])#1/.test(def))\r\n                    argCount = 1;\r\n                if (/(^|[^\\\\])#2/.test(def))\r\n                    argCount = 2;\r\n                if (/(^|[^\\\\])#3/.test(def))\r\n                    argCount = 3;\r\n                if (/(^|[^\\\\])#4/.test(def))\r\n                    argCount = 4;\r\n                if (/(^|[^\\\\])#5/.test(def))\r\n                    argCount = 5;\r\n                if (/(^|[^\\\\])#6/.test(def))\r\n                    argCount = 6;\r\n                if (/(^|[^\\\\])#7/.test(def))\r\n                    argCount = 7;\r\n                if (/(^|[^\\\\])#8/.test(def))\r\n                    argCount = 8;\r\n                if (/(^|[^\\\\])#9/.test(def))\r\n                    argCount = 9;\r\n                info = {\r\n                    type: 'group',\r\n                    mode: 'math',\r\n                    params: [],\r\n                    infix: false,\r\n                };\r\n                while (argCount >= 1) {\r\n                    info.params.push({\r\n                        isOptional: false,\r\n                        type: 'math',\r\n                    });\r\n                    argCount -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (parseMode === 'math') {\r\n            info = MATH_SYMBOLS[symbol];\r\n        }\r\n        else if (TEXT_SYMBOLS[symbol]) {\r\n            info = { value: TEXT_SYMBOLS[symbol] };\r\n        }\r\n        else if (parseMode === 'text') {\r\n            info = { value: symbol };\r\n        }\r\n    }\r\n    // Special case `f`, `g` and `h` are recognized as functions.\r\n    if (info &&\r\n        info.type === 'mord' &&\r\n        (info.value === 'f' || info.value === 'g' || info.value === 'h')) {\r\n        info.isFunction = true;\r\n    }\r\n    return info;\r\n}\r\n/**\r\n * Return an array of suggestion for completing string 's'.\r\n * For example, for 'si', it could return ['sin', 'sinh', 'sim', 'simeq', 'sigma']\r\n * Infix operators are excluded, since they are deprecated commands.\r\n */\r\nfunction suggest(s) {\r\n    if (s.length <= 1)\r\n        return [];\r\n    const result = [];\r\n    // Iterate over items in the dictionary\r\n    for (const p in FUNCTIONS) {\r\n        if (Object.prototype.hasOwnProperty.call(FUNCTIONS, p)) {\r\n            if (p.startsWith(s) && !FUNCTIONS[p].infix) {\r\n                result.push({ match: p, frequency: FUNCTIONS[p].frequency });\r\n            }\r\n        }\r\n    }\r\n    for (const p in MATH_SYMBOLS) {\r\n        if (Object.prototype.hasOwnProperty.call(MATH_SYMBOLS, p)) {\r\n            if (p.startsWith(s)) {\r\n                result.push({ match: p, frequency: MATH_SYMBOLS[p].frequency });\r\n            }\r\n        }\r\n    }\r\n    result.sort((a, b) => {\r\n        if (a.frequency === b.frequency) {\r\n            return a.match.length - b.match.length;\r\n        }\r\n        return (b.frequency || 0) - (a.frequency || 0);\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * An argument template has the following syntax:\r\n *\r\n * <placeholder>:<type>\r\n *\r\n * where\r\n * - <placeholder> is a string whose value is displayed when the argument\r\n *   is missing\r\n * - <type> is one of 'string', 'color', 'dimen', 'auto', 'text', 'math'\r\n *\r\n */\r\nfunction parseParamTemplateArgument(argTemplate) {\r\n    let type = 'auto';\r\n    // Parse the type (:type)\r\n    const r = argTemplate.match(/:([^=]+)/);\r\n    if (r)\r\n        type = r[1].trim();\r\n    return type;\r\n}\r\nfunction parseParamTemplate(paramTemplate) {\r\n    if (!paramTemplate)\r\n        return [];\r\n    let result = [];\r\n    let params = paramTemplate.split(']');\r\n    if (params[0].charAt(0) === '[') {\r\n        // We found at least one optional parameter.\r\n        result.push({\r\n            isOptional: true,\r\n            type: parseParamTemplateArgument(params[0].slice(1)),\r\n        });\r\n        // Parse the rest\r\n        for (let i = 1; i <= params.length; i++) {\r\n            result = result.concat(parseParamTemplate(params[i]));\r\n        }\r\n    }\r\n    else {\r\n        params = paramTemplate.split('}');\r\n        if (params[0].charAt(0) === '{') {\r\n            // We found a required parameter\r\n            result.push({\r\n                isOptional: false,\r\n                type: parseParamTemplateArgument(params[0].slice(1)),\r\n            });\r\n            // Parse the rest\r\n            for (let i = 1; i <= params.length; i++) {\r\n                result = result.concat(parseParamTemplate(params[i]));\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * If possible, i.e. if they are all simple atoms, return a string made up of\r\n * their body\r\n */\r\nfunction parseArgAsString(atoms) {\r\n    let result = '';\r\n    let success = true;\r\n    atoms.forEach((atom) => {\r\n        if (typeof atom.body === 'string') {\r\n            result += atom.body;\r\n        }\r\n        else {\r\n            success = false;\r\n        }\r\n    });\r\n    return success ? result : '';\r\n}\r\n/**\r\n * Define one or more environments to be used with\r\n *         \\begin{<env-name>}...\\end{<env-name>}.\r\n *\r\n * @param params The number and type of required and optional parameters.\r\n */\r\nfunction defineEnvironment(names, params, parser, isTabular = false) {\r\n    if (typeof names === 'string') {\r\n        names = [names];\r\n    }\r\n    const parsedParams = parseParamTemplate(params);\r\n    // Set default values of functions\r\n    const data = {\r\n        tabular: isTabular,\r\n        // Params: the parameters for this function, an array of\r\n        // {optional, type}\r\n        params: parsedParams,\r\n        // Callback to parse the arguments\r\n        parser: parser,\r\n    };\r\n    for (const name of names) {\r\n        ENVIRONMENTS[name] = data;\r\n    }\r\n}\r\n/**\r\n * Like defineEnvironment, but for a tabular environment, i.e.\r\n * one whose content is in tabular mode, where '&' indicata a new column\r\n * and '\\\\' indicate a new row.\r\n */\r\nfunction defineTabularEnvironment(names, params, parser) {\r\n    defineEnvironment(names, params, parser, true);\r\n}\r\n/**\r\n * Define one of more functions.\r\n *\r\n * @param names\r\n * @param params The number and type of required and optional parameters.\r\n * For example: '{}' defines a single mandatory parameter\r\n * '[string]{auto}' defines two params, one optional, one required\r\n */\r\nfunction defineFunction(names, params, options, parseFunction, emitFunction) {\r\n    if (typeof names === 'string') {\r\n        names = [names];\r\n    }\r\n    if (!options)\r\n        options = {};\r\n    // Set default values of functions\r\n    const data = {\r\n        // The parameters for this function, an array of\r\n        // {optional, type}\r\n        params: parseParamTemplate(params),\r\n        mode: options.mode,\r\n        infix: Boolean(options.infix),\r\n        parse: parseFunction,\r\n        emit: emitFunction,\r\n    };\r\n    names.forEach((name) => {\r\n        FUNCTIONS['\\\\' + name] = data;\r\n    });\r\n}\n\nconst ACCENTS = {\r\n    acute: '\\u02ca',\r\n    grave: '\\u02cb',\r\n    dot: '\\u02d9',\r\n    ddot: '\\u00a8',\r\n    mathring: '\\u02da',\r\n    tilde: '\\u007e',\r\n    bar: '\\u02c9',\r\n    breve: '\\u02d8',\r\n    check: '\\u02c7',\r\n    hat: '\\u005e',\r\n    vec: '\\u20d7',\r\n};\r\ndefineFunction(Object.keys(ACCENTS), '{body:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'accent',\r\n        accent: ACCENTS[name.slice(1)],\r\n        limits: 'accent',\r\n        // supsub attachment and will delegate\r\n        // it to the decomposeAccent\r\n        // (any non-null value would do)\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction(['widehat', 'widecheck', 'widetilde'], '{body:auto}', null, (name, args) => {\r\n    const baseString = parseArgAsString(args[0]);\r\n    const accent = name.slice(1) +\r\n        (baseString.length > 5\r\n            ? '4'\r\n            : ['1', '1', '2', '2', '3', '3'][baseString.length]);\r\n    return {\r\n        type: 'accent',\r\n        svgAccent: accent,\r\n        limits: 'accent',\r\n        // supsub attachment and will delegate\r\n        // it to the decomposeAccent\r\n        // (any non-null value would do)\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('utilde', '{body:auto}', null, (_name, args) => {\r\n    const baseString = parseArgAsString(args[0]);\r\n    const accent = 'widetilde' +\r\n        (baseString.length > 5\r\n            ? '4'\r\n            : ['1', '1', '2', '2', '3', '3'][baseString.length]);\r\n    return {\r\n        type: 'overunder',\r\n        body: args[0],\r\n        svgBelow: accent,\r\n        skipBoundary: true,\r\n    };\r\n}, (_name, _parent, atom, emit) => `\\\\utilde{${emit(atom, atom.body)}}`);\r\n/*\r\n * From plain.tex\r\n *\r\n */\r\ndefineFunction('^', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? {\r\n                a: 'â',\r\n                e: 'ê',\r\n                i: 'î',\r\n                o: 'ô',\r\n                u: 'û',\r\n                A: 'Â',\r\n                E: 'Ê',\r\n                I: 'Î',\r\n                O: 'Ô',\r\n                U: 'Û',\r\n            }[args[0]] || '^'\r\n            : '^',\r\n    };\r\n});\r\ndefineFunction('`', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? {\r\n                a: 'à',\r\n                e: 'è',\r\n                i: 'ì',\r\n                o: 'ò',\r\n                u: 'ù',\r\n                A: 'À',\r\n                E: 'È',\r\n                I: 'Ì',\r\n                O: 'Ò',\r\n                U: 'Ù',\r\n            }[args[0]] || '`'\r\n            : '`',\r\n    };\r\n});\r\ndefineFunction(\"'\", '{:string}', {}, function (name, args) {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? {\r\n                a: 'á',\r\n                e: 'é',\r\n                i: 'í',\r\n                o: 'ó',\r\n                u: 'ú',\r\n                A: 'Á',\r\n                E: 'É',\r\n                I: 'Í',\r\n                O: 'Ó',\r\n                U: 'Ú',\r\n            }[args[0]] || '\\u005e'\r\n            : '\\u005e',\r\n    };\r\n});\r\ndefineFunction('~', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0]\r\n            ? { n: 'ñ', N: 'Ñ', a: 'ã', o: 'õ', A: 'Ã', O: 'Õ' }[args[0]] || '\\u00B4'\r\n            : '\\u00B4',\r\n    };\r\n});\r\ndefineFunction('c', '{:string}', {}, (_name, args) => {\r\n    return {\r\n        type: 'mord',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        isFunction: false,\r\n        body: args[0] ? { c: 'ç', C: 'Ç' }[args[0]] || '' : '',\r\n    };\r\n});\n\n// \\enclose, a MathJax extension mapping to the MathML `menclose` tag.\r\n// The first argument is a comma delimited list of notations, as defined\r\n// here: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/menclose\r\n// The second, optional, specifies the style to use for the notations.\r\ndefineFunction('enclose', '{notation:string}[style:string]{body:auto}', null, (_name, args) => {\r\n    var _a;\r\n    const result = {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        captureSelection: true,\r\n        body: args[2],\r\n    };\r\n    // Extract info from style string\r\n    if (args[1]) {\r\n        // Split the string by comma delimited sub-strings, ignoring commas\r\n        // that may be inside (). For example\"x, rgb(a, b, c)\" would return\r\n        // ['x', 'rgb(a, b, c)']\r\n        const styles = args[1].split(/,(?![^(]*\\)(?:(?:[^(]*\\)){2})*[^\"]*$)/);\r\n        for (const s of styles) {\r\n            const shorthand = s.match(/\\s*(\\S+)\\s+(\\S+)\\s+(.*)/);\r\n            if (shorthand) {\r\n                result.strokeWidth = convertDimenToPx(shorthand[1], 'px');\r\n                if (!isFinite(result.strokeWidth)) {\r\n                    result.strokeWidth = 1;\r\n                }\r\n                result.strokeStyle = shorthand[2];\r\n                result.strokeColor = shorthand[3];\r\n            }\r\n            else {\r\n                const attribute = s.match(/\\s*([a-z]*)\\s*=\\s*\"(.*)\"/);\r\n                if (attribute) {\r\n                    if (attribute[1] === 'mathbackground') {\r\n                        result.backgroundcolor = attribute[2];\r\n                    }\r\n                    else if (attribute[1] === 'mathcolor') {\r\n                        result.strokeColor = attribute[2];\r\n                    }\r\n                    else if (attribute[1] === 'padding') {\r\n                        result.padding = convertDimenToPx(attribute[2], 'px');\r\n                    }\r\n                    else if (attribute[1] === 'shadow') {\r\n                        result.shadow = attribute[2];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result.strokeStyle === 'dashed') {\r\n            result.svgStrokeStyle = '5,5';\r\n        }\r\n        else if (result.strokeStyle === 'dotted') {\r\n            result.svgStrokeStyle = '1,5';\r\n        }\r\n    }\r\n    result.borderStyle =\r\n        result.strokeWidth +\r\n            'px ' +\r\n            result.strokeStyle +\r\n            ' ' +\r\n            result.strokeColor;\r\n    // Normalize the list of notations.\r\n    result.notation = {};\r\n    ((_a = args[0]) !== null && _a !== void 0 ? _a : '')\r\n        .split(/[, ]/)\r\n        .filter((v) => v.length > 0)\r\n        .forEach((x) => {\r\n        result.notation[x.toLowerCase()] = true;\r\n    });\r\n    if (result.notation['updiagonalarrow']) {\r\n        result.notation['updiagonalstrike'] = false;\r\n    }\r\n    if (result.notation['box']) {\r\n        result.notation['left'] = false;\r\n        result.notation['right'] = false;\r\n        result.notation['bottom'] = false;\r\n        result.notation['top'] = false;\r\n    }\r\n    return result;\r\n});\r\ndefineFunction('cancel', '{body:auto}', null, function (_name, args) {\r\n    return {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        borderStyle: '1px solid currentColor',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        notation: { updiagonalstrike: true },\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('bcancel', '{body:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        borderStyle: '1px solid currentColor',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        notation: { downdiagonalstrike: true },\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('xcancel', '{body:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'enclose',\r\n        strokeColor: 'currentColor',\r\n        strokeWidth: 1,\r\n        strokeStyle: 'solid',\r\n        borderStyle: '1px solid currentColor',\r\n        backgroundcolor: 'transparent',\r\n        padding: 'auto',\r\n        shadow: 'auto',\r\n        notation: { updiagonalstrike: true, downdiagonalstrike: true },\r\n        body: args[0],\r\n    };\r\n});\n\n/*\r\n\nSee http://texdoc.net/texmf-dist/doc/latex/amsmath/amsldoc.pdf\r\n\n<columns> ::= <column>*<line>\r\n<column> ::= <line>('l'|'c'|'r')\r\n<line> ::= '|' | '||' | ''\r\n\n'math',\r\n                frequency 0\r\n'displaymath',\r\n                frequency 8\r\n\n'equation'      centered, numbered\r\n                frequency 8\r\n\n'subequations'   with an 'equation' environment, appends a letter to eq no\r\n                frequency 1\r\n\n'array',        {columns:text}\r\n                cells are textstyle math\r\n                no fence\r\n\n'eqnarray'      DEPRECATED see http://www.tug.org/pracjourn/2006-4/madsen/madsen.pdf\r\n                {rcl}\r\n                first and last cell in each row is displaystyle math\r\n                each cell has a margin of \\arraycolsep\r\n                Each line has a eqno\r\n                frequency 7\r\n\n\n'theorem'       text mode. Prepends in bold 'Theorem <counter>', then body in italics.\r\n\n'multline'      single column\r\n                first row left aligned, last right aligned, others centered\r\n                last line has an eqn. counter. multline* will omit the counter\r\n                no output if inside an equation\r\n                \n\n'gather'        at most two columns\r\n                first column centered, second column right aligned\r\n                frequency 1\r\n\n'gathered'      must be in equation environment\r\n                single column,\r\n                centered\r\n                frequency: COMMON\r\n                optional argument: [b], [t] to vertical align\r\n\n'align'        multiple columns,\r\n                alternating rl\r\n                there is some 'space' (additional column?) between each pair\r\n                each line is numbered (except when inside an equation environment)\r\n                there is an implicit {} at the beginning of left columns\r\n\n'aligned'      must be in equation environment\r\n                frequency: COMMON\r\n                @{}r@{}l@{\\quad}@{}r@{}l@{}\r\n\n'split'         must be in an equation environment,\r\n                two columns, additional columns are interpreted as line breaks\r\n                first column is right aligned, second column is left aligned\r\n                entire construct is numbered (as opposed to 'align' where each line is numbered)\r\n                frequency: 0\r\n\n\n'alignedat'\r\nFrom AMSMath:\r\n---The alignedat environment was changed to take two arguments rather\r\nthan one: a mandatory argument (as formerly) specifying the number of\r\nalign structures, and a new optional one specifying the placement of the\r\nenvironment (parallel to the optional argument of aligned). However,\r\naligned is simpler to use, allowing any number of aligned structures\r\nautomatically, and therefore the use of alignedat is deprecated.\r\n\n\n 'alignat'      {pairs:number}\r\n                {rl} alternating as many times as indicated by <pairs> arg\r\n                no space between column pairs (unlike align)\r\n                there is an implicit {} at the beginning of left columns\r\n                frequency: 0\r\n\n 'flalign'      multiple columns\r\n                alternate rl\r\n                third column further away than align...?\r\n                frequency: 0\r\n\n\n'matrix'        at most 10 columns\r\n                cells centered\r\n                no fence\r\n                no colsep at beginning or end\r\n                (mathtools package add an optional arg for the cell alignment)\r\n                frequency: COMMON\r\n\n'pmatrix'       fence: ()\r\n                frequency: COMMON\r\n\n'bmatrix'       fence: []\r\n                frequency: COMMON\r\n\n'Bmatrix'       fence: {}\r\n                frequency: 237\r\n\n'vmatrix'       fence: \\vert\r\n                frequency: 368\r\n\n'Vmatrix'       fence: \\Vert\r\n                frequency: 41\r\n\n'smallmatrix'   displaystyle: scriptstyle (?)\r\n                frequency: 279\r\n\n'cases'\r\n                frequency: COMMON\r\n                l@{2}l\r\n\n'center'        text mode only?\r\n                frequency: ?\r\n*/\r\n// See https://en.wikibooks.org/wiki/LaTeX/Mathematics\r\n// and http://www.ele.uri.edu/faculty/vetter/Other-stuff/latex/Mathmode.pdf\r\n/*\r\nThe star at the end of the name of a displayed math environment causes that\r\nthe formula lines won't be numbered. Otherwise they would automatically get a number.\r\n\n\\notag will also turn off the numbering.\r\n\\shoveright and \\shoveleft will force alignment of a line\r\n\nThe only difference between align and equation is the spacing of the formulas.\r\nYou should attempt to use equation when possible, and align when you have multi-line formulas.\r\nEquation will have space before/after < 1em if line before/after is short enough.\r\n\nAlso: equation throws an error when you have an & inside the environment,\r\nso look out for that when converting between the two.\r\n\n\n\nWhereas align produces a structure whose width is the full line width, aligned\r\ngives a width that is the actual width of the contents, thus it can be used as\r\na component in a containing expression, e.g. for putting the entire alignment\r\nin a parenthesis\r\n*/\r\ndefineEnvironment('math', '', () => {\r\n    return { mathstyle: 'textstyle' };\r\n});\r\ndefineEnvironment('displaymath', '', function () {\r\n    return { mathstyle: 'displaystyle' };\r\n});\r\n// defineEnvironment('text', '', {\r\n//     frequency: 0,\r\n//     }, function(name, args) {\r\n//     return {\r\n//         mathstyle: 'text',         // @todo: not quite right, not a style, a parsemode...\r\n//     };\r\n// });\r\ndefineTabularEnvironment('array', '{columns:colspec}', (_name, args) => {\r\n    return {\r\n        colFormat: args[0],\r\n        mathstyle: 'textstyle',\r\n    };\r\n});\r\ndefineTabularEnvironment(['equation', 'equation', 'subequations'], '', () => {\r\n    return {\r\n        colFormat: [{ align: 'c' }],\r\n    };\r\n});\r\n// Note spelling: MULTLINE, not multiline.\r\ndefineTabularEnvironment('multline', '', function () {\r\n    return {\r\n        colFormat: [{ align: 'm' }],\r\n    };\r\n});\r\n// An AMS-Math environment\r\n// See amsmath.dtx:3565\r\n// Note that some versions of AMS-Math have a gap on the left.\r\n// More recent version suppresses that gap, but have an option to turn it back on\r\n// for backward compatibility.\r\n// Note that technically, 'eqnarray' behaves (slightly) differently. However,\r\n// is is generally recommended to avoid using eqnarray and use align isntead.\r\n// https://texblog.net/latex-archive/maths/eqnarray-align-environment/\r\ndefineTabularEnvironment(['align', 'align*', 'aligned', 'eqnarray'], '', (_name, _args, array) => {\r\n    let colCount = 0;\r\n    for (const row of array) {\r\n        colCount = Math.max(colCount, row.length);\r\n    }\r\n    const colFormat = [\r\n        { gap: 0 },\r\n        { align: 'r' },\r\n        { gap: 0 },\r\n        { align: 'l' },\r\n    ];\r\n    let i = 2;\r\n    while (i < colCount) {\r\n        colFormat.push({ gap: 1 });\r\n        colFormat.push({ align: 'r' });\r\n        colFormat.push({ gap: 0 });\r\n        colFormat.push({ align: 'l' });\r\n        i += 2;\r\n    }\r\n    colFormat.push({ gap: 0 });\r\n    return {\r\n        arraycolsep: 0,\r\n        colFormat: colFormat,\r\n        jot: 0.3,\r\n    };\r\n});\r\n// defineEnvironment('alignat', '', function(name, args) {\r\n//     return {\r\n//     };\r\n// });\r\n// defineEnvironment('flalign', '', function(name, args) {\r\n//     return {\r\n//     };\r\n// });\r\ndefineTabularEnvironment('split', '', () => {\r\n    return { colFormat: [{ align: 'r' }, { align: 'l' }] };\r\n});\r\ndefineTabularEnvironment(['gather', 'gathered'], '', () => {\r\n    // An AMS-Math environment\r\n    // %    The \\env{gathered} environment is for several lines that are\r\n    // %    centered independently.\r\n    // From amstex.sty\r\n    // \\newenvironment{gathered}[1][c]{%\r\n    //   \\relax\\ifmmode\\else\\nonmatherr@{\\begin{gathered}}\\fi\r\n    //   \\null\\,%\r\n    //   \\if #1t\\vtop \\else \\if#1b\\vbox \\else \\vcenter \\fi\\fi\r\n    //   \\bgroup\\Let@\\restore@math@cr\r\n    //   \\ifinany@\\else\\openup\\jot\\fi\\ialign\r\n    //   \\bgroup\\hfil\\strut@$\\m@th\\displaystyle##$\\hfil\\crcr\r\n    return {\r\n        colFormat: [{ gap: 0.25 }, { align: 'c' }, { gap: 0 }],\r\n        jot: 0.3,\r\n    };\r\n});\r\n// defineEnvironment('cardinality', '',  function() {\r\n//     const result = {};\r\n//     result.mathstyle = 'textstyle';\r\n//     result.lFence = '|';\r\n//     result.rFence = '|';\r\n//     return result;\r\n// });\r\ndefineTabularEnvironment([\r\n    'matrix',\r\n    'pmatrix',\r\n    'bmatrix',\r\n    'Bmatrix',\r\n    'vmatrix',\r\n    'Vmatrix',\r\n    'smallmatrix',\r\n    'matrix*',\r\n    'pmatrix*',\r\n    'bmatrix*',\r\n    'Bmatrix*',\r\n    'vmatrix*',\r\n    'Vmatrix*',\r\n    'smallmatrix*',\r\n], '[columns:colspec]', (name, args) => {\r\n    var _a;\r\n    // From amstex.sty:\r\n    // \\def\\matrix{\\hskip -\\arraycolsep\\array{*\\c@MaxMatrixCols c}}\r\n    // \\def\\endmatrix{\\endarray \\hskip -\\arraycolsep}\r\n    const result = {};\r\n    result.mathstyle = 'textstyle';\r\n    switch (name) {\r\n        case 'pmatrix':\r\n        case 'pmatrix*':\r\n            result.leftDelim = '(';\r\n            result.rightDelim = ')';\r\n            break;\r\n        case 'bmatrix':\r\n        case 'bmatrix*':\r\n            result.leftDelim = '[';\r\n            result.rightDelim = ']';\r\n            break;\r\n        case 'Bmatrix':\r\n        case 'Bmatrix*':\r\n            result.leftDelim = '\\\\lbrace';\r\n            result.rightDelim = '\\\\rbrace';\r\n            break;\r\n        case 'vmatrix':\r\n        case 'vmatrix*':\r\n            result.leftDelim = '\\\\vert';\r\n            result.rightDelim = '\\\\vert';\r\n            break;\r\n        case 'Vmatrix':\r\n        case 'Vmatrix*':\r\n            result.leftDelim = '\\\\Vert';\r\n            result.rightDelim = '\\\\Vert';\r\n            break;\r\n        case 'smallmatrix':\r\n        case 'smallmatrix*':\r\n            result.mathstyle = 'scriptstyle';\r\n            break;\r\n        case 'matrix':\r\n        case 'matrix*':\r\n            // Specifying a fence, even a null fence,\r\n            // will prevent the insertion of an initial and final gap\r\n            result.leftDelim = '.';\r\n            result.rightDelim = '.';\r\n            break;\r\n    }\r\n    result.colFormat = (_a = args[0]) !== null && _a !== void 0 ? _a : [\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n        { align: 'c' },\r\n    ];\r\n    return result;\r\n});\r\ndefineTabularEnvironment('cases', '', () => {\r\n    // From amstex.sty:\r\n    // \\def\\cases{\\left\\{\\def\\arraystretch{1.2}\\hskip-\\arraycolsep\r\n    //   \\array{l@{\\quad}l}}\r\n    // \\def\\endcases{\\endarray\\hskip-\\arraycolsep\\right.}\r\n    // From amsmath.dtx\r\n    // \\def\\env@cases{%\r\n    //   \\let\\@ifnextchar\\new@ifnextchar\r\n    //   \\left\\lbrace\r\n    //   \\def\\arraystretch{1.2}%\r\n    //   \\array{@{}l@{\\quad}l@{}}%\r\n    return {\r\n        arraystretch: 1.2,\r\n        leftDelim: '\\\\lbrace',\r\n        rightDelim: '.',\r\n        colFormat: [{ align: 'l' }, { gap: 1 }, { align: 'l' }],\r\n    };\r\n});\r\n// This is a text mode environment\r\n/*\r\n\\begin{theorem}\r\nLet $f$ be a function whose derivative exists in every point, then $f$\r\nis a continuous function.\r\n\\end{theorem}\r\n*/\r\n// defineEnvironment('theorem', '', function () {\r\n//     return {};\r\n// });\r\ndefineEnvironment('center', '', function () {\r\n    return { colFormat: [{ align: 'c' }] };\r\n});\n\n// Extensible (horitontally stretchy) symbols\r\ndefineFunction([\r\n    'overrightarrow',\r\n    'overleftarrow',\r\n    'Overrightarrow',\r\n    'overleftharpoon',\r\n    'overrightharpoon',\r\n    'overleftrightarrow',\r\n    'overbrace',\r\n    'overlinesegment',\r\n    'overgroup',\r\n], '{:auto}', null, (name, args) => {\r\n    return {\r\n        type: 'overunder',\r\n        // The body is the argument of the command\r\n        body: args[0],\r\n        // Set the \"svgAbove\" to the name of a SVG object (which is the same\r\n        // as the command name)\r\n        svgAbove: name.slice(1),\r\n        skipBoundary: true,\r\n        limits: 'overunder',\r\n    };\r\n}, (name, _parent, atom, emit) => `${name}{${emit(atom, atom.body)}}`);\r\ndefineFunction([\r\n    'underrightarrow',\r\n    'underleftarrow',\r\n    'underleftrightarrow',\r\n    'underbrace',\r\n    'underlinesegment',\r\n    'undergroup',\r\n], '{:auto}', null, (name, args) => {\r\n    return {\r\n        type: 'overunder',\r\n        body: args[0],\r\n        // Set the \"svgBelow\" to the name of a SVG object (which is the same\r\n        // as the command name)\r\n        svgBelow: name.slice(1),\r\n        skipBoundary: true,\r\n        limits: 'overunder',\r\n    };\r\n}, (name, _parent, atom, emit) => `${name}{${emit(atom, atom.body)}}`);\r\ndefineFunction([\r\n    'xrightarrow',\r\n    'xleftarrow',\r\n    'xRightarrow',\r\n    'xLeftarrow',\r\n    'xleftharpoonup',\r\n    'xleftharpoondown',\r\n    'xrightharpoonup',\r\n    'xrightharpoondown',\r\n    'xlongequal',\r\n    'xtwoheadleftarrow',\r\n    'xtwoheadrightarrow',\r\n    'xleftrightarrow',\r\n    'xLeftrightarrow',\r\n    'xrightleftharpoons',\r\n    'xleftrightharpoons',\r\n    'xhookleftarrow',\r\n    'xhookrightarrow',\r\n    'xmapsto',\r\n    'xtofrom',\r\n    'xrightleftarrows',\r\n    'xrightequilibrium',\r\n    'xleftequilibrium',\r\n], '[:auto]{:auto}', null, (name, args) => {\r\n    // The overscript is optional, i.e. `\\xtofrom` is valid\r\n    let overscript = args[1];\r\n    if ((overscript === null || overscript === void 0 ? void 0 : overscript.length) === 0) {\r\n        overscript = null;\r\n    }\r\n    return {\r\n        type: 'overunder',\r\n        // Set the spacing type\r\n        mathtype: 'mrel',\r\n        // Set the \"svgBody\" to the name of a SVG object (which is the same\r\n        // as the command name)\r\n        svgBody: name.slice(1),\r\n        overscript: overscript,\r\n        underscript: args[0],\r\n    };\r\n}, (name, _parent, atom, emit) => name +\r\n    (typeof atom.underscript !== 'undefined'\r\n        ? `[${emit(atom, atom.underscript)}]`\r\n        : '') +\r\n    `{${emit(atom, atom.overscript)}}`);\n\ndefineFunction([\r\n    'arccos',\r\n    'arcsin',\r\n    'arctan',\r\n    'arctg',\r\n    'arcctg',\r\n    'arg',\r\n    'ch',\r\n    'cos',\r\n    'cosh',\r\n    'cot',\r\n    'coth',\r\n    'ctg',\r\n    'cth',\r\n    'cotg',\r\n    'csc',\r\n    'cosec',\r\n    'deg',\r\n    'dim',\r\n    'exp',\r\n    'hom',\r\n    'inf',\r\n    'ker',\r\n    'lg',\r\n    'lb',\r\n    'lg',\r\n    // Sometimes used as the log2\r\n    'ln',\r\n    'log',\r\n    'Pr',\r\n    'sec',\r\n    'sh',\r\n    'sin',\r\n    'sinh',\r\n    'sup',\r\n    'tan',\r\n    'tanh',\r\n    'tg',\r\n    'th',\r\n], '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'nolimits',\r\n        isSymbol: false,\r\n        isFunction: true,\r\n        body: name.slice(1),\r\n        variant: 'main',\r\n        variantStyle: 'up',\r\n    };\r\n});\r\ndefineFunction(['liminf', 'limsup'], '', null, (name) => {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'limits',\r\n        isSymbol: false,\r\n        body: { '\\\\liminf': 'lim inf', '\\\\limsup': 'lim sup' }[name],\r\n        variant: 'main',\r\n    };\r\n});\r\ndefineFunction(['lim', 'mod'], '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'limits',\r\n        isSymbol: false,\r\n        body: name.slice(1),\r\n        variant: 'main',\r\n    };\r\n});\r\n// With Limits\r\ndefineFunction(['det', 'max', 'min'], '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'limits',\r\n        isSymbol: false,\r\n        isFunction: true,\r\n        body: name.slice(1),\r\n        variant: 'main',\r\n    };\r\n});\r\n// Root\r\ndefineFunction('sqrt', '[index:auto]{radicand:auto}', null, (_name, args) => {\r\n    return {\r\n        type: 'surd',\r\n        body: args[1],\r\n        index: args[0],\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    let args = '';\r\n    if (typeof atom.index !== 'undefined') {\r\n        args += `[${emit(atom, atom.index)}]`;\r\n    }\r\n    args += `{${emit(atom, atom.body)}}`;\r\n    return name + args;\r\n});\r\n// Fractions\r\ndefineFunction(['frac', 'dfrac', 'tfrac', 'cfrac', 'binom', 'dbinom', 'tbinom'], '{numerator}{denominator}', null, (name, args) => {\r\n    const result = {\r\n        type: 'genfrac',\r\n        numer: args[0],\r\n        denom: args[1],\r\n        mathstyle: 'auto',\r\n    };\r\n    switch (name) {\r\n        case '\\\\dfrac':\r\n        case '\\\\frac':\r\n        case '\\\\tfrac':\r\n        case '\\\\cfrac':\r\n            result.hasBarLine = true;\r\n            break;\r\n        case '\\\\\\\\atopfrac':\r\n            result.hasBarLine = false;\r\n            break;\r\n        case '\\\\dbinom':\r\n        case '\\\\binom':\r\n        case '\\\\tbinom':\r\n            result.hasBarLine = false;\r\n            result.leftDelim = '(';\r\n            result.rightDelim = ')';\r\n            break;\r\n    }\r\n    switch (name) {\r\n        case '\\\\dfrac':\r\n        case '\\\\dbinom':\r\n            result.mathstyle = 'displaystyle';\r\n            break;\r\n        case '\\\\tfrac':\r\n        case '\\\\tbinom':\r\n            result.mathstyle = 'textstyle';\r\n            break;\r\n    }\r\n    if (name === '\\\\cfrac') {\r\n        result.continuousFraction = true;\r\n    }\r\n    return result;\r\n}, (name, _parent, atom, emit) => {\r\n    return `${name}{${emit(atom, atom.numer)}}{${emit(atom, atom.denom)}}`;\r\n});\r\ndefineFunction(['over', 'atop', 'choose'], '', { infix: true }, (name, args) => {\r\n    const numer = args[0];\r\n    const denom = args[1];\r\n    let hasBarLine = false;\r\n    let leftDelim = null;\r\n    let rightDelim = null;\r\n    switch (name) {\r\n        case '\\\\atop':\r\n            break;\r\n        case '\\\\over':\r\n            hasBarLine = true;\r\n            break;\r\n        case '\\\\choose':\r\n            hasBarLine = false;\r\n            leftDelim = '(';\r\n            rightDelim = ')';\r\n            break;\r\n        default:\r\n            throw new Error('Unrecognized genfrac command');\r\n    }\r\n    return {\r\n        type: 'genfrac',\r\n        numer: numer,\r\n        denom: denom,\r\n        hasBarLine: hasBarLine,\r\n        leftDelim: leftDelim,\r\n        rightDelim: rightDelim,\r\n        mathstyle: 'auto',\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    return `{${emit(atom, atom.numer)}${name} ${emit(atom, atom.denom)}}`;\r\n});\r\n// Slashed package\r\n/*\r\ndefineFunction('\\\\slashed'\r\n*/\r\ndefineFunction('pdiff', '{numerator}{denominator}', null, (_funcname, args) => {\r\n    return {\r\n        type: 'genfrac',\r\n        numer: args[0],\r\n        denom: args[1],\r\n        numerPrefix: '\\u2202',\r\n        denomPrefix: '\\u2202',\r\n        hasBarLine: true,\r\n        leftDelim: null,\r\n        rightDelim: null,\r\n        mathstyle: 'auto',\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    return `${name}{${emit(atom, atom.numer)}}{${emit(atom, atom.denom)}}`;\r\n});\r\n// Limits, symbols\r\ndefineFunction([\r\n    'sum',\r\n    'prod',\r\n    'bigcup',\r\n    'bigcap',\r\n    'coprod',\r\n    'bigvee',\r\n    'bigwedge',\r\n    'biguplus',\r\n    'bigotimes',\r\n    'bigoplus',\r\n    'bigodot',\r\n    'bigsqcup',\r\n    'smallint',\r\n    'intop',\r\n], '', null, (name) => {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'auto',\r\n        isSymbol: true,\r\n        variant: 'main',\r\n        body: {\r\n            coprod: '\\u2210',\r\n            bigvee: '\\u22c1',\r\n            bigwedge: '\\u22c0',\r\n            biguplus: '\\u2a04',\r\n            bigcap: '\\u22c2',\r\n            bigcup: '\\u22c3',\r\n            intop: '\\u222b',\r\n            prod: '\\u220f',\r\n            sum: '\\u2211',\r\n            bigotimes: '\\u2a02',\r\n            bigoplus: '\\u2a01',\r\n            bigodot: '\\u2a00',\r\n            bigsqcup: '\\u2a06',\r\n            smallint: '\\u222b',\r\n        }[name.slice(1)],\r\n    };\r\n});\r\n// No limits, symbols (i.e. display larger in 'display' mode, and\r\n// centered on the baseline)\r\nconst EXTENSIBLE_SYMBOLS = {\r\n    int: '\\u222b',\r\n    iint: '\\u222c',\r\n    iiint: '\\u222d',\r\n    oint: '\\u222e',\r\n    oiint: '\\u222f',\r\n    oiiint: '\\u2230',\r\n    intclockwise: '\\u2231',\r\n    varointclockwise: '\\u2232',\r\n    ointctrclockwise: '\\u2233',\r\n    intctrclockwise: '\\u2a11',\r\n    sqcup: '\\u2294',\r\n    sqcap: '\\u2293',\r\n    uplus: '\\u228e',\r\n    wr: '\\u2240',\r\n    amalg: '\\u2a3f',\r\n    Cap: '\\u22d2',\r\n    Cup: '\\u22d3',\r\n    doublecap: '\\u22d2',\r\n    doublecup: '\\u22d3',\r\n};\r\ndefineFunction(Object.keys(EXTENSIBLE_SYMBOLS), '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'nolimits',\r\n        isSymbol: true,\r\n        body: EXTENSIBLE_SYMBOLS[name.slice(1)],\r\n        variant: { '\\u22d2': 'ams', '\\u22d3': 'ams' }[EXTENSIBLE_SYMBOLS[name.slice(1)]],\r\n    };\r\n});\r\ndefineFunction(['Re', 'Im'], '', null, function (name) {\r\n    return {\r\n        type: 'mop',\r\n        limits: 'nolimits',\r\n        isSymbol: false,\r\n        isFunction: true,\r\n        body: { '\\\\Re': '\\u211c', '\\\\Im': '\\u2111' }[name],\r\n        variant: 'fraktur',\r\n    };\r\n});\r\ndefineFunction('middle', '{:delim}', null, function (name, args) {\r\n    return { type: 'delim', delim: args[0] };\r\n});\r\n// TODO\r\n// Some missing greek letters, but see https://reference.wolfram.com/language/tutorial/LettersAndLetterLikeForms.html\r\n// koppa, stigma, Sampi\r\n// See https://tex.stackexchange.com/questions/231878/accessing-archaic-greek-koppa-in-the-birkmult-document-class\r\n// Capital Alpha, etc...\r\n// Colon (ratio) (2236)\r\n// Review:\r\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula\r\n// https://reference.wolfram.com/language/tutorial/LettersAndLetterLikeForms.html\r\n// ftp://ftp.dante.de/tex-archive/info/symbols/comprehensive/symbols-a4.pdf\r\n// Media Wiki Reference\r\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula\r\n// MathJax Reference\r\n// http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands\r\n// http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm\r\n// LaTeX Reference\r\n// http://ctan.sharelatex.com/tex-archive/info/latex2e-help-texinfo/latex2e.html\r\n// iBooks Author/Pages\r\n// https://support.apple.com/en-au/HT202501\r\n// Mathematica Reference\r\n// https://reference.wolfram.com/language/tutorial/NamesOfSymbolsAndMathematicalObjects.html\r\n// https://reference.wolfram.com/language/guide/MathematicalTypesetting.html\r\n/*\r\n    * @todo \\sb (equivalent to _) $\\mathfrak{sl}\\sb 2$ frequency 184\r\n    * @todo \\sp (equivalent to ^) $\\mathfrak{sl}\\sp 2$ frequency 274\r\n    * \\intertext    frequency 0\r\n\n\n    See http://mirrors.ibiblio.org/CTAN/macros/latex/contrib/mathtools/mathtools.pdf\r\n\n*/\n\n/**\r\n * This module contains some color dictionaries and algorithms to\r\n * parse a string into a hex RGB color value.s\r\n * @summary   Parsing of color strings.\r\n */\r\n/*\r\n{\\color{apricot}\\blacksquare}{\\color{aquamarine}\\blacksquare}{\\color{bittersweet}\\blacksquare}{\\color{black}\\blacksquare}{\\color{blue}\\blacksquare}{\\color{blueGreen}\\blacksquare}{\\color{blueviolet}\\blacksquare}{\\color{brickred}\\blacksquare}{\\color{brown}\\blacksquare}{\\color{burntorange}\\blacksquare}{\\color{cadetblue}\\blacksquare}{\\color{carnationpink}\\blacksquare}{\\color{cerulean}\\blacksquare}{\\color{cornflowerblue}\\blacksquare}{\\color{cyan}\\blacksquare}{\\color{dandelion}\\blacksquare}{\\color{darkorchid}\\blacksquare}{\\color{emerald}\\blacksquare}{\\color{forestgreen}\\blacksquare}{\\color{fuchsia}\\blacksquare}{\\color{goldenrod}\\blacksquare}{\\color{gray}\\blacksquare}{\\color{green}\\blacksquare}{\\color{greenyellow}\\blacksquare}{\\color{junglegreen}\\blacksquare}{\\color{lavender}\\blacksquare}{\\color{limegreen}\\blacksquare}{\\color{magenta}\\blacksquare}{\\color{mahogany}\\blacksquare}{\\color{maroon}\\blacksquare}{\\color{melon}\\blacksquare}{\\color{midnightblue}\\blacksquare}{\\color{mulberry}\\blacksquare}{\\color{navyblue}\\blacksquare}{\\color{olivegreen}\\blacksquare}{\\color{orange}\\blacksquare}{\\color{orangered}\\blacksquare}{\\color{orchid}\\blacksquare}{\\color{peach}\\blacksquare}{\\color{periwinkle}\\blacksquare}{\\color{pinegreen}\\blacksquare}{\\color{plum}\\blacksquare}{\\color{processblue}\\blacksquare}{\\color{purple}\\blacksquare}{\\color{rawsienna}\\blacksquare}{\\color{red}\\blacksquare}{\\color{redorange}\\blacksquare}{\\color{redviolet}\\blacksquare}{\\color{rhodamine}\\blacksquare}{\\color{royalblue}\\blacksquare}{\\color{royalpurple}\\blacksquare}{\\color{rubinered}\\blacksquare}{\\color{salmon}\\blacksquare}{\\color{seagreen}\\blacksquare}{\\color{sepia}\\blacksquare}{\\color{skyblue}\\blacksquare}{\\color{springgreen}\\blacksquare}{\\color{tan}\\blacksquare}{\\color{tealblue}\\blacksquare}{\\color{thistle}\\blacksquare}{\\color{turquoise}\\blacksquare}{\\color{violet}\\blacksquare}{\\color{violetred}\\blacksquare}{\\color{white}\\blacksquare}{\\color{wildstrawberry}\\blacksquare}{\\color{yellow}\\blacksquare}{\\color{yellowgreen}\\blacksquare}{\\color{yelloworange}\\blacksquare}\r\n*/\r\n/**\r\n * First 10 predefined colors used for plotting by Mathematica.\r\n *\r\n * Also known as _indexed color scheme #97_.\r\n */\r\nconst MATHEMATICA_COLORS = {\r\n    m0: '#3f3d99',\r\n    m1: '#993d71',\r\n    m2: '#998b3d',\r\n    m3: '#3d9956',\r\n    m4: '#3d5a99',\r\n    m5: '#993d90',\r\n    m6: '#996d3d',\r\n    m7: '#43993d',\r\n    m8: '#3d7999',\r\n    m9: '#843d99',\r\n};\r\n// ColorData97 (Mathematica standard lines)\r\n// rgb(0.368417, 0.506779, 0.709798),       #5e81b5\r\n// rgb(0.880722, 0.611041, 0.142051),\r\n// rgb(0.560181, 0.691569, 0.194885),\r\n// rgb(0.922526, 0.385626, 0.209179),\r\n// rgb(0.528488, 0.470624, 0.701351),\r\n// rgb(0.772079, 0.431554, 0.102387),\r\n// rgb(0.363898, 0.618501, 0.782349),\r\n// rgb(1, 0.75, 0),\r\n// rgb(0.647624, 0.37816, 0.614037),\r\n// rgb(0.571589, 0.586483, 0.),\r\n// rgb(0.915, 0.3325, 0.2125),\r\n// rgb(0.40082222609352647, 0.5220066643438841, 0.85),\r\n// rgb(0.9728288904374106, 0.621644452187053, 0.07336199581899142),\r\n// rgb(0.736782672705901, 0.358, 0.5030266573755369),\r\n// rgb(0.28026441037696703, 0.715, 0.4292089322474965)\r\n// MathLab colors\r\n// '#0072bd' // [0, 0.4470, 0.7410]             blue\r\n// '#d95319' // [0.8500, 0.3250, 0.0980]        orange\r\n// '#edb120', // [0.9290, 0.6940, 0.1250]       yellow\r\n// '#7e2f8e', // [0.4940, 0.1840, 0.5560]       purple\r\n// '#77ac30', // [0.4660, 0.6740, 0.1880]       green\r\n// '#4dbeee', // [0.3010, 0.7450, 0.9330]       cyan\r\n// '#a2142f' // [0.6350, 0.0780, 0.1840]\t    dark red\r\n/* Area colors are most appropriate to color a large area */\r\nconst AREA_COLORS = [\r\n    '#d35d60',\r\n    '#7293cb',\r\n    '#e1974d',\r\n    '#84bb5d',\r\n    '#9066a7',\r\n    '#aD6a58',\r\n    '#f5a4ce',\r\n    '#fff590',\r\n    '#212121',\r\n    '#818787',\r\n    '#d4d5d2',\r\n    '#ffffff',\r\n];\r\n/* Line colors are most appropriate to color as a stroke color */\r\nconst LINE_COLORS = [\r\n    '#cc2428',\r\n    '#3769b1',\r\n    '#da7e30',\r\n    '#409852',\r\n    '#6b4c9a',\r\n    '#922426',\r\n    '#e7298a',\r\n    '#ffe907',\r\n    '#000000',\r\n    '#525055',\r\n    '#adafaa',\r\n    '#ffffff',\r\n];\r\n/**\r\n * 68 colors (+ white) known to dvips used in LaTeX.\r\n *\r\n * The color names are based on the names of the _Crayola Crayon_ box of\r\n * 64 crayons.\r\n *\r\n * See:\r\n * - {@link http://mirror.jmu.edu/pub/CTAN/systems/knuth/local/lib/colordvi.tex | ColorDVI.tex}\r\n * - {@link https://en.wikibooks.org/w/index.php?title=LaTeX/Colors | Wikibooks:LaTeX/Colors}\r\n */\r\nconst NAMED_COLORS = {\r\n    apricot: '#FBB982',\r\n    aquamarine: '#00B5BE',\r\n    bittersweet: '#C04F17',\r\n    black: '#221E1F',\r\n    blue: '#2D2F92',\r\n    bluegreen: '#00B3B8',\r\n    blueviolet: '#473992',\r\n    brickred: '#B6321C',\r\n    brown: '#792500',\r\n    burntorange: '#F7921D',\r\n    cadetblue: '#74729A',\r\n    carnationpink: '#F282B4',\r\n    cerulean: '#00A2E3',\r\n    cornflowerblue: '#41B0E4',\r\n    cyan: '#00AEEF',\r\n    dandelion: '#FDBC42',\r\n    darkorchid: '#A4538A',\r\n    emerald: '#00A99D',\r\n    forestgreen: '#009B55',\r\n    fuchsia: '#8C368C',\r\n    goldenrod: '#FFDF42',\r\n    gray: '#949698',\r\n    green: '#00A64F',\r\n    greenyellow: '#DFE674',\r\n    junglegreen: '#00A99A',\r\n    lavender: '#F49EC4',\r\n    limegreen: '#8DC73E',\r\n    magenta: '#EC008C',\r\n    mahogany: '#A9341F',\r\n    maroon: '#AF3235',\r\n    melon: '#F89E7B',\r\n    midnightblue: '#006795',\r\n    mulberry: '#A93C93',\r\n    navyblue: '#006EB8',\r\n    olivegreen: '#3C8031',\r\n    orange: '#F58137',\r\n    orangered: '#ED135A',\r\n    orchid: '#AF72B0',\r\n    peach: '#F7965A',\r\n    periwinkle: '#7977B8',\r\n    pinegreen: '#008B72',\r\n    plum: '#92268F',\r\n    processblue: '#00B0F0',\r\n    purple: '#99479B',\r\n    rawsienna: '#974006',\r\n    red: '#ED1B23',\r\n    redorange: '#F26035',\r\n    redviolet: '#A1246B',\r\n    rhodamine: '#EF559F',\r\n    royalblue: '#0071BC',\r\n    royalpurple: '#613F99',\r\n    rubinered: '#ED017D',\r\n    salmon: '#F69289',\r\n    seagreen: '#3FBC9D',\r\n    sepia: '#671800',\r\n    skyblue: '#46C5DD',\r\n    springgreen: '#C6DC67',\r\n    tan: '#DA9D76',\r\n    tealblue: '#00AEB3',\r\n    thistle: '#D883B7',\r\n    turquoise: '#00B4CE',\r\n    violet: '#58429B',\r\n    violetred: '#EF58A0',\r\n    white: '#FFFFFF',\r\n    wildstrawberry: '#EE2967',\r\n    yellow: '#FFF200',\r\n    yellowgreen: '#98CC70',\r\n    yelloworange: '#FAA21A',\r\n};\r\n// Other color lists: SVG colors, x11 colors\r\n/*\r\naliceblue\trgb(240, 248, 255)\r\nantiquewhite\trgb(250, 235, 215)\r\naqua\trgb( 0, 255, 255)\r\naquamarine\trgb(127, 255, 212)\r\nazure\trgb(240, 255, 255)\r\nbeige\trgb(245, 245, 220)\r\nbisque\trgb(255, 228, 196)\r\nblack\trgb( 0, 0, 0)\r\nblanchedalmond\trgb(255, 235, 205)\r\nblue\trgb( 0, 0, 255)\r\nblueviolet\trgb(138, 43, 226)\r\nbrown\trgb(165, 42, 42)\r\nburlywood\trgb(222, 184, 135)\r\ncadetblue\trgb( 95, 158, 160)\r\nchartreuse\trgb(127, 255, 0)\r\nchocolate\trgb(210, 105, 30)\r\ncoral\trgb(255, 127, 80)\r\ncornflowerblue\trgb(100, 149, 237)\r\ncornsilk\trgb(255, 248, 220)\r\ncrimson\trgb(220, 20, 60)\r\ncyan\trgb( 0, 255, 255)\r\ndarkblue\trgb( 0, 0, 139)\r\ndarkcyan\trgb( 0, 139, 139)\r\ndarkgoldenrod\trgb(184, 134, 11)\r\ndarkgray\trgb(169, 169, 169)\r\ndarkgreen\trgb( 0, 100, 0)\r\ndarkgrey\trgb(169, 169, 169)\r\ndarkkhaki\trgb(189, 183, 107)\r\ndarkmagenta\trgb(139, 0, 139)\r\ndarkolivegreen\trgb( 85, 107, 47)\r\ndarkorange\trgb(255, 140, 0)\r\ndarkorchid\trgb(153, 50, 204)\r\ndarkred\trgb(139, 0, 0)\r\ndarksalmon\trgb(233, 150, 122)\r\ndarkseagreen\trgb(143, 188, 143)\r\ndarkslateblue\trgb( 72, 61, 139)\r\ndarkslategray\trgb( 47, 79, 79)\r\ndarkslategrey\trgb( 47, 79, 79)\r\ndarkturquoise\trgb( 0, 206, 209)\r\ndarkviolet\trgb(148, 0, 211)\r\ndeeppink\trgb(255, 20, 147)\r\ndeepskyblue\trgb( 0, 191, 255)\r\ndimgray\trgb(105, 105, 105)\r\ndimgrey\trgb(105, 105, 105)\r\ndodgerblue\trgb( 30, 144, 255)\r\nfirebrick\trgb(178, 34, 34)\r\nfloralwhite\trgb(255, 250, 240)\r\nforestgreen\trgb( 34, 139, 34)\r\nfuchsia\trgb(255, 0, 255)\r\ngainsboro\trgb(220, 220, 220)\r\nghostwhite\trgb(248, 248, 255)\r\ngold\trgb(255, 215, 0)\r\ngoldenrod\trgb(218, 165, 32)\r\ngray\trgb(128, 128, 128)\r\ngrey\trgb(128, 128, 128)\r\ngreen\trgb( 0, 128, 0)\r\ngreenyellow\trgb(173, 255, 47)\r\nhoneydew\trgb(240, 255, 240)\r\nhotpink\trgb(255, 105, 180)\r\nindianred\trgb(205, 92, 92)\r\nindigo\trgb( 75, 0, 130)\r\nivory\trgb(255, 255, 240)\r\nkhaki\trgb(240, 230, 140)\r\nlavender\trgb(230, 230, 250)\r\nlavenderblush\trgb(255, 240, 245)\r\nlawngreen\trgb(124, 252, 0)\r\nlemonchiffon\trgb(255, 250, 205)\r\nlightblue\trgb(173, 216, 230)\r\nlightcoral\trgb(240, 128, 128)\r\nlightcyan\trgb(224, 255, 255)\r\nlightgoldenrodyellow\trgb(250, 250, 210)\r\nlightgray\trgb(211, 211, 211)\r\nlightgreen\trgb(144, 238, 144)\r\nlightgrey\trgb(211, 211, 211)\r\nlightpink\trgb(255, 182, 193)\r\nlightsalmon\trgb(255, 160, 122)\r\nlightseagreen\trgb( 32, 178, 170)\r\nlightskyblue\trgb(135, 206, 250)\r\nlightslategray\trgb(119, 136, 153)\r\nlightslategrey\trgb(119, 136, 153)\r\nlightsteelblue\trgb(176, 196, 222)\r\nlightyellow\trgb(255, 255, 224)\r\nlime\trgb( 0, 255, 0)\r\nlimegreen\trgb( 50, 205, 50)\r\nlinen\trgb(250, 240, 230)\r\nmagenta\trgb(255, 0, 255)\r\nmaroon\trgb(128, 0, 0)\r\nmediumaquamarine\trgb(102, 205, 170)\r\nmediumblue\trgb( 0, 0, 205)\r\nmediumorchid\trgb(186, 85, 211)\r\nmediumpurple\trgb(147, 112, 219)\r\nmediumseagreen\trgb( 60, 179, 113)\r\nmediumslateblue\trgb(123, 104, 238)\r\nmediumspringgreen\trgb( 0, 250, 154)\r\nmediumturquoise\trgb( 72, 209, 204)\r\nmediumvioletred\trgb(199, 21, 133)\r\nmidnightblue\trgb( 25, 25, 112)\r\nmintcream\trgb(245, 255, 250)\r\nmistyrose\trgb(255, 228, 225)\r\nmoccasin\trgb(255, 228, 181)\r\nnavajowhite\trgb(255, 222, 173)\r\nnavy\trgb( 0, 0, 128)\r\noldlace\trgb(253, 245, 230)\r\nolive\trgb(128, 128, 0)\r\nolivedrab\trgb(107, 142, 35)\r\norange\trgb(255, 165, 0)\r\norangered\trgb(255, 69, 0)\r\norchid\trgb(218, 112, 214)\r\npalegoldenrod\trgb(238, 232, 170)\r\npalegreen\trgb(152, 251, 152)\r\npaleturquoise\trgb(175, 238, 238)\r\npalevioletred\trgb(219, 112, 147)\r\npapayawhip\trgb(255, 239, 213)\r\npeachpuff\trgb(255, 218, 185)\r\nperu\trgb(205, 133, 63)\r\npink\trgb(255, 192, 203)\r\nplum\trgb(221, 160, 221)\r\npowderblue\trgb(176, 224, 230)\r\npurple\trgb(128, 0, 128)\r\nred\trgb(255, 0, 0)\r\nrosybrown\trgb(188, 143, 143)\r\nroyalblue\trgb( 65, 105, 225)\r\nsaddlebrown\trgb(139, 69, 19)\r\nsalmon\trgb(250, 128, 114)\r\nsandybrown\trgb(244, 164, 96)\r\nseagreen\trgb( 46, 139, 87)\r\nseashell\trgb(255, 245, 238)\r\nsienna\trgb(160, 82, 45)\r\nsilver\trgb(192, 192, 192)\r\nskyblue\trgb(135, 206, 235)\r\nslateblue\trgb(106, 90, 205)\r\nslategray\trgb(112, 128, 144)\r\nslategrey\trgb(112, 128, 144)\r\nsnow\trgb(255, 250, 250)\r\nspringgreen\trgb( 0, 255, 127)\r\nsteelblue\trgb( 70, 130, 180)\r\ntan\trgb(210, 180, 140)\r\nteal\trgb( 0, 128, 128)\r\nthistle\trgb(216, 191, 216)\r\ntomato\trgb(255, 99, 71)\r\nturquoise\trgb( 64, 224, 208)\r\nviolet\trgb(238, 130, 238)\r\nwheat\trgb(245, 222, 179)\r\nwhite\trgb(255, 255, 255)\r\nwhitesmoke\trgb(245, 245, 245)\r\nyellow\trgb(255, 255, 0)\r\nyellowgreen\trgb(154, 205, 50)\r\n     \n*/\r\n/**\r\n * Return a CSS color (#rrggbb) from a string.\r\n *\r\n * Possible formats include:\r\n * - named colors from the DVI color set: 'Yellow', 'red'... Case insensitive.\r\n * - colors from the Mathematica set: 'm1'...'m9'\r\n * - 3-digit hex: `'#d50'`\r\n * - 6-digit hex: `'#dd5500'`\r\n * - RGB functional: `'rgb(240, 20, 10)'`\r\n *\r\n * In addition, colors can be mixed using the following syntax:\r\n * `<mix> = <color>![<value>][!<mix>]`\r\n * For example:\r\n * - `'blue!20'`  = 20% blue + 80% white\r\n * - `'blue!20!black'` = 20% + 80% black\r\n * - `'blue!20!black!30!green'` = (20% + 80% black) * 30 % + 70% green\r\n *\r\n * If the input string is prefixed with a dash, the complementary color\r\n * of the expression is returned.\r\n *\r\n * This creative syntax is defined by the {@link http://mirror.jmu.edu/pub/CTAN/macros/latex/contrib/xcolor/xcolor.pdf | `xcolor` LaTeX package}.\r\n *\r\n * @param s - An expression representing a color value\r\n * @return An RGB color expressed as a hex-triplet preceded by `#`\r\n */\r\nfunction stringToColor(s) {\r\n    var _a;\r\n    const colorSpec = s.toLowerCase().split('!');\r\n    let baseRed;\r\n    let baseGreen;\r\n    let baseBlue;\r\n    let red = 255;\r\n    let green = 255;\r\n    let blue = 255;\r\n    let mix = -1;\r\n    // If the string is prefixed with a '-', use the complementary color\r\n    const complementary = colorSpec.length > 0 && colorSpec[0].charAt(0) === '-';\r\n    if (complementary)\r\n        colorSpec[0] = colorSpec[0].slice(1);\r\n    for (let i = 0; i < colorSpec.length; i++) {\r\n        baseRed = red;\r\n        baseGreen = green;\r\n        baseBlue = blue;\r\n        const colorName = (_a = colorSpec[i].match(/([a-z0-9]*)/)) === null || _a === void 0 ? void 0 : _a[1];\r\n        let color = NAMED_COLORS[colorName] || MATHEMATICA_COLORS[colorName];\r\n        if (!color)\r\n            color = colorSpec[i];\r\n        let m = color.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\r\n        if ((m === null || m === void 0 ? void 0 : m[1]) && m[2] && m[3]) {\r\n            // It's a six-digit hex number\r\n            red = Math.max(0, Math.min(255, parseInt(m[1], 16)));\r\n            green = Math.max(0, Math.min(255, parseInt(m[2], 16)));\r\n            blue = Math.max(0, Math.min(255, parseInt(m[3], 16)));\r\n        }\r\n        else {\r\n            m = color.match(/^#([0-9a-f]{3})$/i);\r\n            if (m === null || m === void 0 ? void 0 : m[1]) {\r\n                // It's a three-digit hex number\r\n                const r1 = parseInt(m[1][0], 16);\r\n                const g1 = parseInt(m[1][1], 16);\r\n                const b1 = parseInt(m[1][2], 16);\r\n                red = Math.max(0, Math.min(255, r1 * 16 + r1));\r\n                green = Math.max(0, Math.min(255, g1 * 16 + g1));\r\n                blue = Math.max(0, Math.min(255, b1 * 16 + b1));\r\n            }\r\n            else {\r\n                // It's a rgb functional\r\n                m = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n                if ((m === null || m === void 0 ? void 0 : m[1]) && m[2] && m[3]) {\r\n                    red = Math.max(0, Math.min(255, parseInt(m[1])));\r\n                    green = Math.max(0, Math.min(255, parseInt(m[2])));\r\n                    blue = Math.max(0, Math.min(255, parseInt(m[3])));\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        if (mix >= 0) {\r\n            red = (1.0 - mix) * red + mix * baseRed;\r\n            green = (1.0 - mix) * green + mix * baseGreen;\r\n            blue = (1.0 - mix) * blue + mix * baseBlue;\r\n            mix = -1;\r\n        }\r\n        if (i + 1 < colorSpec.length) {\r\n            mix = Math.max(0, Math.min(100, parseInt(colorSpec[++i]))) / 100.0;\r\n        }\r\n    }\r\n    if (mix >= 0) {\r\n        red = mix * red + (1.0 - mix) * baseRed;\r\n        green = mix * green + (1.0 - mix) * baseGreen;\r\n        blue = mix * blue + (1.0 - mix) * baseBlue;\r\n    }\r\n    if (complementary) {\r\n        red = 255 - red;\r\n        green = 255 - green;\r\n        blue = 255 - blue;\r\n    }\r\n    return ('#' +\r\n        ('00' + Math.round(red).toString(16)).slice(-2) +\r\n        ('00' + Math.round(green).toString(16)).slice(-2) +\r\n        ('00' + Math.round(blue).toString(16)).slice(-2));\r\n}\r\nfunction colorToString(color) {\r\n    let result = color.toUpperCase();\r\n    for (const c in NAMED_COLORS) {\r\n        if (NAMED_COLORS[c] === result) {\r\n            result = c;\r\n            break;\r\n        }\r\n    }\r\n    for (const c in MATHEMATICA_COLORS) {\r\n        if (MATHEMATICA_COLORS[c] === result) {\r\n            result = c;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\n\ndefineFunction('ensuremath', '{:math}', {}, (_name, args) => {\r\n    return {\r\n        type: 'group',\r\n        mode: 'math',\r\n        body: args[0],\r\n        skipBoundary: true,\r\n        latexOpen: '\\\\ensuremath{',\r\n        latexClose: '}',\r\n    };\r\n}, (_name, _parent, atom, emit) => emit(atom, atom.body));\r\ndefineFunction('color', '{:color}', {}, (_name, args) => {\r\n    return { color: args[0] };\r\n});\r\n// From the xcolor package.\r\n// Unlike what its name might suggest, this command does not set the mode to text\r\n// That is, it can equally be applied to math and text mode.\r\ndefineFunction('textcolor', '{:color}{content:auto*}', {}, (_name, args) => {\r\n    return { color: args[0] };\r\n});\r\n// Can be preceded by e.g. '\\fboxsep=4pt' (also \\fboxrule)\r\n// Note:\r\n// - \\boxed: sets content in displaystyle mode (@todo: should change type of argument)\r\n//      equivalent to \\fbox{$$<content>$$}\r\n// - \\fbox: sets content in 'auto' mode (frequency 777)\r\n// - \\framebox[<width>][<alignment>]{<content>} (<alignment> := 'c'|'t'|'b' (center, top, bottom) (frequency 28)\r\n// @todo\r\ndefineFunction('boxed', '{content:math}', null, (_name, args) => {\r\n    return {\r\n        type: 'box',\r\n        framecolor: 'black',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\n// In LaTeX, \\colorbox sets the mode to text\r\ndefineFunction('colorbox', '{background-color:string}{content:auto}', {}, (_name, args) => {\r\n    return {\r\n        type: 'box',\r\n        backgroundcolor: stringToColor(args[0]),\r\n        skipBoundary: true,\r\n        body: args[1],\r\n        verbatimBackgroundcolor: args[0],\r\n    };\r\n}, (name, _parent, atom, emit) => `${name}{${atom.verbatimBackgroundcolor || colorToString(atom.backgroundcolor)}}{${emit(atom, atom.body)}}`);\r\ndefineFunction('fcolorbox', '{frame-color:string}{background-color:string}{content:auto}', {}, (_name, args) => {\r\n    return {\r\n        type: 'box',\r\n        framecolor: stringToColor(args[0]),\r\n        backgroundcolor: stringToColor(args[1]),\r\n        skipBoundary: true,\r\n        body: args[2],\r\n        verbatimBackgroundcolor: args[1],\r\n        verbatimFramecolor: args[0],\r\n    };\r\n}, (name, _parent, atom, emit) => `${name}{${atom.verbatimFramecolor || colorToString(atom.framecolor)}{${atom.verbatimBackgroundcolor || colorToString(atom.backgroundcolor)}}{${emit(atom, atom.body)}}`);\r\n// \\bbox, MathJax extension\r\n// The first argument is a CSS border property shorthand, e.g.\r\n// \\bbox[red], \\bbox[5px,border:2px solid red]\r\n// The MathJax syntax is\r\n// arglist ::= <arg>[,<arg>[,<arg>]]\r\n// arg ::= [<background:color>|<padding:dimen>|<style>]\r\n// style ::= 'border:' <string>\r\ndefineFunction('bbox', '[:bbox]{body:auto}', {}, (_name, args) => {\r\n    if (args[0]) {\r\n        const arg = args[0];\r\n        return {\r\n            type: 'box',\r\n            padding: arg.padding,\r\n            border: arg.border,\r\n            backgroundcolor: arg.backgroundcolor,\r\n            skipBoundary: true,\r\n            body: args[1],\r\n        };\r\n    }\r\n    return {\r\n        type: 'box',\r\n        skipBoundary: true,\r\n        body: args[1],\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    let result = name;\r\n    if (isFinite(atom.padding) ||\r\n        typeof atom.border !== 'undefined' ||\r\n        typeof atom.backgroundcolor !== 'undefined') {\r\n        const bboxParams = [];\r\n        if (isFinite(atom.padding)) {\r\n            bboxParams.push(Math.floor(1e2 * atom.padding) / 1e2 + 'em');\r\n        }\r\n        if (atom.border) {\r\n            bboxParams.push('border:' + atom.border);\r\n        }\r\n        if (atom.backgroundcolor) {\r\n            bboxParams.push(colorToString(atom.backgroundcolor));\r\n        }\r\n        result += `[${bboxParams.join(',')}]`;\r\n    }\r\n    return result + `{${emit(atom, atom.body)}}`;\r\n});\r\ndefineFunction(['displaystyle', 'textstyle', 'scriptstyle', 'scriptscriptstyle'], '', {}, (name, _args) => {\r\n    return {\r\n        mathstyle: name.slice(1),\r\n    };\r\n});\r\n// Size\r\ndefineFunction([\r\n    'tiny',\r\n    'scriptsize',\r\n    'footnotesize',\r\n    'small',\r\n    'normalsize',\r\n    'large',\r\n    'Large',\r\n    'LARGE',\r\n    'huge',\r\n    'Huge',\r\n], '', { mode: 'text' }, (name, _args) => {\r\n    return {\r\n        fontSize: {\r\n            tiny: 'size1',\r\n            scriptsize: 'size2',\r\n            footnotesize: 'size3',\r\n            small: 'size4',\r\n            normalsize: 'size5',\r\n            large: 'size6',\r\n            Large: 'size7',\r\n            LARGE: 'size8',\r\n            huge: 'size9',\r\n            Huge: 'size10',\r\n        }[name.slice(1)],\r\n    };\r\n});\r\n// \\fontseries only works in text mode\r\ndefineFunction('fontseries', '{:string}', { mode: 'text' }, (_name, args) => {\r\n    return { fontSeries: args[0] };\r\n});\r\n// SHAPE: italic, small caps\r\ndefineFunction('fontshape', '{:string}', { mode: 'text' }, (_name, args) => {\r\n    return { fontShape: args[0] };\r\n});\r\n// FONT FAMILY: Fraktur, Calligraphic, ...\r\ndefineFunction('fontfamily', '{:string}', { mode: 'text' }, (_name, args) => {\r\n    return { fontFamily: args[0] };\r\n});\r\n// In LaTeX, the \\fontseries, \\fontshape, \\fontfamily, \\fontsize commands\r\n// do not take effect until \\selectfont is encoded. In our implementation,\r\n// they take effect immediately, and \\selectfont is a no-op\r\ndefineFunction('selectfont', '', { mode: 'text' }, (_name, _args) => {\r\n    return {};\r\n});\r\n// \\bf works in any mode\r\n// As per the LaTeX 2.09 semantics, it overrides shape, family\r\ndefineFunction('bf', '', {}, (_name, _args) => {\r\n    return { fontSeries: 'b', fontShape: 'n', fontFamily: 'cmr' };\r\n});\r\n// Note: These function work a little bit differently than LaTex\r\n// In LaTeX, \\bm{x\\mathrm{y}} yield a bold x and an upright y.\r\n// This is not necesarily intentional, but a side effect of the (current)\r\n// implementation of \\bm\r\ndefineFunction(['boldsymbol', 'bm'], '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', cssClass: 'ML__boldsymbol' };\r\n});\r\n// Note: switches to math mode\r\ndefineFunction('bold', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variantStyle: 'bold' };\r\n});\r\ndefineFunction('bfseries', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontSeries: 'b' };\r\n});\r\ndefineFunction('mdseries', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontSeries: 'm' };\r\n});\r\ndefineFunction('upshape', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontShape: 'n' };\r\n});\r\ndefineFunction('slshape', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontShape: 'sl' };\r\n});\r\n// Small caps\r\ndefineFunction('scshape', '', { mode: 'text' }, (_name, _args) => {\r\n    return { fontShape: 'sc' };\r\n});\r\ndefineFunction('textbf', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontSeries: 'b' };\r\n});\r\ndefineFunction('textmd', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontSeries: 'm' };\r\n});\r\ndefineFunction('textup', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'n' };\r\n});\r\n// @todo: family could be 'none' or 'default'\r\n// \"normal\" font of the body text, not necessarily roman\r\ndefineFunction('textnormal', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'n', fontSeries: 'm' };\r\n});\r\ndefineFunction('textsl', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'sl' };\r\n});\r\ndefineFunction('textit', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'it' };\r\n});\r\ndefineFunction('textsc', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontShape: 'sc' };\r\n});\r\ndefineFunction('textrm', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontFamily: 'roman' };\r\n});\r\ndefineFunction('textsf', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontFamily: 'sans-serif' };\r\n});\r\ndefineFunction('texttt', '{:text*}', {}, (_name, _args) => {\r\n    return { mode: 'text', fontFamily: 'monospace' };\r\n});\r\n// Note: \\mathbf is a no-op in text mode\r\ndefineFunction('mathbf', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'bold' };\r\n});\r\ndefineFunction('mathit', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'italic' };\r\n});\r\n// From the ISOMath package\r\ndefineFunction('mathbfit', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'bolditalic' };\r\n});\r\ndefineFunction('mathrm', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'normal', variantStyle: 'up' };\r\n});\r\ndefineFunction('mathsf', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'sans-serif', variantStyle: 'up' };\r\n});\r\ndefineFunction('mathtt', '{:math*}', {}, (_name, _args) => {\r\n    return { mode: 'math', variant: 'monospace', variantStyle: 'up' };\r\n});\r\ndefineFunction('it', '', {}, (_name, _args) => {\r\n    return {\r\n        fontSeries: 'm',\r\n        fontShape: 'it',\r\n        fontFamily: 'cmr',\r\n        variantStyle: 'italic',\r\n    };\r\n});\r\n// In LaTeX, \\rmfamily, \\sffamily and \\ttfamily are no-op in math mode.\r\ndefineFunction('rmfamily', '', {}, (_name, _args) => {\r\n    return { fontFamily: 'roman' };\r\n});\r\ndefineFunction('sffamily', '', {}, (_name, _args) => {\r\n    return { fontFamily: 'sans-serif' };\r\n});\r\ndefineFunction('ttfamily', '', {}, (_name, _args) => {\r\n    return { fontFamily: 'monospace' };\r\n});\r\n// In LaTeX, \\Bbb and \\mathbb are no-op in text mode.\r\n// They also map lowercase characters to different glyphs.\r\n// Note that \\Bbb has been deprecated for over 20 years (as well as \\rm, \\it, \\bf)\r\ndefineFunction(['Bbb', 'mathbb'], '{:math*}', {}, (_name, _args) => {\r\n    return { variant: 'double-struck', variantStyle: 'up' };\r\n});\r\ndefineFunction(['frak', 'mathfrak'], '{:math*}', {}, (_name, _args) => {\r\n    return { variant: 'fraktur', variantStyle: 'up' };\r\n});\r\ndefineFunction('mathcal', '{:math*}', {}, (_name, _args) => {\r\n    return { variant: 'calligraphic', variantStyle: 'up' };\r\n});\r\ndefineFunction('mathscr', '{:math*}', {}, (_name, _args) => {\r\n    return { variant: 'script', variantStyle: 'up' };\r\n});\r\n// Rough synomym for \\text{}\r\n/*\r\nAn \\mbox within math mode does not use the current math font; rather it uses\r\nthe typeface of the surrounding running text.\r\n*/\r\ndefineFunction('mbox', '{:text}', null, (_name, args) => {\r\n    return {\r\n        type: 'group',\r\n        mode: 'math',\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('text', '{:text*}', null, (_name, _args) => {\r\n    return { mode: 'text' };\r\n});\r\n/* A MathJax extension: assign a class to the element */\r\ndefineFunction('class', '{name:string}{content:auto*}', null, (_name, args) => {\r\n    return { cssClass: args[0] };\r\n});\r\n/* A MathJax extension: assign an ID to the element */\r\ndefineFunction('cssId', '{id:string}{content:auto}', null, (_name, args) => {\r\n    return {\r\n        type: 'group',\r\n        body: args[1],\r\n        cssId: args[0],\r\n    };\r\n});\r\n/* Note: in TeX, \\em is restricted to text mode. We extend it to math\r\n * This is the 'switch' variant of \\emph, i.e:\r\n * `\\emph{important text}`\r\n * `{\\em important text}`\r\n */\r\ndefineFunction('em', '', null, (_name, _args) => {\r\n    return { cssClass: 'ML__emph' };\r\n});\r\n/* Note: in TeX, \\emph is restricted to text mode. We extend it to math */\r\ndefineFunction('emph', '{:auto}', null, (_name, args) => {\r\n    return {\r\n        cssClass: 'ML__emph',\r\n        body: args[0],\r\n        type: 'group',\r\n        skipBoundary: true,\r\n    };\r\n});\r\n// Extra data needed for the delimiter parse function down below\r\nconst DELIMITER_SIZES = {\r\n    '\\\\bigl': { mclass: 'mopen', size: 1 },\r\n    '\\\\Bigl': { mclass: 'mopen', size: 2 },\r\n    '\\\\biggl': { mclass: 'mopen', size: 3 },\r\n    '\\\\Biggl': { mclass: 'mopen', size: 4 },\r\n    '\\\\bigr': { mclass: 'mclose', size: 1 },\r\n    '\\\\Bigr': { mclass: 'mclose', size: 2 },\r\n    '\\\\biggr': { mclass: 'mclose', size: 3 },\r\n    '\\\\Biggr': { mclass: 'mclose', size: 4 },\r\n    '\\\\bigm': { mclass: 'mrel', size: 1 },\r\n    '\\\\Bigm': { mclass: 'mrel', size: 2 },\r\n    '\\\\biggm': { mclass: 'mrel', size: 3 },\r\n    '\\\\Biggm': { mclass: 'mrel', size: 4 },\r\n    '\\\\big': { mclass: 'mord', size: 1 },\r\n    '\\\\Big': { mclass: 'mord', size: 2 },\r\n    '\\\\bigg': { mclass: 'mord', size: 3 },\r\n    '\\\\Bigg': { mclass: 'mord', size: 4 },\r\n};\r\ndefineFunction([\r\n    'bigl',\r\n    'Bigl',\r\n    'biggl',\r\n    'Biggl',\r\n    'bigr',\r\n    'Bigr',\r\n    'biggr',\r\n    'Biggr',\r\n    'bigm',\r\n    'Bigm',\r\n    'biggm',\r\n    'Biggm',\r\n    'big',\r\n    'Big',\r\n    'bigg',\r\n    'Bigg',\r\n], '{:delim}', null, function (name, args) {\r\n    return {\r\n        type: 'sizeddelim',\r\n        size: DELIMITER_SIZES[name].size,\r\n        cls: DELIMITER_SIZES[name].mclass,\r\n        delim: args[0],\r\n    };\r\n});\r\ndefineFunction([\r\n    'hspace',\r\n    'hspace*',\r\n], '{width:skip}', {}, function (_name, args) {\r\n    return {\r\n        type: 'spacing',\r\n        width: args[0] || 0,\r\n    };\r\n});\r\ndefineFunction([\r\n    'mathop',\r\n    'mathbin',\r\n    'mathrel',\r\n    'mathopen',\r\n    'mathclose',\r\n    'mathpunct',\r\n    'mathord',\r\n    'mathinner',\r\n], '{:auto}', null, (name, args) => {\r\n    const result = {\r\n        type: {\r\n            '\\\\mathop': 'mop',\r\n            '\\\\mathbin': 'mbin',\r\n            '\\\\mathrel': 'mrel',\r\n            '\\\\mathopen': 'mopen',\r\n            '\\\\mathclose': 'mclose',\r\n            '\\\\mathpunct': 'mpunct',\r\n            '\\\\mathord': 'mord',\r\n            '\\\\mathinner': 'minner',\r\n        }[name],\r\n        body: args[0],\r\n        // A string would be styled as text, but these need to be interpreted\r\n        // as 'math'\r\n        captureSelection: true,\r\n    };\r\n    if (name === '\\\\mathop') {\r\n        result.limits = 'limits';\r\n        result.isFunction = true;\r\n    }\r\n    return result;\r\n}, (name, _parent, atom, emit) => {\r\n    return `${name}{${emit(atom, atom.body)}}`;\r\n});\r\n// @todo see http://mirrors.ibiblio.org/CTAN/macros/latex/required/amsmath/amsopn.pdf\r\n// for list of additional operators\r\ndefineFunction(['operatorname', 'operatorname*'], '{operator:math}', null, function (name, args) {\r\n    const result = {\r\n        type: 'mop',\r\n        captureSelection: true,\r\n        body: args[0],\r\n        isFunction: true,\r\n    };\r\n    /*\r\n    The \\operatorname commands is defined with:\r\n\n    \\gdef\\newmcodes@{\\mathcode`\\'39\\mathcode`\\*42\\mathcode`\\.\"613A%\r\n    \\ifnum\\mathcode`\\-=45 \\else\r\n        \\mathchardef\\std@minus\\mathcode`\\-\\relax\r\n    \\fi\r\n    \\mathcode`\\-45\\mathcode`\\/47\\mathcode`\\:\"603A\\relax}\r\n\n\n    \\mathcode assigns to a character its category (2=mbin), its font family (0=cmr),\r\n    and its character code.\r\n\n    It basically temporarily reassigns to \":.'-/*\" the values/properties\r\n    these characters have in text mode (but importantly, not to \" \" (space))\r\n\n    */\r\n    result.body.forEach((x) => {\r\n        x.isFunction = false;\r\n        if (!x.variant && !x.variantStyle) {\r\n            // No variant as been specified (as it could have been with\r\n            // \\operatorname{\\mathit{lim}} for example)\r\n            // Bypass the default auto styling by specifing an upright style\r\n            x.variant = 'main';\r\n            x.variantStyle = 'up';\r\n        }\r\n        x.type = 'mord';\r\n        x.body =\r\n            { '\\u2217': '*', '\\u2212': '-' }[x.body] || x.body;\r\n    });\r\n    if (name === '\\\\operatorname') {\r\n        result.limits = 'nolimits';\r\n    }\r\n    else if (name === '\\\\operatorname*') {\r\n        result.limits = 'limits';\r\n    }\r\n    return result;\r\n});\r\ndefineFunction('unicode', '{charcode:number}', null, (_name, args) => {\r\n    let codepoint = parseInt(args[0]);\r\n    if (!isFinite(codepoint))\r\n        codepoint = 0x2753; // BLACK QUESTION MARK\r\n    return {\r\n        type: 'mord',\r\n        body: String.fromCodePoint(codepoint),\r\n        codepoint: codepoint,\r\n    };\r\n}, (name, _parent, atom, _emit) => {\r\n    return `${name}{\"${('000000' + atom.codepoint.toString(16))\r\n        .toUpperCase()\r\n        .substr(-6)}}`;\r\n});\r\n// A box of the width and height\r\ndefineFunction('rule', '[raise:dimen]{width:dimen}{thickness:dimen}', null, function (name, args) {\r\n    return {\r\n        type: 'rule',\r\n        shift: args[0],\r\n        width: args[1],\r\n        height: args[2],\r\n    };\r\n});\r\n// An overline\r\ndefineFunction('overline', '{:auto}', null, (_name, args) => {\r\n    return {\r\n        type: 'line',\r\n        position: 'overline',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('underline', '{:auto}', null, (_name, args) => {\r\n    return {\r\n        type: 'line',\r\n        position: 'underline',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('overset', '{annotation:auto}{symbol:auto}', null, function (_name, args) {\r\n    return {\r\n        type: 'overunder',\r\n        overscript: args[0],\r\n        skipBoundary: true,\r\n        body: args[1],\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    return `${name}{${emit(atom, atom.overscript)}}{${emit(atom, atom.body)}}`;\r\n});\r\ndefineFunction('underset', '{annotation:auto}{symbol:auto}', null, function (_name, args) {\r\n    return {\r\n        type: 'overunder',\r\n        underscript: args[0],\r\n        skipBoundary: true,\r\n        body: args[1],\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    return `${name}{${emit(atom, atom.overscript)}}{${emit(atom, atom.body)}}`;\r\n});\r\ndefineFunction(['overwithdelims', 'atopwithdelims'], '{numer:auto}{denom:auto}{left-delim:delim}{right-delim:delim}', { infix: true }, function (_name, args) {\r\n    return {\r\n        type: 'genfrac',\r\n        numer: args[0],\r\n        denom: args[1],\r\n        hasBarLine: false,\r\n        leftDelim: args[2],\r\n        rightDelim: args[3],\r\n        mathstyle: 'auto',\r\n    };\r\n}, (name, _parent, atom, emit) => {\r\n    return `${emit(atom, atom.numer)} ${name}${atom.leftDelim}${atom.rightDelim}${emit(atom, atom.denom)}`;\r\n});\r\ndefineFunction(['stackrel', 'stackbin'], '{annotation:auto}{symbol:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'overunder',\r\n        overscript: args[0],\r\n        skipBoundary: true,\r\n        body: args[1],\r\n        // Set the correct spacing rule for \\stackrel\r\n        mathtype: name === '\\\\stackrel' ? 'mrel' : 'mbin',\r\n    };\r\n}, (name, _parent, atom, emit) => `${name}{${emit(atom, atom.overscript)}}{${emit(atom, atom.body)}}`);\r\n/*\r\ndisplay: inline-block;\r\nwidth: 0;\r\nline-height: 1;\r\n*/\r\n/*\r\ndisplay: inline-block;\r\n*/\r\ndefineFunction(['phantom', 'vphantom', 'hphantom'], '{:auto*}', {}, (name, _args) => {\r\n    return {\r\n        type: 'phantom',\r\n        captureSelection: true,\r\n        phantomType: name.slice(1),\r\n        isPhantom: true,\r\n    };\r\n}, (name, _parent, atom, emit) => name + '{' + emit(atom, atom.body) + '}');\r\ndefineFunction('smash', '[:string]{:auto}', null, function (_name, args) {\r\n    let phantomType = 'smash';\r\n    if (args[0] === 'b') {\r\n        phantomType = 'bsmash';\r\n    }\r\n    else if (args[0] === 't') {\r\n        phantomType = 'tsmash';\r\n        // } else if (args[0]) {\r\n    }\r\n    return {\r\n        type: 'phantom',\r\n        phantomType,\r\n        skipBoundary: true,\r\n        body: args[1],\r\n    };\r\n});\r\ndefineFunction('rlap', '{:auto}', null, function (_name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        align: 'right',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('llap', '{:auto}', null, function (_name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        align: 'left',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('mathrlap', '{:auto}', null, function (_name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        mode: 'math',\r\n        align: 'right',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\r\ndefineFunction('mathllap', '{:auto}', null, function (name, args) {\r\n    return {\r\n        type: 'overlap',\r\n        mode: 'math',\r\n        align: 'left',\r\n        skipBoundary: true,\r\n        body: args[0],\r\n    };\r\n});\n\n// Simple characters allowed in math mode\r\ndefineSymbols('0123456789/@.?!');\r\ndefineSymbolRange(0x0041, 0x005a); // a-z\r\ndefineSymbolRange(0x0061, 0x007a); // A-Z\r\n// Quantifiers\r\ndefineSymbol('\\\\forall', '\\u2200');\r\ndefineSymbol('\\\\exists', '\\u2203');\r\ndefineSymbol('\\\\nexists', '\\u2204', 'mord', 'ams');\r\ndefineSymbol('\\\\mid', '\\u2223', 'mrel');\r\ndefineSymbol('\\\\top', '\\u22a4');\r\ndefineSymbol('\\\\bot', '\\u22a5');\r\n// Misc Symbols\r\ndefineSymbol('\\\\sharp', '\\u266f');\r\ndefineSymbol('\\\\flat', '\\u266d');\r\ndefineSymbol('\\\\natural', '\\u266e');\r\ndefineSymbol('\\\\#', '\\u0023');\r\ndefineSymbol('\\\\&', '\\u0026');\r\ndefineSymbol('\\\\clubsuit', '\\u2663');\r\ndefineSymbol('\\\\heartsuit', '\\u2661');\r\ndefineSymbol('\\\\spadesuit', '\\u2660');\r\ndefineSymbol('\\\\diamondsuit', '\\u2662');\r\n// defineSymbol( '\\\\cross', '\\uF4A0',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\transpose', '\\uF3C7',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\conjugate', 'conj'],  MAIN,  'mord', '\\uF3C8'); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\conjugatetranspose', '\\uF3C9',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\n// defineSymbol( '\\\\hermitianconjugate', '\\uF3CE',  'mord',  MAIN); // NOTE: not a real TeX symbol, but Mathematica\r\ndefineSymbol('\\\\differencedelta', '\\u2206', 'mrel');\r\ndefineSymbol('\\\\backslash', '\\\\');\r\ndefineSymbol('\\\\nabla', '\\u2207');\r\ndefineSymbol('\\\\partial', '\\u2202');\r\ndefineSymbol('\\\\ell', '\\u2113');\r\ndefineSymbol('\\\\hbar', '\\u210f');\r\ndefineSymbol('\\\\hslash', '\\u210f', 'mord', 'ams');\r\ndefineSymbol('\\\\Finv', '\\u2132', 'mord', 'ams');\r\ndefineSymbol('\\\\Game', '\\u2141', 'mord', 'ams');\r\ndefineSymbol('\\\\wp', '\\u2118');\r\ndefineSymbol('\\\\eth', '\\u00f0', 'mord', 'ams');\r\ndefineSymbol('\\\\mho', '\\u2127', 'mord', 'ams');\r\ndefineSymbol('\\\\Bbbk', '\\u006b', 'mord', 'ams');\r\ndefineSymbol('\\\\N', 'N', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\R', 'R', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\Q', 'Q', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\C', 'C', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\Z', 'Z', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\P', 'P', 'mord', 'double-struck'); // NOTE: Check if standard Latex\r\ndefineSymbol('\\\\pounds', '\\u00a3');\r\ndefineSymbol('\\\\yen', '\\u00a5', 'mord', 'ams');\r\ndefineSymbol('\\\\euro', '\\u20AC'); // NOTE: not TeX built-in, but textcomp package\r\n// TODO Koppa, Stigma, Sampi\r\n// Math and Text\r\ndefineSymbol('\\\\dagger', '\\u2020', 'mbin');\r\ndefineSymbol('\\\\dag', '\\u2020', 'mbin');\r\ndefineSymbol('\\\\ddag', '\\u2021', 'mbin');\r\ndefineSymbol('\\\\ddagger', '\\u2021', 'mbin');\r\ndefineSymbol('\\\\maltese', '\\u2720', 'mord', 'ams');\r\n// Arrow Symbols\r\ndefineSymbol('\\\\rightarrow', '\\u2192', 'mrel');\r\ndefineSymbol('\\\\to', '\\u2192', 'mrel');\r\ndefineSymbol('\\\\leftarrow', '\\u2190', 'mrel');\r\ndefineSymbol('\\\\gets', '\\u2190', 'mrel');\r\ndefineSymbol('\\\\Rightarrow', '\\u21d2', 'mrel');\r\ndefineSymbol('\\\\Leftarrow', '\\u21d0', 'mrel');\r\ndefineSymbol('\\\\longrightarrow', '\\u27f6', 'mrel');\r\ndefineSymbol('\\\\longleftarrow', '\\u27f5', 'mrel');\r\ndefineSymbol('\\\\Longrightarrow', '\\u27f9', 'mrel');\r\ndefineSymbol('\\\\implies', '\\u27f9', 'mrel');\r\ndefineSymbol('\\\\Longleftarrow', '\\u27f8', 'mrel');\r\ndefineSymbol('\\\\impliedby', '\\u27f8', 'mrel');\r\ndefineSymbol('\\\\dashrightarrow', '\\u21e2', 'mrel', 'ams');\r\ndefineSymbol('\\\\dashleftarrow', '\\u21e0', 'mrel', 'ams');\r\ndefineSymbol('\\\\Rrightarrow', '\\u21db', 'mrel', 'ams');\r\ndefineSymbol('\\\\Lleftarrow', '\\u21da', 'mrel', 'ams');\r\ndefineSymbol('\\\\longleftrightarrow', '\\u27f7', 'mrel');\r\ndefineSymbol('\\\\biconditional', '\\u27f7', 'mrel');\r\ndefineSymbol('\\\\Longleftrightarrow', '\\u27fa', 'mrel');\r\ndefineSymbol('\\\\leftrightarrows', '\\u21c6', 'mrel', 'ams');\r\ndefineSymbol('\\\\rightleftarrows', '\\u21c4', 'mrel', 'ams');\r\ndefineSymbol('\\\\mapsto', '\\u21a6', 'mrel');\r\ndefineSymbol('\\\\longmapsto', '\\u27fc', 'mrel');\r\ndefineSymbol('\\\\uparrow', '\\u2191', 'mrel');\r\ndefineSymbol('\\\\downarrow', '\\u2193', 'mrel');\r\ndefineSymbol('\\\\Uparrow', '\\u21d1', 'mrel');\r\ndefineSymbol('\\\\Downarrow', '\\u21d3', 'mrel');\r\ndefineSymbol('\\\\updownarrow', '\\u2195', 'mrel');\r\ndefineSymbol('\\\\Updownarrow', '\\u21d5', 'mrel');\r\ndefineSymbol('\\\\curvearrowright', '\\u21b7', 'mrel', 'ams');\r\ndefineSymbol('\\\\curvearrowleft', '\\u21b6', 'mrel', 'ams');\r\ndefineSymbol('\\\\hookrightarrow', '\\u21aa', 'mrel');\r\ndefineSymbol('\\\\hookleftarrow', '\\u21a9', 'mrel');\r\ndefineSymbol('\\\\rightharpoonup', '\\u21c0', 'mrel');\r\ndefineSymbol('\\\\leftharpoonup', '\\u21bc', 'mrel');\r\ndefineSymbol('\\\\rightharpoondown', '\\u21c1', 'mrel');\r\ndefineSymbol('\\\\leftharpoondown', '\\u21bd', 'mrel');\r\ndefineSymbol('\\\\rightrightarrows', '\\u21c9', 'mrel', 'ams');\r\ndefineSymbol('\\\\leftleftarrows', '\\u21c7', 'mrel', 'ams');\r\ndefineSymbol('\\\\upuparrows', '\\u21c8', 'mrel', 'ams');\r\ndefineSymbol('\\\\downdownarrows', '\\u21ca', 'mrel', 'ams');\r\ndefineSymbol('\\\\leftarrowtail', '\\u21a2', 'mrel', 'ams');\r\ndefineSymbol('\\\\rightarrowtail', '\\u21a3', 'mrel', 'ams');\r\ndefineSymbol('\\\\looparrowright', '\\u21ac', 'mrel', 'ams');\r\ndefineSymbol('\\\\looparrowleft', '\\u21ab', 'mrel', 'ams');\r\ndefineSymbol('\\\\twoheadleftarrow', '\\u219e', 'mrel', 'ams');\r\ndefineSymbol('\\\\twoheadrightarrow', '\\u21a0', 'mrel', 'ams');\r\ndefineSymbol('\\\\rightleftharpoons', '\\u21cc', 'mrel');\r\ndefineSymbol('\\\\leftrightharpoons', '\\u21cb', 'mrel', 'ams');\r\ndefineSymbol('\\\\Rsh', '\\u21b1', 'mrel', 'ams');\r\ndefineSymbol('\\\\Lsh', '\\u21b0', 'mrel', 'ams');\r\ndefineSymbol('\\\\searrow', '\\u2198', 'mrel');\r\ndefineSymbol('\\\\nearrow', '\\u2197', 'mrel');\r\ndefineSymbol('\\\\swarrow', '\\u2199', 'mrel');\r\ndefineSymbol('\\\\nwarrow', '\\u2196', 'mrel');\r\ndefineSymbol('\\\\circlearrowright', '\\u21bb', 'mrel', 'ams');\r\ndefineSymbol('\\\\circlearrowleft', '\\u21ba', 'mrel', 'ams');\r\ndefineSymbol('\\\\restriction', '\\u21be', 'mrel', 'ams');\r\ndefineSymbol('\\\\upharpoonright', '\\u21be', 'mrel', 'ams');\r\ndefineSymbol('\\\\upharpoonleft', '\\u21bf', 'mrel', 'ams');\r\ndefineSymbol('\\\\downharpoonright', '\\u21c2', 'mrel', 'ams');\r\ndefineSymbol('\\\\downharpoonleft', '\\u21c3', 'mrel', 'ams');\r\ndefineSymbol('\\\\rightsquigarrow', '\\u21dd', 'mrel', 'ams');\r\ndefineSymbol('\\\\leadsto', '\\u21dd', 'mrel', 'ams');\r\ndefineSymbol('\\\\leftrightsquigarrow', '\\u21ad', 'mrel', 'ams');\r\ndefineSymbol('\\\\originalof', '\\u22B6', 'mrel');\r\ndefineSymbol('\\\\laplace', '\\u22B6', 'mrel');\r\ndefineSymbol('\\\\imageof', '\\u22B7', 'mrel');\r\ndefineSymbol('\\\\Laplace', '\\u22B7', 'mrel');\r\ndefineSymbol('\\\\multimap', '\\u22b8', 'mrel', 'ams');\r\n// 'ams' Negated Arrows\r\ndefineSymbol('\\\\nrightarrow', '\\u219b', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleftarrow', '\\u219a', 'mrel', 'ams');\r\ndefineSymbol('\\\\nRightarrow', '\\u21cf', 'mrel', 'ams');\r\ndefineSymbol('\\\\nLeftarrow', '\\u21cd', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleftrightarrow', '\\u21ae', 'mrel', 'ams');\r\ndefineSymbol('\\\\nLeftrightarrow', '\\u21ce', 'mrel', 'ams');\r\n// 'ams' Negated Binary Relations\r\ndefineSymbol('\\\\nless', '\\u226e', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleqslant', '\\ue010', 'mrel', 'ams');\r\ndefineSymbol('\\\\lneq', '\\u2a87', 'mrel', 'ams');\r\ndefineSymbol('\\\\lneqq', '\\u2268', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleqq', '\\ue011', 'mrel', 'ams');\r\ndefineSymbol('\\\\unlhd', '\\u22b4', 'mbin', 'ams');\r\ndefineSymbol('\\\\unrhd', '\\u22b5', 'mbin', 'ams');\r\ndefineSymbol('\\\\lvertneqq', '\\ue00c', 'mrel', 'ams');\r\ndefineSymbol('\\\\lnsim', '\\u22e6', 'mrel', 'ams');\r\ndefineSymbol('\\\\lnapprox', '\\u2a89', 'mrel', 'ams');\r\ndefineSymbol('\\\\nprec', '\\u2280', 'mrel', 'ams');\r\ndefineSymbol('\\\\npreceq', '\\u22e0', 'mrel', 'ams');\r\ndefineSymbol('\\\\precnsim', '\\u22e8', 'mrel', 'ams');\r\ndefineSymbol('\\\\precnapprox', '\\u2ab9', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsim', '\\u2241', 'mrel', 'ams');\r\ndefineSymbol('\\\\nshortmid', '\\ue006', 'mrel', 'ams');\r\ndefineSymbol('\\\\nmid', '\\u2224', 'mrel', 'ams');\r\ndefineSymbol('\\\\nvdash', '\\u22ac', 'mrel', 'ams');\r\ndefineSymbol('\\\\nvDash', '\\u22ad', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngtr', '\\u226f', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngeqslant', '\\ue00f', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngeqq', '\\ue00e', 'mrel', 'ams');\r\ndefineSymbol('\\\\gneq', '\\u2a88', 'mrel', 'ams');\r\ndefineSymbol('\\\\gneqq', '\\u2269', 'mrel', 'ams');\r\ndefineSymbol('\\\\gvertneqq', '\\ue00d', 'mrel', 'ams');\r\ndefineSymbol('\\\\gnsim', '\\u22e7', 'mrel', 'ams');\r\ndefineSymbol('\\\\gnapprox', '\\u2a8a', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsucc', '\\u2281', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsucceq', '\\u22e1', 'mrel', 'ams');\r\ndefineSymbol('\\\\succnsim', '\\u22e9', 'mrel', 'ams');\r\ndefineSymbol('\\\\succnapprox', '\\u2aba', 'mrel', 'ams');\r\ndefineSymbol('\\\\ncong', '\\u2246', 'mrel', 'ams');\r\ndefineSymbol('\\\\nshortparallel', '\\ue007', 'mrel', 'ams');\r\ndefineSymbol('\\\\nparallel', '\\u2226', 'mrel', 'ams');\r\ndefineSymbol('\\\\nVDash', '\\u22af', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsupseteqq', '\\ue018', 'mrel', 'ams');\r\ndefineSymbol('\\\\supsetneq', '\\u228b', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsupsetneq', '\\ue01b', 'mrel', 'ams');\r\ndefineSymbol('\\\\supsetneqq', '\\u2acc', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsupsetneqq', '\\ue019', 'mrel', 'ams');\r\ndefineSymbol('\\\\nVdash', '\\u22ae', 'mrel', 'ams');\r\ndefineSymbol('\\\\precneqq', '\\u2ab5', 'mrel', 'ams');\r\ndefineSymbol('\\\\succneqq', '\\u2ab6', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsubseteqq', '\\ue016', 'mrel', 'ams');\r\n// 'ams' Misc\r\ndefineSymbol('\\\\checkmark', '\\u2713', 'mord', 'ams');\r\ndefineSymbol('\\\\diagup', '\\u2571', 'mord', 'ams');\r\ndefineSymbol('\\\\diagdown', '\\u2572', 'mord', 'ams');\r\ndefineSymbol('\\\\measuredangle', '\\u2221', 'mord', 'ams');\r\ndefineSymbol('\\\\sphericalangle', '\\u2222', 'mord', 'ams');\r\ndefineSymbol('\\\\backprime', '\\u2035', 'mord', 'ams');\r\ndefineSymbol('\\\\backdoubleprime', '\\u2036', 'mord', 'ams');\r\ndefineSymbol('\\\\ast', '\\u2217', 'mbin');\r\ndefineSymbol('\\\\star', '\\u22c6', 'mbin');\r\ndefineSymbol('\\\\diamond', '\\u22c4', 'mbin');\r\ndefineSymbol('\\\\Diamond', '\\u25ca', 'mord', 'ams');\r\ndefineSymbol('\\\\lozenge', '\\u25ca', 'mord', 'ams');\r\ndefineSymbol('\\\\blacklozenge', '\\u29eb', 'mord', 'ams');\r\ndefineSymbol('\\\\bigstar', '\\u2605', 'mord', 'ams');\r\n// 'ams' Hebrew\r\ndefineSymbol('\\\\aleph', '\\u2135');\r\ndefineSymbol('\\\\beth', '\\u2136', 'mord', 'ams');\r\ndefineSymbol('\\\\daleth', '\\u2138', 'mord', 'ams');\r\ndefineSymbol('\\\\gimel', '\\u2137', 'mord', 'ams');\r\n// 'ams' Delimiters\r\ndefineSymbol('\\\\lbrace', '{', 'mopen');\r\ndefineSymbol('\\\\rbrace', '}', 'mclose');\r\ndefineSymbol('\\\\langle', '\\u27e8', 'mopen');\r\ndefineSymbol('\\\\rangle', '\\u27e9', 'mclose');\r\ndefineSymbol('\\\\lfloor', '\\u230a', 'mopen');\r\ndefineSymbol('\\\\rfloor', '\\u230b', 'mclose');\r\ndefineSymbol('\\\\lceil', '\\u2308', 'mopen');\r\ndefineSymbol('\\\\rceil', '\\u2309', 'mclose');\r\ndefineSymbol('\\\\vert', '\\u2223');\r\ndefineSymbol('\\\\mvert', '\\u2223', 'mrel');\r\ndefineSymbol('\\\\lvert', '\\u2223', 'mopen');\r\ndefineSymbol('\\\\rvert', '\\u2223', 'mclose');\r\ndefineSymbol('\\\\|', '\\u2225');\r\ndefineSymbol('\\\\Vert', '\\u2225');\r\ndefineSymbol('\\\\mVert', '\\u2225');\r\ndefineSymbol('\\\\lVert', '\\u2225', 'mopen');\r\ndefineSymbol('\\\\rVert', '\\u2225', 'mclose');\r\ndefineSymbol('\\\\parallel', '\\u2225', 'mrel');\r\ndefineSymbol('\\\\shortparallel', '\\u2225', 'mrel', 'ams');\r\ndefineSymbol('\\\\lbrack', '[', 'mopen');\r\ndefineSymbol('\\\\rbrack', ']', 'mclose');\r\ndefineSymbol('\\\\{', '{', 'mopen');\r\ndefineSymbol('\\\\}', '}', 'mclose');\r\ndefineSymbol('(', '(', 'mopen');\r\ndefineSymbol(')', ')', 'mclose');\r\ndefineSymbol('[', '[', 'mopen');\r\ndefineSymbol(']', ']', 'mclose');\r\ndefineSymbol('\\\\ulcorner', '\\u250c', 'mopen', 'ams');\r\ndefineSymbol('\\\\urcorner', '\\u2510', 'mclose', 'ams');\r\ndefineSymbol('\\\\llcorner', '\\u2514', 'mopen', 'ams');\r\ndefineSymbol('\\\\lrcorner', '\\u2518', 'mclose', 'ams');\r\n// Large Delimiters\r\ndefineSymbol('\\\\lgroup', '\\u27ee', 'mopen');\r\ndefineSymbol('\\\\rgroup', '\\u27ef', 'mclose');\r\ndefineSymbol('\\\\lmoustache', '\\u23b0', 'mopen');\r\ndefineSymbol('\\\\rmoustache', '\\u23b1', 'mclose');\r\n// Relations\r\ndefineSymbol('=', '=', 'mrel');\r\ndefineSymbol('\\\\ne', '\\u2260', 'mrel');\r\ndefineSymbol('\\\\neq', '\\u2260', 'mrel');\r\n// defineSymbol( '\\\\longequal', '\\uF7D9',  'mrel',  MAIN);   // NOTE: Not TeX\r\ndefineSymbol('<', '<', 'mrel');\r\ndefineSymbol('\\\\lt', '<', 'mrel');\r\ndefineSymbol('>', '>', 'mrel');\r\ndefineSymbol('\\\\gt', '>', 'mrel');\r\ndefineSymbol('\\\\le', '\\u2264', 'mrel');\r\ndefineSymbol('\\\\leq', '\\u2264', 'mrel');\r\ndefineSymbol('\\\\ge', '\\u2265', 'mrel');\r\ndefineSymbol('\\\\geq', '\\u2265', 'mrel');\r\ndefineSymbol('\\\\leqslant', '\\u2a7d', 'mrel', 'ams');\r\ndefineSymbol('\\\\geqslant', '\\u2a7e', 'mrel', 'ams');\r\ndefineSymbol('\\\\ll', '\\u226a', 'mrel');\r\ndefineSymbol('\\\\gg', '\\u226b', 'mrel');\r\ndefineSymbol('\\\\coloneq', '\\u2254', 'mrel');\r\ndefineSymbol('\\\\measeq', '\\u225d', 'mrel'); // MEASSURED BY\r\ndefineSymbol('\\\\eqdef', '\\u225e', 'mrel');\r\ndefineSymbol('\\\\questeq', '\\u225f', 'mrel'); // QUESTIONED EQUAL TO\r\ndefineSymbol(':', ':', 'mrel');\r\ndefineSymbol('\\\\cong', '\\u2245', 'mrel');\r\ndefineSymbol('\\\\equiv', '\\u2261', 'mrel');\r\ndefineSymbol('\\\\prec', '\\u227a', 'mrel');\r\ndefineSymbol('\\\\preceq', '\\u2aaf', 'mrel');\r\ndefineSymbol('\\\\succ', '\\u227b', 'mrel');\r\ndefineSymbol('\\\\succeq', '\\u2ab0', 'mrel');\r\ndefineSymbol('\\\\perp', '\\u22a5', 'mrel');\r\ndefineSymbol('\\\\propto', '\\u221d', 'mrel');\r\ndefineSymbol('\\\\Colon', '\\u2237', 'mrel');\r\ndefineSymbol('\\\\smile', '\\u2323', 'mrel');\r\ndefineSymbol('\\\\frown', '\\u2322', 'mrel');\r\ndefineSymbol('\\\\sim', '\\u223c', 'mrel');\r\ndefineSymbol('\\\\gtrsim', '\\u2273', 'mrel', 'ams');\r\ndefineSymbol('\\\\approx', '\\u2248', 'mrel');\r\ndefineSymbol('\\\\approxeq', '\\u224a', 'mrel', 'ams');\r\ndefineSymbol('\\\\thickapprox', '\\u2248', 'mrel', 'ams');\r\ndefineSymbol('\\\\lessapprox', '\\u2a85', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtrapprox', '\\u2a86', 'mrel', 'ams');\r\ndefineSymbol('\\\\precapprox', '\\u2ab7', 'mrel', 'ams');\r\ndefineSymbol('\\\\succapprox', '\\u2ab8', 'mrel', 'ams');\r\ndefineSymbol('\\\\thicksim', '\\u223c', 'mrel', 'ams');\r\ndefineSymbol('\\\\succsim', '\\u227f', 'mrel', 'ams');\r\ndefineSymbol('\\\\precsim', '\\u227e', 'mrel', 'ams');\r\ndefineSymbol('\\\\backsim', '\\u223d', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqsim', '\\u2242', 'mrel', 'ams');\r\ndefineSymbol('\\\\backsimeq', '\\u22cd', 'mrel', 'ams');\r\ndefineSymbol('\\\\simeq', '\\u2243', 'mrel');\r\ndefineSymbol('\\\\lesssim', '\\u2272', 'mrel', 'ams');\r\ndefineSymbol('\\\\nleq', '\\u2270', 'mrel', 'ams');\r\ndefineSymbol('\\\\ngeq', '\\u2271', 'mrel', 'ams');\r\ndefineSymbol('\\\\smallsmile', '\\u2323', 'mrel', 'ams');\r\ndefineSymbol('\\\\smallfrown', '\\u2322', 'mrel', 'ams');\r\ndefineSymbol('\\\\bowtie', '\\u22c8', 'mrel');\r\ndefineSymbol('\\\\Join', '\\u22c8', 'mrel');\r\ndefineSymbol('\\\\asymp', '\\u224d', 'mrel');\r\ndefineSymbol('\\\\sqsubseteq', '\\u2291', 'mrel');\r\ndefineSymbol('\\\\sqsupseteq', '\\u2292', 'mrel');\r\ndefineSymbol('\\\\leqq', '\\u2266', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqslantless', '\\u2a95', 'mrel', 'ams');\r\ndefineSymbol('\\\\lll', '\\u22d8', 'mrel', 'ams');\r\ndefineSymbol('\\\\lessgtr', '\\u2276', 'mrel', 'ams');\r\ndefineSymbol('\\\\lesseqgtr', '\\u22da', 'mrel', 'ams');\r\ndefineSymbol('\\\\lesseqqgtr', '\\u2a8b', 'mrel', 'ams');\r\ndefineSymbol('\\\\risingdotseq', '\\u2253', 'mrel', 'ams');\r\ndefineSymbol('\\\\fallingdotseq', '\\u2252', 'mrel', 'ams');\r\ndefineSymbol('\\\\subseteqq', '\\u2ac5', 'mrel', 'ams');\r\ndefineSymbol('\\\\Subset', '\\u22d0', 'mrel', 'ams');\r\ndefineSymbol('\\\\sqsubset', '\\u228f', 'mrel', 'ams');\r\ndefineSymbol('\\\\preccurlyeq', '\\u227c', 'mrel', 'ams');\r\ndefineSymbol('\\\\curlyeqprec', '\\u22de', 'mrel', 'ams');\r\ndefineSymbol('\\\\vDash', '\\u22a8', 'mrel', 'ams');\r\ndefineSymbol('\\\\Vvdash', '\\u22aa', 'mrel', 'ams');\r\ndefineSymbol('\\\\bumpeq', '\\u224f', 'mrel', 'ams');\r\ndefineSymbol('\\\\Bumpeq', '\\u224e', 'mrel', 'ams');\r\ndefineSymbol('\\\\geqq', '\\u2267', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqslantgtr', '\\u2a96', 'mrel', 'ams');\r\ndefineSymbol('\\\\ggg', '\\u22d9', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtrless', '\\u2277', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtreqless', '\\u22db', 'mrel', 'ams');\r\ndefineSymbol('\\\\gtreqqless', '\\u2a8c', 'mrel', 'ams');\r\ndefineSymbol('\\\\supseteqq', '\\u2ac6', 'mrel', 'ams');\r\ndefineSymbol('\\\\Supset', '\\u22d1', 'mrel', 'ams');\r\ndefineSymbol('\\\\sqsupset', '\\u2290', 'mrel', 'ams');\r\ndefineSymbol('\\\\succcurlyeq', '\\u227d', 'mrel', 'ams');\r\ndefineSymbol('\\\\curlyeqsucc', '\\u22df', 'mrel', 'ams');\r\ndefineSymbol('\\\\Vdash', '\\u22a9', 'mrel', 'ams');\r\ndefineSymbol('\\\\shortmid', '\\u2223', 'mrel', 'ams');\r\ndefineSymbol('\\\\between', '\\u226c', 'mrel', 'ams');\r\ndefineSymbol('\\\\pitchfork', '\\u22d4', 'mrel', 'ams');\r\ndefineSymbol('\\\\varpropto', '\\u221d', 'mrel', 'ams');\r\ndefineSymbol('\\\\backepsilon', '\\u220d', 'mrel', 'ams');\r\ndefineSymbol('\\\\llless', '\\u22d8', 'mrel', 'ams');\r\ndefineSymbol('\\\\gggtr', '\\u22d9', 'mrel', 'ams');\r\ndefineSymbol('\\\\lhd', '\\u22b2', 'mbin', 'ams');\r\ndefineSymbol('\\\\rhd', '\\u22b3', 'mbin', 'ams');\r\ndefineSymbol('\\\\doteq', '\\u2250', 'mrel');\r\ndefineSymbol('\\\\doteqdot', '\\u2251', 'mrel', 'ams');\r\ndefineSymbol('\\\\Doteq', '\\u2251', 'mrel', 'ams');\r\ndefineSymbol('\\\\eqcirc', '\\u2256', 'mrel', 'ams');\r\ndefineSymbol('\\\\circeq', '\\u2257', 'mrel', 'ams');\r\ndefineSymbol('\\\\lessdot', '\\u22d6', 'mbin', 'ams');\r\ndefineSymbol('\\\\gtrdot', '\\u22d7', 'mbin', 'ams');\r\n// In TeX, '~' is a spacing command (non-breaking space).\r\n// However, '~' is used as an ASCII Math shortctut character, so define a \\\\~\r\n// command which maps to the '~' character\r\ndefineSymbol('\\\\~', '~', 'mrel');\r\ndefineSymbol('\\\\leftrightarrow', '\\u2194', 'mrel');\r\ndefineSymbol('\\\\Leftrightarrow', '\\u21d4', 'mrel');\r\ndefineSymbol('\\\\models', '\\u22a8', 'mrel');\r\ndefineSymbol('\\\\vdash', '\\u22a2', 'mrel');\r\ndefineSymbol('\\\\therefore', '\\u2234', 'mrel', 'ams');\r\ndefineSymbol('\\\\because', '\\u2235', 'mrel', 'ams');\r\ndefineSymbol('\\\\dashv', '\\u22a3', 'mrel');\r\ndefineSymbol('\\\\roundimplies', '\\u2970', 'mrel');\r\n// 'ams' Binary Operators\r\ndefineSymbol('+', '+', 'mbin');\r\ndefineSymbol('-', '\\u2212', 'mbin');\r\ndefineSymbol('\\u2212', '\\u2212', 'mbin');\r\ndefineSymbol('\\\\pm', '\\u00b1', 'mbin');\r\ndefineSymbol('\\\\mp', '\\u2213', 'mbin');\r\ndefineSymbol('*', '\\u2217', 'mbin');\r\ndefineSymbol('\\\\times', '\\u00d7', 'mbin');\r\ndefineSymbol('\\\\div', '\\u00f7', 'mbin');\r\ndefineSymbol('\\\\surd', '\\u221a');\r\ndefineSymbol('\\\\divides', '\\u2223', 'mbin');\r\n// From MnSymbol package\r\ndefineSymbol('\\\\ltimes', '\\u22c9', 'mbin', 'ams');\r\ndefineSymbol('\\\\rtimes', '\\u22ca', 'mbin', 'ams');\r\ndefineSymbol('\\\\leftthreetimes', '\\u22cb', 'mbin', 'ams');\r\ndefineSymbol('\\\\rightthreetimes', '\\u22cc', 'mbin', 'ams');\r\ndefineSymbol('\\\\intercal', '\\u22ba', 'mbin', 'ams');\r\ndefineSymbol('\\\\dotplus', '\\u2214', 'mbin', 'ams');\r\ndefineSymbol('\\\\doublebarwedge', '\\u2a5e', 'mbin', 'ams');\r\ndefineSymbol('\\\\divideontimes', '\\u22c7', 'mbin', 'ams');\r\ndefineSymbol('\\\\centerdot', '\\u22c5', 'mbin', 'ams');\r\ndefineSymbol('\\\\cdot', '\\u22c5', 'mbin');\r\ndefineSymbol('\\\\infty', '\\u221e');\r\ndefineSymbol('\\\\prime', '\\u2032');\r\ndefineSymbol('\\\\doubleprime', '\\u2033'); // NOTE: Not in TeX, but Mathematica\r\ndefineSymbol('\\\\angle', '\\u2220');\r\ndefineSymbol('`', '\\u2018');\r\ndefineSymbol('\\\\$', '$');\r\ndefineSymbol('\\\\%', '%');\r\ndefineSymbol('\\\\_', '_');\r\n// Note: In TeX, greek symbols are only available in Math mode\r\ndefineSymbol('\\\\alpha', '\\u03b1');\r\ndefineSymbol('\\\\beta', '\\u03b2');\r\ndefineSymbol('\\\\gamma', '\\u03b3');\r\ndefineSymbol('\\\\delta', '\\u03b4');\r\ndefineSymbol('\\\\epsilon', '\\u03f5');\r\ndefineSymbol('\\\\varepsilon', '\\u03b5');\r\ndefineSymbol('\\\\zeta', '\\u03b6');\r\ndefineSymbol('\\\\eta', '\\u03b7');\r\ndefineSymbol('\\\\theta', '\\u03b8');\r\ndefineSymbol('\\\\vartheta', '\\u03d1');\r\ndefineSymbol('\\\\iota', '\\u03b9');\r\ndefineSymbol('\\\\kappa', '\\u03ba');\r\ndefineSymbol('\\\\varkappa', '\\u03f0', 'mord', 'ams');\r\ndefineSymbol('\\\\lambda', '\\u03bb');\r\ndefineSymbol('\\\\mu', '\\u03bc');\r\ndefineSymbol('\\\\nu', '\\u03bd');\r\ndefineSymbol('\\\\xi', '\\u03be');\r\ndefineSymbol('\\\\omicron', 'o');\r\ndefineSymbol('\\\\pi', '\\u03c0');\r\ndefineSymbol('\\\\varpi', '\\u03d6');\r\ndefineSymbol('\\\\rho', '\\u03c1');\r\ndefineSymbol('\\\\varrho', '\\u03f1');\r\ndefineSymbol('\\\\sigma', '\\u03c3');\r\ndefineSymbol('\\\\varsigma', '\\u03c2');\r\ndefineSymbol('\\\\tau', '\\u03c4');\r\ndefineSymbol('\\\\phi', '\\u03d5');\r\ndefineSymbol('\\\\varphi', '\\u03c6');\r\ndefineSymbol('\\\\upsilon', '\\u03c5');\r\ndefineSymbol('\\\\chi', '\\u03c7');\r\ndefineSymbol('\\\\psi', '\\u03c8');\r\ndefineSymbol('\\\\omega', '\\u03c9');\r\ndefineSymbol('\\\\Gamma', '\\u0393');\r\ndefineSymbol('\\\\Delta', '\\u0394');\r\ndefineSymbol('\\\\Theta', '\\u0398');\r\ndefineSymbol('\\\\Lambda', '\\u039b');\r\ndefineSymbol('\\\\Xi', '\\u039e');\r\ndefineSymbol('\\\\Pi', '\\u03a0');\r\ndefineSymbol('\\\\Sigma', '\\u03a3');\r\ndefineSymbol('\\\\Upsilon', '\\u03a5');\r\ndefineSymbol('\\\\Phi', '\\u03a6');\r\ndefineSymbol('\\\\Psi', '\\u03a8');\r\ndefineSymbol('\\\\Omega', '\\u03a9');\r\n// 'ams' Greek\r\ndefineSymbol('\\\\digamma', '\\u03dd', 'mord', 'ams');\r\ndefineSymbol('\\\\emptyset', '\\u2205');\r\ndefineSymbol('\\\\varnothing', '\\u2205', 'mord', 'ams');\r\ndefineSymbol('\\\\cap', '\\u2229', 'mbin');\r\ndefineSymbol('\\\\cup', '\\u222a', 'mbin');\r\ndefineSymbol('\\\\setminus', '\\u2216', 'mbin');\r\ndefineSymbol('\\\\smallsetminus', '\\u2216', 'mbin', 'ams');\r\ndefineSymbol('\\\\complement', '\\u2201', 'mord', 'ams');\r\ndefineSymbol('\\\\in', '\\u2208', 'mrel');\r\ndefineSymbol('\\\\notin', '\\u2209', 'mrel');\r\ndefineSymbol('\\\\not', '\\u0338', 'mrel');\r\ndefineSymbol('\\\\ni', '\\u220b', 'mrel');\r\ndefineSymbol('\\\\owns', '\\u220b', 'mrel');\r\ndefineSymbol('\\\\subset', '\\u2282', 'mrel');\r\ndefineSymbol('\\\\supset', '\\u2283', 'mrel');\r\ndefineSymbol('\\\\subseteq', '\\u2286', 'mrel');\r\ndefineSymbol('\\\\supseteq', '\\u2287', 'mrel');\r\ndefineSymbol('\\\\subsetneq', '\\u228a', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsubsetneq', '\\ue01a', 'mrel', 'ams');\r\ndefineSymbol('\\\\subsetneqq', '\\u2acb', 'mrel', 'ams');\r\ndefineSymbol('\\\\varsubsetneqq', '\\ue017', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsubset', '\\u2284', 'mrel', 'ams'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\nsupset', '\\u2285', 'mrel', 'ams'); // NOTE: Not TeX?\r\ndefineSymbol('\\\\nsubseteq', '\\u2288', 'mrel', 'ams');\r\ndefineSymbol('\\\\nsupseteq', '\\u2289', 'mrel', 'ams');\r\n// See http://tex.stackexchange.com/questions/41476/lengths-and-when-to-use-them\r\ndefineSymbol('\\\\ ', '\\u00a0', 'spacing');\r\ndefineSymbol('~', '\\u00a0', 'spacing');\r\ndefineSymbol('\\\\space', '\\u00a0', 'spacing');\r\ndefineSymbol('\\\\!', null, 'spacing');\r\ndefineSymbol('\\\\,', null, 'spacing');\r\ndefineSymbol('\\\\:', null, 'spacing');\r\ndefineSymbol('\\\\;', null, 'spacing');\r\ndefineSymbol('\\\\enskip', null, 'spacing');\r\n// \\enspace is a TeX command (not LaTeX) equivalent to a \\skip\r\ndefineSymbol('\\\\enspace', null, 'spacing');\r\ndefineSymbol('\\\\quad', null, 'spacing');\r\ndefineSymbol('\\\\qquad', null, 'spacing');\r\n// Punctuation\r\ndefineSymbol('\\\\colon', ':', 'mpunct');\r\ndefineSymbol('\\\\cdotp', '\\u22c5', 'mpunct');\r\ndefineSymbol('\\\\cdots', '\\u22ef', 'minner');\r\ndefineSymbol('\\\\ddots', '\\u22f1', 'minner');\r\ndefineSymbol('\\\\ldots', '\\u2026', 'minner');\r\ndefineSymbol('\\\\mathellipsis', '\\u2026', 'minner');\r\ndefineSymbol('\\\\vdots', '\\u22ee');\r\ndefineSymbol('\\\\ldotp', '\\u002e', 'mpunct');\r\ndefineSymbol(',', ',', 'mpunct');\r\ndefineSymbol(';', ';', 'mpunct');\r\ndefineSymbol('\\\\land', '\\u2227', 'mbin');\r\ndefineSymbol('\\\\wedge', '\\u2227', 'mbin');\r\ndefineSymbol('\\\\lor', '\\u2228', 'mbin');\r\ndefineSymbol('\\\\vee', '\\u2228', 'mbin');\r\ndefineSymbol('\\\\lnot', '\\u00ac');\r\ndefineSymbol('\\\\neg', '\\u00ac');\r\ndefineSymbol('\\\\barwedge', '\\u22bc', 'mbin', 'ams');\r\ndefineSymbol('\\\\veebar', '\\u22bb', 'mbin', 'ams');\r\ndefineSymbol('\\\\nor', '\\u22bb', 'mbin', 'ams'); // NOTE: Not TeX, Mathematica\r\ndefineSymbol('\\\\curlywedge', '\\u22cf', 'mbin', 'ams');\r\ndefineSymbol('\\\\curlyvee', '\\u22ce', 'mbin', 'ams');\r\ndefineSymbol('\\\\square', '\\u25a1', 'mord', 'ams');\r\ndefineSymbol('\\\\Box', '\\u25a1', 'mord', 'ams');\r\ndefineSymbol('\\\\blacksquare', '\\u25a0', 'mord', 'ams');\r\ndefineSymbol('\\\\boxminus', '\\u229f', 'mbin', 'ams');\r\ndefineSymbol('\\\\boxplus', '\\u229e', 'mbin', 'ams');\r\ndefineSymbol('\\\\boxtimes', '\\u22a0', 'mbin', 'ams');\r\ndefineSymbol('\\\\boxdot', '\\u22a1', 'mbin', 'ams');\r\ndefineSymbol('\\\\circ', '\\u2218', 'mbin');\r\ndefineSymbol('\\\\bigcirc', '\\u25ef', 'mbin');\r\ndefineSymbol('\\\\bullet', '\\u2219', 'mbin');\r\ndefineSymbol('\\\\circleddash', '\\u229d', 'mbin', 'ams');\r\ndefineSymbol('\\\\circledast', '\\u229b', 'mbin', 'ams');\r\ndefineSymbol('\\\\oplus', '\\u2295', 'mbin');\r\ndefineSymbol('\\\\ominus', '\\u2296', 'mbin');\r\ndefineSymbol('\\\\otimes', '\\u2297', 'mbin');\r\ndefineSymbol('\\\\odot', '\\u2299', 'mbin');\r\ndefineSymbol('\\\\circledcirc', '\\u229a', 'mbin', 'ams');\r\ndefineSymbol('\\\\oslash', '\\u2298', 'mbin');\r\ndefineSymbol('\\\\circledS', '\\u24c8', 'mord', 'ams');\r\ndefineSymbol('\\\\circledR', '\\u00ae', 'mord', 'ams');\r\ndefineSymbol('\\\\triangle', '\\u25b3');\r\ndefineSymbol('\\\\bigtriangleup', '\\u25b3', 'mbin');\r\ndefineSymbol('\\\\vartriangle', '\\u25b3', 'mrel', 'ams');\r\ndefineSymbol('\\\\triangleq', '\\u225c', 'mrel', 'ams');\r\ndefineSymbol('\\\\triangledown', '\\u25bd', 'mord', 'ams');\r\ndefineSymbol('\\\\bigtriangledown', '\\u25bd', 'mbin');\r\ndefineSymbol('\\\\triangleleft', '\\u25c3', 'mbin');\r\ndefineSymbol('\\\\vartriangleleft', '\\u22b2', 'mrel', 'ams');\r\ndefineSymbol('\\\\trianglelefteq', '\\u22b4', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntriangleleft', '\\u22ea', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntrianglelefteq', '\\u22ec', 'mrel', 'ams');\r\ndefineSymbol('\\\\triangleright', '\\u25b9', 'mbin');\r\ndefineSymbol('\\\\vartriangleright', '\\u22b3', 'mrel', 'ams');\r\ndefineSymbol('\\\\trianglerighteq', '\\u22b5', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntriangleright', '\\u22eb', 'mrel', 'ams');\r\ndefineSymbol('\\\\ntrianglerighteq', '\\u22ed', 'mrel', 'ams');\r\ndefineSymbol('\\\\blacktriangle', '\\u25b2', 'mord', 'ams');\r\ndefineSymbol('\\\\blacktriangledown', '\\u25bc', 'mord', 'ams');\r\ndefineSymbol('\\\\blacktriangleleft', '\\u25c0', 'mrel', 'ams');\r\ndefineSymbol('\\\\blacktriangleright', '\\u25b6', 'mrel', 'ams');\r\ndefineSymbol('\\\\/', '/');\r\ndefineSymbol('|', '\\u2223', 'textord');\r\ndefineSymbol('\\\\And', '\\u0026', 'mbin');\r\ndefineSymbol('\\\\imath', '\\u0131');\r\ndefineSymbol('\\\\jmath', '\\u0237');\r\ndefineSymbol('\\\\degree', '\\u00b0');\r\ndefineSymbol(\"'\", '\\u2032'); // Prime\r\ndefineSymbol('\"', '\\u201D'); // Double Prime\r\n// defineSymbol( \"\\'', '\\u2033',  'mord',  MAIN);       // Double Prime\n\n/**\r\n * This module deals with creating delimiters of various sizes. The TeXbook\r\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\r\n * x to a specified variable delimiter\" paragraph.\r\n *\r\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\r\n * normal font, but in either text, script, or scriptscript style.\r\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\r\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\r\n * smaller pieces that are stacked on top of one another.\r\n *\r\n * The functions take a parameter `center`, which determines if the delimiter\r\n * should be centered around the axis.\r\n *\r\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\r\n * one of the given sizes. This is used for things like `\\bigl`.\r\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\r\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\r\n * delimiter which surrounds an expression of a given height an depth. It is\r\n * used in `\\left` and `\\right`.\r\n * @summary   Handling of delimiters surrounds symbols.\r\n */\r\n/**\r\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\r\n * font, but is restyled to either be in textstyle, scriptstyle, or\r\n * scriptscriptstyle.\r\n */\r\nfunction makeSmallDelim(type, delim, style, center, context, classes = '') {\r\n    const text = makeSymbol('Main-Regular', getValue(delim));\r\n    const span = makeStyleWrap(type, text, context.mathstyle, style, classes);\r\n    if (center) {\r\n        span.setTop((1 - context.mathstyle.sizeMultiplier / style.sizeMultiplier) *\r\n            context.mathstyle.metrics.axisHeight);\r\n    }\r\n    span.setStyle('color', context.color);\r\n    if (typeof context.opacity === 'number') {\r\n        span.setStyle('opacity', context.opacity);\r\n    }\r\n    return span;\r\n}\r\n/**\r\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\r\n * Size3, or Size4 fonts. It is always rendered in textstyle.\r\n */\r\nfunction makeLargeDelim(type, delim, size, center, context, classes = '') {\r\n    const result = makeStyleWrap(type, makeSymbol('Size' + size + '-Regular', getValue(delim), 'delimsizing size' + size), context.mathstyle, MATHSTYLES.textstyle, classes);\r\n    if (center) {\r\n        result.setTop((1 - context.mathstyle.sizeMultiplier) *\r\n            context.mathstyle.metrics.axisHeight);\r\n    }\r\n    result.setStyle('color', context.color);\r\n    if (typeof context.opacity === 'number') {\r\n        result.setStyle('opacity', context.opacity);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Make an inner span with the given offset and in the given font. This is used\r\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\r\n */\r\nfunction makeInner(symbol, font) {\r\n    let sizeClass = '';\r\n    // Apply the correct CSS class to choose the right font.\r\n    if (font === 'Size1-Regular') {\r\n        sizeClass = ' delim-size1';\r\n    }\r\n    else if (font === 'Size4-Regular') {\r\n        sizeClass = ' delim-size4';\r\n    }\r\n    return makeSymbol(font, getValue(symbol), 'delimsizinginner' + sizeClass);\r\n}\r\n/**\r\n * Make a stacked delimiter out of a given delimiter, with the total height at\r\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\r\n */\r\nfunction makeStackedDelim(type, delim, heightTotal, center, context, classes = '') {\r\n    // There are four parts, the top, an optional middle, a repeated part, and a\r\n    // bottom.\r\n    let top;\r\n    let middle;\r\n    let repeat;\r\n    let bottom;\r\n    top = repeat = bottom = getValue(delim);\r\n    middle = null;\r\n    // Also keep track of what font the delimiters are in\r\n    let font = 'Size1-Regular';\r\n    // We set the parts and font based on the symbol. Note that we use\r\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\r\n    // repeats of the arrows\r\n    if (delim === '\\\\vert' ||\r\n        delim === '\\\\lvert' ||\r\n        delim === '\\\\rvert' ||\r\n        delim === '\\\\mvert' ||\r\n        delim === '\\\\mid') {\r\n        repeat = top = bottom = '\\u2223';\r\n    }\r\n    else if (delim === '\\\\Vert' ||\r\n        delim === '\\\\lVert' ||\r\n        delim === '\\\\rVert' ||\r\n        delim === '\\\\mVert' ||\r\n        delim === '\\\\|') {\r\n        repeat = top = bottom = '\\u2225';\r\n    }\r\n    else if (delim === '\\\\uparrow') {\r\n        repeat = bottom = '\\u23d0';\r\n    }\r\n    else if (delim === '\\\\Uparrow') {\r\n        repeat = bottom = '\\u2016';\r\n    }\r\n    else if (delim === '\\\\downarrow') {\r\n        top = repeat = '\\u23d0';\r\n    }\r\n    else if (delim === '\\\\Downarrow') {\r\n        top = repeat = '\\u2016';\r\n    }\r\n    else if (delim === '\\\\updownarrow') {\r\n        top = '\\u2191';\r\n        repeat = '\\u23d0';\r\n        bottom = '\\u2193';\r\n    }\r\n    else if (delim === '\\\\Updownarrow') {\r\n        top = '\\u21d1';\r\n        repeat = '\\u2016';\r\n        bottom = '\\u21d3';\r\n    }\r\n    else if (delim === '[' || delim === '\\\\lbrack') {\r\n        top = '\\u23a1';\r\n        repeat = '\\u23a2';\r\n        bottom = '\\u23a3';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === ']' || delim === '\\\\rbrack') {\r\n        top = '\\u23a4';\r\n        repeat = '\\u23a5';\r\n        bottom = '\\u23a6';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\lfloor') {\r\n        repeat = top = '\\u23a2';\r\n        bottom = '\\u23a3';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\lceil') {\r\n        top = '\\u23a1';\r\n        repeat = bottom = '\\u23a2';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\rfloor') {\r\n        repeat = top = '\\u23a5';\r\n        bottom = '\\u23a6';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\rceil') {\r\n        top = '\\u23a4';\r\n        repeat = bottom = '\\u23a5';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '(') {\r\n        top = '\\u239b';\r\n        repeat = '\\u239c';\r\n        bottom = '\\u239d';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === ')') {\r\n        top = '\\u239e';\r\n        repeat = '\\u239f';\r\n        bottom = '\\u23a0';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\{' || delim === '\\\\lbrace') {\r\n        top = '\\u23a7';\r\n        middle = '\\u23a8';\r\n        bottom = '\\u23a9';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\}' || delim === '\\\\rbrace') {\r\n        top = '\\u23ab';\r\n        middle = '\\u23ac';\r\n        bottom = '\\u23ad';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\lgroup') {\r\n        top = '\\u23a7';\r\n        bottom = '\\u23a9';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\rgroup') {\r\n        top = '\\u23ab';\r\n        bottom = '\\u23ad';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\lmoustache') {\r\n        top = '\\u23a7';\r\n        bottom = '\\u23ad';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\rmoustache') {\r\n        top = '\\u23ab';\r\n        bottom = '\\u23a9';\r\n        repeat = '\\u23aa';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\surd') {\r\n        top = '\\ue001';\r\n        bottom = '\\u23b7';\r\n        repeat = '\\ue000';\r\n        font = 'Size4-Regular';\r\n    }\r\n    else if (delim === '\\\\ulcorner') {\r\n        top = '\\u250c';\r\n        repeat = bottom = ' ';\r\n    }\r\n    else if (delim === '\\\\urcorner') {\r\n        top = '\\u2510';\r\n        repeat = bottom = ' ';\r\n    }\r\n    else if (delim === '\\\\llcorner') {\r\n        bottom = '\\u2514';\r\n        repeat = top = ' ';\r\n    }\r\n    else if (delim === '\\\\lrcorner') {\r\n        top = '\\u2518';\r\n        repeat = top = ' ';\r\n    }\r\n    // Get the metrics of the four sections\r\n    const topMetrics = getCharacterMetrics(getValue(top), font);\r\n    const topHeightTotal = topMetrics.height + topMetrics.depth;\r\n    const repeatMetrics = getCharacterMetrics(getValue(repeat), font);\r\n    const repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\r\n    const bottomMetrics = getCharacterMetrics(getValue(bottom), font);\r\n    const bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\r\n    let middleHeightTotal = 0;\r\n    let middleFactor = 1;\r\n    if (middle !== null) {\r\n        const middleMetrics = getCharacterMetrics(getValue(middle), font);\r\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\r\n        middleFactor = 2; // repeat symmetrically above and below middle\r\n    }\r\n    // Calculate the minimal height that the delimiter can have.\r\n    // It is at least the size of the top, bottom, and optional middle combined.\r\n    const minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\r\n    // Compute the number of copies of the repeat symbol we will need\r\n    const repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\r\n    // Compute the total height of the delimiter including all the symbols\r\n    const realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal;\r\n    // The center of the delimiter is placed at the center of the axis. Note\r\n    // that in this context, 'center' means that the delimiter should be\r\n    // centered around the axis in the current style, while normally it is\r\n    // centered around the axis in textstyle.\r\n    let axisHeight = context.mathstyle.metrics.axisHeight;\r\n    if (center) {\r\n        axisHeight *= context.mathstyle.sizeMultiplier;\r\n    }\r\n    // Calculate the depth\r\n    const depth = realHeightTotal / 2 - axisHeight;\r\n    // Now, we start building the pieces that will go into the vlist\r\n    // Keep a list of the inner pieces\r\n    const inners = [];\r\n    // Add the bottom symbol\r\n    inners.push(makeInner(bottom, font));\r\n    if (middle === null) {\r\n        // Add that many symbols\r\n        for (let i = 0; i < repeatCount; i++) {\r\n            inners.push(makeInner(repeat, font));\r\n        }\r\n    }\r\n    else {\r\n        // When there is a middle bit, we need the middle part and two repeated\r\n        // sections\r\n        for (let i = 0; i < repeatCount; i++) {\r\n            inners.push(makeInner(repeat, font));\r\n        }\r\n        inners.push(makeInner(middle, font));\r\n        for (let i = 0; i < repeatCount; i++) {\r\n            inners.push(makeInner(repeat, font));\r\n        }\r\n    }\r\n    // Add the top symbol\r\n    inners.push(makeInner(top, font));\r\n    // Finally, build the vlist\r\n    const inner = makeVlist(context, inners, 'bottom', depth);\r\n    inner.setStyle('color', context.color);\r\n    if (typeof context.opacity === 'number') {\r\n        inner.setStyle('opacity', context.opacity);\r\n    }\r\n    return makeStyleWrap(type, makeSpan(inner, 'delimsizing mult'), context.mathstyle, MATHSTYLES.textstyle, classes);\r\n}\r\n// There are three kinds of delimiters, delimiters that stack when they become\r\n// too large\r\nconst stackLargeDelimiters = [\r\n    '(',\r\n    ')',\r\n    '[',\r\n    '\\\\lbrack',\r\n    ']',\r\n    '\\\\rbrack',\r\n    '\\\\{',\r\n    '\\\\lbrace',\r\n    '\\\\}',\r\n    '\\\\rbrace',\r\n    '\\\\lfloor',\r\n    '\\\\rfloor',\r\n    '\\\\lceil',\r\n    '\\\\rceil',\r\n    '\\\\surd',\r\n];\r\n// delimiters that always stack\r\nconst stackAlwaysDelimiters = [\r\n    '\\\\uparrow',\r\n    '\\\\downarrow',\r\n    '\\\\updownarrow',\r\n    '\\\\Uparrow',\r\n    '\\\\Downarrow',\r\n    '\\\\Updownarrow',\r\n    '|',\r\n    '\\\\|',\r\n    '\\\\vert',\r\n    '\\\\Vert',\r\n    '\\\\lvert',\r\n    '\\\\rvert',\r\n    '\\\\lVert',\r\n    '\\\\rVert',\r\n    '\\\\mvert',\r\n    '\\\\mid',\r\n    '\\\\lgroup',\r\n    '\\\\rgroup',\r\n    '\\\\lmoustache',\r\n    '\\\\rmoustache',\r\n];\r\n// and delimiters that never stack\r\nconst stackNeverDelimiters = [\r\n    '<',\r\n    '>',\r\n    '\\\\langle',\r\n    '\\\\rangle',\r\n    '/',\r\n    '\\\\backslash',\r\n    '\\\\lt',\r\n    '\\\\gt',\r\n];\r\n// Metrics of the different sizes. Found by looking at TeX's output of\r\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\r\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\r\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\r\n/**\r\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\r\n */\r\nfunction makeSizedDelim(type, delim, size, context, classes = '') {\r\n    if (delim === '.') {\r\n        // Empty delimiters still count as elements, even though they don't\r\n        // show anything.\r\n        return makeNullFence(type, context, classes);\r\n        // return makeSpan('', classes);\r\n    }\r\n    // < and > turn into \\langle and \\rangle in delimiters\r\n    if (delim === '<' || delim === '\\\\lt') {\r\n        delim = '\\\\langle';\r\n    }\r\n    else if (delim === '>' || delim === '\\\\gt') {\r\n        delim = '\\\\rangle';\r\n    }\r\n    // Sized delimiters are never centered.\r\n    if (stackLargeDelimiters.includes(delim) ||\r\n        stackNeverDelimiters.includes(delim)) {\r\n        return makeLargeDelim(type, delim, size, false, context, classes);\r\n    }\r\n    else if (stackAlwaysDelimiters.includes(delim)) {\r\n        return makeStackedDelim(type, delim, sizeToMaxHeight[size], false, context, classes);\r\n    }\r\n    console.assert(false, \"Unknown delimiter '\" + delim + \"'\");\r\n    return null;\r\n}\r\n// Delimiters that never stack try small delimiters and large delimiters only\r\nconst stackNeverDelimiterSequence = [\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptscriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.textstyle },\r\n    { type: 'large', size: 1 },\r\n    { type: 'large', size: 2 },\r\n    { type: 'large', size: 3 },\r\n    { type: 'large', size: 4 },\r\n];\r\n// Delimiters that always stack try the small delimiters first, then stack\r\nconst stackAlwaysDelimiterSequence = [\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptscriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.textstyle },\r\n    { type: 'stack' },\r\n];\r\n// Delimiters that stack when large try the small and then large delimiters, and\r\n// stack afterwards\r\nconst stackLargeDelimiterSequence = [\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptscriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.scriptstyle },\r\n    { type: 'small', mathstyle: MATHSTYLES.textstyle },\r\n    { type: 'large', size: 1 },\r\n    { type: 'large', size: 2 },\r\n    { type: 'large', size: 3 },\r\n    { type: 'large', size: 4 },\r\n    { type: 'stack' },\r\n];\r\n/*\r\n * Get the font used in a delimiter based on what kind of delimiter it is.\r\n */\r\nfunction delimTypeToFont(info) {\r\n    if (info.type === 'small') {\r\n        return 'Main-Regular';\r\n    }\r\n    else if (info.type === 'large') {\r\n        return 'Size' + info.size + '-Regular';\r\n    }\r\n    console.assert(info.type === 'stack');\r\n    return 'Size4-Regular';\r\n}\r\n/**\r\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\r\n * should be used to create a delimiter of the given height+depth.\r\n * @param delim - a character value (not a command)\r\n */\r\nfunction traverseSequence(delim, height, sequence, context) {\r\n    // Here, we choose the index we should start at in the sequences. In smaller\r\n    // sizes (which correspond to larger numbers in style.size) we start earlier\r\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\r\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\r\n    const start = Math.min(2, 3 - context.mathstyle.size);\r\n    for (let i = start; i < sequence.length; i++) {\r\n        if (sequence[i].type === 'stack') {\r\n            // This is always the last delimiter, so we just break the loop now.\r\n            break;\r\n        }\r\n        const metrics = getCharacterMetrics(delim, delimTypeToFont(sequence[i]));\r\n        if (metrics.defaultMetrics) {\r\n            // If we don't have metrics info for this character,\r\n            // assume we'll construct as a small delimiter\r\n            return { type: 'small', mathstyle: MATHSTYLES.scriptstyle };\r\n        }\r\n        let heightDepth = metrics.height + metrics.depth;\r\n        // Small delimiters are scaled down versions of the same font, so we\r\n        // account for the style change size.\r\n        if (sequence[i].type === 'small') {\r\n            heightDepth *= sequence[i].mathstyle.sizeMultiplier;\r\n        }\r\n        // Check if the delimiter at this size works for the given height.\r\n        if (heightDepth > height) {\r\n            return sequence[i];\r\n        }\r\n    }\r\n    // If we reached the end of the sequence, return the last sequence element.\r\n    return sequence[sequence.length - 1];\r\n}\r\n/**\r\n * Make a delimiter of a given height+depth, with optional centering. Here, we\r\n * traverse the sequences, and create a delimiter that the sequence tells us to.\r\n *\r\n * @param type - 'mopen' or 'mclose'\r\n */\r\nfunction makeCustomSizedDelim(type, delim, height, center, context, classes = '') {\r\n    if (!delim || delim.length === 0 || delim === '.') {\r\n        return makeNullFence(type, context, type);\r\n    }\r\n    if (delim === '<' || delim === '\\\\lt') {\r\n        delim = '\\\\langle';\r\n    }\r\n    else if (delim === '>' || delim === '\\\\gt') {\r\n        delim = '\\\\rangle';\r\n    }\r\n    // Decide what sequence to use\r\n    let sequence;\r\n    if (stackNeverDelimiters.includes(delim)) {\r\n        sequence = stackNeverDelimiterSequence;\r\n    }\r\n    else if (stackLargeDelimiters.includes(delim)) {\r\n        sequence = stackLargeDelimiterSequence;\r\n    }\r\n    else {\r\n        sequence = stackAlwaysDelimiterSequence;\r\n    }\r\n    // Look through the sequence\r\n    const delimType = traverseSequence(getValue(delim), height, sequence, context);\r\n    // Depending on the sequence element we decided on,\r\n    // call the appropriate function.\r\n    if (delimType.type === 'small') {\r\n        return makeSmallDelim(type, delim, delimType.mathstyle, center, context, 'ML__small-delim ' + classes);\r\n    }\r\n    if (delimType.type === 'large') {\r\n        return makeLargeDelim(type, delim, delimType.size, center, context, classes);\r\n    }\r\n    console.assert(delimType.type === 'stack');\r\n    return makeStackedDelim(type, delim, height, center, context, classes);\r\n}\r\n/**\r\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\r\n * of an expression that the delimiters surround.\r\n * See tex.web:14994\r\n */\r\nfunction makeLeftRightDelim(type, delim, height, depth, context, classes = '') {\r\n    // If this is the empty delimiter, return a null fence\r\n    if (delim === '.') {\r\n        return makeNullFence(type, context, classes);\r\n    }\r\n    // We always center \\left/\\right delimiters, so the axis is always shifted\r\n    const axisHeight = context.mathstyle.metrics.axisHeight * context.mathstyle.sizeMultiplier;\r\n    // Taken from TeX source, tex.web, function make_left_right\r\n    const delimiterFactor = 901; // plain.tex:327, texboox:152\r\n    const delimiterShortfall = 5.0 / METRICS.ptPerEm; // plain.tex:345, texboox:152\r\n    const maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\r\n    const totalHeight = Math.max((maxDistFromAxis / 500) * delimiterFactor, 2 * maxDistFromAxis - delimiterShortfall);\r\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\r\n    // height\r\n    return makeCustomSizedDelim(type, delim, totalHeight, true, context, classes);\r\n}\r\n/**\r\n *\r\n * @param type either 'mopen', 'mclose' or null\r\n */\r\nfunction makeNullFence(type, context, classes) {\r\n    return makeSpan('', 'sizing' + // @todo not useful, redundant with 'nulldelimiter'\r\n        // 'reset-' + context.size, 'size5',\r\n        // @todo: that seems like a lot of resizing... do we need both?\r\n        context.mathstyle.adjustTo(MATHSTYLES.textstyle) +\r\n        ' nulldelimiter ' + // The null delimiter has a width, specified by class 'nulldelimiter'\r\n        (classes || ''), type);\r\n}\n\nfunction stringToCodepoints(str) {\r\n    const result = [];\r\n    for (let i = 0; i < str.length; i++) {\r\n        let code = str.charCodeAt(i);\r\n        if (code === 0x0d && str.charCodeAt(i + 1) === 0x0a) {\r\n            code = 0x0a;\r\n            i++;\r\n        }\r\n        if (code === 0x0d || code === 0x0c)\r\n            code = 0x0a;\r\n        if (code === 0x00)\r\n            code = 0xfffd;\r\n        // Decode a surrogate pair into an astral codepoint.\r\n        if (code >= 0xd800 && code <= 0xdbff) {\r\n            const nextCode = str.charCodeAt(i + 1);\r\n            if (nextCode >= 0xdc00 && nextCode <= 0xdfff) {\r\n                const lead = code - 0xd800;\r\n                const trail = nextCode - 0xdc00;\r\n                code = Math.pow(2, 16) + lead * Math.pow(2, 10) + trail;\r\n                // N = ((H - 0xD800) * 0x400) + (L - 0xDC00) + 0x10000;\r\n                i++;\r\n            }\r\n        }\r\n        result.push(code);\r\n    }\r\n    return result;\r\n}\r\nconst ZWJ = 0x200d; // Zero-width joiner\r\n// const ZWSP = 0x200b; // Zero-width space\r\n/* The following codepoints should combine with the previous ones */\r\nconst EMOJI_COMBINATOR = [\r\n    [ZWJ, 1],\r\n    [0xfe0e, 2],\r\n    [0x1f3fb, 5],\r\n    [0x1f9b0, 4],\r\n    [0xe0020, 96],\r\n];\r\nlet emojiCombinator;\r\n// Regional indicator: a pair of codepoints indicating some flags\r\nconst REGIONAL_INDICATOR = [0x1f1e6, 0x1f1ff];\r\nfunction isEmojiCombinator(code) {\r\n    var _a;\r\n    if (typeof emojiCombinator === 'undefined') {\r\n        emojiCombinator = {};\r\n        EMOJI_COMBINATOR.forEach((x) => {\r\n            for (let i = x[0]; i <= x[0] + x[1] - 1; i++) {\r\n                emojiCombinator[i] = true;\r\n            }\r\n        });\r\n    }\r\n    return (_a = emojiCombinator[code]) !== null && _a !== void 0 ? _a : false;\r\n}\r\nfunction isRegionalIndicator(code) {\r\n    return code >= REGIONAL_INDICATOR[0] && code <= REGIONAL_INDICATOR[1];\r\n}\r\n/**\r\n * Return a string or an array of graphemes.\r\n * This includes:\r\n * - emoji with skin and hair modifiers\r\n * - emoji combination (for example \"female pilot\")\r\n * - text emoji with an emoji presentation style modifier\r\n *      - U+1F512 U+FE0E 🔒︎\r\n *      - U+1F512 U+FE0F 🔒️\r\n * - flags represented as two regional indicator codepoints\r\n * - flags represented as a flag emoji + zwj + an emoji tag\r\n * - other combinations (for example, rainbow flag)\r\n */\r\nfunction splitGraphemes(str) {\r\n    // If it's all ASCII, short-circuit the grapheme splitting...\r\n    if (/^[\\x20-\\xFF]*$/.test(str))\r\n        return str;\r\n    const result = [];\r\n    const codePoints = stringToCodepoints(str);\r\n    let index = 0;\r\n    while (index < codePoints.length) {\r\n        const code = codePoints[index++];\r\n        const next = codePoints[index];\r\n        // Combine sequences\r\n        if (next === ZWJ) {\r\n            // Zero-width joiner sequences are:\r\n            // ZWJ_SEQUENCE := (CHAR + ZWJ)+\r\n            const baseIndex = index - 1;\r\n            index += 2;\r\n            while (codePoints[index] === ZWJ) {\r\n                index += 2;\r\n            }\r\n            result.push(String.fromCodePoint(...codePoints.slice(baseIndex, index - baseIndex + 1)));\r\n        }\r\n        else if (isEmojiCombinator(next)) {\r\n            // Combine emoji sequences\r\n            // See http://unicode.org/reports/tr51/#def_emoji_tag_sequence\r\n            const baseIndex = index - 1; // The previous character is the 'base'\r\n            while (isEmojiCombinator(codePoints[index])) {\r\n                index += codePoints[index] === ZWJ ? 2 : 1;\r\n            }\r\n            result.push(String.fromCodePoint(...codePoints.slice(baseIndex, index - baseIndex)));\r\n        }\r\n        else if (isRegionalIndicator(code)) {\r\n            // Some (but not all) flags are represented by a sequence of two\r\n            // \"regional indicators\" codepoints.\r\n            index += 1;\r\n            result.push(String.fromCodePoint(...codePoints.slice(index - 2, 2)));\r\n        }\r\n        else {\r\n            result.push(String.fromCodePoint(code));\r\n        }\r\n    }\r\n    return result;\r\n}\n\n/**\r\n * ## Reference\r\n * TeX source code:\r\n * {@link  http://tug.org/texlive/devsrc/Build/source/texk/web2c/tex.web | Tex.web}\r\n *\r\n */\r\n/**\r\n * Given a LaTeX expression represented as a character string,\r\n * the Lexer class will scan and return Tokens for the lexical\r\n * units in the string.\r\n *\r\n * @param s A string of LaTeX\r\n */\r\nclass Tokenizer {\r\n    constructor(s) {\r\n        this.obeyspaces = false;\r\n        this.s = splitGraphemes(s);\r\n        this.pos = 0;\r\n    }\r\n    /**\r\n     * @return True if we reached the end of the stream\r\n     */\r\n    end() {\r\n        return this.pos >= this.s.length;\r\n    }\r\n    /**\r\n     * Return the next char and advance\r\n     */\r\n    get() {\r\n        return this.pos < this.s.length ? this.s[this.pos++] : '';\r\n    }\r\n    /**\r\n     * Return the next char, but do not advance\r\n     */\r\n    peek() {\r\n        return this.s[this.pos];\r\n    }\r\n    /**\r\n     * Return the next substring matching regEx and advance.\r\n     */\r\n    match(regEx) {\r\n        // this.s can either be a string, if it's made up only of ASCII chars\r\n        // or an array of graphemes, if it's more complicated.\r\n        let execResult;\r\n        if (typeof this.s === 'string') {\r\n            execResult = regEx.exec(this.s.slice(this.pos));\r\n        }\r\n        else {\r\n            execResult = regEx.exec(this.s.slice(this.pos).join(''));\r\n        }\r\n        if (execResult === null || execResult === void 0 ? void 0 : execResult[0]) {\r\n            this.pos += execResult[0].length;\r\n            return execResult[0];\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Return the next token, or null.\r\n     */\r\n    next() {\r\n        // If we've reached the end, exit\r\n        if (this.end())\r\n            return null;\r\n        // Handle white space\r\n        // In text mode, spaces are significant,\r\n        // however they are coalesced unless \\obeyspaces\r\n        if (!this.obeyspaces && this.match(/^[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]+/)) {\r\n            // Note that browsers are inconsistent in their definitions of the\r\n            // `\\s` metacharacter, so we use an explicit pattern instead.\r\n            // - IE:          `[ \\f\\n\\r\\t\\v]`\r\n            // - Chrome:      `[ \\f\\n\\r\\t\\v\\u00A0]`\r\n            // - Firefox:     `[ \\f\\n\\r\\t\\v\\u00A0\\u2028\\u2029]`\r\n            // - \\f \\u000C: form feed (FORM FEED)\r\n            // - \\n \\u000A: linefeed (LINE FEED)\r\n            // - \\r \\u000D: carriage return\r\n            // - \\t \\u0009: tab (CHARACTER TABULATION)\r\n            // - \\v \\u000B: vertical tab (LINE TABULATION)\r\n            // - \\u00A0: NON-BREAKING SPACE\r\n            // - \\u2028: LINE SEPARATOR\r\n            // - \\u2029: PARAGRAPH SEPARATOR\r\n            return '<space>';\r\n        }\r\n        else if (this.obeyspaces &&\r\n            this.match(/^[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]/)) {\r\n            // Don't coalesce when this.obeyspaces is true (different regex from above)\r\n            return '<space>';\r\n        }\r\n        const next = this.get();\r\n        // Is it a command?\r\n        if (next === '\\\\') {\r\n            if (!this.end()) {\r\n                // A command is either a string of letters and asterisks...\r\n                let command = this.match(/^[a-zA-Z*]+/);\r\n                if (command) {\r\n                    // Spaces after a 'control word' are ignored\r\n                    // (but not after a 'control symbol' (single char)\r\n                    this.match(/^[ \\f\\n\\r\\t\\v\\xA0\\u2028\\u2029]*/);\r\n                }\r\n                else {\r\n                    // ... or a single non-letter character\r\n                    command = this.get();\r\n                    if (command === ' ') {\r\n                        // The `\\ ` command is equivalent to a single space\r\n                        return '<space>';\r\n                    }\r\n                }\r\n                return '\\\\' + command;\r\n            }\r\n        }\r\n        else if (next === '{') {\r\n            // This is a group start\r\n            return '<{>';\r\n        }\r\n        else if (next === '}') {\r\n            // This is a group end\r\n            return '<}>';\r\n        }\r\n        else if (next === '^') {\r\n            if (this.peek() === '^') {\r\n                // It might be a ^^ command (inline hex character)\r\n                this.get();\r\n                // There can be zero to six carets with the same number of hex digits\r\n                const hex = this.match(/^(\\^(\\^(\\^(\\^[0-9a-f])?[0-9a-f])?[0-9a-f])?[0-9a-f])?[0-9a-f][0-9a-f]/);\r\n                if (hex) {\r\n                    return String.fromCodePoint(parseInt(hex.slice(hex.lastIndexOf('^') + 1), 16));\r\n                }\r\n            }\r\n            return next;\r\n        }\r\n        else if (next === '#') {\r\n            // This could be either a param token, or a literal # (used for\r\n            // colorspecs, for example). A param token is a '#' followed by\r\n            // - a digit 0-9 followed by a non-alpha, non-digit\r\n            // - or '?'.\r\n            // Otherwise, it's a literal '#'.\r\n            if (!this.end()) {\r\n                let isParam = false;\r\n                if (/[0-9?]/.test(this.peek())) {\r\n                    // Could be a param\r\n                    isParam = true;\r\n                    // Need to look ahead to the following char\r\n                    if (this.pos + 1 < this.s.length) {\r\n                        const after = this.s[this.pos + 1];\r\n                        isParam = /[^0-9A-Za-z]/.test(after);\r\n                    }\r\n                }\r\n                if (isParam) {\r\n                    return '#' + this.get();\r\n                }\r\n                return '#';\r\n            }\r\n        }\r\n        else if (next === '$') {\r\n            // Mode switch\r\n            if (this.peek() === '$') {\r\n                // $$\r\n                this.get();\r\n                return '<$$>';\r\n            }\r\n            // $\r\n            return '<$>';\r\n        }\r\n        return next;\r\n    }\r\n}\r\n// Some primitive commands need to be handled in the expansion phase\r\n// (the 'gullet')\r\nfunction expand(lex, args) {\r\n    var _a, _b, _c, _d;\r\n    let result = [];\r\n    let token = lex.next();\r\n    if (token) {\r\n        if (token === '\\\\relax') ;\r\n        else if (token === '\\\\noexpand') {\r\n            // Do not expand the next token\r\n            token = lex.next();\r\n            if (token) {\r\n                result.push(token);\r\n            }\r\n        }\r\n        else if (token === '\\\\obeyspaces') {\r\n            lex.obeyspaces = true;\r\n        }\r\n        else if (token === '\\\\space' || token === '~') {\r\n            // The `\\space` command is equivalent to a single space\r\n            // The ~ is an 'active character' (a single character macro)\r\n            // that maps to <space>\r\n            result.push('<space>');\r\n        }\r\n        else if (token === '\\\\bgroup') {\r\n            // Begin group, synonym for opening brace\r\n            result.push('<{>');\r\n        }\r\n        else if (token === '\\\\egroup') {\r\n            // End group, synonym for closing brace\r\n            result.push('<}>');\r\n        }\r\n        else if (token === '\\\\string') {\r\n            // Turn the next token into a string\r\n            token = lex.next();\r\n            if (token) {\r\n                if (token[0] === '\\\\') {\r\n                    Array.from(token).forEach((x) => result.push(x === '\\\\' ? '\\\\backslash' : x));\r\n                }\r\n                else if (token === '<{>') {\r\n                    result.push('\\\\{');\r\n                }\r\n                else if (token === '<space>') {\r\n                    result.push('~');\r\n                }\r\n                else if (token === '<}>') {\r\n                    result.push('\\\\}');\r\n                }\r\n            }\r\n        }\r\n        else if (token === '\\\\csname') {\r\n            // Turn the next tokens, until `\\endcsname`, into a command\r\n            while (lex.peek() === '<space>') {\r\n                lex.next();\r\n            }\r\n            let command = '';\r\n            let done = false;\r\n            let tokens = [];\r\n            do {\r\n                if (tokens.length === 0) {\r\n                    // We're out of tokens to look at, get some more\r\n                    if (/^#[0-9?]$/.test(lex.peek())) {\r\n                        // Expand parameters (but not commands)\r\n                        const param = lex.get().slice(1);\r\n                        tokens = tokenize((_b = (_a = args === null || args === void 0 ? void 0 : args[param]) !== null && _a !== void 0 ? _a : args === null || args === void 0 ? void 0 : args['?']) !== null && _b !== void 0 ? _b : '\\\\placeholder{}', args);\r\n                        token = tokens[0];\r\n                    }\r\n                    else {\r\n                        token = lex.next();\r\n                        tokens = token ? [token] : [];\r\n                    }\r\n                }\r\n                done = tokens.length === 0;\r\n                if (!done && token === '\\\\endcsname') {\r\n                    done = true;\r\n                    tokens.shift();\r\n                }\r\n                if (!done) {\r\n                    done =\r\n                        token === '<$>' ||\r\n                            token === '<$$>' ||\r\n                            token === '<{>' ||\r\n                            token === '<}>' ||\r\n                            (token.length > 1 && token[0] === '\\\\');\r\n                }\r\n                if (!done) {\r\n                    command += tokens.shift();\r\n                }\r\n            } while (!done);\r\n            if (command) {\r\n                result.push('\\\\' + command);\r\n            }\r\n            result = result.concat(tokens);\r\n        }\r\n        else if (token === '\\\\endcsname') ;\r\n        else if (token.length > 1 && token[0] === '#') {\r\n            // It's a parameter to expand\r\n            const param = token.slice(1);\r\n            result = result.concat(tokenize((_d = (_c = args === null || args === void 0 ? void 0 : args[param]) !== null && _c !== void 0 ? _c : args === null || args === void 0 ? void 0 : args['?']) !== null && _d !== void 0 ? _d : '\\\\placeholder{}', args));\r\n        }\r\n        else {\r\n            result.push(token);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create Tokens from a stream of LaTeX\r\n *\r\n * @param s - A string of LaTeX. It can include comments (with the `%`\r\n * marker) and multiple lines.\r\n */\r\nfunction tokenize(s, args) {\r\n    // Merge multiple lines into one, and remove comments\r\n    const lines = s.toString().split(/\\r?\\n/);\r\n    let stream = '';\r\n    let sep = '';\r\n    for (const line of lines) {\r\n        stream += sep;\r\n        sep = ' ';\r\n        // Remove everything after a % (comment marker)\r\n        // (but \\% should be preserved...)\r\n        const m = line.match(/((?:\\\\%)|[^%])*/);\r\n        if (m !== null)\r\n            stream += m[0];\r\n    }\r\n    const tokenizer = new Tokenizer(stream);\r\n    let result = [];\r\n    do {\r\n        result = result.concat(expand(tokenizer, args));\r\n    } while (!tokenizer.end());\r\n    return result;\r\n}\r\nfunction joinLatex(segments) {\r\n    let sep = '';\r\n    let result = '';\r\n    for (const segment of segments) {\r\n        if (segment) {\r\n            if (/[a-zA-Z*]/.test(segment[0])) {\r\n                // If the segment begins with a char that *could* be in a command\r\n                // name... insert a separator (if one was needed for the previous segment)\r\n                result += sep;\r\n            }\r\n            // If the segment ends in a command...\r\n            if (/\\\\[a-zA-Z]+\\*?$/.test(segment)) {\r\n                // ... potentially add a space before the next segment\r\n                sep = ' ';\r\n            }\r\n            else {\r\n                sep = '';\r\n            }\r\n            result += segment;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction tokensToString(tokens) {\r\n    const result = joinLatex(tokens.map((token) => {\r\n        var _a;\r\n        return ((_a = {\r\n            '<space>': ' ',\r\n            '<$$>': '$$',\r\n            '<$>': '$',\r\n            '<{>': '{',\r\n            '<}>': '}',\r\n        }[token]) !== null && _a !== void 0 ? _a : token);\r\n    }));\r\n    return result;\r\n}\n\n// See https://tex.stackexchange.com/questions/58098/what-are-all-the-font-styles-i-can-use-in-math-mode\r\n/*\r\n * Return an array of runs with the same mode\r\n */\r\nfunction getModeRuns(atoms) {\r\n    const result = [];\r\n    let run = [];\r\n    let currentMode = 'NONE';\r\n    atoms.forEach((atom) => {\r\n        if (atom.type !== 'first') {\r\n            if (atom.mode !== currentMode) {\r\n                if (run.length > 0)\r\n                    result.push(run);\r\n                run = [atom];\r\n                currentMode = atom.mode;\r\n            }\r\n            else {\r\n                run.push(atom);\r\n            }\r\n        }\r\n    });\r\n    // Push whatever is left\r\n    if (run.length > 0)\r\n        result.push(run);\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @param {Atom} parent the parent or predecessor of the atom list\r\n * @param {Atom[]} atoms the list of atoms to transform to LaTeX\r\n * @param {boolean} expandMacro true if macros should be expanded\r\n * @result {string} a LaTeX string\r\n */\r\nfunction latexifyArray(parent, atoms, expandMacro) {\r\n    if (atoms.length === 0)\r\n        return '';\r\n    if (atoms[0].type === 'first') {\r\n        if (atoms.length === 1)\r\n            return '';\r\n        // Remove the 'first' atom, if present\r\n        atoms = atoms.slice(1);\r\n    }\r\n    if (atoms.length === 0)\r\n        return '';\r\n    return joinLatex(getPropertyRuns(atoms, 'cssClass').map((x) => {\r\n        const result = joinLatex(getPropertyRuns(x, 'color').map((x) => joinLatex(getModeRuns(x).map((x) => emitLatexRun(parent, x, expandMacro)))));\r\n        if (x[0].cssClass &&\r\n            (typeof parent === 'undefined' ||\r\n                parent.cssClass !== x[0].cssClass)) {\r\n            if (x[0].cssClass === 'ML__boldsymbol') {\r\n                return '\\\\boldsymbol{' + result + '}';\r\n            }\r\n            else if (x[0].cssClass === 'ML__emph') {\r\n                return '\\\\emph{' + result + '}';\r\n            }\r\n            return '\\\\class{' + x[0].cssClass + '}{' + result + '}';\r\n        }\r\n        return result;\r\n    }));\r\n}\r\n/**\r\n * Given an atom or an array of atoms, return a LaTeX string representation\r\n */\r\nfunction latexify(parent, value, expandMacro) {\r\n    let result = '';\r\n    if (isArray(value)) {\r\n        result = latexifyArray(parent, value, expandMacro);\r\n    }\r\n    else if (typeof value === 'number' || typeof value === 'boolean') {\r\n        result = value.toString();\r\n    }\r\n    else if (typeof value === 'string') {\r\n        result = value.replace(/\\s/g, '~');\r\n    }\r\n    else if (typeof value !== 'undefined' &&\r\n        value !== null &&\r\n        isFunction(value.toLatex)) {\r\n        result = value.toLatex(expandMacro);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Return a LaTeX representation of the atom.\r\n *\r\n * @param {boolean} expandMacro - If true, macros are fully expanded. This will\r\n * no longer round-trip.\r\n *\r\n */\r\nfunction atomToLatex(atom, expandMacro) {\r\n    expandMacro = typeof expandMacro === 'undefined' ? false : expandMacro;\r\n    // If we have some verbatim latex for this atom, use it.\r\n    // This allow non-significant punctuation to be preserved when possible.\r\n    if (!expandMacro && atom.latex) {\r\n        return atom.latex;\r\n    }\r\n    let result = '';\r\n    let col = 0;\r\n    let row = 0;\r\n    let i = 0;\r\n    const command = atom.symbol;\r\n    let segments = [];\r\n    const emit$1 = (parent, atom) => latexify(parent, atom, expandMacro);\r\n    // atom.mode=='text' is handled in the switch by looking at atom.type===''\r\n    switch (atom.type) {\r\n        case 'group':\r\n            if (command) {\r\n                // This is a macro\r\n                result = expandMacro ? emit$1(atom, atom.body) : atom.latex;\r\n            }\r\n            else {\r\n                result =\r\n                    atom.latexOpen || (atom.cssId || atom.cssClass ? '' : '{');\r\n                if (atom.cssId)\r\n                    result += '\\\\cssId{' + atom.cssId + '}{';\r\n                if (atom.cssClass === 'ML__emph') {\r\n                    result += `\\\\emph{${emit$1(atom, atom.body)}`;\r\n                }\r\n                else {\r\n                    if (atom.cssClass) {\r\n                        result += '\\\\class{' + atom.cssClass + '}{';\r\n                    }\r\n                    result += emit$1(atom, atom.body);\r\n                    if (atom.cssClass)\r\n                        result += '}';\r\n                }\r\n                if (atom.cssId)\r\n                    result += '}';\r\n                result +=\r\n                    atom.latexClose || (atom.cssId || atom.cssClass ? '' : '}');\r\n            }\r\n            break;\r\n        case 'array':\r\n            result += '\\\\begin{' + atom.environmentName + '}';\r\n            if (atom.environmentName === 'array') {\r\n                result += '{';\r\n                if (typeof atom.colFormat !== 'undefined') {\r\n                    for (i = 0; i < atom.colFormat.length; i++) {\r\n                        if (atom.colFormat[i].align) {\r\n                            result += atom.colFormat[i].align;\r\n                        }\r\n                        else if (atom.colFormat[i].rule) {\r\n                            result += '|';\r\n                        }\r\n                    }\r\n                }\r\n                result += '}';\r\n            }\r\n            for (row = 0; row < atom.array.length; row++) {\r\n                for (col = 0; col < atom.array[row].length; col++) {\r\n                    if (col > 0)\r\n                        result += ' & ';\r\n                    result += emit$1(atom, atom.array[row][col]);\r\n                }\r\n                // Adds a separator between rows (but not after the last row)\r\n                if (row < atom.array.length - 1) {\r\n                    result += ' \\\\\\\\ ';\r\n                }\r\n            }\r\n            result += '\\\\end{' + atom.environmentName + '}';\r\n            break;\r\n        case 'root':\r\n            result = emit$1(atom, atom.body);\r\n            break;\r\n        case 'leftright':\r\n            if (atom.inner) {\r\n                segments = [\r\n                    '\\\\left' + (atom.leftDelim || '.'),\r\n                    emit$1(atom, atom.body),\r\n                    '\\\\right' + (atom.rightDelim || '.'),\r\n                ];\r\n            }\r\n            else {\r\n                if (expandMacro) {\r\n                    // If we're in 'expandMacro' mode (i.e. interchange format\r\n                    // used, e.g., on the clipboard for maximum compatibility\r\n                    // with other LaTeX renderers), drop the `\\mleft(` and `\\mright`)\r\n                    // commands\r\n                    segments = [\r\n                        atom.leftDelim === '.' ? '' : atom.leftDelim,\r\n                        emit$1(atom, atom.body),\r\n                        atom.rightDelim === '.' ? '' : atom.rightDelim,\r\n                    ];\r\n                }\r\n                else {\r\n                    segments = [\r\n                        '\\\\mleft' + (atom.leftDelim || '.'),\r\n                        emit$1(atom, atom.body),\r\n                        '\\\\mright' + (atom.rightDelim || '.'),\r\n                    ];\r\n                }\r\n            }\r\n            result += joinLatex(segments);\r\n            break;\r\n        case 'delim':\r\n        case 'sizeddelim':\r\n            result += command + '{' + atom.delim + '}';\r\n            break;\r\n        case 'rule':\r\n            result += command;\r\n            if (atom.shift) {\r\n                result += `[${emit$1(atom, atom.shift)}em]`;\r\n            }\r\n            result += `{${emit$1(atom, atom.width)}em}{${emit$1(atom, atom.height)}em}`;\r\n            break;\r\n        case 'mord':\r\n        case 'minner':\r\n        case 'mbin':\r\n        case 'mrel':\r\n        case 'mpunct':\r\n        case 'mopen':\r\n        case 'mclose':\r\n        case 'textord':\r\n            if (command === '\\\\char\"') {\r\n                result += atom.latex;\r\n            }\r\n            else {\r\n                result += emit(command, null, atom, emit$1);\r\n            }\r\n            break;\r\n        case 'mop':\r\n            if (atom.body !== '\\u200b') {\r\n                // Not ZERO-WIDTH\r\n                if (command === '\\\\mathop') {\r\n                    // The argument to mathop is math, therefor atom.body can be an expression\r\n                    result += command + '{' + emit$1(atom, atom.body) + '}';\r\n                }\r\n                else if (command === '\\\\operatorname') {\r\n                    // The argument to `\\operatorname` is 'math' and needs to be latexified\r\n                    result += command + '{' + emit$1(atom, atom.body) + '}';\r\n                }\r\n                else {\r\n                    result += command;\r\n                    if (/^\\\\.*[a-zA-Z0-9]$/.test(command)) {\r\n                        // Add a space after commands, to avoid, e.g.\r\n                        // '\\sin' + 'x' -> '\\sinx' instead of '\\sin x'\r\n                        result += ' ';\r\n                    }\r\n                }\r\n            }\r\n            if (atom.explicitLimits) {\r\n                if (atom.limits === 'limits')\r\n                    result += '\\\\limits ';\r\n                if (atom.limits === 'nolimits')\r\n                    result += '\\\\nolimits ';\r\n            }\r\n            break;\r\n        case 'spacing':\r\n            // Three kinds of spacing commands:\r\n            // \\hskip and \\kern which take one implicit parameter\r\n            // \\hspace and hspace* with take one *explicit* parameter\r\n            // \\quad, etc... which take no parameters.\r\n            result += command;\r\n            if (command === '\\\\hspace' || command === '\\\\hspace*') {\r\n                result += '{';\r\n                if (atom.width) {\r\n                    result += Number(atom.width).toString() + 'em';\r\n                }\r\n                else {\r\n                    result += '0em';\r\n                }\r\n                result += '}';\r\n            }\r\n            else {\r\n                result += ' ';\r\n                if (atom.width) {\r\n                    result += Number(atom.width).toString() + 'em ';\r\n                }\r\n            }\r\n            break;\r\n        case 'enclose':\r\n            result += command;\r\n            if (command === '\\\\enclose') {\r\n                result += '{' + Object.keys(atom.notation).join(' ') + '}';\r\n                // \\enclose can have optional parameters...\r\n                let style = '';\r\n                let sep = '';\r\n                if (atom.backgroundColor &&\r\n                    atom.backgroundColor !== 'transparent') {\r\n                    style +=\r\n                        sep +\r\n                            'mathbackground=\"' +\r\n                            colorToString(atom.backgroundColor) +\r\n                            '\"';\r\n                    sep = ',';\r\n                }\r\n                if (atom.shadow && atom.shadow !== 'auto') {\r\n                    style += sep + 'shadow=\"' + atom.shadow + '\"';\r\n                    sep = ',';\r\n                }\r\n                if (atom.strokeWidth !== 1 || atom.strokeStyle !== 'solid') {\r\n                    style += sep + atom.borderStyle;\r\n                    sep = ',';\r\n                }\r\n                else if (atom.strokeColor &&\r\n                    atom.strokeColor !== 'currentColor') {\r\n                    style +=\r\n                        sep +\r\n                            'mathcolor=\"' +\r\n                            colorToString(atom.strokeColor) +\r\n                            '\"';\r\n                    sep = ',';\r\n                }\r\n                if (style) {\r\n                    result += `[${style}]`;\r\n                }\r\n            }\r\n            result += `{${emit$1(atom, atom.body)}}`;\r\n            break;\r\n        case 'mathstyle':\r\n            result += '\\\\' + atom.mathstyle;\r\n            break;\r\n        case 'space':\r\n            result += atom.symbol;\r\n            break;\r\n        case 'placeholder':\r\n            result += '\\\\placeholder{}';\r\n            break;\r\n        case 'first':\r\n        case 'command':\r\n        case 'msubsup':\r\n            break;\r\n        case 'error':\r\n            result += atom.latex;\r\n            break;\r\n        case 'composition':\r\n            result = '';\r\n            break;\r\n        case '':\r\n            console.assert(atom.mode === 'text', 'Null atom type in mode ' + atom.mode);\r\n            console.error('Attempting to emit a text atom');\r\n            break;\r\n        default:\r\n            result = emit(command, null, atom, emit$1);\r\n            console.assert(Boolean(result), 'Missing custom emiter for ', command || atom.body);\r\n            if (!result) {\r\n                result += command;\r\n            }\r\n            break;\r\n    }\r\n    if (typeof atom.superscript !== 'undefined') {\r\n        let sup = emit$1(atom, atom.superscript);\r\n        if (sup.length === 1) {\r\n            if (sup === '\\u2032') {\r\n                // PRIME\r\n                sup = '\\\\prime ';\r\n            }\r\n            else if (sup === '\\u2033') {\r\n                // DOUBLE-PRIME\r\n                sup = '\\\\doubleprime ';\r\n            }\r\n            result += '^' + sup;\r\n        }\r\n        else {\r\n            result += '^{' + sup + '}';\r\n        }\r\n    }\r\n    if (typeof atom.subscript !== 'undefined') {\r\n        const sub = emit$1(atom, atom.subscript);\r\n        if (sub.length === 1) {\r\n            result += '_' + sub;\r\n        }\r\n        else {\r\n            result += '_{' + sub + '}';\r\n        }\r\n    }\r\n    return result;\r\n}\n\nconst ATOM_REGISTRY = {};\r\n// A table of size -> font size for the different sizing functions\r\nconst SIZING_MULTIPLIER = {\r\n    size1: 0.5,\r\n    size2: 0.7,\r\n    size3: 0.8,\r\n    size4: 0.9,\r\n    size5: 1.0,\r\n    size6: 1.2,\r\n    size7: 1.44,\r\n    size8: 1.73,\r\n    size9: 2.07,\r\n    size10: 2.49,\r\n};\r\nfunction registerAtomType(name, decompose) {\r\n    ATOM_REGISTRY[name] = { decompose: decompose };\r\n}\r\n/**\r\n * Return a list of spans equivalent to atoms.\r\n * A span is the most elementary type possible, for example 'text'\r\n * or 'vlist', while the input atoms may be more abstract and complex,\r\n * such as 'genfrac'\r\n *\r\n * @param context Font family, variant, size, color, and other info useful\r\n * to render an expression\r\n * @param atoms - A single atom or an array of atoms\r\n */\r\nfunction decompose(inputContext, atoms) {\r\n    var _a, _b;\r\n    function isDigit(atom) {\r\n        return (atom.type === 'mord' &&\r\n            Boolean(atom.symbol) &&\r\n            /^[0-9,.]$/.test(atom.symbol));\r\n    }\r\n    function isText(atom) {\r\n        return atom.mode === 'text';\r\n    }\r\n    // We can be passed either a Context object, or\r\n    // a simple object with some properties set.\r\n    const context = inputContext instanceof Context\r\n        ? inputContext\r\n        : new Context(inputContext);\r\n    // In most cases we want to display selection,\r\n    // except if the atomIdsSettings.groupNumbers flag is set which is used for\r\n    // read aloud.\r\n    const displaySelection = !context.atomIdsSettings || !context.atomIdsSettings.groupNumbers;\r\n    let result = [];\r\n    if (isArray(atoms)) {\r\n        if (atoms.length === 0) {\r\n            return [];\r\n        }\r\n        else if (atoms.length === 1) {\r\n            result = atoms[0].decompose(context);\r\n            if (result && displaySelection && atoms[0].isSelected) {\r\n                result.forEach((x) => x.selected(true));\r\n            }\r\n            console.assert(!result || isArray(result));\r\n        }\r\n        else {\r\n            let selection = [];\r\n            let digitOrTextStringID = '';\r\n            let lastWasDigit = true;\r\n            let phantomBase = null;\r\n            for (let i = 0; i < atoms.length; i++) {\r\n                // If this is a scaffolding supsub, we'll use the\r\n                // phantomBase from the previous atom to position the supsub.\r\n                // Otherwise, no need for the phantomBase\r\n                if (atoms[i].body !== '\\u200b' ||\r\n                    (!atoms[i].superscript && !atoms[i].subscript)) {\r\n                    phantomBase = null;\r\n                }\r\n                if (((_a = context.atomIdsSettings) === null || _a === void 0 ? void 0 : _a.groupNumbers) &&\r\n                    digitOrTextStringID &&\r\n                    ((lastWasDigit && isDigit(atoms[i])) ||\r\n                        (!lastWasDigit && isText(atoms[i])))) {\r\n                    context.atomIdsSettings.overrideID = digitOrTextStringID;\r\n                }\r\n                const span = atoms[i].decompose(context, phantomBase);\r\n                if (context.atomIdsSettings) {\r\n                    context.atomIdsSettings.overrideID = null;\r\n                }\r\n                if (span) {\r\n                    // The result from decompose is always an array\r\n                    // Flatten it (i.e. [[a1, a2], b1, b2] -> [a1, a2, b1, b2]\r\n                    const flat = [].concat(...span);\r\n                    phantomBase = flat;\r\n                    // If this is a digit or text run, keep track of it\r\n                    if ((_b = context.atomIdsSettings) === null || _b === void 0 ? void 0 : _b.groupNumbers) {\r\n                        if (isDigit(atoms[i]) || isText(atoms[i])) {\r\n                            if (!digitOrTextStringID ||\r\n                                lastWasDigit !== isDigit(atoms[i])) {\r\n                                // changed from text to digits or vice-versa\r\n                                lastWasDigit = isDigit(atoms[i]);\r\n                                digitOrTextStringID = atoms[i].id;\r\n                            }\r\n                        }\r\n                        if ((!(isDigit(atoms[i]) || isText(atoms[i])) ||\r\n                            atoms[i].superscript ||\r\n                            atoms[i].subscript) &&\r\n                            digitOrTextStringID) {\r\n                            // Done with digits/text\r\n                            digitOrTextStringID = '';\r\n                        }\r\n                    }\r\n                    if (displaySelection && atoms[i].isSelected) {\r\n                        selection = selection.concat(flat);\r\n                        selection.forEach((x) => x.selected(true));\r\n                    }\r\n                    else {\r\n                        if (selection.length > 0) {\r\n                            // There was a selection, but we're out of it now\r\n                            // Append the selection\r\n                            result = [...result, ...selection];\r\n                            selection = [];\r\n                        }\r\n                        result = result.concat(flat);\r\n                    }\r\n                }\r\n            }\r\n            // Is there a leftover selection?\r\n            if (selection.length > 0) {\r\n                result = [...result, ...selection];\r\n                selection = [];\r\n            }\r\n        }\r\n    }\r\n    else if (atoms instanceof Atom) {\r\n        // This is a single atom, decompose it\r\n        result = atoms.decompose(context);\r\n        if (result && displaySelection && atoms.isSelected) {\r\n            result.forEach((x) => x.selected(true));\r\n        }\r\n    }\r\n    if (!result || result.length === 0)\r\n        return null;\r\n    console.assert(isArray(result) && result.length > 0);\r\n    // If the mathstyle changed between the parent and the current atom,\r\n    // account for the size difference\r\n    if (context.mathstyle !== context.parentMathstyle) {\r\n        const factor = context.mathstyle.sizeMultiplier /\r\n            context.parentMathstyle.sizeMultiplier;\r\n        for (const span of result) {\r\n            console.assert(!isArray(span));\r\n            console.assert(typeof span.height === 'number' && isFinite(span.height));\r\n            span.height *= factor;\r\n            span.depth *= factor;\r\n        }\r\n    }\r\n    // If the size changed between the parent and the current group,\r\n    // account for the size difference\r\n    if (context.size !== context.parentSize) {\r\n        const factor = SIZING_MULTIPLIER[context.size] /\r\n            SIZING_MULTIPLIER[context.parentSize];\r\n        for (const span of result) {\r\n            console.assert(!isArray(span));\r\n            console.assert(typeof span.height === 'number' && isFinite(span.height));\r\n            span.height *= factor;\r\n            span.depth *= factor;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * An atom is an object encapsulating an elementary mathematical unit,\r\n * independent of its graphical representation.\r\n *\r\n * It keeps track of the content, while the dimensions, position and style\r\n * are tracked by Span objects which are created by the `decompose()` functions.\r\n *\r\n * @param style A set of additional properties to append to\r\n * the atom\r\n * @property mode - `'display'`, `'command'`, etc...\r\n * @property type - Type can be one of:\r\n * - `mord`: ordinary symbol, e.g. `x`, `\\alpha`\r\n * - `textord`: ordinary characters\r\n * - `mop`: operators, including special functions, `\\sin`, `\\sum`, `\\cap`.\r\n * - `mbin`: binary operator: `+`, `*`, etc...\r\n * - `mrel`: relational operator: `=`, `\\ne`, etc...\r\n * - `mpunct`: punctuation: `,`, `:`, etc...\r\n * - `mopen`: opening fence: `(`, `\\langle`, etc...\r\n * - `mclose`: closing fence: `)`, `\\rangle`, etc...\r\n * - `minner`: special layout cases, overlap, `\\left...\\right`\r\n *\r\n * In addition to these basic types, which correspond to the TeX atom types,\r\n * some atoms represent more complex compounds, including:\r\n * - `space` and `spacing`: blank space between atoms\r\n * - `mathstyle`: to change the math style used: `display` or `text`.\r\n * The layout rules are different for each, the latter being more compact and\r\n * intended to be incorporated with surrounding non-math text.\r\n * - `root`: a group, which has no parent (only one per formula)\r\n * - `group`: a simple group of atoms, for example from a `{...}`\r\n * - `sizing`: set the size of the font used\r\n * - `rule`: draw a line, for the `\\rule` command\r\n * - `line`: used by `\\overline` and `\\underline` commands\r\n * - `box`: a border drawn around an expression and change its background color\r\n * - `overlap`: display a symbol _over_ another\r\n * - `overunder`: displays an annotation above or below a symbol\r\n * - `array`: a group, which has children arranged in rows. Used\r\n * by environments such as `matrix`, `cases`, etc...\r\n * - `genfrac`: a generalized fraction: a numerator and denominator, separated\r\n * by an optional line, and surrounded by optional fences\r\n * - `surd`: a surd, aka root\r\n * - `leftright`: used by the `\\left` and `\\right` commands\r\n * - `delim`: some delimiter\r\n * - `sizeddelim`: a delimiter that can grow\r\n *\r\n * The following types are used by the editor:\r\n * - `command` indicate a command being entered. The text is displayed in\r\n * blue in the editor.\r\n * - `error`: indicate a command that is unknown, for example `\\xyzy`. The text\r\n * is displayed with a wavy red underline in the editor.\r\n * - `placeholder`: indicate a temporary item. Placeholders are displayed\r\n * as a dashed square in the editor.\r\n * - `first`: a special, empty, atom put as the first atom in math lists in\r\n * order to be able to position the caret before the first element. Aside from\r\n * the caret, they display nothing.\r\n *\r\n * @property captureSelection if true, this atom does not let its\r\n * children be selected. Used by the `\\enclose` annotations, for example.\r\n *\r\n * @property skipBoundary if true, when the caret reaches the\r\n * first position in this element's body, it automatically moves to the\r\n * outside of the element. Conversely, when the caret reaches the position\r\n * right after this element, it automatically moves to the last position\r\n * inside this element.\r\n */\r\nclass Atom {\r\n    constructor(mode, type, body = '', style = {}) {\r\n        console.assert(type === 'first' || Boolean(mode));\r\n        this.mode = mode;\r\n        this.type = type;\r\n        this.body = body;\r\n        if (style.isPhantom) {\r\n            this.setPhantom(true);\r\n        }\r\n        // Append all the properties in extras to this\r\n        // This can override the mode, type and body\r\n        this.applyStyle(style);\r\n    }\r\n    toLatex(expandMacro = false) {\r\n        return atomToLatex(this, expandMacro);\r\n    }\r\n    getStyle() {\r\n        return {\r\n            mode: this.mode,\r\n            color: this.isPhantom ? 'transparent' : this.color,\r\n            backgroundColor: this.isPhantom\r\n                ? 'transparent'\r\n                : this.backgroundColor,\r\n            variant: this.variant,\r\n            variantStyle: this.variantStyle,\r\n            fontFamily: this.fontFamily,\r\n            fontShape: this.fontShape,\r\n            fontSeries: this.fontSeries,\r\n            fontSize: this.fontSize,\r\n            cssId: this.cssId,\r\n            cssClass: this.cssClass,\r\n        };\r\n    }\r\n    applyStyle(style) {\r\n        Object.assign(this, style);\r\n        if (this.fontFamily === 'none') {\r\n            this.fontFamily = '';\r\n        }\r\n        if (this.fontShape === 'auto') {\r\n            this.fontShape = '';\r\n        }\r\n        if (this.fontSeries === 'auto') {\r\n            this.fontSeries = '';\r\n        }\r\n        if (this.color === 'none') {\r\n            this.color = '';\r\n        }\r\n        if (this.backgroundColor === 'none') {\r\n            this.backgroundColor = '';\r\n        }\r\n        if (this.fontSize === 'auto') {\r\n            this.fontSize = '';\r\n        }\r\n        if (this.fontSize) {\r\n            this.maxFontSize = SIZING_MULTIPLIER[this.fontSize];\r\n        }\r\n        if (this.mode === 'text') {\r\n            // @revisit. Use type = 'text' for text atoms?\r\n            // A root can be in text mode (root created when creating a representation\r\n            // of the selection, for copy/paste for example)\r\n            if (this.type !== 'root')\r\n                this.type = '';\r\n        }\r\n    }\r\n    getInitialBaseElement() {\r\n        let result;\r\n        if (isArray(this.body) && this.body.length > 0) {\r\n            if (this.body[0].type !== 'first') {\r\n                result = this.body[0].getInitialBaseElement();\r\n            }\r\n            else if (this.body[1]) {\r\n                result = this.body[1].getInitialBaseElement();\r\n            }\r\n        }\r\n        return result || this;\r\n    }\r\n    getFinalBaseElement() {\r\n        if (isArray(this.body) && this.body.length > 0) {\r\n            return this.body[this.body.length - 1].getFinalBaseElement();\r\n        }\r\n        return this;\r\n    }\r\n    isCharacterBox() {\r\n        const base = this.getInitialBaseElement();\r\n        return /minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(base.type);\r\n    }\r\n    setPhantom(isPhantom) {\r\n        // this.isPhantom = isPhantom;\r\n        this.forEach((x) => {\r\n            x.isPhantom = isPhantom;\r\n        });\r\n    }\r\n    /**\r\n     * Iterate over all the child atoms of this atom, this included,\r\n     * and invoke the cb callback.\r\n     */\r\n    forEach(cb) {\r\n        cb(this);\r\n        if (isArray(this.body)) {\r\n            for (const atom of this.body)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        else if (this.body && typeof this.body === 'object') {\r\n            // Note: body can be null, for example 'first' or 'rule'\r\n            // (and null is an object)\r\n            cb(this.body);\r\n        }\r\n        if (this.superscript) {\r\n            for (const atom of this.superscript)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.subscript) {\r\n            for (const atom of this.subscript)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.overscript) {\r\n            for (const atom of this.overscript)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.underscript) {\r\n            for (const atom of this.underscript)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.numer) {\r\n            for (const atom of this.numer)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.denom) {\r\n            for (const atom of this.denom)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.index) {\r\n            for (const atom of this.index)\r\n                if (atom)\r\n                    atom.forEach(cb);\r\n        }\r\n        if (this.array) {\r\n            for (const row of this.array) {\r\n                for (const cell of row) {\r\n                    for (const atom of cell)\r\n                        atom.forEach(cb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    decomposeGroup(context) {\r\n        // The scope of the context is this group, so clone it\r\n        // so that any changes to it will be discarded when finished\r\n        // with this group.\r\n        // Note that the mathstyle property is optional and could be undefined\r\n        // If that's the case, clone() returns a clone of the\r\n        // context with the same mathstyle.\r\n        const localContext = context.clone({\r\n            mathstyle: this.mathstyle ? MATHSTYLES[this.mathstyle] : undefined,\r\n        });\r\n        const span = makeSpan(decompose(localContext, this.body), '', 'mord'); // @revisit\r\n        if (this.cssId)\r\n            span.cssId = this.cssId;\r\n        span.applyStyle({\r\n            backgroundColor: this.backgroundColor,\r\n            cssClass: this.cssClass,\r\n        });\r\n        return span;\r\n    }\r\n    decomposeOverlap(context) {\r\n        const inner = makeSpan(decompose(context, this.body), 'inner'); // @revisit\r\n        return makeSpan([inner, makeSpan(null, 'fix')], this.align === 'left' ? 'llap' : 'rlap', 'mord');\r\n    }\r\n    decomposeRule(context) {\r\n        const mathstyle = context.mathstyle;\r\n        const result = makeSpan('', 'rule', 'mord');\r\n        let shift = this.shift && !isNaN(this.shift) ? this.shift : 0;\r\n        shift = shift / mathstyle.sizeMultiplier;\r\n        const width = this.width / mathstyle.sizeMultiplier;\r\n        const height = this.height / mathstyle.sizeMultiplier;\r\n        result.setStyle('border-right-width', width, 'em');\r\n        result.setStyle('border-top-width', height, 'em');\r\n        result.setStyle('margin-top', -(height - shift), 'em');\r\n        result.setStyle('border-color', context['color']); // @revisit\r\n        result.width = width;\r\n        result.height = height + shift;\r\n        result.depth = -shift;\r\n        return result;\r\n    }\r\n    /**\r\n     * Return a representation of this, but decomposed in an array of Spans\r\n     *\r\n     * @param context Font variant, size, color, etc...\r\n     * @param phantomBase If not null, the spans to use to\r\n     * calculate the placement of the supsub\r\n     */\r\n    decompose(context, phantomBase = null) {\r\n        var _a;\r\n        let result = null;\r\n        if (!this.type ||\r\n            /mord|minner|mbin|mrel|mpunct|mopen|mclose|textord/.test(this.type)) {\r\n            // The body of these atom types is *often* a string, but it can\r\n            // be a atom list (for example a command inside a \\text{} or \\mathop{})\r\n            if (typeof this.body === 'string') {\r\n                result = this.makeSpan(context, this.body);\r\n            }\r\n            else {\r\n                result = this.makeSpan(context, decompose(context, this.body));\r\n            }\r\n            result.type = isSpanType(this.type) ? this.type : '';\r\n        }\r\n        else if (this.type === 'group' || this.type === 'root') {\r\n            result = this.decomposeGroup(context);\r\n        }\r\n        else if (this.type === 'delim') {\r\n            result = makeSpan(null, '');\r\n            result.delim = this.delim;\r\n        }\r\n        else if (this.type === 'sizeddelim') {\r\n            result = this.bind(context, makeSizedDelim(this.cls, this.delim, this.size, context));\r\n        }\r\n        else if (this.type === 'overlap') {\r\n            // For llap (18), rlap (270), clap (0)\r\n            // smash (common), mathllap (0), mathrlap (0), mathclap (0)\r\n            // See https://www.tug.org/TUGboat/tb22-4/tb72perlS.pdf\r\n            // and https://tex.stackexchange.com/questions/98785/what-are-the-different-kinds-of-vertical-spacing-and-horizontal-spacing-commands\r\n            result = this.decomposeOverlap(context);\r\n        }\r\n        else if (this.type === 'rule') {\r\n            result = this.decomposeRule(context);\r\n        }\r\n        else if (this.type === 'msubsup') {\r\n            // The caret for this atom type is handled by its elements\r\n            result = makeSpan('\\u200b', '', 'mord');\r\n            if (phantomBase) {\r\n                result.height = phantomBase[0].height;\r\n                result.depth = phantomBase[0].depth;\r\n            }\r\n        }\r\n        else if (this.type === 'space') {\r\n            // A space literal\r\n            result = this.makeSpan(context, ' ');\r\n        }\r\n        else if (this.type === 'spacing') {\r\n            // A spacing command (\\quad, etc...)\r\n            if (this.body === '\\u200b') {\r\n                // ZERO-WIDTH SPACE\r\n                result = this.makeSpan(context, '\\u200b');\r\n            }\r\n            else if (this.body === '\\u00a0') {\r\n                if (this.mode === 'math') {\r\n                    result = this.makeSpan(context, ' ');\r\n                }\r\n                else {\r\n                    result = this.makeSpan(context, '\\u00a0');\r\n                }\r\n            }\r\n            else if (this.width) {\r\n                result = makeSpan('\\u200b', 'mspace ');\r\n                if (this.width > 0) {\r\n                    result.setWidth(this.width);\r\n                }\r\n                else {\r\n                    result.setStyle('margin-left', this.width, 'em');\r\n                }\r\n            }\r\n            else {\r\n                const spacingCls = (_a = {\r\n                    '\\\\qquad': 'qquad',\r\n                    '\\\\quad': 'quad',\r\n                    '\\\\enspace': 'enspace',\r\n                    '\\\\;': 'thickspace',\r\n                    '\\\\:': 'mediumspace',\r\n                    '\\\\,': 'thinspace',\r\n                    '\\\\!': 'negativethinspace',\r\n                }[this.symbol]) !== null && _a !== void 0 ? _a : 'mediumspace';\r\n                result = makeSpan('\\u200b', 'mspace ' + spacingCls);\r\n            }\r\n        }\r\n        else if (this.type === 'mathstyle') {\r\n            context.setMathstyle(this.mathstyle);\r\n        }\r\n        else if (this.type === 'command' || this.type === 'error') {\r\n            console.assert(typeof this.body === 'string');\r\n            result = this.makeSpan(context, this.body);\r\n            result.classes = ''; // Override fonts and other attributes.\r\n            if (this.isError) {\r\n                result.classes += ' ML__error';\r\n            }\r\n            if (this.isSuggestion) {\r\n                result.classes += ' ML__suggestion';\r\n            }\r\n        }\r\n        else if (this.type === 'composition') {\r\n            // In theory one would like to be able to draw the clauses\r\n            // in an active composition. Unfortunately, there are\r\n            // no API to give access to those clauses :(\r\n            result = this.makeSpan(context, this.body);\r\n            result.classes = 'ML__composition';\r\n        }\r\n        else if (this.type === 'placeholder') {\r\n            result = this.makeSpan(context, '⬚');\r\n        }\r\n        else if (this.type === 'first') {\r\n            // the `first` pseudo-type is used as a placeholder as\r\n            // the first element in a children list. This makes\r\n            // managing the list, and the caret selection, easier.\r\n            // ZERO-WIDTH SPACE\r\n            result = this.makeSpan(context, '\\u200b');\r\n        }\r\n        else {\r\n            console.assert(ATOM_REGISTRY[this.type], 'Unknown Atom type: \"' + this.type + '\"');\r\n            result = ATOM_REGISTRY[this.type].decompose(context, this);\r\n        }\r\n        if (!result)\r\n            return null;\r\n        if (this.caret &&\r\n            this.type !== 'msubsup' &&\r\n            this.type !== 'command' &&\r\n            this.type !== 'placeholder' &&\r\n            this.type !== 'first') {\r\n            if (isArray(result)) {\r\n                if (!(this.type === 'leftright' &&\r\n                    (this.superscript || this.subscript))) {\r\n                    result[result.length - 1].caret = this.caret;\r\n                }\r\n            }\r\n            else {\r\n                result.caret = this.caret;\r\n            }\r\n        }\r\n        if (this.containsCaret) {\r\n            if (isArray(result)) {\r\n                // For a /mleft.../mright, tag the first and last atom in the\r\n                // list with the \"ML__contains-caret\" style (it's the open and\r\n                // closing fence, respectively)\r\n                result[0].classes =\r\n                    (result[0].classes || '') + ' ML__contains-caret';\r\n                result[result.length - 1].classes =\r\n                    (result[result.length - 1].classes || '') +\r\n                        ' ML__contains-caret';\r\n            }\r\n            else {\r\n                result.classes = (result.classes || '') + ' ML__contains-caret';\r\n            }\r\n        }\r\n        // Finally, attach any necessary superscript, subscripts\r\n        if (!this.limits && (this.superscript || this.subscript)) {\r\n            // If `limits` is set, the attachment of sup/sub was handled\r\n            // in the atom decomposition (e.g. mop, accent)\r\n            if (isArray(result)) {\r\n                const lastSpan = result[result.length - 1];\r\n                result[result.length - 1] = this.attachSupsub(context, lastSpan, lastSpan.type);\r\n            }\r\n            else {\r\n                result = [this.attachSupsub(context, result, result.type)];\r\n            }\r\n        }\r\n        return isArray(result) ? result : [result];\r\n    }\r\n    attachSupsub(context, nucleus, type) {\r\n        // If no superscript or subscript, nothing to do.\r\n        if (!this.superscript && !this.subscript)\r\n            return nucleus;\r\n        // Superscript and subscripts are discussed in the TeXbook\r\n        // on page 445-446, rules 18(a-f).\r\n        // TeX:14859-14945\r\n        const mathstyle = context.mathstyle;\r\n        let supmid = null;\r\n        let submid = null;\r\n        if (this.superscript) {\r\n            const sup = decompose(context.sup(), this.superscript);\r\n            supmid = makeSpan(sup, mathstyle.adjustTo(mathstyle.sup()));\r\n        }\r\n        if (this.subscript) {\r\n            const sub = decompose(context.sub(), this.subscript);\r\n            submid = makeSpan(sub, mathstyle.adjustTo(mathstyle.sub()));\r\n        }\r\n        // Rule 18a, p445\r\n        let supShift = 0;\r\n        let subShift = 0;\r\n        if (!this.isCharacterBox()) {\r\n            supShift = height(nucleus) - mathstyle.metrics.supDrop;\r\n            subShift = depth(nucleus) + mathstyle.metrics.subDrop;\r\n        }\r\n        // Rule 18c, p445\r\n        let minSupShift;\r\n        if (mathstyle === MATHSTYLES.displaystyle) {\r\n            minSupShift = mathstyle.metrics.sup1; // sigma13\r\n        }\r\n        else if (mathstyle.cramped) {\r\n            minSupShift = mathstyle.metrics.sup3; // sigma15\r\n        }\r\n        else {\r\n            minSupShift = mathstyle.metrics.sup2; // sigma14\r\n        }\r\n        // scriptspace is a font-size-independent size, so scale it\r\n        // appropriately @revisit: do we really need to do this scaling? It's in em...\r\n        const multiplier = MATHSTYLES.textstyle.sizeMultiplier * mathstyle.sizeMultiplier;\r\n        const scriptspace = 0.5 / METRICS.ptPerEm / multiplier;\r\n        let supsub = null;\r\n        if (submid && supmid) {\r\n            // Rule 18e\r\n            supShift = Math.max(supShift, minSupShift, supmid.depth + 0.25 * mathstyle.metrics.xHeight);\r\n            subShift = Math.max(subShift, mathstyle.metrics.sub2);\r\n            const ruleWidth = METRICS.defaultRuleThickness;\r\n            if (supShift - depth(supmid) - (height(submid) - subShift) <\r\n                4 * ruleWidth) {\r\n                subShift =\r\n                    4 * ruleWidth -\r\n                        (supShift - supmid.depth) +\r\n                        height(submid);\r\n                const psi = 0.8 * mathstyle.metrics.xHeight -\r\n                    (supShift - depth(supmid));\r\n                if (psi > 0) {\r\n                    supShift += psi;\r\n                    subShift -= psi;\r\n                }\r\n            }\r\n            supsub = makeVlist(context, [submid, subShift, supmid, -supShift], 'individualShift');\r\n            // Subscripts shouldn't be shifted by the nucleus' italic correction.\r\n            // Account for that by shifting the subscript back the appropriate\r\n            // amount. Note we only do this when the nucleus is a single symbol.\r\n            if (this.isSymbol) {\r\n                supsub.children[0].setLeft(-italic(nucleus));\r\n            }\r\n        }\r\n        else if (submid && !supmid) {\r\n            // Rule 18b\r\n            subShift = Math.max(subShift, mathstyle.metrics.sub1, height(submid) - 0.8 * mathstyle.metrics.xHeight);\r\n            supsub = makeVlist(context, [submid], 'shift', subShift);\r\n            supsub.children[0].setRight(scriptspace);\r\n            if (this.isCharacterBox()) {\r\n                supsub.children[0].setLeft(-italic(nucleus));\r\n            }\r\n        }\r\n        else if (!submid && supmid) {\r\n            // Rule 18c, d\r\n            supShift = Math.max(supShift, minSupShift, supmid.depth + 0.25 * mathstyle.metrics.xHeight);\r\n            supsub = makeVlist(context, [supmid], 'shift', -supShift);\r\n            supsub.children[0].setRight(scriptspace);\r\n        }\r\n        // Display the caret *following* the superscript and subscript,\r\n        // so attach the caret to the 'msubsup' element.\r\n        const supsubContainer = makeSpan(supsub, 'msubsup');\r\n        if (this.caret) {\r\n            supsubContainer.caret = this.caret;\r\n            this.caret = '';\r\n        }\r\n        return makeSpan([nucleus, supsubContainer], '', type);\r\n    }\r\n    attachLimits(context, nucleus, nucleusShift, slant) {\r\n        const limitAbove = this.superscript\r\n            ? makeSpan(decompose(context.sup(), this.superscript), context.mathstyle.adjustTo(context.mathstyle.sup()))\r\n            : null;\r\n        const limitBelow = this.subscript\r\n            ? makeSpan(decompose(context.sub(), this.subscript), context.mathstyle.adjustTo(context.mathstyle.sub()))\r\n            : null;\r\n        return makeLimitsStack(context, nucleus, nucleusShift, slant, limitAbove, limitBelow);\r\n    }\r\n    /**\r\n     * Add an ID attribute to both the span and this atom so that the atom\r\n     * can be retrieved from the span later on (e.g. when the span is clicked on)\r\n     */\r\n    bind(context, span) {\r\n        if (this.type !== 'first' && this.body !== '\\u200b') {\r\n            this.id = makeID(context);\r\n            if (this.id) {\r\n                if (!span.attributes)\r\n                    span.attributes = {};\r\n                span.attributes['data-atom-id'] = this.id;\r\n            }\r\n        }\r\n        return span;\r\n    }\r\n    /**\r\n     * Create a span with the specified body and with a class attribute\r\n     * equal to the type ('mbin', 'inner', 'spacing', etc...)\r\n     *\r\n     */\r\n    makeSpan(context, body) {\r\n        // Ensure that the atom type is a valid Span type, or use ''\r\n        console.assert(isSpanType(this.type));\r\n        const type = this.type === 'textord'\r\n            ? 'mord'\r\n            : isSpanType(this.type)\r\n                ? this.type\r\n                : '';\r\n        const result = makeSpan(body, '', type);\r\n        // The font family is determined by:\r\n        // - the base font family associated with this atom (optional). For example,\r\n        // some atoms such as some functions ('\\sin', '\\cos', etc...) or some\r\n        // symbols ('\\Z') have an explicit font family. This overrides any\r\n        // other font family\r\n        // - the user-specified font family that has been explicitly applied to\r\n        // this atom\r\n        // - the font family automatically determined in math mode, for example\r\n        // which italicizes some characters, but which can be overridden\r\n        const style = this.getStyle();\r\n        style.letterShapeStyle = context.letterShapeStyle;\r\n        result.applyStyle(style);\r\n        // Apply size correction\r\n        const size = (style === null || style === void 0 ? void 0 : style.fontSize) ? style.fontSize : 'size5';\r\n        if (size !== context.parentSize) {\r\n            result.classes += ' sizing reset-' + context.parentSize;\r\n            result.classes += ' ' + size;\r\n        }\r\n        else if (context.parentSize !== context.size) {\r\n            result.classes += ' sizing reset-' + context.parentSize;\r\n            result.classes += ' ' + context.size;\r\n        }\r\n        result.maxFontSize = Math.max(result.maxFontSize, context.mathstyle.sizeMultiplier || 1.0);\r\n        // Set other attributes\r\n        if (this.mode === 'text')\r\n            result.classes += ' ML__text';\r\n        if (context.mathstyle.isTight())\r\n            result.isTight = true;\r\n        // The italic correction applies only in math mode\r\n        if (this.mode !== 'math')\r\n            result.italic = 0;\r\n        result.setRight(result.italic); // Italic correction\r\n        if (typeof context.opacity === 'number') {\r\n            result.setStyle('opacity', context.opacity);\r\n        }\r\n        // To retrieve the atom from a span, for example when the span is clicked\r\n        // on, attach a randomly generated ID to the span and associate it\r\n        // with the atom.\r\n        this.bind(context, result);\r\n        if (this.caret) {\r\n            // If this has a super/subscript, the caret will be attached\r\n            // to the 'msubsup' atom, so no need to have it here.\r\n            if (!this.superscript && !this.subscript) {\r\n                result.caret = this.caret;\r\n                this.caret = '';\r\n                if (context.mathstyle.isTight())\r\n                    result.isTight = true;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nfunction makeID(context) {\r\n    let result;\r\n    if (context.atomIdsSettings) {\r\n        if (typeof context.atomIdsSettings.seed === 'number') {\r\n            result = context.atomIdsSettings.overrideID\r\n                ? context.atomIdsSettings.overrideID\r\n                : context.atomIdsSettings.seed.toString(36);\r\n            context.atomIdsSettings.seed += 1;\r\n        }\r\n        else {\r\n            result =\r\n                Date.now().toString(36).slice(-2) +\r\n                    Math.floor(Math.random() * 0x186a0).toString(36);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Combine a nucleus with an atom above and an atom below. Used to form\r\n * limits.\r\n *\r\n * @param context\r\n * @param nucleus The base over and under which the atoms will\r\n * be placed.\r\n * @param nucleusShift The vertical shift of the nucleus from\r\n * the baseline.\r\n * @param slant For operators that have a slant, such as \\int,\r\n * indicate by how much to horizontally offset the above and below atoms\r\n */\r\nfunction makeLimitsStack(context, nucleus, nucleusShift, slant, above, below) {\r\n    // If nothing above and nothing below, nothing to do.\r\n    if (!above && !below)\r\n        return nucleus;\r\n    // IE8 clips \\int if it is in a display: inline-block. We wrap it\r\n    // in a new span so it is an inline, and works.\r\n    // @todo: revisit\r\n    nucleus = makeSpan(nucleus);\r\n    let aboveShift = 0;\r\n    let belowShift = 0;\r\n    if (above) {\r\n        aboveShift = Math.max(METRICS.bigOpSpacing1, METRICS.bigOpSpacing3 - depth(above));\r\n    }\r\n    if (below) {\r\n        belowShift = Math.max(METRICS.bigOpSpacing2, METRICS.bigOpSpacing4 - height(below));\r\n    }\r\n    let result = null;\r\n    if (below && above) {\r\n        const bottom = METRICS.bigOpSpacing5 +\r\n            height(below) +\r\n            depth(below) +\r\n            belowShift +\r\n            depth(nucleus) +\r\n            nucleusShift;\r\n        result = makeVlist(context, [\r\n            METRICS.bigOpSpacing5,\r\n            below,\r\n            belowShift,\r\n            nucleus,\r\n            aboveShift,\r\n            above,\r\n            METRICS.bigOpSpacing5,\r\n        ], 'bottom', bottom);\r\n        // Here, we shift the limits by the slant of the symbol. Note\r\n        // that we are supposed to shift the limits by 1/2 of the slant,\r\n        // but since we are centering the limits adding a full slant of\r\n        // margin will shift by 1/2 that.\r\n        result.children[0].setLeft(-slant);\r\n        result.children[2].setLeft(slant);\r\n    }\r\n    else if (below && !above) {\r\n        const top = height(nucleus) - nucleusShift;\r\n        result = makeVlist(context, [METRICS.bigOpSpacing5, below, belowShift, nucleus], 'top', top);\r\n        // See comment above about slants\r\n        result.children[0].setLeft(-slant);\r\n    }\r\n    else if (!below && above) {\r\n        const bottom = depth(nucleus) + nucleusShift;\r\n        result = makeVlist(context, [nucleus, aboveShift, above, METRICS.bigOpSpacing5], 'bottom', bottom);\r\n        // See comment above about slants\r\n        result.children[1].setLeft(slant);\r\n    }\r\n    return makeSpan(result, 'op-limits', 'mop');\r\n}\r\n/**\r\n * Return an atom suitable for use as the root of a formula.\r\n */\r\nfunction makeRoot(parseMode, body = []) {\r\n    const result = new Atom(parseMode, 'root', body || []);\r\n    if (isArray(result.body) &&\r\n        (result.body.length === 0 || result.body[0].type !== 'first')) {\r\n        result.body.unshift(new Atom(parseMode, 'first'));\r\n    }\r\n    return result;\r\n}\r\nfunction isAtomArray(arg) {\r\n    return isArray(arg);\r\n}\n\nregisterAtomType('accent', (context, atom) => {\r\n    // Accents are handled in the TeXbook pg. 443, rule 12.\r\n    const mathstyle = context.mathstyle;\r\n    // Build the base atom\r\n    let base = decompose(context.cramp(), atom.body);\r\n    if (atom.superscript || atom.subscript) {\r\n        // If there is a supsub attached to the accent\r\n        // apply it to the base.\r\n        // Note this does not give the same result as TeX when there\r\n        // are stacked accents, e.g. \\vec{\\breve{\\hat{\\acute{...}}}}^2\r\n        base = [atom.attachSupsub(context, makeSpan(base, '', 'mord'), 'mord')];\r\n    }\r\n    // Calculate the skew of the accent. This is based on the line \"If the\r\n    // nucleus is not a single character, let s = 0; otherwise set s to the\r\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\r\n    // Note that our skew metrics are just the kern between each character\r\n    // and the skewchar.\r\n    let skew$1 = 0;\r\n    if (isArray(atom.body) &&\r\n        atom.body.length === 1 &&\r\n        atom.body[0].isCharacterBox()) {\r\n        skew$1 = skew(base);\r\n    }\r\n    // calculate the amount of space between the body and the accent\r\n    let clearance = Math.min(height(base), mathstyle.metrics.xHeight);\r\n    let accentBody;\r\n    if (atom.svgAccent) {\r\n        accentBody = makeSVGSpan(atom.svgAccent);\r\n        clearance = -clearance + METRICS.bigOpSpacing1;\r\n    }\r\n    else {\r\n        // Build the accent\r\n        const accent = makeSymbol('Main-Regular', atom.accent, 'math');\r\n        // Remove the italic correction of the accent, because it only serves to\r\n        // shift the accent over to a place we don't want.\r\n        accent.italic = 0;\r\n        // The \\vec character that the fonts use is a combining character, and\r\n        // thus shows up much too far to the left. To account for this, we add a\r\n        // specific class which shifts the accent over to where we want it.\r\n        const vecClass = atom.accent === '\\u20d7' ? ' accent-vec' : '';\r\n        accentBody = makeSpan(makeSpan(accent), 'accent-body' + vecClass);\r\n    }\r\n    accentBody = makeVlist(context, [base, -clearance, accentBody]);\r\n    // Shift the accent over by the skew. Note we shift by twice the skew\r\n    // because we are centering the accent, so by adding 2*skew to the left,\r\n    // we shift it to the right by 1*skew.\r\n    accentBody.children[1].setLeft(2 * skew$1);\r\n    return [makeSpan([accentBody], 'accent', 'mord')];\r\n});\n\nregisterAtomType('array', (context, atom) => {\r\n    var _a;\r\n    // See http://tug.ctan.org/macros/latex/base/ltfsstrc.dtx\r\n    // and http://tug.ctan.org/macros/latex/base/lttab.dtx\r\n    let colFormat = atom.colFormat;\r\n    if (colFormat && colFormat.length === 0) {\r\n        colFormat = [{ align: 'l' }];\r\n    }\r\n    if (!colFormat) {\r\n        colFormat = [\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n            { align: 'l' },\r\n        ];\r\n    }\r\n    // Fold the array so that there are no more columns of content than\r\n    // there are columns prescribed by the column format.\r\n    const array = [];\r\n    let colMax = 0; // Maximum number of columns of content\r\n    for (const colSpec of colFormat) {\r\n        if (colSpec.align)\r\n            colMax++;\r\n    }\r\n    for (const row of atom.array) {\r\n        let colIndex = 0;\r\n        while (colIndex < row.length) {\r\n            const newRow = [];\r\n            const lastCol = Math.min(row.length, colIndex + colMax);\r\n            while (colIndex < lastCol) {\r\n                newRow.push(row[colIndex++]);\r\n            }\r\n            array.push(newRow);\r\n        }\r\n    }\r\n    // If the last row is empty, ignore it.\r\n    if (array[array.length - 1].length === 1 &&\r\n        array[array.length - 1][0].length === 0) {\r\n        array.pop();\r\n    }\r\n    const mathstyle = MATHSTYLES[atom.mathstyle] || context.mathstyle;\r\n    // Row spacing\r\n    // Default \\arraystretch from lttab.dtx\r\n    const arraystretch = atom.arraystretch || 1;\r\n    const arraycolsep = typeof atom.arraycolsep === 'number'\r\n        ? atom.arraycolsep\r\n        : METRICS.arraycolsep;\r\n    const arrayskip = arraystretch * METRICS.baselineskip;\r\n    const arstrutHeight = 0.7 * arrayskip;\r\n    const arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\r\n    let totalHeight = 0;\r\n    let nc = 0;\r\n    const body = [];\r\n    const nr = array.length;\r\n    for (let r = 0; r < nr; ++r) {\r\n        const inrow = array[r];\r\n        nc = Math.max(nc, inrow.length);\r\n        let height$1 = arstrutHeight; // \\@array adds an \\@arstrut\r\n        let depth$1 = arstrutDepth; // to each row (via the template)\r\n        const outrow = { cells: [], height: 0, depth: 0, pos: 0 };\r\n        for (let c = 0; c < inrow.length; ++c) {\r\n            const localContext = context.clone({\r\n                mathstyle: MATHSTYLES[atom.mathstyle],\r\n            });\r\n            const cell = decompose(localContext, inrow[c]) || [];\r\n            const elt = [makeSpan(null, '', 'mord')].concat(cell);\r\n            depth$1 = Math.max(depth$1, depth(elt));\r\n            height$1 = Math.max(height$1, height(elt));\r\n            outrow.cells.push(elt);\r\n        }\r\n        let jot = r === nr - 1 ? 0 : atom.jot || 0;\r\n        if ((_a = atom.rowGaps) === null || _a === void 0 ? void 0 : _a[r]) {\r\n            jot = atom.rowGaps[r];\r\n            if (jot > 0) {\r\n                // \\@argarraycr\r\n                jot += arstrutDepth;\r\n                if (depth$1 < jot) {\r\n                    depth$1 = jot; // \\@xargarraycr\r\n                }\r\n                jot = 0;\r\n            }\r\n        }\r\n        outrow.height = height$1;\r\n        outrow.depth = depth$1;\r\n        totalHeight += height$1;\r\n        outrow.pos = totalHeight;\r\n        totalHeight += depth$1 + jot; // \\@yargarraycr\r\n        body.push(outrow);\r\n    }\r\n    const offset = totalHeight / 2 + mathstyle.metrics.axisHeight;\r\n    const contentCols = [];\r\n    for (let colIndex = 0; colIndex < nc; colIndex++) {\r\n        const col = [];\r\n        for (const row of body) {\r\n            const elem = row.cells[colIndex];\r\n            if (!elem) {\r\n                continue;\r\n            }\r\n            elem.depth = row.depth;\r\n            elem.height = row.height;\r\n            col.push(elem);\r\n            col.push(row.pos - offset);\r\n        }\r\n        if (col.length > 0) {\r\n            contentCols.push(makeVlist(context, col, 'individualShift'));\r\n        }\r\n    }\r\n    // Iterate over each column description.\r\n    // Each `colDesc` will indicate whether to insert a gap, a rule or\r\n    // a column from 'contentCols'\r\n    const cols = [];\r\n    let prevColContent = false;\r\n    let prevColRule = false;\r\n    let currentContentCol = 0;\r\n    let firstColumn = !atom.leftDelim;\r\n    for (const colDesc of colFormat) {\r\n        if (colDesc.align && currentContentCol >= contentCols.length) {\r\n            break;\r\n        }\r\n        else if (colDesc.align && currentContentCol < contentCols.length) {\r\n            // If an alignment is specified, insert a column of content\r\n            if (prevColContent) {\r\n                // If no gap was provided, insert a default gap between\r\n                // consecutive columns of content\r\n                cols.push(makeColGap(2 * arraycolsep));\r\n            }\r\n            else if (prevColRule || firstColumn) {\r\n                // If the previous column was a rule or this is the first column\r\n                // add a smaller gap\r\n                cols.push(makeColGap(arraycolsep));\r\n            }\r\n            cols.push(makeSpan(contentCols[currentContentCol], 'col-align-' + colDesc.align));\r\n            currentContentCol++;\r\n            prevColContent = true;\r\n            prevColRule = false;\r\n            firstColumn = false;\r\n        }\r\n        else if (typeof colDesc.gap !== 'undefined') {\r\n            // Something to insert in between columns of content\r\n            if (typeof colDesc.gap === 'number') {\r\n                // It's a number, indicating how much space, in em,\r\n                // to leave in between columns\r\n                cols.push(makeColGap(colDesc.gap));\r\n            }\r\n            else {\r\n                // It's a mathlist\r\n                // Create a column made up of the mathlist\r\n                // as many times as there are rows.\r\n                cols.push(makeColOfRepeatingElements(context, body, offset, colDesc.gap));\r\n            }\r\n            prevColContent = false;\r\n            prevColRule = false;\r\n            firstColumn = false;\r\n        }\r\n        else if (colDesc.rule) {\r\n            // It's a rule.\r\n            const separator = makeSpan(null, 'vertical-separator');\r\n            separator.setStyle('height', totalHeight, 'em');\r\n            // result.setTop((1 - context.mathstyle.sizeMultiplier) *\r\n            //     context.mathstyle.metrics.axisHeight);\r\n            separator.setStyle('margin-top', 3 * context.mathstyle.metrics.axisHeight - offset, 'em');\r\n            separator.setStyle('vertical-align', 'top');\r\n            // separator.setStyle('display', 'inline-block');\r\n            let gap = 0;\r\n            if (prevColRule) {\r\n                gap = METRICS.doubleRuleSep - METRICS.arrayrulewidth;\r\n            }\r\n            else if (prevColContent) {\r\n                gap = arraycolsep - METRICS.arrayrulewidth;\r\n            }\r\n            separator.setLeft(gap);\r\n            cols.push(separator);\r\n            prevColContent = false;\r\n            prevColRule = true;\r\n            firstColumn = false;\r\n        }\r\n    }\r\n    if (prevColContent && !atom.rightDelim) {\r\n        // If the last column was content, add a small gap\r\n        cols.push(makeColGap(arraycolsep));\r\n    }\r\n    if ((!atom.leftDelim || atom.leftDelim === '.') &&\r\n        (!atom.rightDelim || atom.rightDelim === '.')) {\r\n        // There are no delimiters around the array, just return what\r\n        // we've built so far.\r\n        return [makeSpan(cols, 'mtable', 'mord')];\r\n    }\r\n    // There is at least one delimiter. Wrap the core of the array with\r\n    // appropriate left and right delimiters\r\n    // const inner = makeSpan(makeSpan(cols, 'mtable'), 'mord');\r\n    const inner = makeSpan(cols, 'mtable');\r\n    const innerHeight = height(inner);\r\n    const innerDepth = depth(inner);\r\n    return [\r\n        makeSpan([\r\n            atom.bind(context, makeLeftRightDelim('mopen', atom.leftDelim, innerHeight, innerDepth, context)),\r\n            inner,\r\n            atom.bind(context, makeLeftRightDelim('mclose', atom.rightDelim, innerHeight, innerDepth, context)),\r\n        ], '', 'mord'),\r\n    ];\r\n});\r\n/**\r\n * Used in `decomposeArray` to create a column separator span.\r\n *\r\n */\r\nfunction makeColGap(width) {\r\n    const separator = makeSpan('\\u200b', 'arraycolsep');\r\n    separator.setWidth(width);\r\n    return separator;\r\n}\r\n/**\r\n * Used in decomposeArray to create a column of repeating elements.\r\n */\r\nfunction makeColOfRepeatingElements(context, body, offset, elem) {\r\n    const col = [];\r\n    for (const row of body) {\r\n        const cell = makeSpan(decompose(context, elem));\r\n        cell.depth = row.depth;\r\n        cell.height = row.height;\r\n        col.push(cell);\r\n        col.push(row.pos - offset);\r\n    }\r\n    return makeVlist(context, col, 'individualShift');\r\n}\n\nregisterAtomType('box', (context, atom) => {\r\n    // The padding extends outside of the base\r\n    const padding = typeof atom.padding === 'number' ? atom.padding : METRICS.fboxsep;\r\n    // Base is the main content \"inside\" the box\r\n    const content = makeSpan(decompose(context, atom.body), '', 'mord');\r\n    content.setStyle('vertical-align', -depth(content), 'em');\r\n    content.setStyle('height', 0);\r\n    const base = makeSpan(content, '', 'mord');\r\n    // This span will represent the box (background and border)\r\n    // It's positioned to overlap the base\r\n    // The 'ML__box' class is required to prevent the span from being omitted\r\n    // during rendering (it looks like an empty, no-op span)\r\n    const box = makeSpan('', 'ML__box');\r\n    box.setStyle('position', 'absolute');\r\n    box.setStyle('height', height(base) + depth(base) + 2 * padding, 'em');\r\n    if (padding !== 0) {\r\n        box.setStyle('width', 'calc(100% + ' + 2 * padding + 'em)');\r\n    }\r\n    else {\r\n        box.setStyle('width', '100%');\r\n    }\r\n    box.setStyle('top', -padding, 'em');\r\n    box.setStyle('left', -padding, 'em');\r\n    box.setStyle('z-index', '-1'); // Ensure the box is *behind* the base\r\n    box.setStyle('box-sizing', 'border-box');\r\n    if (atom.backgroundcolor) {\r\n        box.setStyle('background-color', atom.backgroundcolor);\r\n    }\r\n    if (atom.framecolor) {\r\n        box.setStyle('border', METRICS.fboxrule + 'em solid ' + atom.framecolor);\r\n    }\r\n    if (atom.border)\r\n        box.setStyle('border', atom.border);\r\n    base.setStyle('display', 'inline-block');\r\n    base.setStyle('height', height(base) + depth(base), 'em');\r\n    // The result is a span that encloses the box and the base\r\n    const result = makeSpan([box, base]);\r\n    // Set its position as relative so that the box can be absolute positioned\r\n    // over the base\r\n    result.setStyle('position', 'relative');\r\n    result.setStyle('vertical-align', -padding + depth(base), 'em');\r\n    // The padding adds to the width and height of the pod\r\n    result.height = height(base) + padding;\r\n    result.depth = depth(base) + padding;\r\n    result.setLeft(padding);\r\n    result.setRight(padding);\r\n    result.setStyle('height', result.height + result.depth - 2 * padding, 'em');\r\n    result.setStyle('top', -padding, 'em');\r\n    result.setStyle('display', 'inline-block');\r\n    return [result];\r\n});\n\nregisterAtomType('enclose', (context, atom) => {\r\n    const base = makeSpan(decompose(context, atom.body), '', 'mord');\r\n    // Account for the padding\r\n    const padding = typeof atom.padding === 'number' ? atom.padding : METRICS.fboxsep;\r\n    // The 'ML__notation' class is required to prevent the span from being omitted\r\n    // during rendering (it looks like an empty, no-op span)\r\n    const notation = makeSpan('', 'ML__notation');\r\n    notation.setStyle('position', 'absolute');\r\n    notation.setStyle('height', height(base) + depth(base) + 2 * padding, 'em');\r\n    notation.height = height(base) + padding;\r\n    notation.depth = depth(base) + padding;\r\n    if (padding !== 0) {\r\n        notation.setStyle('width', 'calc(100% + ' + 2 * padding + 'em)');\r\n    }\r\n    else {\r\n        notation.setStyle('width', '100%');\r\n    }\r\n    notation.setStyle('top', '0');\r\n    notation.setStyle('left', -padding, 'em');\r\n    notation.setStyle('z-index', '-1'); // Ensure the box is *behind* the base\r\n    if (atom.backgroundcolor) {\r\n        notation.setStyle('background-color', atom.backgroundcolor);\r\n    }\r\n    if (atom.notation.box)\r\n        notation.setStyle('border', atom.borderStyle);\r\n    if (atom.notation.actuarial) {\r\n        notation.setStyle('border-top', atom.borderStyle);\r\n        notation.setStyle('border-right', atom.borderStyle);\r\n    }\r\n    if (atom.notation.madruwb) {\r\n        notation.setStyle('border-bottom', atom.borderStyle);\r\n        notation.setStyle('border-right', atom.borderStyle);\r\n    }\r\n    if (atom.notation.roundedbox) {\r\n        notation.setStyle('border-radius', (height(base) + depth(base)) / 2, 'em');\r\n        notation.setStyle('border', atom.borderStyle);\r\n    }\r\n    if (atom.notation.circle) {\r\n        notation.setStyle('border-radius', '50%');\r\n        notation.setStyle('border', atom.borderStyle);\r\n    }\r\n    if (atom.notation.top)\r\n        notation.setStyle('border-top', atom.borderStyle);\r\n    if (atom.notation.left)\r\n        notation.setStyle('border-left', atom.borderStyle);\r\n    if (atom.notation.right) {\r\n        notation.setStyle('border-right', atom.borderStyle);\r\n    }\r\n    if (atom.notation.bottom) {\r\n        notation.setStyle('border-bottom', atom.borderStyle);\r\n    }\r\n    let svg = '';\r\n    if (atom.notation.horizontalstrike) {\r\n        svg += '<line x1=\"3%\"  y1=\"50%\" x2=\"97%\" y2=\"50%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    if (atom.notation.verticalstrike) {\r\n        svg += '<line x1=\"50%\"  y1=\"3%\" x2=\"50%\" y2=\"97%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    if (atom.notation.updiagonalstrike) {\r\n        svg += '<line x1=\"3%\"  y1=\"97%\" x2=\"97%\" y2=\"3%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    if (atom.notation.downdiagonalstrike) {\r\n        svg += '<line x1=\"3%\"  y1=\"3%\" x2=\"97%\" y2=\"97%\"';\r\n        svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n        svg += ' stroke-linecap=\"round\"';\r\n        if (atom.svgStrokeStyle) {\r\n            svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n        }\r\n        svg += '/>';\r\n    }\r\n    // if (atom.notation.updiagonalarrow) {\r\n    //     const t = 1;\r\n    //     const length = Math.sqrt(w * w + h * h);\r\n    //     const f = 1 / length / 0.075 * t;\r\n    //     const wf = w * f;\r\n    //     const hf = h * f;\r\n    //     const x = w - t / 2;\r\n    //     let y = t / 2;\r\n    //     if (y + hf - .4 * wf < 0 ) y = 0.4 * wf - hf;\r\n    //     svg += '<line ';\r\n    //     svg += `x1=\"1\" y1=\"${h - 1}px\" x2=\"${x - .7 * wf}px\" y2=\"${y + .7 * hf}px\"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\"`;\r\n    //     svg += ' stroke-linecap=\"round\"';\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    //     svg += '<polygon points=\"';\r\n    //     svg += `${x},${y} ${x - wf - .4 * hf},${y + hf - .4 * wf} `;\r\n    //     svg += `${x - .7 * wf},${y + .7 * hf} ${x - wf + .4 * hf},${y + hf + .4 * wf} `;\r\n    //     svg += `${x},${y}`;\r\n    //     svg += `\" stroke='none' fill=\"${atom.strokeColor}\"`;\r\n    //     svg += '/>';\r\n    // }\r\n    // if (atom.notation.phasorangle) {\r\n    //     svg += '<path d=\"';\r\n    //     svg += `M ${h / 2},1 L1,${h} L${w},${h} \"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ' stroke-linecap=\"round\"';\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    // }\r\n    // if (atom.notation.radical) {\r\n    //     svg += '<path d=\"';\r\n    //     svg += `M 0,${.6 * h} L1,${h} L${emToPx(padding) * 2},1 \"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ' stroke-linecap=\"round\"';\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    // }\r\n    // if (atom.notation.longdiv) {\r\n    //     svg += '<path d=\"';\r\n    //     svg += `M ${w} 1 L1 1 a${emToPx(padding)} ${h / 2}, 0, 0, 1, 1 ${h} \"`;\r\n    //     svg += ` stroke-width=\"${atom.strokeWidth}\" stroke=\"${atom.strokeColor}\" fill=\"none\"`;\r\n    //     if (atom.svgStrokeStyle) {\r\n    //         svg += ' stroke-linecap=\"round\"';\r\n    //         svg += ` stroke-dasharray=\"${atom.svgStrokeStyle}\"`;\r\n    //     }\r\n    //     svg += '/>';\r\n    // }\r\n    if (svg) {\r\n        let svgStyle;\r\n        if (atom.shadow !== 'none') {\r\n            if (atom.shadow === 'auto') {\r\n                svgStyle =\r\n                    'filter: drop-shadow(0 0 .5px rgba(255, 255, 255, .7)) drop-shadow(1px 1px 2px #333)';\r\n            }\r\n            else {\r\n                svgStyle = 'filter: drop-shadow(' + atom.shadow + ')';\r\n            }\r\n        }\r\n        addSVGOverlay(notation, svg, svgStyle);\r\n    }\r\n    const result = makeSpan([notation, base]);\r\n    // Set its position as relative so that the box can be absolute positioned\r\n    // over the base\r\n    result.setStyle('position', 'relative');\r\n    result.setStyle('display', 'inline');\r\n    // The padding adds to the width and height of the pod\r\n    result.height = height(base) + padding;\r\n    result.depth = depth(base) + padding;\r\n    result.setLeft(padding);\r\n    result.setRight(padding);\r\n    return [result];\r\n});\n\n/**\r\n * Gengrac -- Generalized fraction\r\n *\r\n * Decompose fractions, binomials, and in general anything made\r\n * of two expressions on top of each other, optionally separated by a bar,\r\n * and optionally surrounded by fences (parentheses, brackets, etc...)\r\n *\r\n * Depending on the type of fraction the mathstyle is either\r\n * display math or inline math (which is indicated by 'textstyle'). This value can\r\n * also be set to 'auto', which indicates it should use the current mathstyle\r\n */\r\nregisterAtomType('genfrac', (context, atom) => {\r\n    const mathstyle = atom.mathstyle === 'auto'\r\n        ? context.mathstyle\r\n        : MATHSTYLES[atom.mathstyle];\r\n    const newContext = context.clone({ mathstyle: mathstyle });\r\n    let numer = [];\r\n    if (atom.numerPrefix) {\r\n        numer.push(makeSpan(atom.numerPrefix, 'mord'));\r\n    }\r\n    const numeratorStyle = atom.continuousFraction\r\n        ? mathstyle\r\n        : mathstyle.fracNum();\r\n    numer = numer.concat(decompose(newContext.clone({ mathstyle: numeratorStyle }), atom.numer));\r\n    const numerReset = makeHlist(numer, context.mathstyle.adjustTo(numeratorStyle));\r\n    let denom = [];\r\n    if (atom.denomPrefix) {\r\n        denom.push(makeSpan(atom.denomPrefix, 'mord'));\r\n    }\r\n    const denominatorStyle = atom.continuousFraction\r\n        ? mathstyle\r\n        : mathstyle.fracDen();\r\n    denom = denom.concat(decompose(newContext.clone({ mathstyle: denominatorStyle }), atom.denom));\r\n    const denomReset = makeHlist(denom, context.mathstyle.adjustTo(denominatorStyle));\r\n    const ruleWidth = !atom.hasBarLine\r\n        ? 0\r\n        : METRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\r\n    // Rule 15b from TeXBook Appendix G, p.444\r\n    //\r\n    // 15b. If C > T, set u ← σ8 and v ← σ11. Otherwise set u ← σ9 or σ10,according\r\n    // as θ ̸= 0 or θ = 0, and set v ← σ12. (The fraction will be typeset with\r\n    // its numerator shifted up by an amount u with respect to the current\r\n    // baseline, and with the denominator shifted down by v, unless the boxes\r\n    // are unusually large.)\r\n    let numShift;\r\n    let clearance = 0;\r\n    let denomShift;\r\n    if (mathstyle.size === MATHSTYLES.displaystyle.size) {\r\n        numShift = mathstyle.metrics.num1; // set u ← σ8\r\n        if (ruleWidth > 0) {\r\n            clearance = 3 * ruleWidth; //  φ ← 3θ\r\n        }\r\n        else {\r\n            clearance = 7 * METRICS.defaultRuleThickness; // φ ← 7 ξ8\r\n        }\r\n        denomShift = mathstyle.metrics.denom1; // v ← σ11\r\n    }\r\n    else {\r\n        if (ruleWidth > 0) {\r\n            numShift = mathstyle.metrics.num2; // u ← σ9\r\n            clearance = ruleWidth; //  φ ← θ\r\n        }\r\n        else {\r\n            numShift = mathstyle.metrics.num3; // u ← σ10\r\n            clearance = 3 * METRICS.defaultRuleThickness; // φ ← 3 ξ8\r\n        }\r\n        denomShift = mathstyle.metrics.denom2; // v ← σ12\r\n    }\r\n    const numerDepth = numerReset ? depth(numerReset) : 0;\r\n    const denomHeight = denomReset ? height(denomReset) : 0;\r\n    let frac;\r\n    if (ruleWidth === 0) {\r\n        // Rule 15c from Appendix G\r\n        // No bar line between numerator and denominator\r\n        const candidateClearance = numShift - numerDepth - (denomHeight - denomShift);\r\n        if (candidateClearance < clearance) {\r\n            numShift += 0.5 * (clearance - candidateClearance);\r\n            denomShift += 0.5 * (clearance - candidateClearance);\r\n        }\r\n        frac = makeVlist(newContext, [numerReset, -numShift, denomReset, denomShift], 'individualShift');\r\n    }\r\n    else {\r\n        // Rule 15d from Appendix G\r\n        // There is a bar line between the numerator and the denominator\r\n        const axisHeight = mathstyle.metrics.axisHeight;\r\n        const numerLine = axisHeight + 0.5 * ruleWidth;\r\n        const denomLine = axisHeight - 0.5 * ruleWidth;\r\n        if (numShift - numerDepth - numerLine < clearance) {\r\n            numShift += clearance - (numShift - numerDepth - numerLine);\r\n        }\r\n        if (denomLine - (denomHeight - denomShift) < clearance) {\r\n            denomShift += clearance - (denomLine - (denomHeight - denomShift));\r\n        }\r\n        const mid = makeSpan(null, ' frac-line');\r\n        mid.applyStyle(atom.getStyle());\r\n        // Manually set the height of the line because its height is\r\n        // created in CSS\r\n        mid.height = ruleWidth / 2;\r\n        mid.depth = ruleWidth / 2;\r\n        const elements = [];\r\n        if (numerReset) {\r\n            elements.push(numerReset);\r\n            elements.push(-numShift);\r\n        }\r\n        elements.push(mid);\r\n        elements.push(ruleWidth / 2 - axisHeight);\r\n        if (denomReset) {\r\n            elements.push(denomReset);\r\n            elements.push(denomShift);\r\n        }\r\n        frac = makeVlist(newContext, elements, 'individualShift');\r\n    }\r\n    // Add a 'mfrac' class to provide proper context for\r\n    // other css selectors (such as 'frac-line')\r\n    frac.classes += ' mfrac';\r\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\r\n    // account for the possible size change here.\r\n    frac.height *= mathstyle.sizeMultiplier / context.mathstyle.sizeMultiplier;\r\n    frac.depth *= mathstyle.sizeMultiplier / context.mathstyle.sizeMultiplier;\r\n    // if (!atom.leftDelim && !atom.rightDelim) {\r\n    //     return makeOrd(frac,\r\n    //         context.parentMathstyle.adjustTo(mathstyle) +\r\n    //         ((context.parentSize !== context.size) ?\r\n    //             (' sizing reset-' + context.parentSize + ' ' + context.size) : ''));\r\n    // }\r\n    // Rule 15e of Appendix G\r\n    const delimSize = mathstyle.size === MATHSTYLES.displaystyle.size\r\n        ? mathstyle.metrics.delim1\r\n        : mathstyle.metrics.delim2;\r\n    // Optional delimiters\r\n    const leftDelim = atom.bind(context, makeCustomSizedDelim('mopen', atom.leftDelim, delimSize, true, context.clone({ mathstyle: mathstyle })));\r\n    const rightDelim = atom.bind(context, makeCustomSizedDelim('mclose', atom.rightDelim, delimSize, true, context.clone({ mathstyle: mathstyle })));\r\n    leftDelim.applyStyle(atom.getStyle());\r\n    rightDelim.applyStyle(atom.getStyle());\r\n    return [\r\n        atom.bind(context, \r\n        // makeStruts(\r\n        makeSpan([leftDelim, frac, rightDelim], context.parentSize !== context.size\r\n            ? 'sizing reset-' + context.parentSize + ' ' + context.size\r\n            : '', 'mord')\r\n        // )\r\n        ),\r\n    ];\r\n});\n\n/**\r\n *  \\left....\\right\r\n *\r\n * Note that we can encounter malformed \\left...\\right, for example\r\n * a \\left without a matching \\right or vice versa. In that case, the\r\n * leftDelim (resp. rightDelim) will be undefined. We still need to handle\r\n * those cases.\r\n *\r\n */\r\nregisterAtomType('leftright', (context, atom) => {\r\n    if (!atom.body) {\r\n        // No body, only a delimiter\r\n        if (atom.leftDelim) {\r\n            return new Atom('math', 'mopen', atom.leftDelim).decompose(context);\r\n        }\r\n        if (atom.rightDelim) {\r\n            return new Atom('math', 'mclose', atom.rightDelim).decompose(context);\r\n        }\r\n        return null;\r\n    }\r\n    // The scope of the context is this group, so make a copy of it\r\n    // so that any changes to it will be discarded when finished\r\n    // with this group.\r\n    const localContext = context.clone();\r\n    const inner = decompose(localContext, atom.body);\r\n    const mathstyle = localContext.mathstyle;\r\n    let innerHeight = 0;\r\n    let innerDepth = 0;\r\n    let result = [];\r\n    // Calculate its height and depth\r\n    // The size of delimiters is the same, regardless of what mathstyle we are\r\n    // in. Thus, to correctly calculate the size of delimiter we need around\r\n    // a group, we scale down the inner size based on the size.\r\n    innerHeight = height(inner) * mathstyle.sizeMultiplier;\r\n    innerDepth = depth(inner) * mathstyle.sizeMultiplier;\r\n    // Add the left delimiter to the beginning of the expression\r\n    if (atom.leftDelim) {\r\n        result.push(atom.bind(context, makeLeftRightDelim('mopen', atom.leftDelim, innerHeight, innerDepth, localContext, 'ML__open')));\r\n        result[result.length - 1].applyStyle(atom.getStyle());\r\n    }\r\n    if (inner) {\r\n        // Replace the delim (\\middle) spans with proper ones now that we know\r\n        // the height/depth\r\n        for (let i = 0; i < inner.length; i++) {\r\n            if (inner[i].delim) {\r\n                const savedCaret = inner[i].caret;\r\n                const savedSelected = /ML__selected/.test(inner[i].classes);\r\n                inner[i] = atom.bind(context, makeLeftRightDelim('minner', inner[i].delim, innerHeight, innerDepth, localContext));\r\n                inner[i].caret = savedCaret;\r\n                inner[i].selected(savedSelected);\r\n            }\r\n        }\r\n        result = result.concat(inner);\r\n    }\r\n    // Add the right delimiter to the end of the expression.\r\n    if (atom.rightDelim) {\r\n        let delim = atom.rightDelim;\r\n        let classes;\r\n        if (delim === '?') {\r\n            if (context.smartFence) {\r\n                // Use a placeholder delimiter matching the open delimiter\r\n                delim = {\r\n                    '(': ')',\r\n                    '\\\\{': '\\\\}',\r\n                    '\\\\lbrace': '\\\\rbrace',\r\n                    '\\\\langle': '\\\\rangle',\r\n                    '\\\\lfloor': '\\\\rfloor',\r\n                    '\\\\lceil': '\\\\rceil',\r\n                    '\\\\vert': '\\\\vert',\r\n                    '\\\\lvert': '\\\\rvert',\r\n                    '\\\\Vert': '\\\\Vert',\r\n                    '\\\\lVert': '\\\\rVert',\r\n                    '\\\\lbrack': '\\\\rbrack',\r\n                    '\\\\ulcorner': '\\\\urcorner',\r\n                    '\\\\llcorner': '\\\\lrcorner',\r\n                    '\\\\lgroup': '\\\\rgroup',\r\n                    '\\\\lmoustache': '\\\\rmoustache',\r\n                }[atom.leftDelim];\r\n                delim = delim || atom.leftDelim;\r\n                classes = 'ML__smart-fence__close';\r\n            }\r\n            else {\r\n                delim = '.';\r\n            }\r\n        }\r\n        result.push(atom.bind(context, makeLeftRightDelim('mclose', delim, innerHeight, innerDepth, localContext, (classes || '') + ' ML__close')));\r\n        result[result.length - 1].applyStyle(atom.getStyle());\r\n    }\r\n    // If the `inner` flag is set, return the `inner` element (that's the\r\n    // behavior for the regular `\\left...\\right`\r\n    if (atom.inner)\r\n        return [makeSpan(result, mathstyle.cls(), 'minner')];\r\n    // Otherwise, include a `\\mathopen{}...\\mathclose{}`. That's the\r\n    // behavior for `\\mleft...\\mright`, which allows for tighter spacing\r\n    // for example in `\\sin\\mleft(x\\mright)`\r\n    return result;\r\n});\n\n/**\r\n * \\overline and \\underline\r\n */\r\nregisterAtomType('line', (context, atom) => {\r\n    const mathstyle = context.mathstyle;\r\n    // TeXBook:443. Rule 9 and 10\r\n    const inner = decompose(context.cramp(), atom.body);\r\n    const ruleWidth = METRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\r\n    const line = makeSpan(null, context.mathstyle.adjustTo(MATHSTYLES.textstyle) +\r\n        ' ' +\r\n        atom.position +\r\n        '-line');\r\n    line.height = ruleWidth;\r\n    line.maxFontSize = 1.0;\r\n    let vlist;\r\n    if (atom.position === 'overline') {\r\n        vlist = makeVlist(context, [inner, 3 * ruleWidth, line, ruleWidth]);\r\n    }\r\n    else {\r\n        const innerSpan = makeSpan(inner);\r\n        vlist = makeVlist(context, [ruleWidth, line, 3 * ruleWidth, innerSpan], 'top', height(innerSpan));\r\n    }\r\n    return [makeSpan(vlist, atom.position, 'mord')];\r\n});\n\n/**\r\n * Operators are handled in the TeXbook pg. 443-444, rule 13(a).\r\n */\r\nregisterAtomType('mop', (context, atom) => {\r\n    var _a;\r\n    const mathstyle = context.mathstyle;\r\n    let base;\r\n    let baseShift = 0;\r\n    let slant = 0;\r\n    if (atom.isSymbol) {\r\n        // If this is a symbol, create the symbol.\r\n        // Most symbol operators get larger in displaystyle (rule 13)\r\n        const large = mathstyle.size === MATHSTYLES.displaystyle.size &&\r\n            atom.symbol !== '\\\\smallint';\r\n        base = makeSymbol(large ? 'Size2-Regular' : 'Size1-Regular', atom.body, 'op-symbol ' + (large ? 'large-op' : 'small-op'), 'mop');\r\n        // Shift the symbol so its center lies on the axis (rule 13). It\r\n        // appears that our fonts have the centers of the symbols already\r\n        // almost on the axis, so these numbers are very small. Note we\r\n        // don't actually apply this here, but instead it is used either in\r\n        // the vlist creation or separately when there are no limits.\r\n        baseShift =\r\n            (base.height - base.depth) / 2 -\r\n                mathstyle.metrics.axisHeight * mathstyle.sizeMultiplier;\r\n        // The slant of the symbol is just its italic correction.\r\n        slant = base.italic;\r\n        base.applyStyle({\r\n            color: atom.isPhantom ? 'transparent' : atom.color,\r\n            backgroundColor: atom.isPhantom\r\n                ? 'transparent'\r\n                : atom.backgroundColor,\r\n            cssId: atom.cssId,\r\n            cssClass: atom.cssClass,\r\n            letterShapeStyle: context.letterShapeStyle,\r\n        });\r\n    }\r\n    else if (isArray(atom.body)) {\r\n        // If this is a list, decompose that list.\r\n        base = makeSpan(decompose(context, atom.body), '', 'mop');\r\n    }\r\n    else {\r\n        // Otherwise, this is a text operator. Build the text from the\r\n        // operator's name.\r\n        console.assert(atom.type === 'mop');\r\n        base = atom.makeSpan(context, atom.body);\r\n    }\r\n    // Bind the generated span and this atom so the atom can be retrieved\r\n    // from the span later.\r\n    atom.bind(context, base);\r\n    if (atom.isSymbol)\r\n        base.setTop(baseShift);\r\n    let result = base;\r\n    if (atom.superscript || atom.subscript) {\r\n        const limits = (_a = atom.limits) !== null && _a !== void 0 ? _a : 'auto';\r\n        if (limits === 'limits' ||\r\n            (limits === 'auto' &&\r\n                mathstyle.size === MATHSTYLES.displaystyle.size)) {\r\n            result = atom.attachLimits(context, base, baseShift, slant);\r\n        }\r\n        else {\r\n            result = atom.attachSupsub(context, base, 'mop');\r\n        }\r\n    }\r\n    return [result];\r\n});\n\n// An `overunder` atom has the following attributes:\r\n// - body: atoms[]: atoms displayed on the base line\r\n// - svgBody: string. A SVG graphic displayed on the base line (if present, the body is ignored)\r\n// - overscript: atoms[]: atoms displayed above the body\r\n// - svgAbove: string. A named SVG graphic above the element\r\n// - underscript: atoms[]: atoms displayed below the body\r\n// - svgBelow: string. A named SVG graphic below the element\r\n// - skipBoundary: boolean. If true, ignore atom boundary when keyboard navigating\r\nregisterAtomType('overunder', (context, atom) => {\r\n    const body = atom.svgBody\r\n        ? makeSVGSpan(atom.svgBody)\r\n        : decompose(context, atom.body);\r\n    const annotationStyle = context.clone({\r\n        mathstyle: MATHSTYLES.scriptstyle,\r\n    });\r\n    let above;\r\n    let below;\r\n    if (atom.svgAbove) {\r\n        above = makeSVGSpan(atom.svgAbove);\r\n    }\r\n    else if (atom.overscript && atom.overscript.length > 0) {\r\n        above = makeSpan(decompose(annotationStyle, atom.overscript), context.mathstyle.adjustTo(annotationStyle.mathstyle));\r\n    }\r\n    if (atom.svgBelow) {\r\n        below = makeSVGSpan(atom.svgBelow);\r\n    }\r\n    else if (atom.underscript && atom.underscript.length > 0) {\r\n        below = makeSpan(decompose(annotationStyle, atom.underscript), context.mathstyle.adjustTo(annotationStyle.mathstyle));\r\n    }\r\n    if (above && below) {\r\n        // Pad the above and below if over a \"base\"\r\n        below.setLeft(0.3);\r\n        below.setRight(0.3);\r\n        above.setLeft(0.3);\r\n        above.setRight(0.3);\r\n    }\r\n    let result = makeOverunderStack(context, body, above, below, isSpanType(atom.type) ? atom.type : 'mrel');\r\n    if (atom.superscript || atom.subscript) {\r\n        result = atom.attachLimits(context, result, 0, 0);\r\n    }\r\n    return [result];\r\n});\r\n/**\r\n * Combine a nucleus with an atom above and an atom below. Used to form\r\n * stacks for the 'overunder' atom type .\r\n *\r\n * @param nucleus The base over and under which the atoms will\r\n * be placed.\r\n * @param type The type ('mop', 'mrel', etc...) of the result\r\n */\r\nfunction makeOverunderStack(context, nucleus, above, below, type) {\r\n    // If nothing above and nothing below, nothing to do.\r\n    if (!above && !below) {\r\n        return makeSpan(nucleus, 'op-over-under', type);\r\n        // return isArray(nucleus) ? makeSpan(nucleus) : nucleus;\r\n    }\r\n    let aboveShift = 0;\r\n    let belowShift = 0;\r\n    if (above) {\r\n        aboveShift = Math.max(METRICS.bigOpSpacing1, METRICS.bigOpSpacing3 - depth(above));\r\n    }\r\n    if (below) {\r\n        belowShift = Math.max(METRICS.bigOpSpacing2, METRICS.bigOpSpacing4 - height(below));\r\n    }\r\n    let result = null;\r\n    if (below && above) {\r\n        const bottom = height(below) + depth(below) + depth(nucleus);\r\n        result = makeVlist(context, [\r\n            0,\r\n            below,\r\n            belowShift,\r\n            nucleus,\r\n            aboveShift,\r\n            above,\r\n            METRICS.bigOpSpacing2,\r\n        ], 'bottom', bottom);\r\n    }\r\n    else if (below && !above) {\r\n        const top = height(nucleus);\r\n        result = makeVlist(context, [0, below, belowShift, nucleus], 'top', top);\r\n    }\r\n    else if (above && !below) {\r\n        result = makeVlist(context, [\r\n            depth(nucleus),\r\n            nucleus,\r\n            Math.max(METRICS.bigOpSpacing2, aboveShift),\r\n            above,\r\n        ], 'bottom', depth(nucleus));\r\n    }\r\n    return makeSpan(result, 'op-over-under', type);\r\n}\n\nregisterAtomType('phantom', (context, atom) => {\r\n    if (atom.phantomType === 'vphantom') {\r\n        const content = makeSpan(decompose(context, atom.body), 'inner');\r\n        return [makeSpan([content, makeSpan(null, 'fix')], 'rlap', 'mord')];\r\n    }\r\n    else if (atom.phantomType === 'hphantom' ||\r\n        atom.phantomType === 'smash' ||\r\n        atom.phantomType === 'bsmash' ||\r\n        atom.phantomType === 'tsmash') {\r\n        const content = makeSpan(decompose(context, atom.body), '', 'mord');\r\n        if (atom.phantomType !== 'bsmash') {\r\n            content.height = 0;\r\n        }\r\n        if (atom.phantomType !== 'tsmash') {\r\n            content.depth = 0;\r\n        }\r\n        return [makeSpan(makeVlist(context, [content]), '', 'mord')];\r\n    }\r\n    return [makeSpan(decompose(context, atom.body), '', 'mord')];\r\n});\n\nregisterAtomType('surd', (context, atom) => {\r\n    var _a;\r\n    // See the TeXbook pg. 443, Rule 11.\r\n    // http://www.ctex.org/documents/shredder/src/texbook.pdf\r\n    const mathstyle = context.mathstyle;\r\n    // First, we do the same steps as in overline to build the inner group\r\n    // and line\r\n    console.assert(atom.body === null || isArray(atom.body));\r\n    const inner = (_a = decompose(context.cramp(), atom.body)) !== null && _a !== void 0 ? _a : makeSpan('');\r\n    const ruleWidth = METRICS.defaultRuleThickness / mathstyle.sizeMultiplier;\r\n    let phi = ruleWidth;\r\n    if (mathstyle.id < MATHSTYLES.textstyle.id) {\r\n        phi = mathstyle.metrics.xHeight;\r\n    }\r\n    // Calculate the clearance between the body and line\r\n    let lineClearance = ruleWidth + phi / 4;\r\n    const innerTotalHeight = Math.max(2 * phi, (height(inner) + depth(inner)) * mathstyle.sizeMultiplier);\r\n    const minDelimiterHeight = innerTotalHeight + (lineClearance + ruleWidth);\r\n    // Create a \\surd delimiter of the required minimum size\r\n    const delim = makeSpan(makeCustomSizedDelim('', '\\\\surd', minDelimiterHeight, false, context), 'sqrt-sign');\r\n    delim.applyStyle(atom.getStyle());\r\n    const delimDepth = delim.height + delim.depth - ruleWidth;\r\n    // Adjust the clearance based on the delimiter size\r\n    if (delimDepth > height(inner) + depth(inner) + lineClearance) {\r\n        lineClearance =\r\n            (lineClearance +\r\n                delimDepth -\r\n                (height(inner) + depth(inner))) /\r\n                2;\r\n    }\r\n    // Shift the delimiter so that its top lines up with the top of the line\r\n    delim.setTop(delim.height - height(inner) - (lineClearance + ruleWidth));\r\n    const line = makeSpan(null, context.mathstyle.adjustTo(MATHSTYLES.textstyle) + ' sqrt-line');\r\n    line.applyStyle(atom.getStyle());\r\n    line.height = ruleWidth;\r\n    const body = makeVlist(context, [inner, lineClearance, line, ruleWidth]);\r\n    if (!atom.index) {\r\n        return [atom.bind(context, makeSpan([delim, body], 'sqrt', 'mord'))];\r\n    }\r\n    // Handle the optional root index\r\n    // The index is always in scriptscript style\r\n    const newcontext = context.clone({\r\n        mathstyle: MATHSTYLES.scriptscriptstyle,\r\n    });\r\n    const root = makeSpan(decompose(newcontext, atom.index), mathstyle.adjustTo(MATHSTYLES.scriptscriptstyle));\r\n    // Figure out the height and depth of the inner part\r\n    const innerRootHeight = Math.max(delim.height, body.height);\r\n    const innerRootDepth = Math.max(delim.depth, body.depth);\r\n    // The amount the index is shifted by. This is taken from the TeX\r\n    // source, in the definition of `\\r@@t`.\r\n    const toShift = 0.6 * (innerRootHeight - innerRootDepth);\r\n    // Build a VList with the superscript shifted up correctly\r\n    const rootVlist = makeVlist(context, [root], 'shift', -toShift);\r\n    // Add a class surrounding it so we can add on the appropriate\r\n    // kerning\r\n    const result = makeSpan([makeSpan(rootVlist, 'root'), delim, body], 'sqrt', 'mord');\r\n    result.height = delim.height;\r\n    result.depth = delim.depth;\r\n    return [atom.bind(context, result)];\r\n});\n\n// Performance to check first char of string: https://jsben.ch/QLjdZ\r\nfunction isLiteral(token) {\r\n    return !/^<({|}|\\$|\\$\\$|space)>$/.test(token);\r\n}\r\n/**\r\n * Transform a list of tokens into a list of atoms.\r\n *\r\n\n * @property tokens - An array of tokens generated by the lexer.\r\n * @property args - Optional arguments to substitute the `#` token.\r\n * @property macros - A dictionary of objects, index by the name of\r\n * the macro, with the following keys:\r\n *    * args: an integer, the number of arguments, default 0. They can be referenced as #0,\r\n *       #1, #2... inside the definition of the macro\r\n *    * def: a string, the definition of the macro, which can reference other macros\r\n * @property index - The current token to be parsed: index in `this.tokens`\r\n * @property atoms - Accumulated result of the parsing by\r\n * `parseAtom()`\r\n * @property style - The font, weight, color, etc. to apply to the\r\n * upcoming tokens\r\n * @property parseMode - The parse mode indicates the syntax rules to\r\n * use to parse the upcoming tokens.\r\n * @property tabularMode - When in tabular mode, `'&'` is interpreted as\r\n *  a column separator and `'\\'` as a row separator. Used for matrixes, etc...\r\n * @property endCount - Counter to prevent deadlock. If `end()` is\r\n * called too many times (1,000) in a row for the same token, bail.\r\n */\r\nclass Parser {\r\n    /**\r\n     * @param tokens - An array of tokens generated by the lexer.\r\n     * @param args - An optional list of arguments. `#n` tokens will be\r\n     * substituted with the corresponding element in the args object. This is used\r\n     * when parsing macros.\r\n     */\r\n    constructor(tokens, args, macros, onError) {\r\n        this.index = 0;\r\n        this.style = {};\r\n        this.parseMode = 'math';\r\n        this.smartFence = false;\r\n        this.tabularMode = false; // For arrays, matrix, etc.: ifferent parsing rules apply.\r\n        this.atoms = [];\r\n        this.endCount = 0;\r\n        this.tokens = tokens;\r\n        this.args = args;\r\n        this.macros = macros;\r\n        this.onError = (err) => onError({\r\n            before: tokensToString(this.tokens.slice(this.index, this.index + 10)),\r\n            after: tokensToString(this.tokens.slice(Math.max(0, this.index - 10), this.index)),\r\n            ...err,\r\n        });\r\n    }\r\n    swapAtoms(newAtoms = []) {\r\n        const result = this.atoms;\r\n        this.atoms = newAtoms;\r\n        return result;\r\n    }\r\n    swapParseMode(mode) {\r\n        const result = this.parseMode;\r\n        this.parseMode = mode;\r\n        return result;\r\n    }\r\n    /**\r\n     * True if we've reached the end of the token stream\r\n     */\r\n    end() {\r\n        // To prevent a deadlock, count how many times end() is called without the\r\n        // index advancing. If it happens more than 1,000 times in a row,\r\n        // assume something is broken and pretend the stream is finished.\r\n        this.endCount++;\r\n        return this.index >= this.tokens.length || this.endCount > 1000;\r\n    }\r\n    get() {\r\n        this.endCount = 0;\r\n        return this.index < this.tokens.length ? this.tokens[this.index++] : '';\r\n    }\r\n    peek() {\r\n        return this.tokens[this.index];\r\n    }\r\n    /**\r\n     * @return True if the next token matches the input, and advance\r\n     */\r\n    match(input) {\r\n        if (this.tokens[this.index] === input) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Return the last atom that can have a subsup attached to it.\r\n     * If there isn't one, insert a `msubsup` and return it.\r\n     */\r\n    lastSubsupAtom() {\r\n        const lastAtom = this.atoms.length === 0\r\n            ? undefined\r\n            : this.atoms[this.atoms.length - 1];\r\n        if (!lastAtom ||\r\n            (lastAtom.type !== 'mop' &&\r\n                lastAtom.type !== 'leftright' &&\r\n                lastAtom.type !== 'msubsup')) {\r\n            if (!(lastAtom === null || lastAtom === void 0 ? void 0 : lastAtom.limits) || (lastAtom === null || lastAtom === void 0 ? void 0 : lastAtom.limits) === 'nolimits') {\r\n                this.atoms.push(new Atom(this.parseMode, 'msubsup', '\\u200b'));\r\n            }\r\n        }\r\n        return this.atoms[this.atoms.length - 1];\r\n    }\r\n    /**\r\n     * @return True if the next token matches the specified regular expression pattern.\r\n     */\r\n    hasPattern(pattern) {\r\n        return pattern.test(this.tokens[this.index]);\r\n    }\r\n    hasInfixCommand() {\r\n        const index = this.index;\r\n        if (index < this.tokens.length && this.tokens[index][0] === '\\\\') {\r\n            const info = getInfo(this.tokens[index], this.parseMode, this.macros);\r\n            if ((info === null || info === void 0 ? void 0 : info.mode) && !info.mode.includes(this.parseMode))\r\n                return false;\r\n            return info === null || info === void 0 ? void 0 : info.infix;\r\n        }\r\n        return false;\r\n    }\r\n    matchColumnSeparator() {\r\n        const index = this.index;\r\n        if (this.tabularMode && this.tokens[index] === '&') {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    matchRowSeparator() {\r\n        const index = this.index;\r\n        if (this.tabularMode &&\r\n            (this.tokens[index] === '\\\\\\\\' || this.tokens[index] === '\\\\cr')) {\r\n            this.index++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Return the appropriate value for a placeholder, either a default\r\n     * one, or if a value was provided for #? via args, that value.\r\n     */\r\n    placeholder() {\r\n        var _a;\r\n        if (!this.args || typeof this.args['?'] === 'undefined') {\r\n            // U+2753 = BLACK QUESTION MARK ORNAMENT\r\n            const result = new Atom(this.parseMode, 'placeholder', '?', this.style);\r\n            result.captureSelection = true;\r\n            return [result];\r\n        }\r\n        if (typeof ((_a = this.args) === null || _a === void 0 ? void 0 : _a['?']) === 'string') {\r\n            // If there is a specific value defined for the placeholder,\r\n            // use it.\r\n            return parseString(this.args['?'], this.parseMode, null, this.macros, false, this.onError);\r\n        }\r\n        return this.args['?'];\r\n    }\r\n    // matchToken(type: string): boolean {\r\n    //     if (this.hasToken(type)) {\r\n    //         this.index++;\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n    matchWhitespace() {\r\n        let found = false;\r\n        while (this.match('<space>')) {\r\n            found = true;\r\n        }\r\n        return found;\r\n    }\r\n    skipUntilToken(input) {\r\n        let token = this.tokens[this.index];\r\n        while (token && token !== input) {\r\n            token = this.tokens[++this.index];\r\n        }\r\n        if (token === input) {\r\n            this.index++;\r\n        }\r\n    }\r\n    skipFiller() {\r\n        let done = false;\r\n        do {\r\n            const skippedSpace = this.matchWhitespace();\r\n            const skippedRelax = this.match('\\\\relax');\r\n            done = !skippedSpace && !skippedRelax;\r\n        } while (!done);\r\n    }\r\n    /**\r\n     * Keywords are used to specify dimensions, and for various other\r\n     * syntactic constructs.\r\n     *\r\n     * Unlike commands, they are not case sensitive.\r\n     *\r\n     * There are 25 keywords:\r\n     *\r\n     * at by bp cc cm dd depth em ex fil fill filll height in minus\r\n     * mm mu pc plus pt sp spread to true width\r\n     *\r\n     * TeX: 8212\r\n     * @return true if the expected keyword is present\r\n     */\r\n    matchKeyword(keyword) {\r\n        const savedIndex = this.index;\r\n        let done = this.end();\r\n        let value = '';\r\n        while (!done) {\r\n            const token = this.get();\r\n            if (isLiteral(token)) {\r\n                value += token;\r\n                done = this.end() || value.length >= keyword.length;\r\n            }\r\n            else {\r\n                done = true;\r\n            }\r\n        }\r\n        const hasKeyword = keyword.toUpperCase() === value.toUpperCase();\r\n        if (!hasKeyword) {\r\n            this.index = savedIndex;\r\n        }\r\n        return hasKeyword;\r\n    }\r\n    /**\r\n     * Return a sequence of characters as a string.\r\n     * i.e. 'abcd' returns 'abcd'.\r\n     * Terminates on the first non-literal token encountered\r\n     * e.g. '<{>', '<}>' etc...\r\n     * Will also terminate on character literal ']'\r\n     */\r\n    scanString() {\r\n        let result = '';\r\n        let done = this.end();\r\n        while (!done) {\r\n            if (this.match('<space>')) {\r\n                result += ' ';\r\n            }\r\n            else {\r\n                const token = this.peek();\r\n                if (token === ']') {\r\n                    done = true;\r\n                }\r\n                else if (isLiteral(token)) {\r\n                    result += this.get();\r\n                }\r\n                else if (token[0] === '\\\\') {\r\n                    // TeX will give a 'Missing \\endcsname inserted' error\r\n                    // if it encounters any command when expecting a string.\r\n                    // We're a bit more lax.\r\n                    this.onError({ code: 'unbalanced-braces' });\r\n                    result += this.get();\r\n                }\r\n                else {\r\n                    // It's '<{>', '<}>', '<$>' or '<$$>\r\n                    done = true;\r\n                }\r\n            }\r\n            done = done || this.end();\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return a sequence of characters as a string.\r\n     * Terminates on a balanced closing bracket\r\n     * This is used by the `\\ce` command\r\n     */\r\n    scanBalancedString() {\r\n        let result = '';\r\n        let done = this.end();\r\n        let level = 1;\r\n        while (!done) {\r\n            if (this.match('<space>')) {\r\n                result += ' ';\r\n            }\r\n            else {\r\n                const token = this.get();\r\n                if (token === '<{>') {\r\n                    result += '{';\r\n                    level += 1;\r\n                }\r\n                else if (token === '<}>') {\r\n                    level -= 1;\r\n                    if (level > 0) {\r\n                        result += '}';\r\n                    }\r\n                    else {\r\n                        this.index -= 1;\r\n                    }\r\n                }\r\n                else if (token === '<$>') {\r\n                    result += '$';\r\n                }\r\n                else if (token === '<$$>') {\r\n                    result += '$$';\r\n                }\r\n                else {\r\n                    result += token;\r\n                }\r\n            }\r\n            done = level === 0 || this.end();\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return the literal tokens, as a string, until a matching closing \"}\"\r\n     */\r\n    matchLiteralArg() {\r\n        var _a;\r\n        let result = '';\r\n        if (this.match('<{>')) {\r\n            let depth = 1;\r\n            while (depth > 0 && !this.end()) {\r\n                const token = this.get();\r\n                if (token === '<}>') {\r\n                    depth -= 1;\r\n                    if (depth > 0) {\r\n                        // Don't include final '}'\r\n                        result += '}';\r\n                    }\r\n                }\r\n                else if (token === '<{>') {\r\n                    depth += 1;\r\n                    result += '{';\r\n                }\r\n                else {\r\n                    result += (_a = {\r\n                        '<space>': ' ',\r\n                        '<$$>': '$$',\r\n                        '<$>': '$',\r\n                    }[token]) !== null && _a !== void 0 ? _a : token;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Return a CSS color (#rrggbb)\r\n     */\r\n    scanColor() {\r\n        return stringToColor(this.scanString());\r\n    }\r\n    /**\r\n     * Return as a number a group of characters representing a\r\n     * numerical quantity.\r\n     *\r\n     * From TeX:8695 (scan_int):\r\n     * An integer number can be preceded by any number of spaces and `+' or\r\n     * `-' signs. Then comes either a decimal constant (i.e., radix 10), an\r\n     * octal constant (i.e., radix 8, preceded by '), a hexadecimal constant\r\n     * (radix 16, preceded by \"), an alphabetic constant (preceded by `), or\r\n     * an internal variable.\r\n     */\r\n    scanNumber(isInteger = true) {\r\n        var _a, _b;\r\n        let negative = false;\r\n        let token = this.peek();\r\n        while (token === '<space>' || token === '+' || token === '-') {\r\n            this.get();\r\n            if (token === '-')\r\n                negative = !negative;\r\n            token = this.peek();\r\n        }\r\n        isInteger = Boolean(isInteger);\r\n        let radix = 10;\r\n        let digits = /[0-9]/;\r\n        if (this.match(\"'\")) {\r\n            // Apostrophe indicates an octal value\r\n            radix = 8;\r\n            digits = /[0-7]/;\r\n            isInteger = true;\r\n        }\r\n        else if (this.match('\"') || this.match('x')) {\r\n            // Double-quote indicates a hex value\r\n            // The 'x' prefix notation for the hexadecimal numbers is a MathJax extension.\r\n            // For example: 'x3a'\r\n            radix = 16;\r\n            // Hex digits have to be upper-case\r\n            digits = /[0-9A-F]/;\r\n            isInteger = true;\r\n        }\r\n        else if (this.match('`')) {\r\n            // A backtick indicates an alphabetic constant: a letter, or a single-letter command\r\n            token = this.get();\r\n            if (token) {\r\n                if (token.startsWith('\\\\') && token.length === 2) {\r\n                    return (negative ? -1 : 1) * ((_a = token.codePointAt(1)) !== null && _a !== void 0 ? _a : 0);\r\n                }\r\n                return (negative ? -1 : 1) * ((_b = token.codePointAt(0)) !== null && _b !== void 0 ? _b : 0);\r\n            }\r\n            return NaN;\r\n        }\r\n        let value = '';\r\n        while (this.hasPattern(digits)) {\r\n            value += this.get();\r\n        }\r\n        // Parse the fractional part, if applicable\r\n        if (!isInteger && (this.match('.') || this.match(','))) {\r\n            value += '.';\r\n            while (this.hasPattern(digits)) {\r\n                value += this.get();\r\n            }\r\n        }\r\n        const result = isInteger ? parseInt(value, radix) : parseFloat(value);\r\n        return negative ? -result : result;\r\n    }\r\n    /**\r\n     * Return as a floating point number a dimension in pt (1 em = 10 pt)\r\n     *\r\n     * See TeX:8831\r\n     * @todo: note that some units depend on the font (em, ex). So it might be\r\n     * better to return a dimen struct with the value + unit and resolve\r\n     * later when we have a font context....\r\n     */\r\n    scanDimen() {\r\n        const value = this.scanNumber(false);\r\n        this.matchWhitespace();\r\n        let result;\r\n        if (this.matchKeyword('pt')) {\r\n            result = convertDimenToEm(value, 'pt');\r\n        }\r\n        else if (this.matchKeyword('mm')) {\r\n            result = convertDimenToEm(value, 'mm');\r\n        }\r\n        else if (this.matchKeyword('cm')) {\r\n            result = convertDimenToEm(value, 'cm');\r\n        }\r\n        else if (this.matchKeyword('ex')) {\r\n            result = convertDimenToEm(value, 'ex');\r\n        }\r\n        else if (this.matchKeyword('px')) {\r\n            result = convertDimenToEm(value, 'px');\r\n        }\r\n        else if (this.matchKeyword('em')) {\r\n            result = convertDimenToEm(value, 'em');\r\n        }\r\n        else if (this.matchKeyword('bp')) {\r\n            result = convertDimenToEm(value, 'bp');\r\n        }\r\n        else if (this.matchKeyword('dd')) {\r\n            result = convertDimenToEm(value, 'dd');\r\n        }\r\n        else if (this.matchKeyword('pc')) {\r\n            result = convertDimenToEm(value, 'pc');\r\n        }\r\n        else if (this.matchKeyword('in')) {\r\n            result = convertDimenToEm(value, 'in');\r\n        }\r\n        else if (this.matchKeyword('mu')) {\r\n            result = convertDimenToEm(value, 'mu');\r\n        }\r\n        else {\r\n            // If the units are missing, TeX assumes 'pt'\r\n            this.onError({ code: 'missing-unit' });\r\n            result = convertDimenToEm(value, 'pt');\r\n        }\r\n        return result;\r\n    }\r\n    scanSkip() {\r\n        const result = this.scanDimen();\r\n        // We parse, but ignore, the optional 'plus' and 'minus'\r\n        // arguments.\r\n        this.matchWhitespace();\r\n        // 'plus', optionally followed by 'minus'\r\n        // ('minus' cannot come before 'plus')\r\n        // dimen or 'hfill'\r\n        if (this.matchKeyword('plus')) {\r\n            // @todo there could also be a \\hFilLlL command here\r\n            this.scanDimen();\r\n        }\r\n        this.matchWhitespace();\r\n        if (this.matchKeyword('minus')) {\r\n            // @todo there could also be a \\hFilLlL command here\r\n            this.scanDimen();\r\n        }\r\n        return result;\r\n    }\r\n    scanColspec() {\r\n        this.matchWhitespace();\r\n        const result = [];\r\n        while (!this.end() && !(this.peek() === '<}>' || this.peek() === ']')) {\r\n            const literal = this.get();\r\n            if (literal === 'c' || literal === 'r' || literal === 'l') {\r\n                result.push({ align: literal });\r\n            }\r\n            else if (literal === '|') {\r\n                result.push({ rule: true });\r\n            }\r\n            else if (literal === '@') {\r\n                if (this.match('<{>')) {\r\n                    const savedParsemode = this.swapParseMode('math');\r\n                    result.push({\r\n                        gap: this.parse((token) => token === '<}>'),\r\n                    });\r\n                    this.swapParseMode(savedParsemode);\r\n                }\r\n                if (!this.match('<}>')) {\r\n                    this.onError({ code: 'unbalanced-braces' });\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a `\\(...\\)` or `\\[...\\]` sequence\r\n     * @return group for the sequence or null\r\n     */\r\n    parseModeSet() {\r\n        let final = '';\r\n        if (this.match('\\\\('))\r\n            final = '\\\\)';\r\n        if (!final && this.match('\\\\['))\r\n            final = '\\\\]';\r\n        if (!final)\r\n            return null;\r\n        const savedParsemode = this.swapParseMode('math');\r\n        const result = new Atom('math', 'group');\r\n        result.mathstyle = final === '\\\\)' ? 'textstyle' : 'displaystyle';\r\n        result.body = this.parse((token) => token === final);\r\n        if (!this.match(final)) {\r\n            this.onError({ code: 'unbalanced-mode-shift' });\r\n        }\r\n        this.swapParseMode(savedParsemode);\r\n        if (!result.body || result.body.length === 0)\r\n            return null;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a `$...$` or `$$...$$` sequence\r\n     */\r\n    parseModeShift() {\r\n        let final = '';\r\n        if (this.match('<$>'))\r\n            final = '<$>';\r\n        if (!final && this.match('<$$>'))\r\n            final = '<$$>';\r\n        if (!final)\r\n            return null;\r\n        const result = new Atom('math', 'group');\r\n        result.mathstyle = final === '<$>' ? 'textstyle' : 'displaystyle';\r\n        result.latexOpen = final === '<$>' ? '$' : '$$';\r\n        result.latexClose = result.latexOpen;\r\n        const savedParsemode = this.swapParseMode('math');\r\n        result.body = this.parse((token) => token === final);\r\n        if (!this.match(final)) {\r\n            this.onError({ code: 'unbalanced-mode-shift' });\r\n        }\r\n        this.swapParseMode(savedParsemode);\r\n        if (!result.body || result.body.length === 0)\r\n            return null;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a \\begin{env}...\\end{end} sequence\r\n     */\r\n    parseEnvironment() {\r\n        // An environment starts with a \\begin command\r\n        if (!this.match('\\\\begin'))\r\n            return null;\r\n        // The \\begin command is immediately followed by the environment\r\n        // name, as a string argument\r\n        const envName = this.parseArgument('string');\r\n        if (!envName)\r\n            return null;\r\n        const def = getEnvironmentDefinition(envName);\r\n        if (!def) {\r\n            this.onError({\r\n                code: 'unknown-environment',\r\n                arg: envName,\r\n            });\r\n            return null;\r\n        }\r\n        // If the environment has some arguments, parse them\r\n        const args = [];\r\n        if (def === null || def === void 0 ? void 0 : def.params) {\r\n            for (const param of def.params) {\r\n                // Parse an argument\r\n                if (param.isOptional) {\r\n                    // If it's not present, scanArg returns null,\r\n                    // but push it on the list of arguments anyway.\r\n                    // The null value will be interpreted as unspecified\r\n                    // optional value by the command parse function.\r\n                    args.push(this.parseOptionalArgument(param.type));\r\n                }\r\n                else {\r\n                    const arg = this.parseArgument(param.type);\r\n                    if (!arg) {\r\n                        this.onError({\r\n                            code: 'missing-argument',\r\n                            arg: envName,\r\n                        });\r\n                    }\r\n                    args.push(arg);\r\n                }\r\n            }\r\n        }\r\n        // Some environments change the mode\r\n        const savedMode = this.parseMode;\r\n        const savedTabularMode = this.tabularMode;\r\n        const saveAtoms = this.swapAtoms([]);\r\n        // @todo: since calling scanImplicitGroup(), may not need to save/restore the atoms\r\n        this.tabularMode = def.tabular;\r\n        const array = [];\r\n        const rowGaps = [];\r\n        let row = [];\r\n        let done = false;\r\n        do {\r\n            if (this.end()) {\r\n                this.onError({ code: 'unbalanced-environment', arg: envName });\r\n                done = true;\r\n            }\r\n            if (!done && this.match('\\\\end')) {\r\n                if (this.parseArgument('string') !== envName) {\r\n                    this.onError({\r\n                        code: 'unbalanced-environment',\r\n                        arg: envName,\r\n                    });\r\n                }\r\n                done = true;\r\n            }\r\n            if (!done) {\r\n                if (this.matchColumnSeparator()) {\r\n                    row.push(this.swapAtoms([]));\r\n                }\r\n                else if (this.matchRowSeparator()) {\r\n                    row.push(this.swapAtoms([]));\r\n                    let gap = 0;\r\n                    this.matchWhitespace();\r\n                    if (this.match('[')) {\r\n                        gap = this.scanDimen();\r\n                        this.matchWhitespace();\r\n                        this.match(']');\r\n                    }\r\n                    rowGaps.push(gap || 0);\r\n                    array.push(row);\r\n                    row = [];\r\n                }\r\n                else {\r\n                    this.atoms = this.atoms.concat(this.parse((token) => token === '<}>' ||\r\n                        token === '&' ||\r\n                        token === '\\\\end' ||\r\n                        token === '\\\\cr' ||\r\n                        token === '\\\\\\\\'));\r\n                }\r\n            }\r\n        } while (!done);\r\n        row.push(this.swapAtoms([]));\r\n        if (row.length > 0)\r\n            array.push(row);\r\n        const newAtoms = this.swapAtoms(saveAtoms);\r\n        // If we're in tabular mode, we should end up with an empty atoms list\r\n        console.assert(!this.tabularMode || newAtoms.length === 0, 'Leftover atoms in tabular mode');\r\n        this.parseMode = savedMode;\r\n        this.tabularMode = savedTabularMode;\r\n        if (!def.tabular && newAtoms.length === 0)\r\n            return null;\r\n        if (def.tabular && array.length === 0)\r\n            return null;\r\n        const result = new Atom(this.parseMode, 'array', newAtoms);\r\n        Object.assign(result, def.parser(envName, args, array));\r\n        result.array = array;\r\n        result.rowGaps = rowGaps;\r\n        result.environmentName = envName;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a sequence until a group end marker, such as\r\n     * `}`, `\\end`, `&`, etc...\r\n     *\r\n     * Returns an array of atoms or an empty array if the sequence\r\n     * terminates right away.\r\n     *\r\n     * @param done - A predicate indicating if a\r\n     * token signals the end of an implicit group\r\n     */\r\n    parse(done) {\r\n        var _a;\r\n        const savedStyle = this.style;\r\n        if (!done) {\r\n            // Default group end marker\r\n            done = (token) => token === '<}>';\r\n        }\r\n        // To handle infix commands, we'll keep track of their prefix\r\n        // (tokens coming before them) and their arguments\r\n        let infix = '';\r\n        let infixInfo = null;\r\n        let infixArgs = [];\r\n        let prefix = null;\r\n        const saveAtoms = this.swapAtoms([]);\r\n        while (!this.end() && !done(this.peek())) {\r\n            if (this.hasInfixCommand() && !infix) {\r\n                // The next token is an infix and we have not seen one yet\r\n                // (there can be only one infix command per implicit group).\r\n                infix = this.get();\r\n                // The current parseMode, this.parseMode, may no longer have the value\r\n                // it had when we encountered the infix. However, since all infix are\r\n                // only defined in 'math' mode, we can use the 'math' constant\r\n                // for the parseMode\r\n                infixInfo = getInfo(infix, 'math', this.macros);\r\n                if (infixInfo) {\r\n                    infixArgs = this.parseArguments(infixInfo)[1];\r\n                }\r\n                // Save the math list so far and start a new one\r\n                prefix = this.swapAtoms([]);\r\n            }\r\n            else {\r\n                this.parseToken();\r\n            }\r\n        }\r\n        let result;\r\n        if (infix) {\r\n            console.assert(Boolean(infixInfo));\r\n            infixArgs.unshift(this.swapAtoms(saveAtoms)); // suffix\r\n            if (prefix)\r\n                infixArgs.unshift(prefix);\r\n            result = [\r\n                new Atom(this.parseMode, infixInfo.type, (_a = infixInfo.value) !== null && _a !== void 0 ? _a : infix.slice(1), // Functions don't have\r\n                infixInfo.parse ? infixInfo.parse(infix, infixArgs) : null),\r\n            ];\r\n            result[0].symbol = infix;\r\n        }\r\n        else {\r\n            result = this.swapAtoms(saveAtoms);\r\n        }\r\n        this.style = savedStyle;\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a group enclosed in a pair of braces: `{...}`.\r\n     *\r\n     * Return either a group Atom or null if not a group.\r\n     *\r\n     * Return a group Atom with an empty body if an empty\r\n     * group (i.e. `{}`).\r\n     */\r\n    parseGroup() {\r\n        if (!this.match('<{>'))\r\n            return null;\r\n        const result = new Atom(this.parseMode, 'group');\r\n        result.body = this.parse((token) => token === '<}>');\r\n        if (!this.match('<}>')) {\r\n            this.onError({ code: 'unbalanced-braces' });\r\n        }\r\n        result.latexOpen = '{';\r\n        result.latexClose = '}';\r\n        return result;\r\n    }\r\n    scanSmartFence() {\r\n        this.matchWhitespace();\r\n        if (!this.match('('))\r\n            return null;\r\n        // We've found an open paren... Convert to a `\\mleft...\\mright`\r\n        const result = new Atom(this.parseMode, 'leftright');\r\n        result.leftDelim = '(';\r\n        result.inner = false; // It's a `\\mleft`, not a `\\left`\r\n        const saveAtoms = this.swapAtoms([]);\r\n        let nestLevel = 1;\r\n        while (!this.end() && nestLevel !== 0) {\r\n            if (this.match('('))\r\n                nestLevel += 1;\r\n            if (this.match(')'))\r\n                nestLevel -= 1;\r\n            if (nestLevel !== 0)\r\n                this.parseToken();\r\n        }\r\n        if (nestLevel === 0)\r\n            this.match(')');\r\n        result.rightDelim = nestLevel === 0 ? ')' : '?';\r\n        result.body = this.swapAtoms(saveAtoms);\r\n        return result;\r\n    }\r\n    /**\r\n     * Scan a delimiter, e.g. '(', '|', '\\vert', '\\ulcorner'\r\n     *\r\n     * @return The delimiter (as a character or command) or null\r\n     */\r\n    scanDelim() {\r\n        this.matchWhitespace();\r\n        const token = this.get();\r\n        if (!token) {\r\n            this.onError({ code: 'unexpected-end-of-string' });\r\n            return null;\r\n        }\r\n        let delim = '.';\r\n        if (token[0] === '\\\\' || isLiteral(token)) {\r\n            delim = token;\r\n        }\r\n        const info = getInfo(delim, 'math', this.macros);\r\n        if (!info) {\r\n            this.onError({ code: 'unknown-command', arg: delim });\r\n            return null;\r\n        }\r\n        if (info.mode && !info.mode.includes(this.parseMode)) {\r\n            this.onError({ code: 'unexpected-delimiter', arg: delim });\r\n            return null;\r\n        }\r\n        if (info.type === 'mopen' || info.type === 'mclose') {\r\n            return delim;\r\n        }\r\n        // Some symbols are not of type mopen/mclose, but are still\r\n        // valid delimiters...\r\n        // '?' is a special delimiter used as a 'placeholder'\r\n        // (when the closing delimiter is displayed greyed out)\r\n        if (/^(\\.|\\?|\\||<|>|\\\\vert|\\\\Vert|\\\\\\||\\\\surd|\\\\uparrow|\\\\downarrow|\\\\Uparrow|\\\\Downarrow|\\\\updownarrow|\\\\Updownarrow|\\\\mid|\\\\mvert|\\\\mVert)$/.test(delim)) {\r\n            return delim;\r\n        }\r\n        this.onError({ code: 'unexpected-delimiter', arg: delim });\r\n        return null;\r\n    }\r\n    /**\r\n     * Parse a `/left.../right` sequence.\r\n     *\r\n     * Note: the `/middle` command can occur multiple times inside a\r\n     * `/left.../right` sequence, and is handled separately.\r\n     *\r\n     * Return either an atom of type `'leftright'` or null\r\n     */\r\n    parseLeftRight() {\r\n        if (this.match('\\\\right') || this.match('\\\\mright')) {\r\n            // We have an unbalanced left/right (there's a \\right, but no \\left)\r\n            this.onError({ code: 'unbalanced-braces' });\r\n            return null;\r\n        }\r\n        const savedStyle = this.style;\r\n        let close = '\\\\right';\r\n        if (!this.match('\\\\left')) {\r\n            if (!this.match('\\\\mleft'))\r\n                return null;\r\n            close = '\\\\mright';\r\n        }\r\n        const leftDelim = this.scanDelim();\r\n        if (!leftDelim)\r\n            return null;\r\n        const saveAtoms = this.swapAtoms([]);\r\n        while (!this.end() && !this.match(close)) {\r\n            this.parseToken();\r\n        }\r\n        this.style = savedStyle;\r\n        // If we've reached the end and there was no `\\right` or\r\n        // there isn't a valid delimiter after `\\right`, we'll\r\n        // consider the `\\right` missing and set the `rightDelim` to undefined\r\n        const rightDelim = this.scanDelim();\r\n        const result = new Atom(this.parseMode, 'leftright', '', this.style);\r\n        result.leftDelim = leftDelim;\r\n        result.rightDelim = rightDelim !== null && rightDelim !== void 0 ? rightDelim : undefined;\r\n        result.inner = close === 'right';\r\n        result.body = this.swapAtoms(saveAtoms);\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a subscript/superscript: `^` and `_`.\r\n     *\r\n     * Modify the last atom accordingly.\r\n     *\r\n     */\r\n    parseSupSub() {\r\n        var _a, _b;\r\n        // No sup/sub in text or command mode.\r\n        if (this.parseMode !== 'math')\r\n            return false;\r\n        // Apply the subscript/superscript to the last rendered atom.\r\n        // If none is present (beginning of the list, i.e. `{^2}`,\r\n        // an empty atom will be created, equivalent to `{{}^2}`\r\n        let result = false;\r\n        let token = this.peek();\r\n        while (token === '^' || token === '_' || token === \"'\") {\r\n            const supsub = token === '_' ? 'subscript' : 'superscript';\r\n            if (this.match('^') || this.match('_')) {\r\n                const arg = this.parseArgument('math');\r\n                if (arg) {\r\n                    const atom = this.lastSubsupAtom();\r\n                    atom[supsub] = ((_a = atom[supsub]) !== null && _a !== void 0 ? _a : []).concat(arg);\r\n                    result = true;\r\n                }\r\n            }\r\n            else if (this.match(\"'\")) {\r\n                // A single quote (prime) is actually equivalent to a\r\n                // '^{\\prime}'\r\n                const base = this.lastSubsupAtom();\r\n                const atom = new Atom(base.mode, 'mord', '\\u2032');\r\n                atom.symbol = '\\\\prime';\r\n                base.superscript = (_b = base.superscript) !== null && _b !== void 0 ? _b : [];\r\n                base.superscript.push(atom);\r\n                result = true;\r\n            }\r\n            token = this.peek();\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Parse a `\\limits` or `\\nolimits` command.\r\n     *\r\n     * This will change the placement of limits to be either above or below\r\n     * (if `\\limits`) or in the superscript/subscript position (if `\\nolimits`).\r\n     *\r\n     * This overrides the calculation made for the placement, which is usually\r\n     * dependent on the displaystyle (`inlinemath` prefers `\\nolimits`, while\r\n     * `displaymath` prefers `\\limits`).\r\n     */\r\n    parseLimits() {\r\n        // Note: technically, \\limits and \\nolimits are only applicable\r\n        // after an operator. However, we apply them in all cases. They\r\n        // will simply be ignored when not applicable (i.e. on a literal)\r\n        // which is actually consistent with TeX.\r\n        if (this.match('\\\\limits')) {\r\n            const lastAtom = this.lastSubsupAtom();\r\n            lastAtom.limits = 'limits';\r\n            // Record that the limits was set through an explicit command\r\n            // so we can generate the appropriate LaTeX later\r\n            lastAtom.explicitLimits = true;\r\n            return true;\r\n        }\r\n        if (this.match('\\\\nolimits')) {\r\n            const lastAtom = this.lastSubsupAtom();\r\n            lastAtom.limits = 'nolimits';\r\n            // Record that the limits was set through an explicit command\r\n            // so we can generate the appropriate LaTeX later\r\n            lastAtom.explicitLimits = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    parseArguments(info) {\r\n        if (!info || !info.params)\r\n            return [undefined, []];\r\n        let explicitGroup;\r\n        const args = [];\r\n        let i = info.infix ? 2 : 0;\r\n        while (i < info.params.length) {\r\n            const param = info.params[i];\r\n            // Parse an argument\r\n            if (param.isOptional) {\r\n                args.push(this.parseOptionalArgument(param.type));\r\n            }\r\n            else if (param.type.endsWith('*')) {\r\n                // For example 'math*'.\r\n                // In this case, indicate that a 'yet-to-be-parsed'\r\n                // argument (and 'explicit group') is present\r\n                explicitGroup = param.type.slice(0, -1);\r\n            }\r\n            else {\r\n                const arg = this.parseArgument(param.type);\r\n                if (typeof arg !== 'undefined') {\r\n                    args.push(arg);\r\n                }\r\n                else {\r\n                    // Report an error\r\n                    this.onError({ code: 'missing-argument' });\r\n                    args.push(this.placeholder());\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n        return [explicitGroup, args];\r\n    }\r\n    /**\r\n     * Parse a math field, an argument to a function.\r\n     *\r\n     * An argument can either be a single atom or\r\n     * a sequence of atoms enclosed in braces.\r\n     *\r\n     * @param parseMode Temporarily overrides the parser parsemode. For\r\n     * example: `'dimen'`, `'color'`, `'text'`, etc...\r\n     */\r\n    // parseArgument(parseMode: 'string'): string;\r\n    // parseArgument(parseMode: 'color'): string;\r\n    parseArgument(parseMode) {\r\n        var _a;\r\n        this.skipFiller();\r\n        parseMode = parseMode === 'auto' ? this.parseMode : parseMode;\r\n        let result;\r\n        // An argument (which is called a 'math field' in TeX)\r\n        // could be a single character or symbol, as in `\\frac12`\r\n        // Note that ``\\frac\\sqrt{-1}\\alpha\\beta`` is equivalent to\r\n        // ``\\frac{\\sqrt}{-1}{\\beta}``\r\n        if (!this.match('<{>')) {\r\n            if (parseMode === 'delim') {\r\n                return (_a = this.scanDelim()) !== null && _a !== void 0 ? _a : '.';\r\n            }\r\n            else if (/^(math|text)$/.test(parseMode)) {\r\n                // Parse a single token.\r\n                const savedParseMode = this.swapParseMode(parseMode);\r\n                const atom = this.parseSimpleToken();\r\n                this.swapParseMode(savedParseMode);\r\n                return atom;\r\n            }\r\n        }\r\n        const savedParseMode = this.parseMode;\r\n        this.parseMode = parseMode;\r\n        const saveAtoms = this.swapAtoms([]);\r\n        if (parseMode === 'string') {\r\n            result = this.scanString();\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'balanced-string') {\r\n            result = this.scanBalancedString();\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'number') {\r\n            result = this.scanNumber();\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'dimen') {\r\n            result = this.scanDimen();\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'skip') {\r\n            result = this.scanSkip();\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'colspec') {\r\n            result = this.scanColspec();\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'color') {\r\n            result = this.scanColor() || '#ffffff';\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else if (parseMode === 'delim') {\r\n            result = this.scanDelim() || '.';\r\n            this.skipUntilToken('<}>');\r\n        }\r\n        else {\r\n            console.assert(/^(math|text)$/.test(parseMode), 'Unexpected parse mode: \"' + parseMode + '\"');\r\n            // Collect an array of tokens until a balanced \"}\"\r\n            const initialIndex = this.index;\r\n            let depth = 1;\r\n            do {\r\n                const token = this.get();\r\n                if (token === '<}>')\r\n                    depth -= 1;\r\n                if (token === '<{>')\r\n                    depth += 1;\r\n            } while (depth > 0 && !this.end());\r\n            result = parseTokens(parseMode, this.tokens.slice(initialIndex, this.index - 1), this.onError, {\r\n                args: this.args,\r\n                macros: this.macros,\r\n                smartFence: this.smartFence,\r\n                style: this.style,\r\n                parse: (mode, tokens, options) => {\r\n                    const parser = new Parser(tokens, options.args, options.macros, this.onError);\r\n                    parser.parseMode = mode;\r\n                    parser.style = options.style;\r\n                    result = parser.parse();\r\n                    return [result, tokens.slice(parser.index)];\r\n                },\r\n            });\r\n            if (!result) {\r\n                // No mode-specific result. Try again from the start\r\n                this.index = initialIndex;\r\n                do {\r\n                    this.atoms = this.atoms.concat(this.parse());\r\n                } while (!this.match('<}>') && !this.end());\r\n            }\r\n        }\r\n        this.parseMode = savedParseMode;\r\n        const atoms = this.swapAtoms(saveAtoms);\r\n        return result !== null && result !== void 0 ? result : atoms;\r\n    }\r\n    parseOptionalArgument(parseMode) {\r\n        var _a;\r\n        parseMode = parseMode === 'auto' ? this.parseMode : parseMode;\r\n        this.matchWhitespace();\r\n        if (!this.match('['))\r\n            return null;\r\n        const savedParseMode = this.parseMode;\r\n        this.parseMode = parseMode;\r\n        const saveAtoms = this.swapAtoms();\r\n        let result;\r\n        while (!this.end() && !this.match(']')) {\r\n            if (parseMode === 'string') {\r\n                result = this.scanString();\r\n            }\r\n            else if (parseMode === 'number') {\r\n                result = this.scanNumber();\r\n            }\r\n            else if (parseMode === 'dimen') {\r\n                result = this.scanDimen();\r\n            }\r\n            else if (parseMode === 'skip') {\r\n                result = this.scanSkip();\r\n            }\r\n            else if (parseMode === 'colspec') {\r\n                result = this.scanColspec();\r\n            }\r\n            else if (parseMode === 'color') {\r\n                result = (_a = this.scanColor()) !== null && _a !== void 0 ? _a : '#ffffff';\r\n            }\r\n            else if (parseMode === 'bbox') {\r\n                // The \\bbox command takes a very particular argument:\r\n                // a comma delimited list of up to three arguments:\r\n                // a color, a dimension and a string.\r\n                // Split the string by comma delimited sub-strings, ignoring commas\r\n                // that may be inside (). For example\"x, rgb(a, b, c)\" would return\r\n                // ['x', 'rgb(a, b, c)']\r\n                const list = this.scanString()\r\n                    .toLowerCase()\r\n                    .trim()\r\n                    .split(/,(?![^(]*\\)(?:(?:[^(]*\\)){2})*[^\"]*$)/);\r\n                const bboxParam = {};\r\n                for (const elem of list) {\r\n                    const color = stringToColor(elem);\r\n                    if (color) {\r\n                        bboxParam.backgroundcolor = color;\r\n                    }\r\n                    else {\r\n                        const m = elem.match(/^\\s*([0-9.]+)\\s*([a-z][a-z])/);\r\n                        if (m) {\r\n                            bboxParam.padding = convertDimenToEm(m[1], m[2]);\r\n                        }\r\n                        else {\r\n                            const m = elem.match(/^\\s*border\\s*:\\s*(.*)/);\r\n                            if (m) {\r\n                                bboxParam.border = m[1];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                result = bboxParam;\r\n            }\r\n            else {\r\n                console.assert(parseMode === 'math', 'Unexpected parse mode: \"' + parseMode + '\"');\r\n                this.atoms = this.atoms.concat(this.parse((token) => token === ']'));\r\n            }\r\n        }\r\n        this.parseMode = savedParseMode;\r\n        const atoms = this.swapAtoms(saveAtoms);\r\n        return result !== null && result !== void 0 ? result : atoms;\r\n    }\r\n    parseSimpleToken() {\r\n        const token = this.get();\r\n        if (!token)\r\n            return null;\r\n        let result = null;\r\n        if (token === '<space>') {\r\n            if (this.parseMode === 'text') {\r\n                result = new Atom('text', '', ' ', this.style);\r\n                result.symbol = ' ';\r\n            }\r\n        }\r\n        else if (token[0] === '\\\\') {\r\n            // COMMAND\r\n            if (token === '\\\\placeholder') {\r\n                result = new Atom(this.parseMode, 'placeholder', this.parseArgument('string'), this.style);\r\n                result.captureSelection = true;\r\n            }\r\n            else if (token === '\\\\char') {\r\n                // \\char has a special syntax and requires a non-braced integer\r\n                // argument\r\n                const initialIndex = this.index;\r\n                let codepoint = Math.floor(this.scanNumber(true));\r\n                if (!isFinite(codepoint) ||\r\n                    codepoint < 0 ||\r\n                    codepoint > 0x10ffff) {\r\n                    codepoint = 0x2753; // BLACK QUESTION MARK\r\n                }\r\n                result = new Atom(this.parseMode, this.parseMode === 'math' ? 'mord' : '', String.fromCodePoint(codepoint));\r\n                result.symbol = '\\\\char';\r\n                result.latex =\r\n                    '\\\\char' +\r\n                        tokensToString(this.tokens.slice(initialIndex, this.index));\r\n            }\r\n            else if (token === '\\\\hskip' || token === '\\\\kern') {\r\n                // \\hskip and \\kern have a special syntax and requires a non-braced\r\n                // 'skip' argument\r\n                const width = this.scanSkip();\r\n                if (isFinite(width)) {\r\n                    result = new Atom(this.parseMode, 'spacing', null, this.style);\r\n                    result.width = width;\r\n                    result.symbol = token;\r\n                    result.latex = token;\r\n                }\r\n            }\r\n            else {\r\n                result = this.scanMacro(token);\r\n                if (!result) {\r\n                    // This wasn't a macro, so let's see if it's a regular command\r\n                    const info = getInfo(token, this.parseMode, {});\r\n                    if (!info) {\r\n                        // An unknown command\r\n                        this.onError({\r\n                            code: 'unknown-command',\r\n                            arg: token,\r\n                        });\r\n                        result = new Atom('math', 'error', token);\r\n                        result.symbol = token;\r\n                        result.latex = token;\r\n                        return [result];\r\n                    }\r\n                    if (info.mode && !info.mode.includes(this.parseMode)) {\r\n                        // Command invalid in this mode\r\n                        this.onError({\r\n                            code: 'invalid-command',\r\n                            arg: token,\r\n                        });\r\n                        result = new Atom('math', 'error', token);\r\n                        result.symbol = token;\r\n                        result.latex = token;\r\n                        return [result];\r\n                    }\r\n                    // Parse the arguments\r\n                    // If explicitGroup is not empty, an explicit group is expected\r\n                    // to follow the command and will be parsed *after* the\r\n                    // command has been processed.\r\n                    // This is used for commands such as \\textcolor{color}{content}\r\n                    // that need to apply the color to the content *after* the\r\n                    // style has been changed.\r\n                    // In definitions, this is indicated with a parameter type\r\n                    // of 'auto*'\r\n                    const initialIndex = this.index;\r\n                    const [explicitGroup, args] = this.parseArguments(info);\r\n                    if (!args)\r\n                        return null; // Some required arguments were missing...\r\n                    if (info.infix) {\r\n                        // Infix commands should be handled in scanImplicitGroup\r\n                        // If we find an infix command here, it's a syntax error\r\n                        // (second infix command in a group) and should be ignored.\r\n                        this.onError({\r\n                            code: 'too-many-infix-commands',\r\n                            arg: token,\r\n                        });\r\n                    }\r\n                    else {\r\n                        //  Invoke the parse() function if present\r\n                        if (info.parse) {\r\n                            const attributes = info.parse(token, args);\r\n                            if (attributes.type) {\r\n                                // A type was provided: create a new Atom\r\n                                result = new Atom(this.parseMode, info.type, explicitGroup\r\n                                    ? this.parseArgument(explicitGroup)\r\n                                    : null, { ...this.style, ...attributes });\r\n                            }\r\n                            else {\r\n                                // No type provided -> the parse function will modify\r\n                                // the current style rather than create a new Atom.\r\n                                const savedMode = this.parseMode;\r\n                                if (attributes.mode) {\r\n                                    // Change to 'text' (or 'math') mode if necessary\r\n                                    this.parseMode = attributes.mode;\r\n                                    delete attributes.mode;\r\n                                }\r\n                                if (attributes.mathstyle) {\r\n                                    this.parseMode = 'math';\r\n                                    const atom = new Atom('math', 'mathstyle');\r\n                                    atom.mathstyle = attributes.mathstyle;\r\n                                    this.atoms.push(atom);\r\n                                }\r\n                                // If an explicit group is expected, process it now\r\n                                if (explicitGroup) {\r\n                                    // Create a temporary style\r\n                                    const saveStyle = this.style;\r\n                                    this.style = {\r\n                                        ...this.style,\r\n                                        ...attributes,\r\n                                    };\r\n                                    result = this.parseArgument(explicitGroup);\r\n                                    this.style = saveStyle;\r\n                                }\r\n                                else {\r\n                                    // Merge the new style info with the current style\r\n                                    this.style = {\r\n                                        ...this.style,\r\n                                        ...attributes,\r\n                                    };\r\n                                }\r\n                                this.parseMode = savedMode;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // The new atom will inherit the style of this atom\r\n                            // Only override the variant if it is not '' or undefined\r\n                            const style = {\r\n                                ...this.style,\r\n                                variant: info.variant || this.style.variant,\r\n                                variantStyle: info.variantStyle ||\r\n                                    this.style.variantStyle,\r\n                            };\r\n                            result = new Atom(this.parseMode, info.type || 'mop', info.value || token, style);\r\n                        }\r\n                        if (result instanceof Atom &&\r\n                            !/^\\\\(llap|rlap|class|cssId)$/.test(token)) {\r\n                            result.symbol = token;\r\n                            const argString = tokensToString(this.tokens.slice(initialIndex, this.index));\r\n                            if (argString) {\r\n                                result.latex = result.symbol + argString;\r\n                            }\r\n                            if (result.isFunction && this.smartFence) {\r\n                                // The atom was a function that may be followed by\r\n                                // an argument, like `\\sin(`\r\n                                const smartFence = this.scanSmartFence();\r\n                                if (smartFence) {\r\n                                    result = [result, smartFence];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (isLiteral(token)) {\r\n            // Literal\r\n            const info = getInfo(token, this.parseMode, this.macros);\r\n            if (info) {\r\n                const style = { ...this.style };\r\n                result = new Atom(this.parseMode, info.type, info.value || token, style);\r\n                if (info.isFunction) {\r\n                    result.isFunction = true;\r\n                }\r\n            }\r\n            else {\r\n                result = new Atom(this.parseMode, this.parseMode === 'math' ? 'mord' : '', token, this.style);\r\n            }\r\n            result.symbol = token;\r\n            result.latex = unicodeCharToLatex(this.parseMode, token);\r\n            if ((info === null || info === void 0 ? void 0 : info.isFunction) && this.smartFence) {\r\n                // The atom was a function that may be followed by\r\n                // an argument, like `f(`.\r\n                const smartFence = this.scanSmartFence();\r\n                if (smartFence) {\r\n                    result = [result, smartFence];\r\n                }\r\n            }\r\n        }\r\n        else if (token === '<}>') {\r\n            this.onError({ latex: '', code: 'unbalanced-braces' });\r\n        }\r\n        else {\r\n            this.onError({\r\n                latex: '',\r\n                code: 'unexpected-token',\r\n                arg: token,\r\n            });\r\n        }\r\n        // Always return an array of atoms\r\n        return result && !isArray(result)\r\n            ? [result]\r\n            : result;\r\n    }\r\n    /**\r\n     * Attempt to scan the macro name and return an atom list if successful.\r\n     * Otherwise, it wasn't a macro.\r\n     */\r\n    scanMacro(macro) {\r\n        var _a;\r\n        const macroName = macro.slice(1);\r\n        if (!this.macros || !this.macros[macroName])\r\n            return null;\r\n        const initialIndex = this.index;\r\n        const args = [];\r\n        let def;\r\n        let argCount = 0;\r\n        if (typeof this.macros[macroName] === 'string') {\r\n            def = this.macros[macroName];\r\n            // Let's see if there are arguments in the definition.\r\n            if (/(^|[^\\\\])#1/.test(def))\r\n                argCount = 1;\r\n            if (/(^|[^\\\\])#2/.test(def))\r\n                argCount = 2;\r\n            if (/(^|[^\\\\])#3/.test(def))\r\n                argCount = 3;\r\n            if (/(^|[^\\\\])#4/.test(def))\r\n                argCount = 4;\r\n            if (/(^|[^\\\\])#5/.test(def))\r\n                argCount = 5;\r\n            if (/(^|[^\\\\])#6/.test(def))\r\n                argCount = 6;\r\n            if (/(^|[^\\\\])#7/.test(def))\r\n                argCount = 7;\r\n            if (/(^|[^\\\\])#8/.test(def))\r\n                argCount = 8;\r\n            if (/(^|[^\\\\])#9/.test(def))\r\n                argCount = 9;\r\n        }\r\n        else {\r\n            def = this.macros[macroName].def;\r\n            argCount = this.macros[macroName].args || 0;\r\n        }\r\n        for (let i = 1; i <= argCount; i++) {\r\n            // Parse each argument as a string. We don't know yet\r\n            // what the proper parse mode is, so defer parsing till later\r\n            // when invoking `parseString`\r\n            args[i] = this.matchLiteralArg();\r\n        }\r\n        // Carry forward the placeholder argument, if any.\r\n        args['?'] = (_a = this.args) === null || _a === void 0 ? void 0 : _a['?'];\r\n        // Group the result of the macro expansion, and set the\r\n        // captureSelection attribute so that it is handled as an unbreakable\r\n        // unit\r\n        const atom = new Atom(this.parseMode, 'group', parseString(def, this.parseMode, args, this.macros, false, this.onError));\r\n        atom.captureSelection = true;\r\n        atom.symbol = macro;\r\n        atom.latex =\r\n            macro + tokensToString(this.tokens.slice(initialIndex, this.index));\r\n        return atom;\r\n    }\r\n    /**\r\n     * Make an atom for the current token or token group and\r\n     * add it to the parser's current atoms\r\n     */\r\n    parseToken() {\r\n        let result = this.parseEnvironment() ||\r\n            this.parseModeShift() ||\r\n            this.parseModeSet() ||\r\n            this.parseGroup() ||\r\n            this.parseLeftRight();\r\n        if (!result && (this.parseSupSub() || this.parseLimits()))\r\n            return true;\r\n        if (!result)\r\n            result = this.parseSimpleToken();\r\n        // If we have an atom to add, push it at the end of the current math list\r\n        // We could have no atom for tokens that were skipped, a ' ' in math mode\r\n        // for example\r\n        if (isArray(result)) {\r\n            this.atoms = this.atoms.concat(result);\r\n        }\r\n        else if (result) {\r\n            this.atoms.push(result);\r\n        }\r\n        return result !== null;\r\n    }\r\n}\r\n/**\r\n * Given a string of LaTeX, return a corresponding math list (array of atoms).\r\n * @param args - If there are any placeholder tokens, e.g.\r\n * `#0`, `#1`, etc... they will be replaced by the value provided by `args`.\r\n * @param smartFence - If true, promote plain fences, e.g. `(`,\r\n * as `\\left...\\right` or `\\mleft...\\mright`\r\n */\r\nfunction parseString(s, parseMode, args, macros, smartFence = false, onError) {\r\n    let atoms = [];\r\n    const parser = new Parser(tokenize(s, args), args, macros, (err) => {\r\n        if (typeof onError === 'function') {\r\n            onError({ ...err, latex: s });\r\n        }\r\n    });\r\n    parser.parseMode = parseMode || 'math'; // other possible values: 'text', 'color', etc...\r\n    if (smartFence)\r\n        parser.smartFence = true;\r\n    while (!parser.end()) {\r\n        const more = parser.parse();\r\n        if (more) {\r\n            atoms = atoms.concat(more);\r\n        }\r\n    }\r\n    return atoms;\r\n}\n\nvar _a, _b;\r\n// The URL of the bundled MathLive library. Used later to locate the `fonts`\r\n// directory, relative to the library\r\n// If loaded via a <script> tag, `document.currentScript.src` is this location\r\n// If loaded via a module (e.g. `import ...`),`import.meta.url` is this location.\r\n// However, `import.meta` is not supported by WebPack. So, use a super-hacky-alternative\r\n// to get the URL.\r\n// See https://github.com/webpack/webpack/issues/6719\r\n// Adapted from https://jakedeichert.com/blog/2020/02/a-super-hacky-alternative-to-import-meta-url/\r\nfunction getFileUrl() {\r\n    const stackTraceFrames = String(new Error().stack)\r\n        .replace(/^Error.*\\n/, '')\r\n        .split('\\n');\r\n    if (stackTraceFrames.length === 0)\r\n        return '';\r\n    // 0 = this getFileUrl frame (because the Error is created here)\r\n    // 1 = the caller of getFileUrl (the file path we want to grab)\r\n    const callerFrame = stackTraceFrames[0];\r\n    // Extract the script's complete url\r\n    const m = callerFrame.match(/http.*js/);\r\n    if (!m)\r\n        return '';\r\n    return m[0];\r\n}\r\nconst gScriptUrl = (_b = (_a = document.currentScript) === null || _a === void 0 ? void 0 : _a.src) !== null && _b !== void 0 ? _b : getFileUrl();\r\nasync function loadFonts(fontsDirectory, onError) {\r\n    var _a;\r\n    function makeFontFace(name, source, descriptors = {}) {\r\n        return new FontFace(name, `url(${source}.woff2) format('woff2'), url(${source}.woff) format('woff')`, descriptors);\r\n    }\r\n    // If the \"mathlive-fonts.css\" stylesheet is included in the <head> of the\r\n    // page, it will include a `--ML__static-fonts` variable.\r\n    // In that case, don't load the fonts dynamically\r\n    const useStaticFonts = (_a = getComputedStyle(document.documentElement).getPropertyValue('--ML__static-fonts')) !== null && _a !== void 0 ? _a : false;\r\n    if (useStaticFonts)\r\n        return;\r\n    if ('fonts' in document) {\r\n        const fontFamilies = [\r\n            'KaTeX_Main',\r\n            'KaTeX_Math',\r\n            'KaTeX_AMS',\r\n            'KaTeX_Caligraphic',\r\n            'KaTeX_Fraktur',\r\n            'KaTeX_SansSerif',\r\n            'KaTeX_Script',\r\n            'KaTeX_Size1',\r\n            'KaTeX_Size2',\r\n            'KaTeX_Size3',\r\n            'KaTeX_Size4',\r\n        ];\r\n        // for (const fontFace of document.fonts.values()) { console.log(fontFace.family)}\r\n        let fontsLoaded = false;\r\n        // Firefox returns true for fonts that are not loaded...\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1252821 🤦‍♂️\r\n        // So, if on Firefox, always assume that the fonts are not loaded.\r\n        if (!/firefox/i.test(navigator.userAgent)) {\r\n            try {\r\n                fontsLoaded = fontFamilies.every((x) => document['fonts'].check('16px ' + x));\r\n            }\r\n            catch (e) {\r\n                fontsLoaded = false;\r\n            }\r\n        }\r\n        if (!fontsLoaded) {\r\n            if (document.body.classList.contains('ML__fonts-loading')) {\r\n                return;\r\n            }\r\n            document.body.classList.add('ML__fonts-loading');\r\n            // Locate the `fonts` folder relative to the script URL\r\n            const fontsFolder = new URL(fontsDirectory !== null && fontsDirectory !== void 0 ? fontsDirectory : './fonts', gScriptUrl).toString();\r\n            const fonts = [\r\n                ['KaTeX_Main-Regular'],\r\n                ['KaTeX_Main-BoldItalic', { style: 'italic', weight: 'bold' }],\r\n                ['KaTeX_Main-Bold', { weight: 'bold' }],\r\n                ['KaTeX_Main-Italic', { style: 'italic' }],\r\n                ['KaTeX_Math-Italic', { style: 'italic' }],\r\n                ['KaTeX_Math-BoldItalic', { style: 'italic', weight: 'bold' }],\r\n                ['KaTeX_AMS-Regular'],\r\n                ['KaTeX_Caligraphic-Regular'],\r\n                ['KaTeX_Caligraphic-Bold', { weight: 'bold' }],\r\n                ['KaTeX_Fraktur-Regular'],\r\n                ['KaTeX_Fraktur-Bold', { weight: 'bold' }],\r\n                ['KaTeX_SansSerif-Regular', { style: 'italic' }],\r\n                ['KaTeX_SansSerif-Bold', { weight: 'bold' }],\r\n                ['KaTeX_SansSerif-Italic', { style: 'italic' }],\r\n                ['KaTeX_Script-Regular'],\r\n                ['KaTeX_Typewriter-Regular'],\r\n                ['KaTeX_Size1-Regular'],\r\n                ['KaTeX_Size2-Regular'],\r\n                ['KaTeX_Size3-Regular'],\r\n                ['KaTeX_Size4-Regular'],\r\n            ].map((x) => makeFontFace(x[0].replace(/-[a-zA-Z]+$/, ''), fontsFolder + '/' + x[0], x[1]));\r\n            try {\r\n                const loadedFonts = (await Promise.all(fonts.map((x) => {\r\n                    try {\r\n                        return x.load();\r\n                    }\r\n                    catch (e) {\r\n                        if (typeof onError === 'function') {\r\n                            onError({\r\n                                code: 'font-not-found',\r\n                                arg: e,\r\n                            });\r\n                        }\r\n                    }\r\n                    return undefined;\r\n                })));\r\n                // Render them at the same time\r\n                loadedFonts.forEach((font) => document['fonts'].add(font));\r\n                document.body.classList.remove('ML__fonts-loading');\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n    }\r\n}\n\nfunction hashCode(s) {\r\n    let hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (let i = 0; i < s.length; i++) {\r\n        const char = s.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\n\nfunction inject(element, css) {\r\n    var _a, _b;\r\n    if (!css)\r\n        return null;\r\n    let root = (_a = element === null || element === void 0 ? void 0 : element.getRootNode()) !== null && _a !== void 0 ? _a : document === null || document === void 0 ? void 0 : document.head;\r\n    if (!root)\r\n        return null;\r\n    if (root === document)\r\n        root = document.head;\r\n    const id = hashCode(css).toString(36);\r\n    const el = root.querySelector(`style[data-id=\"${id}\"]`);\r\n    if (el) {\r\n        const refCount = parseFloat((_b = el.getAttribute('data-refcount')) !== null && _b !== void 0 ? _b : '0');\r\n        el.setAttribute('data-refcount', Number(refCount + 1).toString());\r\n    }\r\n    else {\r\n        // Make a new node holding the stylesheet\r\n        const styleNode = document.createElement('style');\r\n        // styleNode.setAttribute('media', 'screen')\r\n        // styleNode.setAttribute('media', 'only screen and (max-width : 1024px)')\r\n        styleNode.type = 'text/css';\r\n        styleNode.dataset.id = id;\r\n        styleNode.dataset.refcount = '1';\r\n        styleNode.appendChild(document.createTextNode(css));\r\n        root.appendChild(styleNode);\r\n    }\r\n    return {\r\n        release: () => {\r\n            var _a;\r\n            const el = document.head.querySelector(`style[data-id=\"${id}\"]`);\r\n            if (el) {\r\n                const refCount = parseFloat((_a = el.getAttribute('data-refcount')) !== null && _a !== void 0 ? _a : '0');\r\n                if (refCount === 1) {\r\n                    el.remove();\r\n                }\r\n                else {\r\n                    el.setAttribute('data-refcount', Number(refCount - 1).toString());\r\n                }\r\n            }\r\n        },\r\n    };\r\n}\n\nfunction isEmptyMathlist(atoms) {\r\n    return (atoms.length === 0 || (atoms.length === 1 && atoms[0].type === 'first'));\r\n}\r\nfunction removeSuggestion(model) {\r\n    const siblings = model.siblings();\r\n    // Remove all `suggestion` atoms\r\n    for (let i = siblings.length - 1; i >= 0; i--) {\r\n        if (siblings[i].isSuggestion) {\r\n            siblings.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Clear the verbatim Latex property for the parent node and its parents.\r\n * This will cause the latex value to be re-calculated.\r\n */\r\nfunction invalidateVerbatimLatex(model) {\r\n    let depth = 1;\r\n    let atom = model.ancestor(depth);\r\n    while (atom) {\r\n        atom.latex = undefined;\r\n        depth += 1;\r\n        atom = model.ancestor(depth);\r\n    }\r\n}\r\n/**\r\n * Ensure that the range is valid and canonical, i.e.\r\n * - start <= end\r\n * - collapsed = start === end\r\n * - start >= 0, end >=0\r\n */\r\nfunction normalizeRange(iter, range) {\r\n    const result = { ...range };\r\n    const lastPosition = iter.lastPosition;\r\n    // 1. Normalize the start\r\n    if (result.start < 0) {\r\n        result.start = Math.max(0, lastPosition + result.start + 1);\r\n    }\r\n    else if (isNaN(result.start)) {\r\n        result.start = 0;\r\n    }\r\n    else {\r\n        result.start = Math.min(result.start, lastPosition);\r\n    }\r\n    // 2. Normalize the end\r\n    if (result.end < 0) {\r\n        result.end = Math.max(0, lastPosition + result.end + 1);\r\n    }\r\n    else if (isNaN(result.end)) {\r\n        result.end = result.start;\r\n    }\r\n    else {\r\n        result.end = Math.min(result.end, lastPosition);\r\n    }\r\n    // 3. Normalize the direction\r\n    if (result.start < result.end) {\r\n        result.direction = 'forward';\r\n    }\r\n    else {\r\n        [result.start, result.end] = [result.end, result.start];\r\n        result.direction = 'backward';\r\n    }\r\n    // 4. Normalize `collapsed`\r\n    result.collapsed = result.start === result.end;\r\n    if (result.collapsed) {\r\n        result.direction = 'none';\r\n    }\r\n    // 5. Normalize the depth\r\n    if (iter.positions[result.start]) {\r\n        result.depth = iter.positions[result.start].depth - 1;\r\n    }\r\n    return result;\r\n}\n\nfunction pathToString(path, extent) {\r\n    let result = '';\r\n    for (const segment of path) {\r\n        result += segment.relation + ':' + segment.offset + '/';\r\n    }\r\n    if (extent) {\r\n        result += '#' + extent;\r\n    }\r\n    return result;\r\n}\r\nfunction pathFromString(string) {\r\n    // Reset the path\r\n    const result = { path: [], extent: 0 };\r\n    // Parse the selection extent, if present\r\n    const components = string.split('#');\r\n    if (components.length > 1) {\r\n        result.extent = parseInt(components[1]);\r\n    }\r\n    // Parse the segments\r\n    const segments = components[0].split('/');\r\n    for (const segment of segments) {\r\n        const m2 = segment.match(/([^:]*):(.*)/);\r\n        if (m2) {\r\n            result.path.push({\r\n                relation: m2[1],\r\n                offset: parseInt(m2[2]),\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Given two paths, return a path representing their common ancestor.\r\n */\r\nfunction pathCommonAncestor(p, q) {\r\n    const result = [];\r\n    const maxIndex = Math.min(p.length - 1, q.length - 1);\r\n    let i = 0;\r\n    while (i <= maxIndex &&\r\n        p[i].relation === q[i].relation &&\r\n        p[i].offset === q[i].offset) {\r\n        result.push(p[i]);\r\n        i += 1;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @return 0 if the paths are identical\r\n *  - 1 if they are siblings\r\n *  - >1 if they are not siblings\r\n */\r\nfunction pathDistance(p, q) {\r\n    let result = 0;\r\n    let i = -1;\r\n    let done = false;\r\n    while (!done) {\r\n        i += 1;\r\n        done = i >= p.length || i >= q.length;\r\n        done =\r\n            done ||\r\n                !(p[i].relation === q[i].relation && p[i].offset === q[i].offset);\r\n    }\r\n    if (i === p.length && i === q.length) {\r\n        // They're identical\r\n        result = 0;\r\n    }\r\n    else if (i + 1 === p.length &&\r\n        i + 1 === q.length &&\r\n        p[i].relation === q[i].relation) {\r\n        // They're siblings\r\n        result = 1;\r\n    }\r\n    else {\r\n        result = 2;\r\n    }\r\n    return result;\r\n}\r\nfunction clone(path) {\r\n    return pathFromString(pathToString(path)).path;\r\n}\n\n/**\r\n * Convert an array row/col into an array index.\r\n */\r\nfunction arrayIndex(array, rowCol) {\r\n    let result = 0;\r\n    for (let i = 0; i < rowCol.row; i++) {\r\n        for (let j = 0; j < array[i].length; j++) {\r\n            result += 1;\r\n        }\r\n    }\r\n    result += rowCol.col;\r\n    return result;\r\n}\r\n/**\r\n * Convert an array index (scalar) to an array row/col.\r\n * @return {object}\r\n * - row: number\r\n * - col: number\r\n */\r\nfunction arrayColRow(array, index) {\r\n    let i;\r\n    if (typeof index === 'string') {\r\n        const m = index.match(/cell([0-9]*)$/);\r\n        if (m)\r\n            i = parseInt(m[1]);\r\n    }\r\n    else {\r\n        i = index;\r\n    }\r\n    const result = { row: 0, col: 0 };\r\n    while (i > 0) {\r\n        result.col += 1;\r\n        if (!array[result.row] || result.col >= array[result.row].length) {\r\n            result.col = 0;\r\n            result.row += 1;\r\n        }\r\n        i -= 1;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Return the array cell corresponding to colrow or null (for example in\r\n * a sparse array)\r\n */\r\nfunction arrayCell(array, colrow, addMisingFirstAtom = true) {\r\n    var _a;\r\n    if (typeof colrow !== 'object')\r\n        colrow = arrayColRow(array, colrow);\r\n    let result;\r\n    if (isArray(array[colrow.row])) {\r\n        result = (_a = array[colrow.row][colrow.col]) !== null && _a !== void 0 ? _a : null;\r\n    }\r\n    // If the 'first' math atom is missing, insert it\r\n    if (addMisingFirstAtom &&\r\n        result &&\r\n        (result.length === 0 || result[0].type !== 'first')) {\r\n        result.unshift(new Atom('math', 'first'));\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Total numbers of cells (include sparse cells) in the array.\r\n */\r\nfunction arrayCellCount(array) {\r\n    let result = 0;\r\n    let numRows = 0;\r\n    let numCols = 1;\r\n    for (const row of array) {\r\n        numRows += 1;\r\n        if (row.length > numCols)\r\n            numCols = row.length;\r\n    }\r\n    result = numRows * numCols;\r\n    return result;\r\n}\r\n/**\r\n * Adjust colRow to point to the next/previous available row\r\n * If no more rows, go to the next/previous column\r\n * If no more columns, return null\r\n */\r\nfunction arrayAdjustRow(array, colRow, dir) {\r\n    const result = { ...colRow };\r\n    result.row += dir;\r\n    if (result.row < 0) {\r\n        result.col += dir;\r\n        result.row = array.length - 1;\r\n        if (result.col < 0)\r\n            return null;\r\n        while (result.row >= 0 && !arrayCell(array, result)) {\r\n            result.row -= 1;\r\n        }\r\n        if (result.row < 0)\r\n            return null;\r\n    }\r\n    else if (result.row >= array.length) {\r\n        result.col += dir;\r\n        result.row = 0;\r\n        while (result.row < array.length && !arrayCell(array, result)) {\r\n            result.row += 1;\r\n        }\r\n        if (result.row > array.length - 1)\r\n            return null;\r\n    }\r\n    return result;\r\n}\n\n// Each entry indicate the font-name (to be used to calculate font metrics)\r\n// and the CSS classes (for proper markup styling) for each possible\r\n// variant combinations.\r\nconst VARIANTS = {\r\n    // Handle some special characters which are only available in \"main\" font (not \"math\")\r\n    main: ['Main-Regular', 'ML__cmr'],\r\n    'main-italic': ['Main-Italic', 'ML__cmr ML__it'],\r\n    'main-bold': ['Main-Bold', 'ML__cmr ML__bold'],\r\n    'main-bolditalic': ['Main-BoldItalic', 'ML__cmr ML_bold ML__it'],\r\n    normal: ['Main-Regular', 'ML__cmr'],\r\n    'normal-bold': ['Main-Bold', 'ML__mathbf'],\r\n    'normal-italic': ['Math-Italic', 'ML__mathit'],\r\n    'normal-bolditalic': ['Math-BoldItalic', 'ML__mathbfit'],\r\n    // Extended math symbols, arrows, etc.. at their standard Unicode codepoints\r\n    ams: ['AMS-Regular', 'ML__ams'],\r\n    'ams-bold': ['AMS-Regular', 'ML__ams'],\r\n    'ams-italic': ['AMS-Regular', 'ML__ams'],\r\n    'ams-bolditalic': ['AMS-Regular', 'ML__ams'],\r\n    'sans-serif': ['SansSerif-Regular', 'ML__sans'],\r\n    'sans-serif-bold': ['SansSerif-Regular', 'ML__sans ML__bold'],\r\n    'sans-serif-italic': ['SansSerif-Regular', 'ML__sans'],\r\n    'sans-serif-bolditalic': ['SansSerif-Regular', 'ML__sans'],\r\n    calligraphic: ['Caligraphic-Regular', 'ML__cal'],\r\n    'calligraphic-bold': ['Caligraphic-Regular', 'ML__cal ML__bold'],\r\n    'calligraphic-italic': ['Caligraphic-Regular', 'ML__cal ML__it'],\r\n    'calligraphic-bolditalic': [\r\n        'Caligraphic-Regular',\r\n        'ML__cal ML__bold ML__it',\r\n    ],\r\n    script: ['Script-Regular', 'ML__script'],\r\n    'script-bold': ['Script-Regular', 'ML__script ML__bold'],\r\n    'script-italic': ['Script-Regular', 'ML__script ML__it'],\r\n    'script-bolditalic': ['Script-Regular', 'ML__script ML__bold ML__it'],\r\n    fraktur: ['Fraktur-Regular', 'ML__frak'],\r\n    'fraktur-bold': ['Fraktur-Regular', 'ML__frak'],\r\n    'fraktur-italic': ['Fraktur-Regular', 'ML__frak'],\r\n    'fraktur-bolditalic': ['Fraktur-Regular', 'ML__frak'],\r\n    monospace: ['Typewriter-Regular', 'ML__tt'],\r\n    'monospace-bold': ['Typewriter-Regular', 'ML__tt ML__bold'],\r\n    'monospace-italic': ['Typewriter-Regular', 'ML__tt ML__it'],\r\n    'monospace-bolditalic': ['Typewriter-Regular', 'ML__tt ML__bold ML__it'],\r\n    // Blackboard characters are 'A-Z' in the AMS font\r\n    'double-struck': ['AMS-Regular', 'ML__bb'],\r\n    'double-struck-bold': ['AMS-Regular', 'ML__bb'],\r\n    'double-struck-italic': ['AMS-Regular', 'ML__bb'],\r\n    'double-struck-bolditalic': ['AMS-Regular', 'ML__bb'],\r\n};\r\nconst VARIANT_REPERTOIRE = {\r\n    'double-struck': /^[A-Z ]$/,\r\n    script: /^[A-Z ]$/,\r\n    calligraphic: /^[0-9A-Z ]$/,\r\n    fraktur: /^[0-9A-Za-z ]$|^[!\"#$%&'()*+,\\-./:;=?[]^’‘]$/,\r\n    monospace: /^[0-9A-Za-z ]$|^[!\"&'()*+,\\-./:;=?@[\\]^_~\\u0131\\u0237\\u0393\\u0394\\u0398\\u039b\\u039e\\u03A0\\u03A3\\u03A5\\u03A8\\u03a9]$/,\r\n    'sans-serif': /^[0-9A-Za-z ]$|^[!\"&'()*+,\\-./:;=?@[\\]^_~\\u0131\\u0237\\u0393\\u0394\\u0398\\u039b\\u039e\\u03A0\\u03A3\\u03A5\\u03A8\\u03a9]$/,\r\n};\r\nconst GREEK_LOWERCASE = /^[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5]$/;\r\nconst GREEK_UPPERCASE = /^[\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9]$/;\r\nconst LETTER_SHAPE_RANGES = [\r\n    /^[a-z]$/,\r\n    /^[A-Z]$/,\r\n    GREEK_LOWERCASE,\r\n    GREEK_UPPERCASE,\r\n];\r\n// The letterShapeStyle property indicates which characters should be\r\n// automatically italicized (see LETTER_SHAPE_RANGES)\r\nconst LETTER_SHAPE_MODIFIER = {\r\n    iso: ['it', 'it', 'it', 'it'],\r\n    tex: ['it', 'it', 'it', 'up'],\r\n    french: ['it', 'up', 'up', 'up'],\r\n    upright: ['up', 'up', 'up', 'up'],\r\n};\r\n// See http://ctan.math.illinois.edu/macros/latex/base/fntguide.pdf\r\nfunction emitLatexMathRun(context, run, expandMacro) {\r\n    let contextValue = context.variant;\r\n    if (context.variantStyle && context.variantStyle !== 'up') {\r\n        contextValue += '-' + context.variantStyle;\r\n    }\r\n    return joinLatex(getPropertyRuns(run, 'color').map((x) => {\r\n        const result = joinLatex(getPropertyRuns(x, 'variant').map((x) => {\r\n            let value = x[0].variant;\r\n            if (x[0].variantStyle && x[0].variantStyle !== 'up') {\r\n                value += '-' + x[0].variantStyle;\r\n            }\r\n            // Check if all the atoms in this run have a base\r\n            // variant identical to the current variant\r\n            // If so, we can skip wrapping them\r\n            if (x.every((x) => {\r\n                const info = getInfo(x.symbol, context.mode, null);\r\n                if (!info || !(info.variant || info.variantStyle)) {\r\n                    return false;\r\n                }\r\n                let styledValue = x.variant;\r\n                if (x.variantStyle && x.variantStyle !== 'up') {\r\n                    styledValue += '-' + x.variantStyle;\r\n                }\r\n                return styledValue === value;\r\n            })) {\r\n                return joinLatex(x.map((x) => x.toLatex(expandMacro)));\r\n            }\r\n            let command = '';\r\n            if (value && value !== contextValue) {\r\n                command = {\r\n                    calligraphic: '\\\\mathcal{',\r\n                    fraktur: '\\\\mathfrak{',\r\n                    'double-struck': '\\\\mathbb{',\r\n                    script: '\\\\mathscr{',\r\n                    monospace: '\\\\mathtt{',\r\n                    'sans-serif': '\\\\mathsf{',\r\n                    normal: '\\\\mathrm{',\r\n                    'normal-italic': '\\\\mathit{',\r\n                    'normal-bold': '\\\\mathbf{',\r\n                    'normal-bolditalic': '\\\\mathbfit{',\r\n                    ams: '',\r\n                    'ams-italic': '\\\\mathit{',\r\n                    'ams-bold': '\\\\mathbf{',\r\n                    'ams-bolditalic': '\\\\mathbfit{',\r\n                    main: '',\r\n                    'main-italic': '\\\\mathit{',\r\n                    'main-bold': '\\\\mathbf{',\r\n                    'main-bolditalic': '\\\\mathbfit{',\r\n                }[value];\r\n                console.assert(typeof command !== 'undefined');\r\n            }\r\n            return (command +\r\n                joinLatex(x.map((x) => x.toLatex(expandMacro))) +\r\n                (command ? '}' : ''));\r\n        }));\r\n        if (x[0].color && (!context || context.color !== x[0].color)) {\r\n            return ('\\\\textcolor{' +\r\n                colorToString(x[0].color) +\r\n                '}{' +\r\n                result +\r\n                '}');\r\n        }\r\n        return result;\r\n    }));\r\n}\r\nfunction applyStyle$1(atom, style) {\r\n    // letterShapeStyle will usually be set automatically, except when the\r\n    // locale cannot be determined, in which case its value will be 'auto'\r\n    // which we default to 'tex'\r\n    const letterShapeStyle = style.letterShapeStyle === 'auto' || !style.letterShapeStyle\r\n        ? 'tex'\r\n        : style.letterShapeStyle;\r\n    let variant = style.variant || 'normal';\r\n    let variantStyle = style.variantStyle || '';\r\n    // 1. Remap to \"main\" font some characters that don't exist\r\n    // in the \"math\" font\r\n    // There are two fonts that include the roman italic characters, \"main-it\" and \"math\"\r\n    // They are similar, but the \"math\" font has some different kernings ('f')\r\n    // and some slightly different character shape. It doesn't include a few\r\n    // characters, so for those characters, \"main\" has to be used instead\r\n    // \\imath, \\jmath and \\pound don't exist in \"math\" font,\r\n    // so use \"main\" italic instead.\r\n    if (variant === 'normal' &&\r\n        !variantStyle &&\r\n        /\\u00a3|\\u0131|\\u0237/.test(atom.body)) {\r\n        variant = 'main';\r\n        variantStyle = 'italic';\r\n    }\r\n    // 2. If no explicit variant style, auto-italicize some symbols,\r\n    // depending on the letterShapeStyle\r\n    if (variant === 'normal' && !variantStyle && atom.body.length === 1) {\r\n        LETTER_SHAPE_RANGES.forEach((x, i) => {\r\n            if (x.test(atom.body) &&\r\n                LETTER_SHAPE_MODIFIER[letterShapeStyle][i] === 'it') {\r\n                variantStyle = 'italic';\r\n            }\r\n        });\r\n    }\r\n    // 3. Map the variant + variantStyle to a font\r\n    if (variantStyle === 'up') {\r\n        variantStyle = '';\r\n    }\r\n    const styledVariant = variantStyle ? variant + '-' + variantStyle : variant;\r\n    console.assert(VARIANTS[styledVariant]);\r\n    const [fontName, classes] = VARIANTS[styledVariant];\r\n    // 4. If outside the font repertoire, switch to system font\r\n    // (return NULL to use default metrics)\r\n    if (VARIANT_REPERTOIRE[variant] &&\r\n        !VARIANT_REPERTOIRE[variant].test(atom.body)) {\r\n        // Map to unicode character\r\n        atom.body = mathVariantToUnicode(atom.body, variant, variantStyle);\r\n        atom.variant = '';\r\n        atom.variantStyle = '';\r\n        // Return NULL to use default metrics\r\n        return null;\r\n    }\r\n    // Lowercase greek letters have an incomplete repertoire (no bold)\r\n    // so, for \\mathbf to behave correctly, add a 'lcGreek' class.\r\n    if (GREEK_LOWERCASE.test(atom.body)) {\r\n        atom.classes += ' lcGreek';\r\n    }\r\n    // 5. Assign classes based on the font\r\n    if (classes) {\r\n        atom.classes += ' ' + classes;\r\n    }\r\n    return fontName;\r\n}\r\nregister('math', {\r\n    emitLatexRun: emitLatexMathRun,\r\n    applyStyle: applyStyle$1,\r\n});\n\nfunction emitStringTextRun(_context, run, _expandMacro) {\r\n    let needSpace = false;\r\n    return joinLatex(run.map((x) => {\r\n        let result = '';\r\n        let space = '';\r\n        if (x.latex) {\r\n            result = x.latex;\r\n        }\r\n        else if (typeof x.body === 'string') {\r\n            result = unicodeStringToLatex('text', x.body);\r\n        }\r\n        else if (x.symbol) {\r\n            result = x.symbol.replace(/\\\\/g, '\\\\backslash ');\r\n        }\r\n        if (needSpace && (!result || /^[a-zA-Z0-9*]/.test(result))) {\r\n            space = '{}';\r\n        }\r\n        needSpace = /\\\\[a-zA-Z0-9]+\\*?$/.test(result);\r\n        return space + result;\r\n    }));\r\n}\r\nfunction emitFontShapeTextRun(context, run, expandMacro) {\r\n    return joinLatex(getPropertyRuns(run, 'fontShape').map((x) => {\r\n        const result = emitStringTextRun(context, x);\r\n        if (x[0].fontShape === 'it') {\r\n            return '\\\\textit{' + result + '}';\r\n        }\r\n        if (x[0].fontShape === 'sl') {\r\n            return '\\\\textsl{' + result + '}';\r\n        }\r\n        if (x[0].fontShape === 'sc') {\r\n            return '\\\\textsc{' + result + '}';\r\n        }\r\n        if (x[0].fontShape === 'n') {\r\n            return '\\\\textup{' + result + '}';\r\n        }\r\n        if (x[0].fontShape) {\r\n            return '\\\\fontshape{' + x[0].fontShape + '}' + result;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\nfunction emitFontSeriesTextRun(context, run, expandMacro) {\r\n    return joinLatex(getPropertyRuns(run, 'fontSeries').map((x) => {\r\n        const result = emitFontShapeTextRun(context, x);\r\n        if (x[0].fontSeries === 'b') {\r\n            return '\\\\textbf{' + result + '}';\r\n        }\r\n        if (x[0].fontSeries === 'l') {\r\n            return '\\\\textlf{' + result + '}';\r\n        }\r\n        if (x[0].fontSeries === 'm') {\r\n            return '\\\\textmd{' + result + '}';\r\n        }\r\n        if (x[0].fontSeries) {\r\n            return '\\\\fontseries{' + x[0].fontSeries + '}' + result;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\nfunction emitSizeTextRun(context, run, expandMacro) {\r\n    return joinLatex(getPropertyRuns(run, 'fontSize').map((x) => {\r\n        const result = emitFontSeriesTextRun(context, x);\r\n        const command = {\r\n            size1: 'tiny',\r\n            size2: 'scriptsize',\r\n            size3: 'footnotesize',\r\n            size4: 'small',\r\n            size5: 'normalsize',\r\n            size6: 'large',\r\n            size7: 'Large',\r\n            size8: 'LARGE',\r\n            size9: 'huge',\r\n            size10: 'Huge',\r\n        }[x[0].fontSize] || '';\r\n        if (command) {\r\n            return '\\\\' + command + ' ' + result;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\nfunction emitFontFamilyTextRun(context, run, expandMacro) {\r\n    return joinLatex(getPropertyRuns(run, 'fontFamily').map((x) => {\r\n        const result = emitSizeTextRun(context, x);\r\n        const command = {\r\n            roman: 'textrm',\r\n            monospace: 'texttt',\r\n            'sans-serif': 'textsf',\r\n        }[x[0].fontFamily] || '';\r\n        if (command) {\r\n            return '\\\\' + command + '{' + result + '}';\r\n        }\r\n        if (x[0].fontFamily) {\r\n            return '\\\\fontfamily{' + x[0].fontFamily + '}' + result;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\nfunction emitStyledTextRun(context, run, expandMacro) {\r\n    return emitFontFamilyTextRun(context, run);\r\n}\r\nfunction emitColorRun(context, run, expandMacro) {\r\n    return joinLatex(getPropertyRuns(run, 'color').map((x) => {\r\n        const result = emitStyledTextRun(context, x);\r\n        if (x[0].color &&\r\n            x[0].color !== 'none' &&\r\n            (!context || context.color !== x[0].color)) {\r\n            // If there is a color specified, and it is different\r\n            // from our context color, output a command\r\n            return ('\\\\textcolor{' +\r\n                colorToString(x[0].color) +\r\n                '}{' +\r\n                result +\r\n                '}');\r\n        }\r\n        return result;\r\n    }));\r\n}\r\nfunction emitLatexTextRun(context, run, expandMacro) {\r\n    const result = emitColorRun(context, run);\r\n    const allAtomsHaveShapeOrSeriesOrFontFamily = run.every((x) => x.fontSeries || x.fontShape || x.fontFamily);\r\n    if (!allAtomsHaveShapeOrSeriesOrFontFamily ||\r\n        run[0].mode !== context.mode) {\r\n        // Wrap in text, only if there isn't a shape or series on\r\n        // all the atoms, because if so, it will be wrapped in a\r\n        // \\\\textbf, \\\\textit, etc... and the \\\\text would be redundant\r\n        return `\\\\text{${result}}`;\r\n    }\r\n    return result;\r\n}\r\nconst TEXT_FONT_CLASS = {\r\n    roman: '',\r\n    'sans-serif': 'ML__sans',\r\n    monospace: 'ML__tt',\r\n};\r\n/**\r\n * Return the font-family name\r\n */\r\nfunction applyStyle$2(span, style) {\r\n    const fontFamily = style.fontFamily;\r\n    if (TEXT_FONT_CLASS[fontFamily]) {\r\n        span.classes += ' ' + TEXT_FONT_CLASS[fontFamily];\r\n    }\r\n    else if (fontFamily) {\r\n        // Not a well-known family. Use a style.\r\n        span.setStyle('font-family', fontFamily);\r\n    }\r\n    if (style.fontShape) {\r\n        span.classes +=\r\n            ' ' +\r\n                ({\r\n                    it: 'ML__it',\r\n                    sl: 'ML__shape_sl',\r\n                    sc: 'ML__shape_sc',\r\n                    ol: 'ML__shape_ol',\r\n                }[style.fontShape] || '');\r\n    }\r\n    if (style.fontSeries) {\r\n        const m = style.fontSeries.match(/(.?[lbm])?(.?[cx])?/);\r\n        if (m) {\r\n            span.classes +=\r\n                ' ' +\r\n                    ({\r\n                        ul: 'ML__series_ul',\r\n                        el: 'ML__series_el',\r\n                        l: 'ML__series_l',\r\n                        sl: 'ML__series_sl',\r\n                        m: '',\r\n                        sb: 'ML__series_sb',\r\n                        b: 'ML__bold',\r\n                        eb: 'ML__series_eb',\r\n                        ub: 'ML__series_ub',\r\n                    }[m[1] || ''] || '');\r\n            span.classes +=\r\n                ' ' +\r\n                    ({\r\n                        uc: 'ML__series_uc',\r\n                        ec: 'ML__series_ec',\r\n                        c: 'ML__series_c',\r\n                        sc: 'ML__series_sc',\r\n                        n: '',\r\n                        sx: 'ML__series_sx',\r\n                        x: 'ML__series_x',\r\n                        ex: 'ML__series_ex',\r\n                        ux: 'ML__series_ux',\r\n                    }[m[2] || ''] || '');\r\n        }\r\n    }\r\n    // Always use the metrics of 'Main-Regular' in text mode\r\n    return 'Main-Regular';\r\n}\r\n// Given an array of tokens, return an array of atoms\r\n// options.args\r\n// options.macros\r\n// options.smartFence\r\n// options.style\r\n// options.parser\r\nfunction parse(tokens, error, options) {\r\n    let result = [];\r\n    let atom;\r\n    while (tokens.length > 0) {\r\n        const token = tokens.shift();\r\n        if (token === '<space>') {\r\n            atom = new Atom('text', '', ' ', options.style);\r\n            atom.symbol = ' ';\r\n            result.push(atom);\r\n        }\r\n        else if (token[0] === '\\\\') {\r\n            // Invoke the 'main' parser to handle the command\r\n            tokens.unshift(token);\r\n            let atoms;\r\n            [atoms, tokens] = options.parse('text', tokens, options);\r\n            result = [...result, ...atoms];\r\n        }\r\n        else if (token === '<$>' || token === '<$$>') {\r\n            // Mode-shift\r\n            const subtokens = tokens.slice(0, tokens.findIndex((x) => x === token));\r\n            tokens = tokens.slice(subtokens.length + 1);\r\n            const [atoms] = options.parse('math', subtokens, options);\r\n            result = [...result, ...atoms];\r\n        }\r\n        else if (token === '<{>' || token === '<}>') ;\r\n        else {\r\n            const info = getInfo(token, 'text', options.macros);\r\n            if (!info) {\r\n                error({ code: 'unexpected-token' });\r\n            }\r\n            else if (!info.mode || info.mode.includes('text')) {\r\n                atom = new Atom('text', info ? info.type : '', // @todo: revisit. Use 'text' type?\r\n                info ? info.value : token, options.style);\r\n                atom.symbol = token;\r\n                atom.latex = charToLatex('text', token);\r\n                result.push(atom);\r\n            }\r\n            else {\r\n                error({ code: 'unexpected-token' });\r\n            }\r\n        }\r\n    }\r\n    return [result, tokens];\r\n}\r\nregister('text', {\r\n    emitLatexRun: emitLatexTextRun,\r\n    applyStyle: applyStyle$2,\r\n    parse: (tokens, error, options) => parse(tokens, error, options)[0],\r\n});\n\n/* eslint-disable */\r\ndefineFunction(['ce', 'pu'], '{chemformula:balanced-string}', null, (name, args) => {\r\n    const tex = texify.go(mhchemParser.go(args[0], name === '\\\\pu' ? 'pu' : 'ce'));\r\n    // console.log(tex);\r\n    return {\r\n        type: 'group',\r\n        mode: 'chem',\r\n        body: parseString(tex),\r\n        latexOpen: '\\\\' + name + '{',\r\n        latexClose: '}',\r\n    };\r\n}\r\n// (name, _parent, atom, emit) => {\r\n//     // let args = '';\r\n//     // if (typeof atom.index !== 'undefined') {\r\n//     //     args += `[${emit(atom, atom.index)}]`;\r\n//     // }\r\n//     // args += `{${emit(atom, atom.body as Atom[])}}`;\r\n//     return '';\r\n// }\r\n);\r\n/*************************************************************\r\n *\r\n *  MathJax/extensions/TeX/mhchem.js\r\n *\r\n *  Implements the \\ce command for handling chemical formulas\r\n *  from the mhchem LaTeX package.\r\n *\r\n *  ---------------------------------------------------------------------\r\n *\r\n *  Copyright (c) 2011-2015 The MathJax Consortium\r\n *  Copyright (c) 2015-2018 Martin Hensel\r\n *\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n *  you may not use this file except in compliance with the License.\r\n *  You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *  See the License for the specific language governing permissions and\r\n *  limitations under the License.\r\n */\r\n//\r\n// Core parser for mhchem syntax  (recursive)\r\n//\r\n/** @type {MhchemParser} */\r\nvar mhchemParser = {\r\n    //\r\n    // Parses mchem \\ce syntax\r\n    //\r\n    // Call like\r\n    //   go(\"H2O\");\r\n    //\r\n    go: function (input, stateMachine) {\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (stateMachine === undefined) {\r\n            stateMachine = 'ce';\r\n        }\r\n        var state = '0';\r\n        //\r\n        // String buffers for parsing:\r\n        //\r\n        // buffer.a == amount\r\n        // buffer.o == element\r\n        // buffer.b == left-side superscript\r\n        // buffer.p == left-side subscript\r\n        // buffer.q == right-side subscript\r\n        // buffer.d == right-side superscript\r\n        //\r\n        // buffer.r == arrow\r\n        // buffer.rdt == arrow, script above, type\r\n        // buffer.rd == arrow, script above, content\r\n        // buffer.rqt == arrow, script below, type\r\n        // buffer.rq == arrow, script below, content\r\n        //\r\n        // buffer.text_\r\n        // buffer.rm\r\n        // etc.\r\n        //\r\n        // buffer.parenthesisLevel == int, starting at 0\r\n        // buffer.sb == bool, space before\r\n        // buffer.beginsWithBond == bool\r\n        //\r\n        // These letters are also used as state names.\r\n        //\r\n        // Other states:\r\n        // 0 == begin of main part (arrow/operator unlikely)\r\n        // 1 == next entity\r\n        // 2 == next entity (arrow/operator unlikely)\r\n        // 3 == next atom\r\n        // c == macro\r\n        //\r\n        /** @type {Buffer} */\r\n        var buffer = {};\r\n        buffer['parenthesisLevel'] = 0;\r\n        input = input.replace(/\\n/g, ' ');\r\n        input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, '-');\r\n        input = input.replace(/[\\u2026]/g, '...');\r\n        //\r\n        // Looks through mhchemParser.transitions, to execute a matching action\r\n        // (recursive)\r\n        //\r\n        var lastInput;\r\n        var watchdog = 10;\r\n        /** @type {ParserOutput[]} */\r\n        var output = [];\r\n        while (true) {\r\n            if (lastInput !== input) {\r\n                watchdog = 10;\r\n                lastInput = input;\r\n            }\r\n            else {\r\n                watchdog--;\r\n            }\r\n            //\r\n            // Find actions in transition table\r\n            //\r\n            var machine = mhchemParser.stateMachines[stateMachine];\r\n            var t = machine.transitions[state] || machine.transitions['*'];\r\n            iterateTransitions: for (var i = 0; i < t.length; i++) {\r\n                var matches = mhchemParser.patterns.match_(t[i].pattern, input);\r\n                if (matches) {\r\n                    //\r\n                    // Execute actions\r\n                    //\r\n                    var task = t[i].task;\r\n                    for (var iA = 0; iA < task.action_.length; iA++) {\r\n                        var o;\r\n                        //\r\n                        // Find and execute action\r\n                        //\r\n                        if (machine.actions[task.action_[iA].type_]) {\r\n                            o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\r\n                        }\r\n                        else if (mhchemParser.actions[task.action_[iA].type_]) {\r\n                            o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\r\n                        }\r\n                        else {\r\n                            throw [\r\n                                'MhchemBugA',\r\n                                'mhchem bug A. Please report. (' +\r\n                                    task.action_[iA].type_ +\r\n                                    ')',\r\n                            ]; // Trying to use non-existing action\r\n                        }\r\n                        //\r\n                        // Add output\r\n                        //\r\n                        mhchemParser.concatArray(output, o);\r\n                    }\r\n                    //\r\n                    // Set next state,\r\n                    // Shorten input,\r\n                    // Continue with next character\r\n                    //   (= apply only one transition per position)\r\n                    //\r\n                    state = task.nextState || state;\r\n                    if (input.length > 0) {\r\n                        if (!task.revisit) {\r\n                            input = matches.remainder;\r\n                        }\r\n                        if (!task.toContinue) {\r\n                            break iterateTransitions;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return output;\r\n                    }\r\n                }\r\n            }\r\n            //\r\n            // Prevent infinite loop\r\n            //\r\n            if (watchdog <= 0) {\r\n                throw ['MhchemBugU', 'mhchem bug U. Please report.']; // Unexpected character\r\n            }\r\n        }\r\n    },\r\n    concatArray: function (a, b) {\r\n        if (b) {\r\n            if (Array.isArray(b)) {\r\n                for (var iB = 0; iB < b.length; iB++) {\r\n                    a.push(b[iB]);\r\n                }\r\n            }\r\n            else {\r\n                a.push(b);\r\n            }\r\n        }\r\n    },\r\n    patterns: {\r\n        //\r\n        // Matching patterns\r\n        // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\r\n        //\r\n        patterns: {\r\n            // property names must not look like integers (\"2\") for correct property traversal order, later on\r\n            empty: /^$/,\r\n            else: /^./,\r\n            else2: /^./,\r\n            space: /^\\s/,\r\n            'space A': /^\\s(?=[A-Z\\\\$])/,\r\n            space$: /^\\s$/,\r\n            'a-z': /^[a-z]/,\r\n            x: /^x/,\r\n            x$: /^x$/,\r\n            i$: /^i$/,\r\n            letters: /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\r\n            '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\r\n            'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\r\n            '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\r\n            'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\r\n            digits: /^[0-9]+/,\r\n            '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\r\n            '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\r\n            '(-)(9.,9)(e)(99)': function (input) {\r\n                var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\r\n                if (m && m[0]) {\r\n                    return {\r\n                        match_: m.splice(1),\r\n                        remainder: input.substr(m[0].length),\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n            '(-)(9)^(-9)': function (input) {\r\n                var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/);\r\n                if (m && m[0]) {\r\n                    return {\r\n                        match_: m.splice(1),\r\n                        remainder: input.substr(m[0].length),\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n            'state of aggregation $': function (input) {\r\n                // ... or crystal system\r\n                var a = mhchemParser.patterns.findObserveGroups(input, '', /^\\([a-z]{1,3}(?=[\\),])/, ')', ''); // (aq), (aq,$\\infty$), (aq, sat)\r\n                if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\r\n                    return a;\r\n                } //  AND end of 'phrase'\r\n                var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/); // OR crystal system ($o$) (\\ca$c$)\r\n                if (m) {\r\n                    return {\r\n                        match_: m[0],\r\n                        remainder: input.substr(m[0].length),\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n            '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\r\n            '{[(': /^(?:\\\\\\{|\\[|\\()/,\r\n            ')]}': /^(?:\\)|\\]|\\\\\\})/,\r\n            ', ': /^[,;]\\s*/,\r\n            ',': /^[,;]/,\r\n            '.': /^[.]/,\r\n            '. ': /^([.\\u22C5\\u00B7\\u2022])\\s*/,\r\n            '...': /^\\.\\.\\.(?=$|[^.])/,\r\n            '* ': /^([*])\\s*/,\r\n            '^{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '^{', '', '', '}');\r\n            },\r\n            '^($...$)': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '^', '$', '$', '');\r\n            },\r\n            '^a': /^\\^([0-9]+|[^\\\\_])/,\r\n            '^\\\\x{}{}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '^', /^\\\\[a-zA-Z]+\\{/, '}', '', '', '{', '}', '', true);\r\n            },\r\n            '^\\\\x{}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '^', /^\\\\[a-zA-Z]+\\{/, '}', '');\r\n            },\r\n            '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\r\n            '^(-1)': /^\\^(-?\\d+)/,\r\n            \"'\": /^'/,\r\n            '_{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '_{', '', '', '}');\r\n            },\r\n            '_($...$)': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '_', '$', '$', '');\r\n            },\r\n            _9: /^_([+\\-]?[0-9]+|[^\\\\])/,\r\n            '_\\\\x{}{}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '_', /^\\\\[a-zA-Z]+\\{/, '}', '', '', '{', '}', '', true);\r\n            },\r\n            '_\\\\x{}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '_', /^\\\\[a-zA-Z]+\\{/, '}', '');\r\n            },\r\n            '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\r\n            '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\r\n            '{}': /^\\{\\}/,\r\n            '{...}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '', '{', '}', '');\r\n            },\r\n            '{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '{', '', '', '}');\r\n            },\r\n            '$...$': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '', '$', '$', '');\r\n            },\r\n            '${(...)}$': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '${', '', '', '}$');\r\n            },\r\n            '$(...)$': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '$', '', '', '$');\r\n            },\r\n            '=<>': /^[=<>]/,\r\n            '#': /^[#\\u2261]/,\r\n            '+': /^\\+/,\r\n            '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\r\n            '-9': /^-(?=[0-9])/,\r\n            '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\r\n            '-': /^-/,\r\n            'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\r\n            operator: /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\r\n            arrowUpDown: /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\r\n            '\\\\bond{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\bond{', '', '', '}');\r\n            },\r\n            '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\r\n            CMT: /^[CMT](?=\\[)/,\r\n            '[(...)]': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '[', '', '', ']');\r\n            },\r\n            '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\r\n            '\\\\,': /^(?:\\\\[,\\ ;:])/,\r\n            '\\\\x{}{}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '', /^\\\\[a-zA-Z]+\\{/, '}', '', '', '{', '}', '', true);\r\n            },\r\n            '\\\\x{}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '', /^\\\\[a-zA-Z]+\\{/, '}', '');\r\n            },\r\n            '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\r\n            '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\r\n            orbital: /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\r\n            others: /^[\\/~|]/,\r\n            '\\\\frac{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\frac{', '', '', '}', '{', '', '', '}');\r\n            },\r\n            '\\\\overset{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\overset{', '', '', '}', '{', '', '', '}');\r\n            },\r\n            '\\\\underset{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\underset{', '', '', '}', '{', '', '', '}');\r\n            },\r\n            '\\\\underbrace{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\underbrace{', '', '', '}_', '{', '', '', '}');\r\n            },\r\n            '\\\\color{(...)}0': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\color{', '', '', '}');\r\n            },\r\n            '\\\\color{(...)}{(...)}1': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\color{', '', '', '}', '{', '', '', '}');\r\n            },\r\n            '\\\\color(...){(...)}2': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\color', '\\\\', '', /^(?=\\{)/, '{', '', '', '}');\r\n            },\r\n            '\\\\ce{(...)}': function (input) {\r\n                return mhchemParser.patterns.findObserveGroups(input, '\\\\ce{', '', '', '}');\r\n            },\r\n            oxidation$: /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\r\n            'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\r\n            'roman numeral': /^[IVX]+/,\r\n            '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\r\n            amount: function (input) {\r\n                var match;\r\n                // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\r\n                match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\r\n                if (match) {\r\n                    return {\r\n                        match_: match[0],\r\n                        remainder: input.substr(match[0].length),\r\n                    };\r\n                }\r\n                var a = mhchemParser.patterns.findObserveGroups(input, '', '$', '$', '');\r\n                if (a) {\r\n                    // e.g. $2n-1$, $-$\r\n                    match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\r\n                    if (match) {\r\n                        return {\r\n                            match_: match[0],\r\n                            remainder: input.substr(match[0].length),\r\n                        };\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n            amount2: function (input) {\r\n                return this['amount'](input);\r\n            },\r\n            '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\r\n            formula$: function (input) {\r\n                if (input.match(/^\\([a-z]+\\)$/)) {\r\n                    return null;\r\n                } // state of aggregation = no formula\r\n                var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\r\n                if (match) {\r\n                    return {\r\n                        match_: match[0],\r\n                        remainder: input.substr(match[0].length),\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n            uprightEntities: /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\r\n            '/': /^\\s*(\\/)\\s*/,\r\n            '//': /^\\s*(\\/\\/)\\s*/,\r\n            '*': /^\\s*[*.]\\s*/,\r\n        },\r\n        findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\r\n            /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\r\n            var _match = function (input, pattern) {\r\n                if (typeof pattern === 'string') {\r\n                    if (input.indexOf(pattern) !== 0) {\r\n                        return null;\r\n                    }\r\n                    return pattern;\r\n                }\r\n                else {\r\n                    var match = input.match(pattern);\r\n                    if (!match) {\r\n                        return null;\r\n                    }\r\n                    return match[0];\r\n                }\r\n            };\r\n            /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\r\n            var _findObserveGroups = function (input, i, endChars) {\r\n                var braces = 0;\r\n                while (i < input.length) {\r\n                    var a = input.charAt(i);\r\n                    var match = _match(input.substr(i), endChars);\r\n                    if (match !== null && braces === 0) {\r\n                        return {\r\n                            endMatchBegin: i,\r\n                            endMatchEnd: i + match.length,\r\n                        };\r\n                    }\r\n                    else if (a === '{') {\r\n                        braces++;\r\n                    }\r\n                    else if (a === '}') {\r\n                        if (braces === 0) {\r\n                            throw [\r\n                                'ExtraCloseMissingOpen',\r\n                                'Extra close brace or missing open brace',\r\n                            ];\r\n                        }\r\n                        else {\r\n                            braces--;\r\n                        }\r\n                    }\r\n                    i++;\r\n                }\r\n                if (braces > 0) {\r\n                    return null;\r\n                }\r\n                return null;\r\n            };\r\n            var match = _match(input, begExcl);\r\n            if (match === null) {\r\n                return null;\r\n            }\r\n            input = input.substr(match.length);\r\n            match = _match(input, begIncl);\r\n            if (match === null) {\r\n                return null;\r\n            }\r\n            var e = _findObserveGroups(input, match.length, endIncl || endExcl);\r\n            if (e === null) {\r\n                return null;\r\n            }\r\n            var match1 = input.substring(0, endIncl ? e.endMatchEnd : e.endMatchBegin);\r\n            if (!(beg2Excl || beg2Incl)) {\r\n                return {\r\n                    match_: match1,\r\n                    remainder: input.substr(e.endMatchEnd),\r\n                };\r\n            }\r\n            else {\r\n                var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\r\n                if (group2 === null) {\r\n                    return null;\r\n                }\r\n                /** @type {string[]} */\r\n                var matchRet = [match1, group2.match_];\r\n                return {\r\n                    match_: combine ? matchRet.join('') : matchRet,\r\n                    remainder: group2.remainder,\r\n                };\r\n            }\r\n        },\r\n        //\r\n        // Matching function\r\n        // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\r\n        // returns null or {match_:\"a\", remainder:\"bc\"}\r\n        //\r\n        match_: function (m, input) {\r\n            var pattern = mhchemParser.patterns.patterns[m];\r\n            if (pattern === undefined) {\r\n                throw [\r\n                    'MhchemBugP',\r\n                    'mhchem bug P. Please report. (' + m + ')',\r\n                ]; // Trying to use non-existing pattern\r\n            }\r\n            else if (typeof pattern === 'function') {\r\n                return mhchemParser.patterns.patterns[m](input); // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\r\n            }\r\n            else {\r\n                // RegExp\r\n                var match = input.match(pattern);\r\n                if (match) {\r\n                    var mm;\r\n                    if (match[2]) {\r\n                        mm = [match[1], match[2]];\r\n                    }\r\n                    else if (match[1]) {\r\n                        mm = match[1];\r\n                    }\r\n                    else {\r\n                        mm = match[0];\r\n                    }\r\n                    return {\r\n                        match_: mm,\r\n                        remainder: input.substr(match[0].length),\r\n                    };\r\n                }\r\n                return null;\r\n            }\r\n        },\r\n    },\r\n    //\r\n    // Generic state machine actions\r\n    //\r\n    actions: {\r\n        'a=': function (buffer, m) {\r\n            buffer.a = (buffer.a || '') + m;\r\n        },\r\n        'b=': function (buffer, m) {\r\n            buffer.b = (buffer.b || '') + m;\r\n        },\r\n        'p=': function (buffer, m) {\r\n            buffer.p = (buffer.p || '') + m;\r\n        },\r\n        'o=': function (buffer, m) {\r\n            buffer.o = (buffer.o || '') + m;\r\n        },\r\n        'q=': function (buffer, m) {\r\n            buffer.q = (buffer.q || '') + m;\r\n        },\r\n        'd=': function (buffer, m) {\r\n            buffer.d = (buffer.d || '') + m;\r\n        },\r\n        'rm=': function (buffer, m) {\r\n            buffer.rm = (buffer.rm || '') + m;\r\n        },\r\n        'text=': function (buffer, m) {\r\n            buffer.text_ = (buffer.text_ || '') + m;\r\n        },\r\n        insert: function (buffer, m, a) {\r\n            return { type_: a };\r\n        },\r\n        'insert+p1': function (buffer, m, a) {\r\n            return { type_: a, p1: m };\r\n        },\r\n        'insert+p1+p2': function (buffer, m, a) {\r\n            return { type_: a, p1: m[0], p2: m[1] };\r\n        },\r\n        copy: function (buffer, m) {\r\n            return m;\r\n        },\r\n        rm: function (buffer, m) {\r\n            return { type_: 'rm', p1: m || '' };\r\n        },\r\n        text: function (buffer, m) {\r\n            return mhchemParser.go(m, 'text');\r\n        },\r\n        '{text}': function (buffer, m) {\r\n            var ret = ['{'];\r\n            mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));\r\n            ret.push('}');\r\n            return ret;\r\n        },\r\n        'tex-math': function (buffer, m) {\r\n            return mhchemParser.go(m, 'tex-math');\r\n        },\r\n        'tex-math tight': function (buffer, m) {\r\n            return mhchemParser.go(m, 'tex-math tight');\r\n        },\r\n        bond: function (buffer, m, k) {\r\n            return { type_: 'bond', kind_: k || m };\r\n        },\r\n        'color0-output': function (buffer, m) {\r\n            return { type_: 'color0', color: m[0] };\r\n        },\r\n        ce: function (buffer, m) {\r\n            return mhchemParser.go(m);\r\n        },\r\n        '1/2': function (buffer, m) {\r\n            /** @type {ParserOutput[]} */\r\n            var ret = [];\r\n            if (m.match(/^[+\\-]/)) {\r\n                ret.push(m.substr(0, 1));\r\n                m = m.substr(1);\r\n            }\r\n            var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\r\n            n[1] = n[1].replace(/\\$/g, '');\r\n            ret.push({ type_: 'frac', p1: n[1], p2: n[2] });\r\n            if (n[3]) {\r\n                n[3] = n[3].replace(/\\$/g, '');\r\n                ret.push({ type_: 'tex-math', p1: n[3] });\r\n            }\r\n            return ret;\r\n        },\r\n        '9,9': function (buffer, m) {\r\n            return mhchemParser.go(m, '9,9');\r\n        },\r\n    },\r\n    //\r\n    // createTransitions\r\n    // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\r\n    // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\r\n    //\r\n    createTransitions: function (o) {\r\n        var pattern, state;\r\n        /** @type {string[]} */\r\n        var stateArray;\r\n        var i;\r\n        //\r\n        // 1. Collect all states\r\n        //\r\n        /** @type {Transitions} */\r\n        var transitions = {};\r\n        for (pattern in o) {\r\n            for (state in o[pattern]) {\r\n                stateArray = state.split('|');\r\n                o[pattern][state].stateArray = stateArray;\r\n                for (i = 0; i < stateArray.length; i++) {\r\n                    transitions[stateArray[i]] = [];\r\n                }\r\n            }\r\n        }\r\n        //\r\n        // 2. Fill states\r\n        //\r\n        for (pattern in o) {\r\n            for (state in o[pattern]) {\r\n                stateArray = o[pattern][state].stateArray || [];\r\n                for (i = 0; i < stateArray.length; i++) {\r\n                    //\r\n                    // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\r\n                    // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\r\n                    //\r\n                    /** @type {any} */\r\n                    var p = o[pattern][state];\r\n                    if (p.action_) {\r\n                        p.action_ = [].concat(p.action_);\r\n                        for (var k = 0; k < p.action_.length; k++) {\r\n                            if (typeof p.action_[k] === 'string') {\r\n                                p.action_[k] = { type_: p.action_[k] };\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        p.action_ = [];\r\n                    }\r\n                    //\r\n                    // 2.b Multi-insert\r\n                    //\r\n                    var patternArray = pattern.split('|');\r\n                    for (var j = 0; j < patternArray.length; j++) {\r\n                        if (stateArray[i] === '*') {\r\n                            // insert into all\r\n                            for (var t in transitions) {\r\n                                transitions[t].push({\r\n                                    pattern: patternArray[j],\r\n                                    task: p,\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            transitions[stateArray[i]].push({\r\n                                pattern: patternArray[j],\r\n                                task: p,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return transitions;\r\n    },\r\n    stateMachines: {},\r\n};\r\n//\r\n// Definition of state machines\r\n//\r\nmhchemParser.stateMachines = {\r\n    //\r\n    // \\ce state machines\r\n    //\r\n    //#region ce\r\n    ce: {\r\n        // main parser\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': { action_: 'output' },\r\n            },\r\n            else: {\r\n                '0|1|2': {\r\n                    action_: 'beginsWithBond=false',\r\n                    revisit: true,\r\n                    toContinue: true,\r\n                },\r\n            },\r\n            oxidation$: {\r\n                '0': { action_: 'oxidation-output' },\r\n            },\r\n            CMT: {\r\n                r: { action_: 'rdt=', nextState: 'rt' },\r\n                rd: { action_: 'rqt=', nextState: 'rdt' },\r\n            },\r\n            arrowUpDown: {\r\n                '0|1|2|as': {\r\n                    action_: ['sb=false', 'output', 'operator'],\r\n                    nextState: '1',\r\n                },\r\n            },\r\n            uprightEntities: {\r\n                '0|1|2': { action_: ['o=', 'output'], nextState: '1' },\r\n            },\r\n            orbital: {\r\n                '0|1|2|3': { action_: 'o=', nextState: 'o' },\r\n            },\r\n            '->': {\r\n                '0|1|2|3': { action_: 'r=', nextState: 'r' },\r\n                'a|as': { action_: ['output', 'r='], nextState: 'r' },\r\n                '*': { action_: ['output', 'r='], nextState: 'r' },\r\n            },\r\n            '+': {\r\n                o: { action_: 'd= kv', nextState: 'd' },\r\n                'd|D': { action_: 'd=', nextState: 'd' },\r\n                q: { action_: 'd=', nextState: 'qd' },\r\n                'qd|qD': { action_: 'd=', nextState: 'qd' },\r\n                dq: { action_: ['output', 'd='], nextState: 'd' },\r\n                '3': {\r\n                    action_: ['sb=false', 'output', 'operator'],\r\n                    nextState: '0',\r\n                },\r\n            },\r\n            amount: {\r\n                '0|2': { action_: 'a=', nextState: 'a' },\r\n            },\r\n            'pm-operator': {\r\n                '0|1|2|a|as': {\r\n                    action_: [\r\n                        'sb=false',\r\n                        'output',\r\n                        { type_: 'operator', option: '\\\\pm' },\r\n                    ],\r\n                    nextState: '0',\r\n                },\r\n            },\r\n            operator: {\r\n                '0|1|2|a|as': {\r\n                    action_: ['sb=false', 'output', 'operator'],\r\n                    nextState: '0',\r\n                },\r\n            },\r\n            '-$': {\r\n                'o|q': {\r\n                    action_: ['charge or bond', 'output'],\r\n                    nextState: 'qd',\r\n                },\r\n                d: { action_: 'd=', nextState: 'd' },\r\n                D: {\r\n                    action_: ['output', { type_: 'bond', option: '-' }],\r\n                    nextState: '3',\r\n                },\r\n                q: { action_: 'd=', nextState: 'qd' },\r\n                qd: { action_: 'd=', nextState: 'qd' },\r\n                'qD|dq': {\r\n                    action_: ['output', { type_: 'bond', option: '-' }],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '-9': {\r\n                '3|o': {\r\n                    action_: ['output', { type_: 'insert', option: 'hyphen' }],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '- orbital overlap': {\r\n                o: {\r\n                    action_: ['output', { type_: 'insert', option: 'hyphen' }],\r\n                    nextState: '2',\r\n                },\r\n                d: {\r\n                    action_: ['output', { type_: 'insert', option: 'hyphen' }],\r\n                    nextState: '2',\r\n                },\r\n            },\r\n            '-': {\r\n                '0|1|2': {\r\n                    action_: [\r\n                        { type_: 'output', option: 1 },\r\n                        'beginsWithBond=true',\r\n                        { type_: 'bond', option: '-' },\r\n                    ],\r\n                    nextState: '3',\r\n                },\r\n                '3': { action_: { type_: 'bond', option: '-' } },\r\n                a: {\r\n                    action_: ['output', { type_: 'insert', option: 'hyphen' }],\r\n                    nextState: '2',\r\n                },\r\n                as: {\r\n                    action_: [\r\n                        { type_: 'output', option: 2 },\r\n                        { type_: 'bond', option: '-' },\r\n                    ],\r\n                    nextState: '3',\r\n                },\r\n                b: { action_: 'b=' },\r\n                o: {\r\n                    action_: { type_: '- after o/d', option: false },\r\n                    nextState: '2',\r\n                },\r\n                q: {\r\n                    action_: { type_: '- after o/d', option: false },\r\n                    nextState: '2',\r\n                },\r\n                'd|qd|dq': {\r\n                    action_: { type_: '- after o/d', option: true },\r\n                    nextState: '2',\r\n                },\r\n                'D|qD|p': {\r\n                    action_: ['output', { type_: 'bond', option: '-' }],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            amount2: {\r\n                '1|3': { action_: 'a=', nextState: 'a' },\r\n            },\r\n            letters: {\r\n                '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\r\n                'q|dq': { action_: ['output', 'o='], nextState: 'o' },\r\n                'd|D|qd|qD': { action_: 'o after d', nextState: 'o' },\r\n            },\r\n            digits: {\r\n                o: { action_: 'q=', nextState: 'q' },\r\n                'd|D': { action_: 'q=', nextState: 'dq' },\r\n                q: { action_: ['output', 'o='], nextState: 'o' },\r\n                a: { action_: 'o=', nextState: 'o' },\r\n            },\r\n            'space A': {\r\n                'b|p|bp': {},\r\n            },\r\n            space: {\r\n                a: { nextState: 'as' },\r\n                '0': { action_: 'sb=false' },\r\n                '1|2': { action_: 'sb=true' },\r\n                'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },\r\n                '*': { action_: ['output', 'sb=true'], nextState: '1' },\r\n            },\r\n            '1st-level escape': {\r\n                '1|2': {\r\n                    action_: [\r\n                        'output',\r\n                        { type_: 'insert+p1', option: '1st-level escape' },\r\n                    ],\r\n                },\r\n                '*': {\r\n                    action_: [\r\n                        'output',\r\n                        { type_: 'insert+p1', option: '1st-level escape' },\r\n                    ],\r\n                    nextState: '0',\r\n                },\r\n            },\r\n            '[(...)]': {\r\n                'r|rt': { action_: 'rd=', nextState: 'rd' },\r\n                'rd|rdt': { action_: 'rq=', nextState: 'rdq' },\r\n            },\r\n            '...': {\r\n                'o|d|D|dq|qd|qD': {\r\n                    action_: ['output', { type_: 'bond', option: '...' }],\r\n                    nextState: '3',\r\n                },\r\n                '*': {\r\n                    action_: [\r\n                        { type_: 'output', option: 1 },\r\n                        { type_: 'insert', option: 'ellipsis' },\r\n                    ],\r\n                    nextState: '1',\r\n                },\r\n            },\r\n            '. |* ': {\r\n                '*': {\r\n                    action_: [\r\n                        'output',\r\n                        { type_: 'insert', option: 'addition compound' },\r\n                    ],\r\n                    nextState: '1',\r\n                },\r\n            },\r\n            'state of aggregation $': {\r\n                '*': {\r\n                    action_: ['output', 'state of aggregation'],\r\n                    nextState: '1',\r\n                },\r\n            },\r\n            '{[(': {\r\n                'a|as|o': {\r\n                    action_: ['o=', 'output', 'parenthesisLevel++'],\r\n                    nextState: '2',\r\n                },\r\n                '0|1|2|3': {\r\n                    action_: ['o=', 'output', 'parenthesisLevel++'],\r\n                    nextState: '2',\r\n                },\r\n                '*': {\r\n                    action_: ['output', 'o=', 'output', 'parenthesisLevel++'],\r\n                    nextState: '2',\r\n                },\r\n            },\r\n            ')]}': {\r\n                '0|1|2|3|b|p|bp|o': {\r\n                    action_: ['o=', 'parenthesisLevel--'],\r\n                    nextState: 'o',\r\n                },\r\n                'a|as|d|D|q|qd|qD|dq': {\r\n                    action_: ['output', 'o=', 'parenthesisLevel--'],\r\n                    nextState: 'o',\r\n                },\r\n            },\r\n            ', ': {\r\n                '*': { action_: ['output', 'comma'], nextState: '0' },\r\n            },\r\n            '^_': {\r\n                // ^ and _ without a sensible argument\r\n                '*': {},\r\n            },\r\n            '^{(...)}|^($...$)': {\r\n                '0|1|2|as': { action_: 'b=', nextState: 'b' },\r\n                p: { action_: 'b=', nextState: 'bp' },\r\n                '3|o': { action_: 'd= kv', nextState: 'D' },\r\n                q: { action_: 'd=', nextState: 'qD' },\r\n                'd|D|qd|qD|dq': { action_: ['output', 'd='], nextState: 'D' },\r\n            },\r\n            \"^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|'\": {\r\n                '0|1|2|as': { action_: 'b=', nextState: 'b' },\r\n                p: { action_: 'b=', nextState: 'bp' },\r\n                '3|o': { action_: 'd= kv', nextState: 'd' },\r\n                q: { action_: 'd=', nextState: 'qd' },\r\n                'd|qd|D|qD': { action_: 'd=' },\r\n                dq: { action_: ['output', 'd='], nextState: 'd' },\r\n            },\r\n            '_{(state of aggregation)}$': {\r\n                'd|D|q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' },\r\n            },\r\n            '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\r\n                '0|1|2|as': { action_: 'p=', nextState: 'p' },\r\n                b: { action_: 'p=', nextState: 'bp' },\r\n                '3|o': { action_: 'q=', nextState: 'q' },\r\n                'd|D': { action_: 'q=', nextState: 'dq' },\r\n                'q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' },\r\n            },\r\n            '=<>': {\r\n                '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': {\r\n                    action_: [{ type_: 'output', option: 2 }, 'bond'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '#': {\r\n                '0|1|2|3|a|as|o': {\r\n                    action_: [\r\n                        { type_: 'output', option: 2 },\r\n                        { type_: 'bond', option: '#' },\r\n                    ],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '{}': {\r\n                '*': {\r\n                    action_: { type_: 'output', option: 1 },\r\n                    nextState: '1',\r\n                },\r\n            },\r\n            '{...}': {\r\n                '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },\r\n                'o|d|D|q|qd|qD|dq': {\r\n                    action_: ['output', 'o='],\r\n                    nextState: 'o',\r\n                },\r\n            },\r\n            '$...$': {\r\n                a: { action_: 'a=' },\r\n                '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\r\n                'as|o': { action_: 'o=' },\r\n                'q|d|D|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' },\r\n            },\r\n            '\\\\bond{(...)}': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 2 }, 'bond'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\frac{(...)}': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 1 }, 'frac-output'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\overset{(...)}': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 2 }, 'overset-output'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\underset{(...)}': {\r\n                '*': {\r\n                    action_: [\r\n                        { type_: 'output', option: 2 },\r\n                        'underset-output',\r\n                    ],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\underbrace{(...)}': {\r\n                '*': {\r\n                    action_: [\r\n                        { type_: 'output', option: 2 },\r\n                        'underbrace-output',\r\n                    ],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 2 }, 'color-output'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\color{(...)}0': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 2 }, 'color0-output'],\r\n                },\r\n            },\r\n            '\\\\ce{(...)}': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 2 }, 'ce'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            '\\\\,': {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 1 }, 'copy'],\r\n                    nextState: '1',\r\n                },\r\n            },\r\n            '\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '0|1|2|3|a|as|b|p|bp|o|c0': {\r\n                    action_: ['o=', 'output'],\r\n                    nextState: '3',\r\n                },\r\n                '*': { action_: ['output', 'o=', 'output'], nextState: '3' },\r\n            },\r\n            others: {\r\n                '*': {\r\n                    action_: [{ type_: 'output', option: 1 }, 'copy'],\r\n                    nextState: '3',\r\n                },\r\n            },\r\n            else2: {\r\n                a: { action_: 'a to o', nextState: 'o', revisit: true },\r\n                as: {\r\n                    action_: ['output', 'sb=true'],\r\n                    nextState: '1',\r\n                    revisit: true,\r\n                },\r\n                'r|rt|rd|rdt|rdq': {\r\n                    action_: ['output'],\r\n                    nextState: '0',\r\n                    revisit: true,\r\n                },\r\n                '*': { action_: ['output', 'copy'], nextState: '3' },\r\n            },\r\n        }),\r\n        actions: {\r\n            'o after d': function (buffer, m) {\r\n                var ret;\r\n                if ((buffer.d || '').match(/^[0-9]+$/)) {\r\n                    var tmp = buffer.d;\r\n                    buffer.d = undefined;\r\n                    ret = this['output'](buffer);\r\n                    buffer.b = tmp;\r\n                }\r\n                else {\r\n                    ret = this['output'](buffer);\r\n                }\r\n                mhchemParser.actions['o='](buffer, m);\r\n                return ret;\r\n            },\r\n            'd= kv': function (buffer, m) {\r\n                buffer.d = m;\r\n                buffer.dType = 'kv';\r\n            },\r\n            'charge or bond': function (buffer, m) {\r\n                if (buffer['beginsWithBond']) {\r\n                    /** @type {ParserOutput[]} */\r\n                    var ret = [];\r\n                    mhchemParser.concatArray(ret, this['output'](buffer));\r\n                    mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, '-'));\r\n                    return ret;\r\n                }\r\n                else {\r\n                    buffer.d = m;\r\n                }\r\n            },\r\n            '- after o/d': function (buffer, m, isAfterD) {\r\n                var c1 = mhchemParser.patterns.match_('orbital', buffer.o || '');\r\n                var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || '');\r\n                var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || '');\r\n                var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || '');\r\n                var hyphenFollows = m === '-' &&\r\n                    ((c1 && c1.remainder === '') || c2 || c3 || c4);\r\n                if (hyphenFollows &&\r\n                    !buffer.a &&\r\n                    !buffer.b &&\r\n                    !buffer.p &&\r\n                    !buffer.d &&\r\n                    !buffer.q &&\r\n                    !c1 &&\r\n                    c3) {\r\n                    buffer.o = '$' + buffer.o + '$';\r\n                }\r\n                /** @type {ParserOutput[]} */\r\n                var ret = [];\r\n                if (hyphenFollows) {\r\n                    mhchemParser.concatArray(ret, this['output'](buffer));\r\n                    ret.push({ type_: 'hyphen' });\r\n                }\r\n                else {\r\n                    c1 = mhchemParser.patterns.match_('digits', buffer.d || '');\r\n                    if (isAfterD && c1 && c1.remainder === '') {\r\n                        mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));\r\n                        mhchemParser.concatArray(ret, this['output'](buffer));\r\n                    }\r\n                    else {\r\n                        mhchemParser.concatArray(ret, this['output'](buffer));\r\n                        mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, '-'));\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            'a to o': function (buffer) {\r\n                buffer.o = buffer.a;\r\n                buffer.a = undefined;\r\n            },\r\n            'sb=true': function (buffer) {\r\n                buffer.sb = true;\r\n            },\r\n            'sb=false': function (buffer) {\r\n                buffer.sb = false;\r\n            },\r\n            'beginsWithBond=true': function (buffer) {\r\n                buffer['beginsWithBond'] = true;\r\n            },\r\n            'beginsWithBond=false': function (buffer) {\r\n                buffer['beginsWithBond'] = false;\r\n            },\r\n            'parenthesisLevel++': function (buffer) {\r\n                buffer['parenthesisLevel']++;\r\n            },\r\n            'parenthesisLevel--': function (buffer) {\r\n                buffer['parenthesisLevel']--;\r\n            },\r\n            'state of aggregation': function (buffer, m) {\r\n                return {\r\n                    type_: 'state of aggregation',\r\n                    p1: mhchemParser.go(m, 'o'),\r\n                };\r\n            },\r\n            comma: function (buffer, m) {\r\n                var a = m.replace(/\\s*$/, '');\r\n                var withSpace = a !== m;\r\n                if (withSpace && buffer['parenthesisLevel'] === 0) {\r\n                    return { type_: 'comma enumeration L', p1: a };\r\n                }\r\n                else {\r\n                    return { type_: 'comma enumeration M', p1: a };\r\n                }\r\n            },\r\n            output: function (buffer, m, entityFollows) {\r\n                // entityFollows:\r\n                //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\r\n                //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\r\n                //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\r\n                /** @type {ParserOutput | ParserOutput[]} */\r\n                var ret;\r\n                if (!buffer.r) {\r\n                    ret = [];\r\n                    if (!buffer.a &&\r\n                        !buffer.b &&\r\n                        !buffer.p &&\r\n                        !buffer.o &&\r\n                        !buffer.q &&\r\n                        !buffer.d &&\r\n                        !entityFollows) ;\r\n                    else {\r\n                        if (buffer.sb) {\r\n                            ret.push({ type_: 'entitySkip' });\r\n                        }\r\n                        if (!buffer.o &&\r\n                            !buffer.q &&\r\n                            !buffer.d &&\r\n                            !buffer.b &&\r\n                            !buffer.p &&\r\n                            entityFollows !== 2) {\r\n                            buffer.o = buffer.a;\r\n                            buffer.a = undefined;\r\n                        }\r\n                        else if (!buffer.o &&\r\n                            !buffer.q &&\r\n                            !buffer.d &&\r\n                            (buffer.b || buffer.p)) {\r\n                            buffer.o = buffer.a;\r\n                            buffer.d = buffer.b;\r\n                            buffer.q = buffer.p;\r\n                            buffer.a = buffer.b = buffer.p = undefined;\r\n                        }\r\n                        else {\r\n                            if (buffer.o &&\r\n                                buffer.dType === 'kv' &&\r\n                                mhchemParser.patterns.match_('d-oxidation$', buffer.d || '')) {\r\n                                buffer.dType = 'oxidation';\r\n                            }\r\n                            else if (buffer.o &&\r\n                                buffer.dType === 'kv' &&\r\n                                !buffer.q) {\r\n                                buffer.dType = undefined;\r\n                            }\r\n                        }\r\n                        ret.push({\r\n                            type_: 'chemfive',\r\n                            a: mhchemParser.go(buffer.a, 'a'),\r\n                            b: mhchemParser.go(buffer.b, 'bd'),\r\n                            p: mhchemParser.go(buffer.p, 'pq'),\r\n                            o: mhchemParser.go(buffer.o, 'o'),\r\n                            q: mhchemParser.go(buffer.q, 'pq'),\r\n                            d: mhchemParser.go(buffer.d, buffer.dType === 'oxidation'\r\n                                ? 'oxidation'\r\n                                : 'bd'),\r\n                            dType: buffer.dType,\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    // r\r\n                    /** @type {ParserOutput[]} */\r\n                    var rd;\r\n                    if (buffer.rdt === 'M') {\r\n                        rd = mhchemParser.go(buffer.rd, 'tex-math');\r\n                    }\r\n                    else if (buffer.rdt === 'T') {\r\n                        rd = [{ type_: 'text', p1: buffer.rd || '' }];\r\n                    }\r\n                    else {\r\n                        rd = mhchemParser.go(buffer.rd);\r\n                    }\r\n                    /** @type {ParserOutput[]} */\r\n                    var rq;\r\n                    if (buffer.rqt === 'M') {\r\n                        rq = mhchemParser.go(buffer.rq, 'tex-math');\r\n                    }\r\n                    else if (buffer.rqt === 'T') {\r\n                        rq = [{ type_: 'text', p1: buffer.rq || '' }];\r\n                    }\r\n                    else {\r\n                        rq = mhchemParser.go(buffer.rq);\r\n                    }\r\n                    ret = {\r\n                        type_: 'arrow',\r\n                        r: buffer.r,\r\n                        rd: rd,\r\n                        rq: rq,\r\n                    };\r\n                }\r\n                for (var p in buffer) {\r\n                    if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {\r\n                        delete buffer[p];\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            'oxidation-output': function (buffer, m) {\r\n                var ret = ['{'];\r\n                mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));\r\n                ret.push('}');\r\n                return ret;\r\n            },\r\n            'frac-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'frac-ce',\r\n                    p1: mhchemParser.go(m[0]),\r\n                    p2: mhchemParser.go(m[1]),\r\n                };\r\n            },\r\n            'overset-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'overset',\r\n                    p1: mhchemParser.go(m[0]),\r\n                    p2: mhchemParser.go(m[1]),\r\n                };\r\n            },\r\n            'underset-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'underset',\r\n                    p1: mhchemParser.go(m[0]),\r\n                    p2: mhchemParser.go(m[1]),\r\n                };\r\n            },\r\n            'underbrace-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'underbrace',\r\n                    p1: mhchemParser.go(m[0]),\r\n                    p2: mhchemParser.go(m[1]),\r\n                };\r\n            },\r\n            'color-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'color',\r\n                    color1: m[0],\r\n                    color2: mhchemParser.go(m[1]),\r\n                };\r\n            },\r\n            'r=': function (buffer, m) {\r\n                buffer.r = m;\r\n            },\r\n            'rdt=': function (buffer, m) {\r\n                buffer.rdt = m;\r\n            },\r\n            'rd=': function (buffer, m) {\r\n                buffer.rd = m;\r\n            },\r\n            'rqt=': function (buffer, m) {\r\n                buffer.rqt = m;\r\n            },\r\n            'rq=': function (buffer, m) {\r\n                buffer.rq = m;\r\n            },\r\n            operator: function (buffer, m, p1) {\r\n                return { type_: 'operator', kind_: p1 || m };\r\n            },\r\n        },\r\n    },\r\n    a: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': {},\r\n            },\r\n            '1/2$': {\r\n                '0': { action_: '1/2' },\r\n            },\r\n            else: {\r\n                '0': { nextState: '1', revisit: true },\r\n            },\r\n            '$(...)$': {\r\n                '*': { action_: 'tex-math tight', nextState: '1' },\r\n            },\r\n            ',': {\r\n                '*': { action_: { type_: 'insert', option: 'commaDecimal' } },\r\n            },\r\n            else2: {\r\n                '*': { action_: 'copy' },\r\n            },\r\n        }),\r\n        actions: {},\r\n    },\r\n    o: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': {},\r\n            },\r\n            '1/2$': {\r\n                '0': { action_: '1/2' },\r\n            },\r\n            else: {\r\n                '0': { nextState: '1', revisit: true },\r\n            },\r\n            letters: {\r\n                '*': { action_: 'rm' },\r\n            },\r\n            '\\\\ca': {\r\n                '*': { action_: { type_: 'insert', option: 'circa' } },\r\n            },\r\n            '\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '*': { action_: 'copy' },\r\n            },\r\n            '${(...)}$|$(...)$': {\r\n                '*': { action_: 'tex-math' },\r\n            },\r\n            '{(...)}': {\r\n                '*': { action_: '{text}' },\r\n            },\r\n            else2: {\r\n                '*': { action_: 'copy' },\r\n            },\r\n        }),\r\n        actions: {},\r\n    },\r\n    text: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': { action_: 'output' },\r\n            },\r\n            '{...}': {\r\n                '*': { action_: 'text=' },\r\n            },\r\n            '${(...)}$|$(...)$': {\r\n                '*': { action_: 'tex-math' },\r\n            },\r\n            '\\\\greek': {\r\n                '*': { action_: ['output', 'rm'] },\r\n            },\r\n            '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '*': { action_: ['output', 'copy'] },\r\n            },\r\n            else: {\r\n                '*': { action_: 'text=' },\r\n            },\r\n        }),\r\n        actions: {\r\n            output: function (buffer) {\r\n                if (buffer.text_) {\r\n                    /** @type {ParserOutput} */\r\n                    var ret = { type_: 'text', p1: buffer.text_ };\r\n                    for (var p in buffer) {\r\n                        delete buffer[p];\r\n                    }\r\n                    return ret;\r\n                }\r\n            },\r\n        },\r\n    },\r\n    pq: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': {},\r\n            },\r\n            'state of aggregation $': {\r\n                '*': { action_: 'state of aggregation' },\r\n            },\r\n            i$: {\r\n                '0': { nextState: '!f', revisit: true },\r\n            },\r\n            '(KV letters),': {\r\n                '0': { action_: 'rm', nextState: '0' },\r\n            },\r\n            formula$: {\r\n                '0': { nextState: 'f', revisit: true },\r\n            },\r\n            '1/2$': {\r\n                '0': { action_: '1/2' },\r\n            },\r\n            else: {\r\n                '0': { nextState: '!f', revisit: true },\r\n            },\r\n            '${(...)}$|$(...)$': {\r\n                '*': { action_: 'tex-math' },\r\n            },\r\n            '{(...)}': {\r\n                '*': { action_: 'text' },\r\n            },\r\n            'a-z': {\r\n                f: { action_: 'tex-math' },\r\n            },\r\n            letters: {\r\n                '*': { action_: 'rm' },\r\n            },\r\n            '-9.,9': {\r\n                '*': { action_: '9,9' },\r\n            },\r\n            ',': {\r\n                '*': {\r\n                    action_: {\r\n                        type_: 'insert+p1',\r\n                        option: 'comma enumeration S',\r\n                    },\r\n                },\r\n            },\r\n            '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\r\n                '*': { action_: 'color-output' },\r\n            },\r\n            '\\\\color{(...)}0': {\r\n                '*': { action_: 'color0-output' },\r\n            },\r\n            '\\\\ce{(...)}': {\r\n                '*': { action_: 'ce' },\r\n            },\r\n            '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '*': { action_: 'copy' },\r\n            },\r\n            else2: {\r\n                '*': { action_: 'copy' },\r\n            },\r\n        }),\r\n        actions: {\r\n            'state of aggregation': function (buffer, m) {\r\n                return {\r\n                    type_: 'state of aggregation subscript',\r\n                    p1: mhchemParser.go(m, 'o'),\r\n                };\r\n            },\r\n            'color-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'color',\r\n                    color1: m[0],\r\n                    color2: mhchemParser.go(m[1], 'pq'),\r\n                };\r\n            },\r\n        },\r\n    },\r\n    bd: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': {},\r\n            },\r\n            x$: {\r\n                '0': { nextState: '!f', revisit: true },\r\n            },\r\n            formula$: {\r\n                '0': { nextState: 'f', revisit: true },\r\n            },\r\n            else: {\r\n                '0': { nextState: '!f', revisit: true },\r\n            },\r\n            '-9.,9 no missing 0': {\r\n                '*': { action_: '9,9' },\r\n            },\r\n            '.': {\r\n                '*': { action_: { type_: 'insert', option: 'electron dot' } },\r\n            },\r\n            'a-z': {\r\n                f: { action_: 'tex-math' },\r\n            },\r\n            x: {\r\n                '*': { action_: { type_: 'insert', option: 'KV x' } },\r\n            },\r\n            letters: {\r\n                '*': { action_: 'rm' },\r\n            },\r\n            \"'\": {\r\n                '*': { action_: { type_: 'insert', option: 'prime' } },\r\n            },\r\n            '${(...)}$|$(...)$': {\r\n                '*': { action_: 'tex-math' },\r\n            },\r\n            '{(...)}': {\r\n                '*': { action_: 'text' },\r\n            },\r\n            '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\r\n                '*': { action_: 'color-output' },\r\n            },\r\n            '\\\\color{(...)}0': {\r\n                '*': { action_: 'color0-output' },\r\n            },\r\n            '\\\\ce{(...)}': {\r\n                '*': { action_: 'ce' },\r\n            },\r\n            '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '*': { action_: 'copy' },\r\n            },\r\n            else2: {\r\n                '*': { action_: 'copy' },\r\n            },\r\n        }),\r\n        actions: {\r\n            'color-output': function (buffer, m) {\r\n                return {\r\n                    type_: 'color',\r\n                    color1: m[0],\r\n                    color2: mhchemParser.go(m[1], 'bd'),\r\n                };\r\n            },\r\n        },\r\n    },\r\n    oxidation: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': {},\r\n            },\r\n            'roman numeral': {\r\n                '*': { action_: 'roman-numeral' },\r\n            },\r\n            '${(...)}$|$(...)$': {\r\n                '*': { action_: 'tex-math' },\r\n            },\r\n            else: {\r\n                '*': { action_: 'copy' },\r\n            },\r\n        }),\r\n        actions: {\r\n            'roman-numeral': function (buffer, m) {\r\n                return { type_: 'roman numeral', p1: m || '' };\r\n            },\r\n        },\r\n    },\r\n    'tex-math': {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': { action_: 'output' },\r\n            },\r\n            '\\\\ce{(...)}': {\r\n                '*': { action_: ['output', 'ce'] },\r\n            },\r\n            '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '*': { action_: 'o=' },\r\n            },\r\n            else: {\r\n                '*': { action_: 'o=' },\r\n            },\r\n        }),\r\n        actions: {\r\n            output: function (buffer) {\r\n                if (buffer.o) {\r\n                    /** @type {ParserOutput} */\r\n                    var ret = { type_: 'tex-math', p1: buffer.o };\r\n                    for (var p in buffer) {\r\n                        delete buffer[p];\r\n                    }\r\n                    return ret;\r\n                }\r\n            },\r\n        },\r\n    },\r\n    'tex-math tight': {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': { action_: 'output' },\r\n            },\r\n            '\\\\ce{(...)}': {\r\n                '*': { action_: ['output', 'ce'] },\r\n            },\r\n            '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\r\n                '*': { action_: 'o=' },\r\n            },\r\n            '-|+': {\r\n                '*': { action_: 'tight operator' },\r\n            },\r\n            else: {\r\n                '*': { action_: 'o=' },\r\n            },\r\n        }),\r\n        actions: {\r\n            'tight operator': function (buffer, m) {\r\n                buffer.o = (buffer.o || '') + '{' + m + '}';\r\n            },\r\n            output: function (buffer) {\r\n                if (buffer.o) {\r\n                    /** @type {ParserOutput} */\r\n                    var ret = { type_: 'tex-math', p1: buffer.o };\r\n                    for (var p in buffer) {\r\n                        delete buffer[p];\r\n                    }\r\n                    return ret;\r\n                }\r\n            },\r\n        },\r\n    },\r\n    '9,9': {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': {},\r\n            },\r\n            ',': {\r\n                '*': { action_: 'comma' },\r\n            },\r\n            else: {\r\n                '*': { action_: 'copy' },\r\n            },\r\n        }),\r\n        actions: {\r\n            comma: function () {\r\n                return { type_: 'commaDecimal' };\r\n            },\r\n        },\r\n    },\r\n    //#endregion\r\n    //\r\n    // \\pu state machines\r\n    //\r\n    //#region pu\r\n    pu: {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': { action_: 'output' },\r\n            },\r\n            space$: {\r\n                '*': { action_: ['output', 'space'] },\r\n            },\r\n            '{[(|)]}': {\r\n                '0|a': { action_: 'copy' },\r\n            },\r\n            '(-)(9)^(-9)': {\r\n                '0': { action_: 'number^', nextState: 'a' },\r\n            },\r\n            '(-)(9.,9)(e)(99)': {\r\n                '0': { action_: 'enumber', nextState: 'a' },\r\n            },\r\n            space: {\r\n                '0|a': {},\r\n            },\r\n            'pm-operator': {\r\n                '0|a': {\r\n                    action_: { type_: 'operator', option: '\\\\pm' },\r\n                    nextState: '0',\r\n                },\r\n            },\r\n            operator: {\r\n                '0|a': { action_: 'copy', nextState: '0' },\r\n            },\r\n            '//': {\r\n                d: { action_: 'o=', nextState: '/' },\r\n            },\r\n            '/': {\r\n                d: { action_: 'o=', nextState: '/' },\r\n            },\r\n            '{...}|else': {\r\n                '0|d': { action_: 'd=', nextState: 'd' },\r\n                a: { action_: ['space', 'd='], nextState: 'd' },\r\n                '/|q': { action_: 'q=', nextState: 'q' },\r\n            },\r\n        }),\r\n        actions: {\r\n            enumber: function (buffer, m) {\r\n                /** @type {ParserOutput[]} */\r\n                var ret = [];\r\n                if (m[0] === '+-' || m[0] === '+/-') {\r\n                    ret.push('\\\\pm ');\r\n                }\r\n                else if (m[0]) {\r\n                    ret.push(m[0]);\r\n                }\r\n                if (m[1]) {\r\n                    mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\r\n                    if (m[2]) {\r\n                        if (m[2].match(/[,.]/)) {\r\n                            mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));\r\n                        }\r\n                        else {\r\n                            ret.push(m[2]);\r\n                        }\r\n                    }\r\n                    m[3] = m[4] || m[3];\r\n                    if (m[3]) {\r\n                        m[3] = m[3].trim();\r\n                        if (m[3] === 'e' || m[3].substr(0, 1) === '*') {\r\n                            ret.push({ type_: 'cdot' });\r\n                        }\r\n                        else {\r\n                            ret.push({ type_: 'times' });\r\n                        }\r\n                    }\r\n                }\r\n                if (m[3]) {\r\n                    ret.push('10^{' + m[5] + '}');\r\n                }\r\n                return ret;\r\n            },\r\n            'number^': function (buffer, m) {\r\n                /** @type {ParserOutput[]} */\r\n                var ret = [];\r\n                if (m[0] === '+-' || m[0] === '+/-') {\r\n                    ret.push('\\\\pm ');\r\n                }\r\n                else if (m[0]) {\r\n                    ret.push(m[0]);\r\n                }\r\n                mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\r\n                ret.push('^{' + m[2] + '}');\r\n                return ret;\r\n            },\r\n            operator: function (buffer, m, p1) {\r\n                return { type_: 'operator', kind_: p1 || m };\r\n            },\r\n            space: function () {\r\n                return { type_: 'pu-space-1' };\r\n            },\r\n            output: function (buffer) {\r\n                /** @type {ParserOutput | ParserOutput[]} */\r\n                var ret;\r\n                var md = mhchemParser.patterns.match_('{(...)}', buffer.d || '');\r\n                if (md && md.remainder === '') {\r\n                    buffer.d = md.match_;\r\n                }\r\n                var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || '');\r\n                if (mq && mq.remainder === '') {\r\n                    buffer.q = mq.match_;\r\n                }\r\n                if (buffer.d) {\r\n                    buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, '{}^{\\\\circ}C');\r\n                    buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, '{}^{\\\\circ}F');\r\n                }\r\n                if (buffer.q) {\r\n                    // fraction\r\n                    buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, '{}^{\\\\circ}C');\r\n                    buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, '{}^{\\\\circ}F');\r\n                    var b5 = {\r\n                        d: mhchemParser.go(buffer.d, 'pu'),\r\n                        q: mhchemParser.go(buffer.q, 'pu'),\r\n                    };\r\n                    if (buffer.o === '//') {\r\n                        ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };\r\n                    }\r\n                    else {\r\n                        ret = b5.d;\r\n                        if (b5.d.length > 1 || b5.q.length > 1) {\r\n                            ret.push({ type_: ' / ' });\r\n                        }\r\n                        else {\r\n                            ret.push({ type_: '/' });\r\n                        }\r\n                        mhchemParser.concatArray(ret, b5.q);\r\n                    }\r\n                }\r\n                else {\r\n                    // no fraction\r\n                    ret = mhchemParser.go(buffer.d, 'pu-2');\r\n                }\r\n                for (var p in buffer) {\r\n                    delete buffer[p];\r\n                }\r\n                return ret;\r\n            },\r\n        },\r\n    },\r\n    'pu-2': {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '*': { action_: 'output' },\r\n            },\r\n            '*': {\r\n                '*': { action_: ['output', 'cdot'], nextState: '0' },\r\n            },\r\n            '\\\\x': {\r\n                '*': { action_: 'rm=' },\r\n            },\r\n            space: {\r\n                '*': { action_: ['output', 'space'], nextState: '0' },\r\n            },\r\n            '^{(...)}|^(-1)': {\r\n                '1': { action_: '^(-1)' },\r\n            },\r\n            '-9.,9': {\r\n                '0': { action_: 'rm=', nextState: '0' },\r\n                '1': { action_: '^(-1)', nextState: '0' },\r\n            },\r\n            '{...}|else': {\r\n                '*': { action_: 'rm=', nextState: '1' },\r\n            },\r\n        }),\r\n        actions: {\r\n            cdot: function () {\r\n                return { type_: 'tight cdot' };\r\n            },\r\n            '^(-1)': function (buffer, m) {\r\n                buffer.rm += '^{' + m + '}';\r\n            },\r\n            space: function () {\r\n                return { type_: 'pu-space-2' };\r\n            },\r\n            output: function (buffer) {\r\n                /** @type {ParserOutput | ParserOutput[]} */\r\n                var ret = [];\r\n                if (buffer.rm) {\r\n                    var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || '');\r\n                    if (mrm && mrm.remainder === '') {\r\n                        ret = mhchemParser.go(mrm.match_, 'pu');\r\n                    }\r\n                    else {\r\n                        ret = { type_: 'rm', p1: buffer.rm };\r\n                    }\r\n                }\r\n                for (var p in buffer) {\r\n                    delete buffer[p];\r\n                }\r\n                return ret;\r\n            },\r\n        },\r\n    },\r\n    'pu-9,9': {\r\n        transitions: mhchemParser.createTransitions({\r\n            empty: {\r\n                '0': { action_: 'output-0' },\r\n                o: { action_: 'output-o' },\r\n            },\r\n            ',': {\r\n                '0': { action_: ['output-0', 'comma'], nextState: 'o' },\r\n            },\r\n            '.': {\r\n                '0': { action_: ['output-0', 'copy'], nextState: 'o' },\r\n            },\r\n            else: {\r\n                '*': { action_: 'text=' },\r\n            },\r\n        }),\r\n        actions: {\r\n            comma: function () {\r\n                return { type_: 'commaDecimal' };\r\n            },\r\n            'output-0': function (buffer) {\r\n                /** @type {ParserOutput[]} */\r\n                var ret = [];\r\n                buffer.text_ = buffer.text_ || '';\r\n                if (buffer.text_.length > 4) {\r\n                    var a = buffer.text_.length % 3;\r\n                    if (a === 0) {\r\n                        a = 3;\r\n                    }\r\n                    for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\r\n                        ret.push(buffer.text_.substr(i, 3));\r\n                        ret.push({ type_: '1000 separator' });\r\n                    }\r\n                    ret.push(buffer.text_.substr(0, a));\r\n                    ret.reverse();\r\n                }\r\n                else {\r\n                    ret.push(buffer.text_);\r\n                }\r\n                for (var p in buffer) {\r\n                    delete buffer[p];\r\n                }\r\n                return ret;\r\n            },\r\n            'output-o': function (buffer) {\r\n                /** @type {ParserOutput[]} */\r\n                var ret = [];\r\n                buffer.text_ = buffer.text_ || '';\r\n                if (buffer.text_.length > 4) {\r\n                    var a = buffer.text_.length - 3;\r\n                    for (var i = 0; i < a; i += 3) {\r\n                        ret.push(buffer.text_.substr(i, 3));\r\n                        ret.push({ type_: '1000 separator' });\r\n                    }\r\n                    ret.push(buffer.text_.substr(i));\r\n                }\r\n                else {\r\n                    ret.push(buffer.text_);\r\n                }\r\n                for (var p in buffer) {\r\n                    delete buffer[p];\r\n                }\r\n                return ret;\r\n            },\r\n        },\r\n    },\r\n};\r\n//\r\n// texify: Take MhchemParser output and convert it to TeX\r\n//\r\n/** @type {Texify} */\r\nvar texify = {\r\n    go: function (input, isInner) {\r\n        // (recursive, max 4 levels)\r\n        if (!input) {\r\n            return '';\r\n        }\r\n        var res = '';\r\n        var cee = false;\r\n        for (var i = 0; i < input.length; i++) {\r\n            var inputi = input[i];\r\n            if (typeof inputi === 'string') {\r\n                res += inputi;\r\n            }\r\n            else {\r\n                res += texify._go2(inputi);\r\n                if (inputi.type_ === '1st-level escape') {\r\n                    cee = true;\r\n                }\r\n            }\r\n        }\r\n        if (!isInner && !cee && res) {\r\n            res = '{' + res + '}';\r\n        }\r\n        return res;\r\n    },\r\n    _goInner: function (input) {\r\n        if (!input) {\r\n            return input;\r\n        }\r\n        return texify.go(input, true);\r\n    },\r\n    _go2: function (buf) {\r\n        /** @type {undefined | string} */\r\n        var res;\r\n        switch (buf.type_) {\r\n            case 'chemfive':\r\n                res = '';\r\n                var b5 = {\r\n                    a: texify._goInner(buf.a),\r\n                    b: texify._goInner(buf.b),\r\n                    p: texify._goInner(buf.p),\r\n                    o: texify._goInner(buf.o),\r\n                    q: texify._goInner(buf.q),\r\n                    d: texify._goInner(buf.d),\r\n                };\r\n                //\r\n                // a\r\n                //\r\n                if (b5.a) {\r\n                    if (b5.a.match(/^[+\\-]/)) {\r\n                        b5.a = '{' + b5.a + '}';\r\n                    }\r\n                    res += b5.a + '\\\\,';\r\n                }\r\n                //\r\n                // b and p\r\n                //\r\n                if (b5.b || b5.p) {\r\n                    res += '{\\\\vphantom{X}}';\r\n                    res +=\r\n                        '^{\\\\hphantom{' +\r\n                            (b5.b || '') +\r\n                            '}}_{\\\\hphantom{' +\r\n                            (b5.p || '') +\r\n                            '}}';\r\n                    res += '{\\\\vphantom{X}}';\r\n                    res +=\r\n                        '^{\\\\smash[t]{\\\\vphantom{2}}\\\\mathllap{' +\r\n                            (b5.b || '') +\r\n                            '}}';\r\n                    res +=\r\n                        '_{\\\\vphantom{2}\\\\mathllap{\\\\smash[t]{' +\r\n                            (b5.p || '') +\r\n                            '}}}';\r\n                }\r\n                //\r\n                // o\r\n                //\r\n                if (b5.o) {\r\n                    if (b5.o.match(/^[+\\-]/)) {\r\n                        b5.o = '{' + b5.o + '}';\r\n                    }\r\n                    res += b5.o;\r\n                }\r\n                //\r\n                // q and d\r\n                //\r\n                if (buf.dType === 'kv') {\r\n                    if (b5.d || b5.q) {\r\n                        res += '{\\\\vphantom{X}}';\r\n                    }\r\n                    if (b5.d) {\r\n                        res += '^{' + b5.d + '}';\r\n                    }\r\n                    if (b5.q) {\r\n                        res += '_{\\\\smash[t]{' + b5.q + '}}';\r\n                    }\r\n                }\r\n                else if (buf.dType === 'oxidation') {\r\n                    if (b5.d) {\r\n                        res += '{\\\\vphantom{X}}';\r\n                        res += '^{' + b5.d + '}';\r\n                    }\r\n                    if (b5.q) {\r\n                        res += '{\\\\vphantom{X}}';\r\n                        res += '_{\\\\smash[t]{' + b5.q + '}}';\r\n                    }\r\n                }\r\n                else {\r\n                    if (b5.q) {\r\n                        res += '{\\\\vphantom{X}}';\r\n                        res += '_{\\\\smash[t]{' + b5.q + '}}';\r\n                    }\r\n                    if (b5.d) {\r\n                        res += '{\\\\vphantom{X}}';\r\n                        res += '^{' + b5.d + '}';\r\n                    }\r\n                }\r\n                break;\r\n            case 'rm':\r\n                res = '\\\\mathrm{' + buf.p1 + '}';\r\n                break;\r\n            case 'text':\r\n                if (buf.p1.match(/[\\^_]/)) {\r\n                    buf.p1 = buf.p1.replace(' ', '~').replace('-', '\\\\text{-}');\r\n                    res = '\\\\mathrm{' + buf.p1 + '}';\r\n                }\r\n                else {\r\n                    res = '\\\\text{' + buf.p1 + '}';\r\n                }\r\n                break;\r\n            case 'roman numeral':\r\n                res = '\\\\mathrm{' + buf.p1 + '}';\r\n                break;\r\n            case 'state of aggregation':\r\n                res = '\\\\mskip2mu ' + texify._goInner(buf.p1);\r\n                break;\r\n            case 'state of aggregation subscript':\r\n                res = '\\\\mskip1mu ' + texify._goInner(buf.p1);\r\n                break;\r\n            case 'bond':\r\n                res = texify._getBond(buf.kind_);\r\n                if (!res) {\r\n                    throw [\r\n                        'MhchemErrorBond',\r\n                        'mhchem Error. Unknown bond type (' + buf.kind_ + ')',\r\n                    ];\r\n                }\r\n                break;\r\n            case 'frac':\r\n                var c = '\\\\frac{' + buf.p1 + '}{' + buf.p2 + '}';\r\n                res =\r\n                    '\\\\mathchoice{\\\\textstyle' +\r\n                        c +\r\n                        '}{' +\r\n                        c +\r\n                        '}{' +\r\n                        c +\r\n                        '}{' +\r\n                        c +\r\n                        '}';\r\n                break;\r\n            case 'pu-frac':\r\n                var d = '\\\\frac{' +\r\n                    texify._goInner(buf.p1) +\r\n                    '}{' +\r\n                    texify._goInner(buf.p2) +\r\n                    '}';\r\n                res =\r\n                    '\\\\mathchoice{\\\\textstyle' +\r\n                        d +\r\n                        '}{' +\r\n                        d +\r\n                        '}{' +\r\n                        d +\r\n                        '}{' +\r\n                        d +\r\n                        '}';\r\n                break;\r\n            case 'tex-math':\r\n                res = buf.p1 + ' ';\r\n                break;\r\n            case 'frac-ce':\r\n                res =\r\n                    '\\\\frac{' +\r\n                        texify._goInner(buf.p1) +\r\n                        '}{' +\r\n                        texify._goInner(buf.p2) +\r\n                        '}';\r\n                break;\r\n            case 'overset':\r\n                res =\r\n                    '\\\\overset{' +\r\n                        texify._goInner(buf.p1) +\r\n                        '}{' +\r\n                        texify._goInner(buf.p2) +\r\n                        '}';\r\n                break;\r\n            case 'underset':\r\n                res =\r\n                    '\\\\underset{' +\r\n                        texify._goInner(buf.p1) +\r\n                        '}{' +\r\n                        texify._goInner(buf.p2) +\r\n                        '}';\r\n                break;\r\n            case 'underbrace':\r\n                res =\r\n                    '\\\\underbrace{' +\r\n                        texify._goInner(buf.p1) +\r\n                        '}_{' +\r\n                        texify._goInner(buf.p2) +\r\n                        '}';\r\n                break;\r\n            case 'color':\r\n                res =\r\n                    '{\\\\color{' +\r\n                        buf.color1 +\r\n                        '}{' +\r\n                        texify._goInner(buf.color2) +\r\n                        '}}';\r\n                break;\r\n            case 'color0':\r\n                res = '\\\\color{' + buf.color + '}';\r\n                break;\r\n            case 'arrow':\r\n                var b6 = {\r\n                    rd: texify._goInner(buf.rd),\r\n                    rq: texify._goInner(buf.rq),\r\n                };\r\n                var arrow = '\\\\x' + texify._getArrow(buf.r);\r\n                if (b6.rq) {\r\n                    arrow += '[{' + b6.rq + '}]';\r\n                }\r\n                if (b6.rd) {\r\n                    arrow += '{' + b6.rd + '}';\r\n                }\r\n                else {\r\n                    arrow += '{}';\r\n                }\r\n                res = arrow;\r\n                break;\r\n            case 'operator':\r\n                res = texify._getOperator(buf.kind_);\r\n                break;\r\n            case '1st-level escape':\r\n                res = buf.p1 + ' '; // &, \\\\\\\\, \\\\hlin\r\n                break;\r\n            case 'space':\r\n                res = ' ';\r\n                break;\r\n            case 'entitySkip':\r\n                res = '~';\r\n                break;\r\n            case 'pu-space-1':\r\n                res = '~';\r\n                break;\r\n            case 'pu-space-2':\r\n                res = '\\\\mkern3mu ';\r\n                break;\r\n            case '1000 separator':\r\n                res = '\\\\mkern2mu ';\r\n                break;\r\n            case 'commaDecimal':\r\n                res = '{,}';\r\n                break;\r\n            case 'comma enumeration L':\r\n                res = '{' + buf.p1 + '}\\\\mkern6mu ';\r\n                break;\r\n            case 'comma enumeration M':\r\n                res = '{' + buf.p1 + '}\\\\mkern3mu ';\r\n                break;\r\n            case 'comma enumeration S':\r\n                res = '{' + buf.p1 + '}\\\\mkern1mu ';\r\n                break;\r\n            case 'hyphen':\r\n                res = '\\\\text{-}';\r\n                break;\r\n            case 'addition compound':\r\n                res = '\\\\,{\\\\cdot}\\\\,';\r\n                break;\r\n            case 'electron dot':\r\n                res = '\\\\mkern1mu \\\\bullet\\\\mkern1mu ';\r\n                break;\r\n            case 'KV x':\r\n                res = '{\\\\times}';\r\n                break;\r\n            case 'prime':\r\n                res = '\\\\prime ';\r\n                break;\r\n            case 'cdot':\r\n                res = '\\\\cdot ';\r\n                break;\r\n            case 'tight cdot':\r\n                res = '\\\\mkern1mu{\\\\cdot}\\\\mkern1mu ';\r\n                break;\r\n            case 'times':\r\n                res = '\\\\times ';\r\n                break;\r\n            case 'circa':\r\n                res = '{\\\\sim}';\r\n                break;\r\n            case '^':\r\n                res = 'uparrow';\r\n                break;\r\n            case 'v':\r\n                res = 'downarrow';\r\n                break;\r\n            case 'ellipsis':\r\n                res = '\\\\ldots ';\r\n                break;\r\n            case '/':\r\n                res = '/';\r\n                break;\r\n            case ' / ':\r\n                res = '\\\\,/\\\\,';\r\n                break;\r\n            default:\r\n                throw ['MhchemBugT', 'mhchem bug T. Please report.']; // Missing texify rule or unknown MhchemParser output\r\n        }\r\n        return res;\r\n    },\r\n    _getArrow: function (a) {\r\n        switch (a) {\r\n            case '->':\r\n                return 'rightarrow';\r\n            case '\\u2192':\r\n                return 'rightarrow';\r\n            case '\\u27F6':\r\n                return 'rightarrow';\r\n            case '<-':\r\n                return 'leftarrow';\r\n            case '<->':\r\n                return 'leftrightarrow';\r\n            case '<-->':\r\n                return 'rightleftarrows';\r\n            case '<=>':\r\n                return 'rightleftharpoons';\r\n            case '\\u21CC':\r\n                return 'rightleftharpoons';\r\n            case '<=>>':\r\n                return 'rightequilibrium';\r\n            case '<<=>':\r\n                return 'leftequilibrium';\r\n            default:\r\n                throw ['MhchemBugT', 'mhchem bug T. Please report.'];\r\n        }\r\n    },\r\n    _getBond: function (a) {\r\n        switch (a) {\r\n            case '-':\r\n                return '{-}';\r\n            case '1':\r\n                return '{-}';\r\n            case '=':\r\n                return '{=}';\r\n            case '2':\r\n                return '{=}';\r\n            case '#':\r\n                return '{\\\\equiv}';\r\n            case '3':\r\n                return '{\\\\equiv}';\r\n            case '~':\r\n                return '{\\\\tripledash}';\r\n            case '~-':\r\n                return '{\\\\mathrlap{\\\\raisebox{-.1em}{$-$}}\\\\raisebox{.1em}{$\\\\tripledash$}}';\r\n            case '~=':\r\n                return '{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}';\r\n            case '~--':\r\n                return '{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$\\\\tripledash$}}-}';\r\n            case '-~-':\r\n                return '{\\\\mathrlap{\\\\raisebox{-.2em}{$-$}}\\\\mathrlap{\\\\raisebox{.2em}{$-$}}\\\\tripledash}';\r\n            case '...':\r\n                return '{{\\\\cdot}{\\\\cdot}{\\\\cdot}}';\r\n            case '....':\r\n                return '{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}';\r\n            case '->':\r\n                return '{\\\\rightarrow}';\r\n            case '<-':\r\n                return '{\\\\leftarrow}';\r\n            case '<':\r\n                return '{<}';\r\n            case '>':\r\n                return '{>}';\r\n            default:\r\n                throw ['MhchemBugT', 'mhchem bug T. Please report.'];\r\n        }\r\n    },\r\n    _getOperator: function (a) {\r\n        switch (a) {\r\n            case '+':\r\n                return ' {}+{} ';\r\n            case '-':\r\n                return ' {}-{} ';\r\n            case '=':\r\n                return ' {}={} ';\r\n            case '<':\r\n                return ' {}<{} ';\r\n            case '>':\r\n                return ' {}>{} ';\r\n            case '<<':\r\n                return ' {}\\\\ll{} ';\r\n            case '>>':\r\n                return ' {}\\\\gg{} ';\r\n            case '\\\\pm':\r\n                return ' {}\\\\pm{} ';\r\n            case '\\\\approx':\r\n                return ' {}\\\\approx{} ';\r\n            case '$\\\\approx$':\r\n                return ' {}\\\\approx{} ';\r\n            case 'v':\r\n                return ' \\\\downarrow{} ';\r\n            case '(v)':\r\n                return ' \\\\downarrow{} ';\r\n            case '^':\r\n                return ' \\\\uparrow{} ';\r\n            case '(^)':\r\n                return ' \\\\uparrow{} ';\r\n            default:\r\n                throw ['MhchemBugT', 'mhchem bug T. Please report.'];\r\n        }\r\n    },\r\n};\n\n/**\r\n * These shortcut strings are replaced with the corresponding LaTeX expression\r\n * without requiring an escape sequence or command.\r\n */\r\nconst INLINE_SHORTCUTS = {\r\n    // Primes\r\n    \"''\": { mode: 'math', value: '^{\\\\doubleprime}' },\r\n    // Greek letters\r\n    alpha: '\\\\alpha',\r\n    delta: '\\\\delta',\r\n    Delta: '\\\\Delta',\r\n    pi: { mode: 'math', value: '\\\\pi' },\r\n    'pi ': { mode: 'text', value: '\\\\pi ' },\r\n    Pi: { mode: 'math', value: '\\\\Pi' },\r\n    theta: '\\\\theta',\r\n    Theta: '\\\\Theta',\r\n    // Letter-like\r\n    ii: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\imaginaryI',\r\n    },\r\n    jj: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\imaginaryJ',\r\n    },\r\n    ee: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\exponentialE',\r\n    },\r\n    nabla: { mode: 'math', value: '\\\\nabla' },\r\n    grad: { mode: 'math', value: '\\\\nabla' },\r\n    del: { mode: 'math', value: '\\\\partial' },\r\n    '\\u221e': '\\\\infty',\r\n    // '&infin;': '\\\\infty',\r\n    // '&#8734;': '\\\\infty',\r\n    oo: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+frac+surd+binop+relop+punct+array+openfence+closefence+space',\r\n        value: '\\\\infty',\r\n    },\r\n    // Big operators\r\n    '∑': { mode: 'math', value: '\\\\sum' },\r\n    sum: { mode: 'math', value: '\\\\sum_{#?}^{#?}' },\r\n    prod: { mode: 'math', value: '\\\\prod_{#?}^{#?}' },\r\n    sqrt: { mode: 'math', value: '\\\\sqrt{#?}' },\r\n    // '∫':                    '\\\\int',             // There's a alt-B command for this\r\n    '∆': { mode: 'math', value: '\\\\differentialD' },\r\n    '∂': { mode: 'math', value: '\\\\differentialD' },\r\n    // Functions\r\n    arcsin: { mode: 'math', value: '\\\\arcsin' },\r\n    arccos: { mode: 'math', value: '\\\\arccos' },\r\n    arctan: { mode: 'math', value: '\\\\arctan' },\r\n    sin: { mode: 'math', value: '\\\\sin' },\r\n    sinh: { mode: 'math', value: '\\\\sinh' },\r\n    cos: { mode: 'math', value: '\\\\cos' },\r\n    cosh: { mode: 'math', value: '\\\\cosh' },\r\n    tan: { mode: 'math', value: '\\\\tan' },\r\n    tanh: { mode: 'math', value: '\\\\tanh' },\r\n    sec: { mode: 'math', value: '\\\\sec' },\r\n    csc: { mode: 'math', value: '\\\\csc' },\r\n    cot: { mode: 'math', value: '\\\\cot' },\r\n    log: { mode: 'math', value: '\\\\log' },\r\n    ln: { mode: 'math', value: '\\\\ln' },\r\n    exp: { mode: 'math', value: '\\\\exp' },\r\n    lim: { mode: 'math', value: '\\\\lim_{#?}' },\r\n    // Differentials\r\n    // According to ISO31/XI (ISO 80000-2), differentials should be upright\r\n    dx: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\differentialD x',\r\n    },\r\n    dy: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\differentialD y',\r\n    },\r\n    dt: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\differentialD t',\r\n    },\r\n    // Logic\r\n    AA: { mode: 'math', value: '\\\\forall' },\r\n    EE: { mode: 'math', value: '\\\\exists' },\r\n    '!EE': { mode: 'math', value: '\\\\nexists' },\r\n    '&&': { mode: 'math', value: '\\\\land' },\r\n    // The shortcut for the greek letter \"xi\" is interfering with \"x in\"\r\n    xin: {\r\n        mode: 'math',\r\n        after: 'nothing+text+relop+punct+openfence+space',\r\n        value: 'x \\\\in',\r\n    },\r\n    in: {\r\n        mode: 'math',\r\n        after: 'nothing+letter+closefence',\r\n        value: '\\\\in',\r\n    },\r\n    '!in': { mode: 'math', value: '\\\\notin' },\r\n    // Sets\r\n    NN: '\\\\N',\r\n    ZZ: '\\\\Z',\r\n    QQ: '\\\\Q',\r\n    RR: '\\\\R',\r\n    CC: '\\\\C',\r\n    PP: '\\\\P',\r\n    // Operators\r\n    xx: { mode: 'math', value: '\\\\times' },\r\n    '+-': { mode: 'math', value: '\\\\pm' },\r\n    // Relational operators\r\n    '!=': { mode: 'math', value: '\\\\ne' },\r\n    '>=': { mode: 'math', value: '\\\\ge' },\r\n    '<=': { mode: 'math', value: '\\\\le' },\r\n    '<<': { mode: 'math', value: '\\\\ll' },\r\n    '>>': { mode: 'math', value: '\\\\gg' },\r\n    '~~': { mode: 'math', value: '\\\\approx' },\r\n    // More operators\r\n    '≈': { mode: 'math', value: '\\\\approx' },\r\n    '?=': { mode: 'math', value: '\\\\questeq' },\r\n    '÷': { mode: 'math', value: '\\\\div' },\r\n    '¬': { mode: 'math', value: '\\\\neg' },\r\n    ':=': { mode: 'math', value: '\\\\coloneq' },\r\n    '::': { mode: 'math', value: '\\\\Colon' },\r\n    // Fences\r\n    '(:': { mode: 'math', value: '\\\\langle' },\r\n    ':)': { mode: 'math', value: '\\\\rangle' },\r\n    // More Greek letters\r\n    beta: '\\\\beta',\r\n    chi: '\\\\chi',\r\n    epsilon: '\\\\epsilon',\r\n    varepsilon: '\\\\varepsilon',\r\n    eta: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\eta',\r\n    },\r\n    'eta ': {\r\n        mode: 'text',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\eta ',\r\n    },\r\n    gamma: '\\\\gamma',\r\n    Gamma: '\\\\Gamma',\r\n    iota: '\\\\iota',\r\n    kappa: '\\\\kappa',\r\n    lambda: '\\\\lambda',\r\n    Lambda: '\\\\Lambda',\r\n    mu: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\mu',\r\n    },\r\n    'mu ': {\r\n        mode: 'text',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\mu ',\r\n    },\r\n    nu: {\r\n        mode: 'math',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\nu',\r\n    },\r\n    'nu ': {\r\n        mode: 'text',\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\nu ',\r\n    },\r\n    µ: '\\\\mu',\r\n    phi: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\phi',\r\n    },\r\n    Phi: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\Phi',\r\n    },\r\n    varphi: '\\\\varphi',\r\n    psi: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\psi',\r\n    },\r\n    Psi: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\Psi',\r\n    },\r\n    rho: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\rho',\r\n    },\r\n    sigma: '\\\\sigma',\r\n    Sigma: '\\\\Sigma',\r\n    tau: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\tau',\r\n    },\r\n    vartheta: '\\\\vartheta',\r\n    upsilon: '\\\\upsilon',\r\n    xi: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\xi',\r\n    },\r\n    Xi: {\r\n        after: 'nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text',\r\n        value: '\\\\Xi',\r\n    },\r\n    zeta: '\\\\zeta',\r\n    omega: '\\\\omega',\r\n    Omega: '\\\\Omega',\r\n    Ω: '\\\\omega',\r\n    // More Logic\r\n    forall: { mode: 'math', value: '\\\\forall' },\r\n    exists: {\r\n        mode: 'math',\r\n        value: '\\\\exists',\r\n    },\r\n    '!exists': {\r\n        mode: 'math',\r\n        value: '\\\\nexists',\r\n    },\r\n    ':.': {\r\n        mode: 'math',\r\n        value: '\\\\therefore',\r\n    },\r\n    // MORE FUNCTIONS\r\n    // 'arg': '\\\\arg',\r\n    liminf: '\\\\operatorname*{lim~inf}_{#?}',\r\n    limsup: '\\\\operatorname*{lim~sup}_{#?}',\r\n    argmin: '\\\\operatorname*{arg~min}_{#?}',\r\n    argmax: '\\\\operatorname*{arg~max}_{#?}',\r\n    det: '\\\\det',\r\n    mod: {\r\n        mode: 'math',\r\n        value: '\\\\mod',\r\n    },\r\n    max: {\r\n        mode: 'math',\r\n        value: '\\\\max',\r\n    },\r\n    min: {\r\n        mode: 'math',\r\n        value: '\\\\min',\r\n    },\r\n    erf: '\\\\operatorname{erf}',\r\n    erfc: '\\\\operatorname{erfc}',\r\n    bessel: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{bessel}',\r\n    },\r\n    mean: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{mean}',\r\n    },\r\n    median: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{median}',\r\n    },\r\n    fft: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{fft}',\r\n    },\r\n    lcm: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{lcm}',\r\n    },\r\n    gcd: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{gcd}',\r\n    },\r\n    randomReal: '\\\\operatorname{randomReal}',\r\n    randomInteger: '\\\\operatorname{randomInteger}',\r\n    Re: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{Re}',\r\n    },\r\n    Im: {\r\n        mode: 'math',\r\n        value: '\\\\operatorname{Im}',\r\n    },\r\n    // UNITS\r\n    mm: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{mm}',\r\n    },\r\n    cm: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{cm}',\r\n    },\r\n    km: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{km}',\r\n    },\r\n    kg: {\r\n        mode: 'math',\r\n        after: 'nothing+digit',\r\n        value: '\\\\operatorname{kg}',\r\n    },\r\n    // '||':                   '\\\\lor',\r\n    '...': '\\\\ldots',\r\n    '+...': '+\\\\cdots',\r\n    '-...': '-\\\\cdots',\r\n    '->...': '\\\\to\\\\cdots',\r\n    '->': '\\\\to',\r\n    '|->': '\\\\mapsto',\r\n    '-->': '\\\\longrightarrow',\r\n    //    '<-':                   '\\\\leftarrow',\r\n    '<--': '\\\\longleftarrow',\r\n    '=>': '\\\\Rightarrow',\r\n    '==>': '\\\\Longrightarrow',\r\n    // '<=': '\\\\Leftarrow',     // CONFLICTS WITH LESS THAN OR EQUAL\r\n    '<=>': '\\\\Leftrightarrow',\r\n    '<->': '\\\\leftrightarrow',\r\n    '(.)': '\\\\odot',\r\n    '(+)': '\\\\oplus',\r\n    '(/)': '\\\\oslash',\r\n    '(*)': '\\\\otimes',\r\n    '(-)': '\\\\ominus',\r\n    // '(-)':                  '\\\\circleddash',\r\n    '||': '\\\\Vert',\r\n    '{': '\\\\{',\r\n    '}': '\\\\}',\r\n    '*': '\\\\cdot',\r\n};\n\n/**\r\n * Return an array of potential shortcuts\r\n */\r\nfunction getInlineShortcutsStartingWith(s, config) {\r\n    const result = [];\r\n    const skipDefaultShortcuts = config.overrideDefaultInlineShortcuts;\r\n    for (let i = 0; i <= s.length - 1; i++) {\r\n        const s2 = s.substring(i);\r\n        if (!skipDefaultShortcuts) {\r\n            Object.keys(INLINE_SHORTCUTS).forEach((key) => {\r\n                if (key.startsWith(s2) && !result.includes(key)) {\r\n                    result.push(key);\r\n                }\r\n            });\r\n        }\r\n        const customInlineShortcuts = (config === null || config === void 0 ? void 0 : config.inlineShortcuts) ? config.inlineShortcuts\r\n            : null;\r\n        if (customInlineShortcuts) {\r\n            Object.keys(customInlineShortcuts).forEach((key) => {\r\n                if (key.startsWith(s2)) {\r\n                    result.push(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @param siblings atoms preceding this potential shortcut\r\n */\r\nfunction validateShortcut(siblings, shortcut) {\r\n    if (!shortcut)\r\n        return '';\r\n    // If it's a simple shortcut (no conditional), it's always valid\r\n    if (typeof shortcut === 'string')\r\n        return shortcut;\r\n    // If we have no context, we assume all the shortcuts are valid\r\n    if (!siblings)\r\n        return shortcut.value;\r\n    let nothing = false;\r\n    let letter = false;\r\n    let digit = false;\r\n    let isFunction = false;\r\n    let frac = false;\r\n    let surd = false;\r\n    let binop = false;\r\n    let relop = false;\r\n    let punct = false;\r\n    let array = false;\r\n    let openfence = false;\r\n    let closefence = false;\r\n    let text = false;\r\n    let space = false;\r\n    let sibling = siblings[siblings.length - 1];\r\n    let index = siblings.length - 1;\r\n    while (sibling && /msubsup|placeholder/.test(sibling.type)) {\r\n        index -= 1;\r\n        sibling = siblings[index];\r\n    }\r\n    nothing = !sibling || sibling.type === 'first'; // start of a group\r\n    if (sibling) {\r\n        if (typeof shortcut.mode !== 'undefined' &&\r\n            sibling.mode !== shortcut.mode) {\r\n            return '';\r\n        }\r\n        text = sibling.mode === 'text';\r\n        letter =\r\n            !text &&\r\n                sibling.type === 'mord' &&\r\n                LETTER.test(sibling.body);\r\n        digit =\r\n            !text &&\r\n                sibling.type === 'mord' &&\r\n                /[0-9]+$/.test(sibling.body);\r\n        isFunction = !text && sibling.isFunction;\r\n        frac = sibling.type === 'genfrac';\r\n        surd = sibling.type === 'surd';\r\n        binop = sibling.type === 'mbin';\r\n        relop = sibling.type === 'mrel';\r\n        punct = sibling.type === 'mpunct' || sibling.type === 'minner';\r\n        array = Boolean(sibling.array);\r\n        openfence = sibling.type === 'mopen';\r\n        closefence = sibling.type === 'mclose' || sibling.type === 'leftright';\r\n        space = sibling.type === 'space';\r\n    }\r\n    if (typeof shortcut.after !== 'undefined') {\r\n        // If this is a conditional shortcut, consider the conditions now\r\n        if ((/nothing/.test(shortcut.after) && nothing) ||\r\n            (/letter/.test(shortcut.after) && letter) ||\r\n            (/digit/.test(shortcut.after) && digit) ||\r\n            (/function/.test(shortcut.after) && isFunction) ||\r\n            (/frac/.test(shortcut.after) && frac) ||\r\n            (/surd/.test(shortcut.after) && surd) ||\r\n            (/binop/.test(shortcut.after) && binop) ||\r\n            (/relop/.test(shortcut.after) && relop) ||\r\n            (/punct/.test(shortcut.after) && punct) ||\r\n            (/array/.test(shortcut.after) && array) ||\r\n            (/openfence/.test(shortcut.after) && openfence) ||\r\n            (/closefence/.test(shortcut.after) && closefence) ||\r\n            (/text/.test(shortcut.after) && text) ||\r\n            (/space/.test(shortcut.after) && space)) {\r\n            return shortcut.value;\r\n        }\r\n        return '';\r\n    }\r\n    return shortcut.value;\r\n}\r\n/**\r\n *\r\n * @param context - atoms preceding the candidate, potentially used\r\n * to reduce which shortcuts are applicable. If 'null', no restrictions are\r\n * applied.\r\n * @param s - candidate inline shortcuts (e.g. `'pi'`)\r\n * @return A replacement string matching the shortcut (e.g. `'\\pi'`)\r\n */\r\nfunction getInlineShortcut(context, s, shortcuts) {\r\n    var _a;\r\n    return validateShortcut(context, (_a = shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts[s]) !== null && _a !== void 0 ? _a : INLINE_SHORTCUTS[s]);\r\n}\n\n/**\r\n * Attempts to parse and interpret a string in an unknown format, possibly\r\n * ASCIIMath and return a canonical LaTeX string.\r\n *\r\n * The format recognized are one of these variations:\r\n * - ASCIIMath: Only supports a subset\r\n * (1/2x)\r\n * 1/2sin x                     -> \\frac {1}{2}\\sin x\r\n * 1/2sinx                      -> \\frac {1}{2}\\sin x\r\n * (1/2sin x (x^(2+1))          // Unbalanced parentheses\r\n * (1/2sin(x^(2+1))             -> \\left(\\frac {1}{2}\\sin \\left(x^{2+1}\\right)\\right)\r\n * alpha + (pi)/(4)             -> \\alpha +\\frac {\\pi }{4}\r\n * x=(-b +- sqrt(b^2 – 4ac))/(2a)\r\n * alpha/beta\r\n * sqrt2 + sqrtx + sqrt(1+a) + sqrt(1/2)\r\n * f(x) = x^2 \"when\" x >= 0\r\n * AA n in QQ\r\n * AA x in RR \",\" |x| > 0\r\n * AA x in RR \",\" abs(x) > 0\r\n *\r\n * - UnicodeMath (generated by Microsoft Word): also only supports a subset\r\n *      - See https://www.unicode.org/notes/tn28/UTN28-PlainTextMath-v3.1.pdf\r\n * √(3&x+1)\r\n * {a+b/c}\r\n * [a+b/c]\r\n * _a^b x\r\n * lim_(n->\\infty) n\r\n * \\iint_(a=0)^\\infty  a\r\n *\r\n * - \"JavaScript Latex\": a variant that is LaTeX, but with escaped backslashes\r\n *  \\\\frac{1}{2} \\\\sin x\r\n */\r\nfunction parseMathString(s, options) {\r\n    if (!s)\r\n        return ['latex', ''];\r\n    // Nothing to do if a single character\r\n    if (s.length <= 1)\r\n        return ['latex', s];\r\n    if (!options || options.format !== 'ASCIIMath') {\r\n        // This is not explicitly ASCIIMath. Try to infer if this is LaTex...\r\n        // If the strings is surrounded by `$..$` or `$$..$$`, assumes it is LaTeX\r\n        const trimedString = s.trim();\r\n        if ((trimedString.startsWith('$$') && trimedString.endsWith('$$')) ||\r\n            (trimedString.startsWith('\\\\[') && trimedString.endsWith('\\\\]')) ||\r\n            (trimedString.startsWith('\\\\(') && trimedString.endsWith('\\\\)'))) {\r\n            return [\r\n                'latex',\r\n                trimedString.substring(2, trimedString.length - 2),\r\n            ];\r\n        }\r\n        if (trimedString.startsWith('$') && trimedString.endsWith('$')) {\r\n            return [\r\n                'latex',\r\n                trimedString.substring(1, trimedString.length - 1),\r\n            ];\r\n        }\r\n        // Replace double-backslash (coming from JavaScript) to a single one\r\n        s = s.replace(/\\\\\\\\([^\\s\\n])/g, '\\\\$1');\r\n        if (/\\\\/.test(s)) {\r\n            // If the string includes a '\\' it's probably a LaTeX string\r\n            // (that's not completely true, it could be a UnicodeMath string, since\r\n            // UnicodeMath supports some LaTeX commands. However, we need to pick\r\n            // one in order to correctly interpret {} (which are argument delimiters\r\n            // in LaTeX, and are fences in UnicodeMath)\r\n            return ['latex', s];\r\n        }\r\n    }\r\n    s = s.replace(/\\u2061/gu, ''); // Remove function application\r\n    s = s.replace(/\\u3016/gu, '{'); // WHITE LENTICULAR BRACKET (grouping)\r\n    s = s.replace(/\\u3017/gu, '}'); // WHITE LENTICULAR BRACKET (grouping)\r\n    s = s.replace(/([^\\\\])sinx/g, '$1\\\\sin x'); // common typo\r\n    s = s.replace(/([^\\\\])cosx/g, '$1\\\\cos x '); // common typo\r\n    s = s.replace(/\\u2013/g, '-'); // EN-DASH, sometimes used as a minus sign\r\n    return [\r\n        (options === null || options === void 0 ? void 0 : options.format) || 'ASCIIMath',\r\n        parseMathExpression(s, options !== null && options !== void 0 ? options : {}),\r\n    ];\r\n}\r\nfunction parseMathExpression(s, options) {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    if (!s)\r\n        return '';\r\n    let done = false;\r\n    let m;\r\n    if (!done && (s[0] === '^' || s[0] === '_')) {\r\n        // Superscript and subscript\r\n        m = parseMathArgument(s.substr(1), {\r\n            inlineShortcuts: (_a = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _a !== void 0 ? _a : {},\r\n            noWrap: true,\r\n        });\r\n        s = s[0] + '{' + m.match + '}';\r\n        s += parseMathExpression(m.rest, options);\r\n        done = true;\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^(sqrt|\\u221a)(.*)/);\r\n        if (m) {\r\n            // Square root\r\n            m = parseMathArgument(m[2], {\r\n                inlineShortcuts: (_b = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _b !== void 0 ? _b : {},\r\n                noWrap: true,\r\n            });\r\n            const sqrtArgument = m.match || '\\\\placeholder{}';\r\n            s = '\\\\sqrt{' + sqrtArgument + '}';\r\n            s += parseMathExpression(m.rest, options);\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^(\\\\cbrt|\\u221b)(.*)/);\r\n        if (m) {\r\n            // Cube root\r\n            m = parseMathArgument(m[2], {\r\n                inlineShortcuts: (_c = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _c !== void 0 ? _c : {},\r\n                noWrap: true,\r\n            });\r\n            const sqrtArgument = m.match || '\\\\placeholder{}';\r\n            s = '\\\\sqrt[3]{' + sqrtArgument + '}';\r\n            s += parseMathExpression(m.rest, options);\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^abs(.*)/);\r\n        if (m) {\r\n            // Absolute value\r\n            m = parseMathArgument(m[1], {\r\n                inlineShortcuts: (_d = options === null || options === void 0 ? void 0 : options.inlineShortcuts) !== null && _d !== void 0 ? _d : {},\r\n                noWrap: true,\r\n            });\r\n            s = '\\\\left|' + m.match + '\\\\right|';\r\n            s += parseMathExpression(m.rest, options);\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^[\"”“](.*?)[\"”“](.*)/);\r\n        if (m) {\r\n            // Quoted text\r\n            s = '\\\\text{' + m[1] + '}';\r\n            s += parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^([^a-zA-Z({[_^\\\\\\s\"]+)(.*)/);\r\n        // A string of symbols...\r\n        // Could be a binary or relational operator, etc...\r\n        if (m) {\r\n            s = paddedShortcut(m[1], options);\r\n            s += parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done && /^(f|g|h)[^a-zA-Z]/.test(s)) {\r\n        // This could be a function...\r\n        m = parseMathArgument(s.substring(1), {\r\n            inlineShortcuts: (_e = options.inlineShortcuts) !== null && _e !== void 0 ? _e : {},\r\n            noWrap: true,\r\n        });\r\n        if (s[1] === '(') {\r\n            s = s[0] + '\\\\mleft(' + m.match + '\\\\mright)';\r\n        }\r\n        else {\r\n            s = s[0] + m.match;\r\n        }\r\n        s += parseMathExpression(m.rest, options);\r\n        done = true;\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^([a-zA-Z]+)(.*)/);\r\n        if (m) {\r\n            // Some alphabetical string...\r\n            // Could be a function name (sin) or symbol name (alpha)\r\n            s = paddedShortcut(m[1], options);\r\n            s += parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done) {\r\n        m = parseMathArgument(s, {\r\n            inlineShortcuts: (_f = options.inlineShortcuts) !== null && _f !== void 0 ? _f : {},\r\n            noWrap: true,\r\n        });\r\n        if (m.match && m.rest[0] === '/') {\r\n            // Fraction\r\n            const m2 = parseMathArgument(m.rest.substr(1), {\r\n                inlineShortcuts: (_g = options.inlineShortcuts) !== null && _g !== void 0 ? _g : {},\r\n                noWrap: true,\r\n            });\r\n            if (m2.match) {\r\n                s =\r\n                    '\\\\frac{' +\r\n                        m.match +\r\n                        '}{' +\r\n                        m2.match +\r\n                        '}' +\r\n                        parseMathExpression(m2.rest, options);\r\n            }\r\n            done = true;\r\n        }\r\n        else if (m.match) {\r\n            if (s[0] === '(') {\r\n                s =\r\n                    '\\\\left(' +\r\n                        m.match +\r\n                        '\\\\right)' +\r\n                        parseMathExpression(m.rest, options);\r\n            }\r\n            else {\r\n                s = m.match + parseMathExpression(m.rest, options);\r\n            }\r\n            done = true;\r\n        }\r\n    }\r\n    if (!done) {\r\n        m = s.match(/^(\\s+)(.*)$/);\r\n        // Whitespace\r\n        if (m) {\r\n            s = ' ' + parseMathExpression(m[2], options);\r\n            done = true;\r\n        }\r\n    }\r\n    return s;\r\n}\r\n/**\r\n * Parse a math argument, as defined by ASCIIMath and UnicodeMath:\r\n * - Either an expression fenced in (), {} or []\r\n * - a number (- sign, digits, decimal point, digits)\r\n * - a single [a-zA-Z] letter (an identifier)\r\n * - a multi-letter shortcut (e.g., pi)\r\n * - a LaTeX command (\\pi) (for UnicodeMath)\r\n * @return\r\n * - match: the parsed (and converted) portion of the string that is an argument\r\n * - rest: the raw, unconverted, rest of the string\r\n */\r\nfunction parseMathArgument(s, options) {\r\n    let match = '';\r\n    s = s.trim();\r\n    let rest = s;\r\n    let lFence = s.charAt(0);\r\n    let rFence = { '(': ')', '{': '}', '[': ']' }[lFence];\r\n    if (rFence) {\r\n        // It's a fence\r\n        let level = 1;\r\n        let i = 1;\r\n        while (i < s.length && level > 0) {\r\n            if (s[i] === lFence)\r\n                level++;\r\n            if (s[i] === rFence)\r\n                level--;\r\n            i++;\r\n        }\r\n        if (level === 0) {\r\n            // We've found the matching closing fence\r\n            if (options.noWrap && lFence === '(') {\r\n                match = parseMathExpression(s.substring(1, i - 1), options);\r\n            }\r\n            else {\r\n                if (lFence === '{' && rFence === '}') {\r\n                    lFence = '\\\\{';\r\n                    rFence = '\\\\}';\r\n                }\r\n                match =\r\n                    '\\\\left' +\r\n                        lFence +\r\n                        parseMathExpression(s.substring(1, i - 1), options) +\r\n                        '\\\\right' +\r\n                        rFence;\r\n            }\r\n            rest = s.substring(i);\r\n        }\r\n        else {\r\n            // Unbalanced fence...\r\n            match = s.substring(1, i);\r\n            rest = '';\r\n        }\r\n    }\r\n    else {\r\n        let m = s.match(/^([a-zA-Z]+)/);\r\n        if (m) {\r\n            // It's a string of letter, maybe a shortcut\r\n            let shortcut = getInlineShortcut(null, s, options.inlineShortcuts);\r\n            if (shortcut) {\r\n                shortcut = shortcut.replace('_{#?}', '');\r\n                shortcut = shortcut.replace('^{#?}', '');\r\n                return { match: shortcut, rest: s.substring(shortcut.length) };\r\n            }\r\n        }\r\n        m = s.match(/^([a-zA-Z])/);\r\n        if (m) {\r\n            // It's a single letter\r\n            return { match: m[1], rest: s.substring(1) };\r\n        }\r\n        m = s.match(/^(-)?\\d+(\\.\\d*)?/);\r\n        if (m) {\r\n            // It's a number\r\n            return { match: m[0], rest: s.substring(m[0].length) };\r\n        }\r\n        if (!/^\\\\(left|right)/.test(s)) {\r\n            // It's a LaTeX command (but not a \\left\\right)\r\n            m = s.match(/^(\\\\[a-zA-Z]+)/);\r\n            if (m) {\r\n                rest = s.substring(m[1].length);\r\n                match = m[1];\r\n            }\r\n        }\r\n    }\r\n    return { match: match, rest: rest };\r\n}\r\nfunction paddedShortcut(s, options) {\r\n    let result = getInlineShortcut(null, s, options);\r\n    if (result) {\r\n        result = result.replace('_{#?}', '');\r\n        result = result.replace('^{#?}', '');\r\n        result += ' ';\r\n    }\r\n    else {\r\n        result = s;\r\n    }\r\n    return result;\r\n}\n\nfunction selectionDidChange(model) {\r\n    var _a;\r\n    if (typeof ((_a = model.listeners) === null || _a === void 0 ? void 0 : _a.onSelectionDidChange) === 'function' &&\r\n        !model.suppressChangeNotifications) {\r\n        model.listeners.onSelectionDidChange(model);\r\n    }\r\n}\r\nfunction contentDidChange(model) {\r\n    var _a;\r\n    if (typeof ((_a = model.listeners) === null || _a === void 0 ? void 0 : _a.onContentDidChange) === 'function' &&\r\n        !model.suppressChangeNotifications) {\r\n        model.listeners.onContentDidChange(model);\r\n    }\r\n}\r\n/*\r\n// type User = { name: string };\r\n\n// interface UserEvents {\r\n//     login(user: User): void;\r\n//     logout(): string;\r\n// }\r\n\ntype Filter<T, Cond, U extends keyof T = keyof T> = {\r\n    [K in U]: T[K] extends Cond ? K : never;\r\n}[U];\r\n\ntype In<T> = T extends (...args: infer U) => any ? U : [];\r\ntype Out<T> = T extends () => infer U ? U : never;\r\n\n// Extract an array type of valid event keys\r\ntype EventKey<T> = Filter<T, Function> & string;\r\n\n// Extract the argument/return types of a valid event\r\ntype Arguments<T> = T extends (...args: infer U) => any ? U : [];\r\ntype Result<T> = T extends () => infer U ? U : never;\r\n\ntype EventIn<T, K extends EventKey<T>> = In<T[K]>;\r\ntype EventOut<T, K extends EventKey<T>> = Out<T[K]> | void;\r\n\nexport type Listener<T, K extends EventKey<T> = EventKey<T>> = (\r\n    ...args: EventIn<T, K>\r\n) => EventOut<T, K>;\r\n\nexport type ListenerMap<T> = Partial<{ [K in EventKey<T>]: Listener<T, K> }>;\r\n\ninterface Emitter<T> {\r\n    on<K extends EventKey<T>>(key: K, fn: Listener<T, K>): typeof fn;\r\n}\r\n\n// import { EventEmitter } from 'events';\r\n// const ee = (new EventEmitter() as unknown) as Emitter<UserEvents>;\r\n\n// ee.on('login', (user: string) => {});\r\n// ee.on('logout', () => {\r\n//     return 'done';\r\n// });\r\n*/\n\n/**\r\n * The atom where the selection starts.\r\n *\r\n * When the selection is extended the anchor remains fixed. The anchor\r\n * could be either before or after the focus.\r\n */\r\nfunction getAnchor(model) {\r\n    if (model.parent().array) {\r\n        return arrayCell(model.parent().array, model.relation())[model.anchorOffset()];\r\n    }\r\n    const siblings = model.siblings();\r\n    return siblings[Math.min(siblings.length - 1, model.anchorOffset())];\r\n}\r\n/**\r\n *\r\n * @param  extent the length of the selection\r\n * @return true if the path has actually changed\r\n */\r\nfunction setPath(model, inSelection, extent = 0) {\r\n    let selection;\r\n    // Convert to a path array if necessary\r\n    if (typeof inSelection === 'string') {\r\n        selection = pathFromString(inSelection);\r\n        selection.extent = extent;\r\n    }\r\n    else if (isArray(inSelection)) {\r\n        // need to temporarily change the path of this to use 'sibling()'\r\n        const newPath = clone(inSelection);\r\n        const oldPath = model.path;\r\n        model.path = newPath;\r\n        if (extent === 0 && getAnchor(model).type === 'placeholder') {\r\n            // select the placeholder\r\n            newPath[newPath.length - 1].offset = model.anchorOffset() - 1;\r\n            extent = 1;\r\n        }\r\n        selection = {\r\n            path: newPath,\r\n            extent: extent !== null && extent !== void 0 ? extent : 0,\r\n        };\r\n        model.path = oldPath;\r\n    }\r\n    else {\r\n        selection = inSelection;\r\n    }\r\n    const pathChanged = pathDistance(model.path, selection.path) !== 0;\r\n    const extentChanged = selection.extent !== model.extent;\r\n    if (pathChanged || extentChanged) {\r\n        if (pathChanged) {\r\n            adjustPlaceholder(model);\r\n        }\r\n        model.path = clone(selection.path);\r\n        if (model.siblings().length < model.anchorOffset()) {\r\n            // The new path is out of bounds.\r\n            // Reset the path to something valid\r\n            console.warn('Invalid selection: ' +\r\n                model.toString() +\r\n                ' in \"' +\r\n                model.root.toLatex(false) +\r\n                '\"');\r\n            model.path = [{ relation: 'body', offset: 0 }];\r\n            model.extent = 0;\r\n        }\r\n        else {\r\n            model.extent = selection.extent;\r\n        }\r\n        selectionDidChange(model);\r\n    }\r\n    return pathChanged || extentChanged;\r\n}\r\n/**\r\n * When changing the selection, if the former selection is an empty list,\r\n * insert a placeholder if necessary. For example, if in an empty numerator.\r\n */\r\nfunction adjustPlaceholder(model) {\r\n    // Should we insert a placeholder?\r\n    // Check if we're an empty list that is the child of a fraction\r\n    const siblings = model.siblings();\r\n    if (siblings && siblings.length <= 1) {\r\n        let placeholder;\r\n        const relation = model.relation();\r\n        if (relation === 'numer') {\r\n            placeholder = 'numerator';\r\n        }\r\n        else if (relation === 'denom') {\r\n            placeholder = 'denominator';\r\n        }\r\n        else if (model.parent().type === 'surd' && relation === 'body') {\r\n            // Surd (roots)\r\n            placeholder = 'radicand';\r\n        }\r\n        else if (model.parent().type === 'overunder' && relation === 'body') {\r\n            placeholder = 'base';\r\n        }\r\n        else if (relation === 'underscript' || relation === 'overscript') {\r\n            placeholder = 'annotation';\r\n        }\r\n        if (placeholder) {\r\n            // ◌ ⬚\r\n            siblings.splice(1, 0, new Atom('math', 'placeholder', '⬚', getAnchorStyle(model)));\r\n        }\r\n    }\r\n}\r\n// @revisit any\r\nfunction getAnchorStyle(model) {\r\n    const anchor = model.extent === 0 ? getAnchor(model) : model.sibling(1);\r\n    let result;\r\n    if (anchor && anchor.type !== 'first') {\r\n        if (anchor.type === 'command' || anchor.type === 'composition') {\r\n            return {};\r\n        }\r\n        result = {\r\n            color: anchor.color,\r\n            backgroundColor: anchor.backgroundColor,\r\n            fontFamily: anchor.fontFamily,\r\n            fontShape: anchor.fontShape,\r\n            fontSeries: anchor.fontSeries,\r\n            fontSize: anchor.fontSize,\r\n        };\r\n    }\r\n    let i = 1;\r\n    let ancestor = model.ancestor(i);\r\n    while (!result && ancestor) {\r\n        if (ancestor) {\r\n            result = {\r\n                color: ancestor.color,\r\n                backgroundColor: ancestor.backgroundColor,\r\n                fontFamily: ancestor.fontFamily,\r\n                fontShape: ancestor.fontShape,\r\n                fontSeries: ancestor.fontSeries,\r\n                fontSize: ancestor.fontSize,\r\n            };\r\n        }\r\n        i += 1;\r\n        ancestor = model.ancestor(i);\r\n    }\r\n    return result;\r\n}\n\n/**\r\n * Return true if the atom could be a part of a number\r\n * i.e. \"-12354.568\"\r\n */\r\nfunction isNumber(atom) {\r\n    if (!atom)\r\n        return false;\r\n    return ((atom.type === 'mord' && /[0-9.]/.test(atom.body)) ||\r\n        (atom.type === 'mpunct' && atom.body === ','));\r\n}\r\n/**\r\n * Return a `{start:, end:}` for the offsets of the command around the insertion\r\n * point, or null.\r\n * - `start` is the first atom which is of type `command`\r\n * - `end` is after the last atom of type `command`\r\n */\r\nfunction getCommandOffsets(model) {\r\n    const siblings = model.siblings();\r\n    if (siblings.length <= 1)\r\n        return null;\r\n    let start = Math.min(model.endOffset(), siblings.length - 1);\r\n    // let start = Math.max(0, model.endOffset());\r\n    if (siblings[start].type !== 'command')\r\n        return null;\r\n    while (start > 0 && siblings[start].type === 'command')\r\n        start -= 1;\r\n    let end = model.startOffset() + 1;\r\n    while (end <= siblings.length - 1 && siblings[end].type === 'command') {\r\n        end += 1;\r\n    }\r\n    if (end > start) {\r\n        return { start: start + 1, end: end };\r\n    }\r\n    return null;\r\n}\r\nfunction setPositionAfterCommitedCommand(model) {\r\n    const siblings = model.siblings();\r\n    const command = getCommandOffsets(model);\r\n    let i = command.start;\r\n    while (i < command.end && !siblings[i].isSuggestion) {\r\n        i++;\r\n    }\r\n    setSelectionOffset(model, i - 1);\r\n}\r\nfunction getAnchorMode(model) {\r\n    const anchor = selectionIsCollapsed(model)\r\n        ? getAnchor(model)\r\n        : model.sibling(1);\r\n    let result;\r\n    if (anchor) {\r\n        if (anchor.type === 'command') {\r\n            return 'command';\r\n        }\r\n        result = anchor.mode;\r\n    }\r\n    let i = 1;\r\n    let ancestor = model.ancestor(i);\r\n    while (!result && ancestor) {\r\n        if (ancestor)\r\n            result = ancestor.mode;\r\n        i += 1;\r\n        ancestor = model.ancestor(i);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Move to the next/previous placeholder or empty child list.\r\n * @return False if no placeholder found and did not move\r\n */\r\nfunction leap(model, dir = 1, callHooks = true) {\r\n    var _a;\r\n    const savedSuppressChangeNotifications = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n    const oldPath = model.clone();\r\n    const oldExtent = model.extent;\r\n    move(model, dir);\r\n    if (getAnchor(model).type === 'placeholder') {\r\n        // If we're already at a placeholder, move by one more (the placeholder\r\n        // is right after the insertion point)\r\n        move(model, dir);\r\n    }\r\n    // Candidate placeholders are atom of type 'placeholder'\r\n    // or empty children list (except for the root: if the root is empty,\r\n    // it is not a valid placeholder)\r\n    const placeholders = filter(model, (atom, iter) => atom.type === 'placeholder' ||\r\n        (iter.path.length > 1 && iter.siblings().length === 1), dir);\r\n    // If no placeholders were found, call handler or move to the next focusable\r\n    // element in the document\r\n    if (placeholders.length === 0) {\r\n        // Restore the selection\r\n        setPath(model, oldPath, oldExtent);\r\n        if (callHooks) {\r\n            if (((_a = model.hooks) === null || _a === void 0 ? void 0 : _a.tabOut) &&\r\n                model.hooks.tabOut(model, dir > 0 ? 'forward' : 'backward') &&\r\n                document.activeElement) {\r\n                const tabbable = getTabbableElements();\r\n                let index = tabbable.indexOf(document.activeElement) +\r\n                    dir;\r\n                if (index < 0)\r\n                    index = tabbable.length - 1;\r\n                if (index >= tabbable.length)\r\n                    index = 0;\r\n                tabbable[index].focus();\r\n            }\r\n        }\r\n        model.suppressChangeNotifications = savedSuppressChangeNotifications;\r\n        return false;\r\n    }\r\n    // Set the selection to the next placeholder\r\n    setPath(model, placeholders[0]);\r\n    if (getAnchor(model).type === 'placeholder')\r\n        setSelectionExtent(model, -1);\r\n    model.announce('move', oldPath);\r\n    selectionDidChange(model);\r\n    model.suppressChangeNotifications = savedSuppressChangeNotifications;\r\n    return true;\r\n}\r\n/**\r\n * Return an array of tabbable elements, approximately in the order a browser\r\n * would (the browsers are inconsistent), which is first by accounting\r\n * for non-null tabIndex, then null tabIndex, then document order of focusable\r\n * elements.\r\n */\r\nfunction getTabbableElements() {\r\n    // const focussableElements = `a[href]:not([disabled]),\r\n    // button:not([disabled]),\r\n    // textarea:not([disabled]),\r\n    // input[type=text]:not([disabled]),\r\n    // select:not([disabled]),\r\n    // [contentEditable=\"true\"],\r\n    // [tabindex]:not([disabled]):not([tabindex=\"-1\"])`;\r\n    // // Get all the potentially focusable elements\r\n    // // and exclude (1) those that are invisible (width and height = 0)\r\n    // // (2) not the active element\r\n    // // (3) the ancestor of the active element\r\n    // return Array.prototype.filter.call(\r\n    //     document.querySelectorAll(focussableElements),\r\n    //     (element) =>\r\n    //         ((element.offsetWidth > 0 || element.offsetHeight > 0) &&\r\n    //             !element.contains(document.activeElement)) ||\r\n    //         element === document.activeElement\r\n    // );\r\n    function tabbable(el) {\r\n        const regularTabbables = [];\r\n        const orderedTabbables = [];\r\n        const candidates = Array.from(el.querySelectorAll(`input, select, textarea, a[href], button, \n        [tabindex], audio[controls], video[controls],\n        [contenteditable]:not([contenteditable=\"false\"]), details>summary`)).filter(isNodeMatchingSelectorTabbable);\r\n        candidates.forEach((candidate, i) => {\r\n            const candidateTabindex = getTabindex(candidate);\r\n            if (candidateTabindex === 0) {\r\n                regularTabbables.push(candidate);\r\n            }\r\n            else {\r\n                orderedTabbables.push({\r\n                    documentOrder: i,\r\n                    tabIndex: candidateTabindex,\r\n                    node: candidate,\r\n                });\r\n            }\r\n        });\r\n        return orderedTabbables\r\n            .sort((a, b) => a.tabIndex === b.tabIndex\r\n            ? a.documentOrder - b.documentOrder\r\n            : a.tabIndex - b.tabIndex)\r\n            .map((a) => a.node)\r\n            .concat(regularTabbables);\r\n    }\r\n    function isNodeMatchingSelectorTabbable(el) {\r\n        if (!isNodeMatchingSelectorFocusable(el) ||\r\n            isNonTabbableRadio(el) ||\r\n            getTabindex(el) < 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function isNodeMatchingSelectorFocusable(node) {\r\n        if (node.disabled ||\r\n            (node.tagName === 'INPUT' && node.type === 'hidden') ||\r\n            isHidden(node)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getTabindex(node) {\r\n        const tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\r\n        if (!isNaN(tabindexAttr)) {\r\n            return tabindexAttr;\r\n        }\r\n        // Browsers do not return `tabIndex` correctly for contentEditable nodes;\r\n        // so if they don't have a tabindex attribute specifically set, assume it's 0.\r\n        if (node.contentEditable === 'true') {\r\n            return 0;\r\n        }\r\n        // in Chrome, <audio controls/> and <video controls/> elements get a default\r\n        //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\r\n        //  yet they are still part of the regular tab order; in FF, they get a default\r\n        //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\r\n        //  order, consider their tab index to be 0\r\n        if ((node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO') &&\r\n            node.getAttribute('tabindex') === null) {\r\n            return 0;\r\n        }\r\n        return node.tabIndex;\r\n    }\r\n    function isNonTabbableRadio(node) {\r\n        return (node.tagName === 'INPUT' &&\r\n            node.type === 'radio' &&\r\n            !isTabbableRadio(node));\r\n    }\r\n    function getCheckedRadio(nodes, form) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            if (nodes[i].checked && nodes[i].form === form) {\r\n                return nodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function isTabbableRadio(node) {\r\n        if (!node.name) {\r\n            return true;\r\n        }\r\n        const radioScope = node.form || node.ownerDocument;\r\n        const radioSet = radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\r\n        const checked = getCheckedRadio(radioSet, node.form);\r\n        return !checked || checked === node;\r\n    }\r\n    function isHidden(el) {\r\n        if (el === document.activeElement ||\r\n            el.contains(document.activeElement)) {\r\n            return false;\r\n        }\r\n        if (getComputedStyle(el).visibility === 'hidden')\r\n            return true;\r\n        // Note that browsers generally don't consider the bounding rect\r\n        // as a criteria to determine if an item is focusable, but we want\r\n        // to exclude the invisible textareas used to capture keyoard input.\r\n        const bounds = el.getBoundingClientRect();\r\n        if (bounds.width === 0 || bounds.height === 0)\r\n            return true;\r\n        while (el) {\r\n            if (getComputedStyle(el).display === 'none')\r\n                return true;\r\n            el = el.parentElement;\r\n        }\r\n        return false;\r\n    }\r\n    return tabbable(document.body);\r\n}\r\n/**\r\n * @param offset\r\n * - &gt;0: index of the child in the group where the selection will start from\r\n * - <0: index counting from the end of the group\r\n * @param extent Number of items in the selection:\r\n * - 0: collapsed selection, single insertion point\r\n * - &gt;0: selection extending _after_ the offset\r\n * - <0: selection extending _before_ the offset\r\n * - `'end'`: selection extending to the end of the group\r\n * - `'start'`: selection extending to the beginning of the group\r\n * @param relation e.g. `'body'`, `'superscript'`, etc...\r\n * @return False if the relation is invalid (no such children)\r\n */\r\nfunction setSelectionOffset(model, offset = 0, extent = 0, relation = '') {\r\n    // If no relation (\"children\", \"superscript\", etc...) is specified\r\n    // keep the current relation\r\n    const oldRelation = model.path[model.path.length - 1].relation;\r\n    if (!relation)\r\n        relation = oldRelation;\r\n    // If the relation is invalid, exit and return false\r\n    const parent = model.parent();\r\n    if (!parent && relation !== 'body')\r\n        return false;\r\n    const arrayRelation = relation.startsWith('cell');\r\n    if ((!arrayRelation && !parent[relation]) ||\r\n        (arrayRelation && !parent.array)) {\r\n        return false;\r\n    }\r\n    const relationChanged = relation !== oldRelation;\r\n    // Temporarily set the path to the potentially new relation to get the\r\n    // right siblings\r\n    model.path[model.path.length - 1].relation = relation;\r\n    // Invoking siblings() will have the side-effect of adding the 'first'\r\n    // atom if necessary\r\n    // ... and we want the siblings with the potentially new relation...\r\n    const siblings = model.siblings();\r\n    const siblingsCount = siblings.length;\r\n    // Restore the relation\r\n    model.path[model.path.length - 1].relation = oldRelation;\r\n    const oldExtent = model.extent;\r\n    if (extent === 'end') {\r\n        extent = siblingsCount - offset - 1;\r\n    }\r\n    setSelectionExtent(model, extent);\r\n    const extentChanged = model.extent !== oldExtent;\r\n    setSelectionExtent(model, oldExtent);\r\n    // Calculate the new offset, and make sure it is in range\r\n    // (`setSelectionOffset()` can be called with an offset that greater than\r\n    // the number of children, for example when doing an up from a\r\n    // numerator to a smaller denominator, e.g. \"1/(x+1)\".\r\n    if (offset < 0) {\r\n        offset = siblingsCount + offset;\r\n    }\r\n    offset = Math.max(0, Math.min(offset, siblingsCount - 1));\r\n    const oldOffset = model.path[model.path.length - 1].offset;\r\n    const offsetChanged = oldOffset !== offset;\r\n    if (relationChanged || offsetChanged || extentChanged) {\r\n        if (relationChanged) {\r\n            adjustPlaceholder(model);\r\n        }\r\n        model.path[model.path.length - 1].relation = relation;\r\n        model.path[model.path.length - 1].offset = offset;\r\n        setSelectionExtent(model, extent);\r\n        selectionDidChange(model);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Move the anchor to the next permissible atom.\r\n * Used by `move()`.\r\n * Does not send selection change notifications.\r\n */\r\nfunction next(model, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    const NEXT_RELATION = {\r\n        body: 'numer',\r\n        numer: 'denom',\r\n        denom: 'index',\r\n        index: 'overscript',\r\n        overscript: 'underscript',\r\n        underscript: 'subscript',\r\n        subscript: 'superscript',\r\n    };\r\n    if (model.anchorOffset() === model.siblings().length - 1) {\r\n        adjustPlaceholder(model);\r\n        // We've reached the end of this list.\r\n        // Is there another list to consider?\r\n        let relation = NEXT_RELATION[model.relation()];\r\n        const parent = model.parent();\r\n        while (relation && !parent[relation]) {\r\n            relation = NEXT_RELATION[relation];\r\n        }\r\n        // We found a new relation/set of siblings...\r\n        if (relation) {\r\n            setSelectionOffset(model, 0, 0, relation);\r\n            return;\r\n        }\r\n        // No more siblings, check if we have a sibling cell in an array\r\n        if (model.parent().array) {\r\n            const maxCellCount = arrayCellCount(model.parent().array);\r\n            let cellIndex = parseInt(model.relation().match(/cell([0-9]*)$/)[1]) + 1;\r\n            while (cellIndex < maxCellCount) {\r\n                const cell = arrayCell(model.parent().array, cellIndex);\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (cell &&\r\n                    setSelectionOffset(model, 0, 0, 'cell' + cellIndex)) {\r\n                    return;\r\n                }\r\n                cellIndex += 1;\r\n            }\r\n        }\r\n        // No more siblings, go up to the parent.\r\n        if (model.path.length === 1) {\r\n            // Invoke handler and perform default if they return true.\r\n            if (model.suppressChangeNotifications ||\r\n                !((_a = model.hooks) === null || _a === void 0 ? void 0 : _a.moveOut) ||\r\n                model.hooks.moveOut(model, 'forward')) {\r\n                // We're at the root, so loop back\r\n                model.path[0].offset = 0;\r\n            }\r\n        }\r\n        else {\r\n            // We've reached the end of the siblings. If we're a group\r\n            // with skipBoundary, when exiting, move one past the next atom\r\n            const skip = !options.iterateAll && model.parent().skipBoundary;\r\n            model.path.pop();\r\n            if (skip) {\r\n                next(model, options);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    // Still some siblings to go through. Move on to the next one.\r\n    setSelectionOffset(model, model.anchorOffset() + 1);\r\n    const anchor = getAnchor(model);\r\n    // Dive into its components, if the new anchor is a compound atom,\r\n    // and allows capture of the selection by its sub-elements\r\n    if (anchor && !anchor.captureSelection) {\r\n        let relation;\r\n        if (anchor.array) {\r\n            // Find the first non-empty cell in this array\r\n            let cellIndex = 0;\r\n            relation = '';\r\n            const maxCellCount = arrayCellCount(anchor.array);\r\n            while (!relation && cellIndex < maxCellCount) {\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (arrayCell(anchor.array, cellIndex)) {\r\n                    relation = 'cell' + cellIndex.toString();\r\n                }\r\n                cellIndex += 1;\r\n            }\r\n            console.assert(relation);\r\n            model.path.push({ relation: relation, offset: 0 });\r\n            setSelectionOffset(model, 0, 0, relation);\r\n            return;\r\n        }\r\n        relation = 'body';\r\n        while (relation) {\r\n            if (isArray(anchor[relation])) {\r\n                model.path.push({ relation: relation, offset: 0 });\r\n                model.insertFirstAtom();\r\n                if (!options.iterateAll && anchor.skipBoundary) {\r\n                    next(model, options);\r\n                }\r\n                return;\r\n            }\r\n            relation = NEXT_RELATION[relation];\r\n        }\r\n    }\r\n}\r\nfunction previous(model, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    const PREVIOUS_RELATION = {\r\n        numer: 'body',\r\n        denom: 'numer',\r\n        index: 'denom',\r\n        overscript: 'index',\r\n        underscript: 'overscript',\r\n        subscript: 'underscript',\r\n        superscript: 'subscript',\r\n    };\r\n    if (!options.iterateAll &&\r\n        model.anchorOffset() === 1 &&\r\n        model.parent() &&\r\n        model.parent().skipBoundary) {\r\n        setSelectionOffset(model, 0);\r\n    }\r\n    if (model.anchorOffset() < 1) {\r\n        // We've reached the first of these siblings.\r\n        // Is there another set of siblings to consider?\r\n        let relation = PREVIOUS_RELATION[model.relation()];\r\n        while (relation && !setSelectionOffset(model, -1, 0, relation)) {\r\n            relation = PREVIOUS_RELATION[relation];\r\n        }\r\n        // Ignore the body of the subsup scaffolding and of\r\n        // 'mop' atoms (for example, \\sum): their body is not editable.\r\n        const parentType = model.parent() ? model.parent().type : 'none';\r\n        if (relation === 'body' &&\r\n            (parentType === 'msubsup' || parentType === 'mop')) {\r\n            relation = null;\r\n        }\r\n        // We found a new relation/set of siblings...\r\n        if (relation)\r\n            return;\r\n        adjustPlaceholder(model);\r\n        // No more siblings, check if we have a sibling cell in an array\r\n        if (model.relation().startsWith('cell')) {\r\n            let cellIndex = parseInt(model.relation().match(/cell([0-9]*)$/)[1]) - 1;\r\n            while (cellIndex >= 0) {\r\n                const cell = arrayCell(model.parent().array, cellIndex);\r\n                if (cell &&\r\n                    setSelectionOffset(model, -1, 0, 'cell' + cellIndex)) {\r\n                    return;\r\n                }\r\n                cellIndex -= 1;\r\n            }\r\n        }\r\n        // No more siblings, go up to the parent.\r\n        if (model.path.length === 1) {\r\n            // Invoke handler and perform default if they return true.\r\n            if (model.suppressChangeNotifications ||\r\n                !((_a = model.hooks) === null || _a === void 0 ? void 0 : _a.moveOut) ||\r\n                model.hooks.moveOut(model, 'backward')) {\r\n                // We're at the root, so loop back\r\n                model.path[0].offset = model.root.body.length - 1;\r\n            }\r\n        }\r\n        else {\r\n            model.path.pop();\r\n            setSelectionOffset(model, model.anchorOffset() - 1);\r\n        }\r\n        return;\r\n    }\r\n    // If the new anchor is a compound atom, dive into its components\r\n    const anchor = getAnchor(model);\r\n    // Only dive in if the atom allows capture of the selection by\r\n    // its sub-elements\r\n    if (!anchor.captureSelection) {\r\n        let relation;\r\n        if (anchor.array) {\r\n            relation = '';\r\n            const maxCellCount = arrayCellCount(anchor.array);\r\n            let cellIndex = maxCellCount - 1;\r\n            while (!relation && cellIndex < maxCellCount) {\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (arrayCell(anchor.array, cellIndex)) {\r\n                    relation = 'cell' + cellIndex.toString();\r\n                }\r\n                cellIndex -= 1;\r\n            }\r\n            cellIndex += 1;\r\n            console.assert(relation);\r\n            model.path.push({\r\n                relation: relation,\r\n                offset: arrayCell(anchor.array, cellIndex).length - 1,\r\n            });\r\n            setSelectionOffset(model, -1, 0, relation);\r\n            return;\r\n        }\r\n        relation = 'superscript';\r\n        while (relation) {\r\n            if (isArray(anchor[relation])) {\r\n                model.path.push({\r\n                    relation: relation,\r\n                    offset: anchor[relation].length - 1,\r\n                });\r\n                setSelectionOffset(model, -1, 0, relation);\r\n                return;\r\n            }\r\n            relation = PREVIOUS_RELATION[relation];\r\n        }\r\n    }\r\n    // There wasn't a component to navigate to, so...\r\n    // Still some siblings to go through: move on to the previous one.\r\n    setSelectionOffset(model, model.anchorOffset() - 1);\r\n    if (!options.iterateAll &&\r\n        model.sibling(0) &&\r\n        model.sibling(0).skipBoundary) {\r\n        previous(model, options);\r\n    }\r\n}\r\nfunction move(model, direction, options) {\r\n    options = options !== null && options !== void 0 ? options : { extend: false };\r\n    removeSuggestion(model);\r\n    const oldPath = model.clone();\r\n    if (direction === 'upward') {\r\n        up(model, options);\r\n    }\r\n    else if (direction === 'downward') {\r\n        down(model, options);\r\n    }\r\n    else {\r\n        let dist = direction === 'forward'\r\n            ? 1\r\n            : direction === 'backward'\r\n                ? -1\r\n                : direction;\r\n        if (options.extend) {\r\n            return extend(model, dist);\r\n        }\r\n        // const previousParent = model.parent();\r\n        // const previousRelation = model.relation();\r\n        // const previousSiblings = model.siblings();\r\n        if (dist > 0) {\r\n            if (collapseSelectionForward(model))\r\n                dist--;\r\n            while (dist > 0) {\r\n                next(model);\r\n                dist--;\r\n            }\r\n        }\r\n        else if (dist < 0) {\r\n            if (collapseSelectionBackward(model))\r\n                dist++;\r\n            while (dist !== 0) {\r\n                previous(model);\r\n                dist++;\r\n            }\r\n        }\r\n        // ** @todo: can't do that without updating the path.\r\n        // If the siblings list we left was empty, remove the relation\r\n        // if (previousSiblings.length <= 1) {\r\n        //     if (['superscript', 'subscript', 'index'].includes(previousRelation)) {\r\n        //         previousParent[previousRelation] = null;\r\n        //     }\r\n        // }\r\n    }\r\n    selectionDidChange(model);\r\n    model.announce('move', oldPath);\r\n    return true;\r\n}\r\nfunction up(model, options) {\r\n    var _a, _b;\r\n    options = options !== null && options !== void 0 ? options : { extend: false };\r\n    const extend = (_a = options.extend) !== null && _a !== void 0 ? _a : false;\r\n    collapseSelectionBackward(model);\r\n    const relation = model.relation();\r\n    if (relation === 'denom') {\r\n        if (extend) {\r\n            model.path.pop();\r\n            model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, 1);\r\n        }\r\n        else {\r\n            setSelectionOffset(model, model.anchorOffset(), 0, 'numer');\r\n        }\r\n        model.announce('moveUp');\r\n    }\r\n    else if (model.parent().array) {\r\n        // In an array\r\n        let colRow = arrayColRow(model.parent().array, relation);\r\n        colRow = arrayAdjustRow(model.parent().array, colRow, -1);\r\n        if (colRow && arrayCell(model.parent().array, colRow)) {\r\n            model.path[model.path.length - 1].relation =\r\n                'cell' + arrayIndex(model.parent().array, colRow);\r\n            setSelectionOffset(model, model.anchorOffset());\r\n            model.announce('moveUp');\r\n        }\r\n        else {\r\n            move(model, 'backward', options);\r\n        }\r\n    }\r\n    else {\r\n        model.announce('line');\r\n        if (!model.suppressChangeNotifications &&\r\n            !((_b = model.hooks) === null || _b === void 0 ? void 0 : _b.moveOut(model, 'upward'))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction down(model, options) {\r\n    var _a, _b;\r\n    options = options !== null && options !== void 0 ? options : { extend: false };\r\n    const extend = (_a = options.extend) !== null && _a !== void 0 ? _a : false;\r\n    collapseSelectionForward(model);\r\n    const relation = model.relation();\r\n    if (relation === 'numer') {\r\n        if (extend) {\r\n            model.path.pop();\r\n            model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, 1);\r\n        }\r\n        else {\r\n            setSelectionOffset(model, model.anchorOffset(), 0, 'denom');\r\n        }\r\n        model.announce('moveDown');\r\n    }\r\n    else if (model.parent().array) {\r\n        // In an array\r\n        let colRow = arrayColRow(model.parent().array, relation);\r\n        colRow = arrayAdjustRow(model.parent().array, colRow, +1);\r\n        // @revisit: validate this codepath\r\n        if (colRow && arrayCell(model.parent().array, colRow)) {\r\n            model.path[model.path.length - 1].relation =\r\n                'cell' + arrayIndex(model.parent().array, colRow);\r\n            setSelectionOffset(model, model.anchorOffset());\r\n            model.announce('moveDown');\r\n        }\r\n        else {\r\n            move(model, 'forward', options);\r\n        }\r\n    }\r\n    else {\r\n        model.announce('line');\r\n        if (!model.suppressChangeNotifications &&\r\n            !((_b = model.hooks) === null || _b === void 0 ? void 0 : _b.moveOut(model, 'downward'))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Change the range of the selection\r\n *\r\n * @param dist - The change (positive or negative) to the extent\r\n * of the selection. The anchor point does not move.\r\n */\r\nfunction extend(model, dist) {\r\n    let offset = model.path[model.path.length - 1].offset;\r\n    let extent = 0;\r\n    const oldPath = model.clone();\r\n    extent = model.extent + dist;\r\n    const newFocusOffset = offset + extent;\r\n    if (newFocusOffset < 0 && extent !== 0) {\r\n        // We're trying to extend beyond the first element.\r\n        // Go up to the parent.\r\n        if (model.path.length > 1) {\r\n            model.path.pop();\r\n            // model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, -1);\r\n            selectionDidChange(model);\r\n            model.announce('move', oldPath);\r\n            return true;\r\n        }\r\n        // @todo exit left extend\r\n        // If we're at the very beginning, nothing to do.\r\n        offset = model.path[model.path.length - 1].offset;\r\n        extent = model.extent;\r\n    }\r\n    else if (newFocusOffset >= model.siblings().length) {\r\n        // We're trying to extend beyond the last element.\r\n        // Go up to the parent\r\n        if (model.path.length > 1) {\r\n            model.path.pop();\r\n            model.path[model.path.length - 1].offset -= 1;\r\n            setSelectionExtent(model, 1);\r\n            selectionDidChange(model);\r\n            model.announce('move', oldPath);\r\n            return true;\r\n        }\r\n        // @todo exit right extend\r\n        if (selectionIsCollapsed(model)) {\r\n            offset -= 1;\r\n        }\r\n        extent -= 1;\r\n    }\r\n    setSelectionOffset(model, offset, extent);\r\n    model.announce('move', oldPath);\r\n    return true;\r\n}\r\n/**\r\n * Move the selection focus to the next/previous point of interest.\r\n * A point of interest is an atom of a different type (mbin, mord, etc...)\r\n * than the current focus.\r\n * If `extend` is true, the selection will be extended. Otherwise, it is\r\n * collapsed, then moved.\r\n * @param dir +1 to skip forward, -1 to skip back\r\n */\r\nfunction skip(model, dir, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : { extend: false };\r\n    const extend = (_a = options.extend) !== null && _a !== void 0 ? _a : false;\r\n    dir = dir < 0 ? -1 : +1;\r\n    const oldPath = model.clone();\r\n    const siblings = model.siblings();\r\n    const focus = model.focusOffset();\r\n    let offset = focus + dir;\r\n    if (extend)\r\n        offset = Math.min(Math.max(0, offset), siblings.length - 1);\r\n    if (offset < 0 || offset >= siblings.length) {\r\n        // If we've reached the end, just move out of the list\r\n        move(model, dir, options);\r\n        return;\r\n    }\r\n    if (siblings[offset] && siblings[offset].mode === 'text') {\r\n        // We're in a text zone, skip word by word\r\n        offset = wordBoundaryOffset(model, offset, dir);\r\n        if (offset < 0 && !extend) {\r\n            setSelectionOffset(model, 0);\r\n            return;\r\n        }\r\n        if (offset > siblings.length) {\r\n            setSelectionOffset(model, siblings.length - 1);\r\n            move(model, dir, options);\r\n            return;\r\n        }\r\n    }\r\n    else {\r\n        const type = siblings[offset] ? siblings[offset].type : '';\r\n        if ((type === 'mopen' && dir > 0) || (type === 'mclose' && dir < 0)) {\r\n            // We're right before (or after) an opening (or closing)\r\n            // fence. Skip to the balanced element (in level, but not necessarily in\r\n            // fence symbol).\r\n            let level = type === 'mopen' ? 1 : -1;\r\n            offset += dir > 0 ? 1 : -1;\r\n            while (offset >= 0 && offset < siblings.length && level !== 0) {\r\n                if (siblings[offset].type === 'mopen') {\r\n                    level += 1;\r\n                }\r\n                else if (siblings[offset].type === 'mclose') {\r\n                    level -= 1;\r\n                }\r\n                offset += dir;\r\n            }\r\n            if (level !== 0) {\r\n                // We did not find a balanced element. Just move a little.\r\n                offset = focus + dir;\r\n            }\r\n            if (dir > 0)\r\n                offset = offset - 1;\r\n        }\r\n        else {\r\n            while (siblings[offset] &&\r\n                siblings[offset].mode === 'math' &&\r\n                siblings[offset].type === type) {\r\n                offset += dir;\r\n            }\r\n            offset -= dir > 0 ? 1 : 0;\r\n        }\r\n    }\r\n    if (extend) {\r\n        const anchor = model.anchorOffset();\r\n        setSelectionOffset(model, anchor, offset - anchor);\r\n    }\r\n    else {\r\n        setSelectionOffset(model, offset);\r\n    }\r\n    model.announce('move', oldPath);\r\n}\r\nfunction jumpToMathFieldBoundary(model, dir = 1, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : { extend: false };\r\n    dir = dir < 0 ? -1 : +1;\r\n    const oldPath = model.clone();\r\n    const path = [{ relation: 'body', offset: model.path[0].offset }];\r\n    let extent;\r\n    if ((_a = !options.extend) !== null && _a !== void 0 ? _a : false) {\r\n        // Change the anchor to the end/start of the root expression\r\n        path[0].offset = dir < 0 ? 0 : model.root.body.length - 1;\r\n        extent = 0;\r\n    }\r\n    else {\r\n        // Don't change the anchor, but update the extent\r\n        if (dir < 0) {\r\n            if (path[0].offset > 0) {\r\n                extent = -path[0].offset;\r\n            }\r\n        }\r\n        else {\r\n            if (path[0].offset < model.siblings().length - 1) {\r\n                extent = model.siblings().length - 1 - path[0].offset;\r\n            }\r\n        }\r\n    }\r\n    setPath(model, path, extent);\r\n    model.announce('move', oldPath);\r\n    return true;\r\n}\r\n/**\r\n * @return The currently selected atoms, or `null` if the\r\n * selection is collapsed\r\n */\r\nfunction getSelectedAtoms(model) {\r\n    if (selectionIsCollapsed(model))\r\n        return null;\r\n    const result = [];\r\n    const siblings = model.siblings();\r\n    const firstOffset = model.startOffset() + 1;\r\n    const lastOffset = model.endOffset() + 1;\r\n    for (let i = firstOffset; i < lastOffset; i++) {\r\n        if (siblings[i] && siblings[i].type !== 'first') {\r\n            result.push(siblings[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @return True if `atom` is within the selection range\r\n * @todo: poorly named, since this is specific to the selection, not the math\r\n * field\r\n */\r\n// export function contains(model: Model, atom) {\r\n//     if (selectionIsCollapsed(model)) return false;\r\n//     const siblings = model.siblings();\r\n//     const firstOffset = model.startOffset();\r\n//     const lastOffset = model.endOffset();\r\n//     for (let i = firstOffset; i < lastOffset; i++) {\r\n//         if (atomContains(siblings[i], atom)) return true;\r\n//     }\r\n//     return false;\r\n// }\r\n/**\r\n * Select all the atoms in the current group, that is all the siblings.\r\n * When the selection is in a numerator, the group is the numerator. When\r\n * the selection is a superscript or subscript, the group is the supsub.\r\n * When the selection is in a text zone, the \"group\" is a word.\r\n */\r\nfunction selectGroup(model) {\r\n    const siblings = model.siblings();\r\n    if (getAnchorMode(model) === 'text') {\r\n        let start = model.startOffset();\r\n        let end = model.endOffset();\r\n        //\r\n        while (siblings[start] &&\r\n            siblings[start].mode === 'text' &&\r\n            LETTER_AND_DIGITS.test(siblings[start].body)) {\r\n            start -= 1;\r\n        }\r\n        while (siblings[end] &&\r\n            siblings[end].mode === 'text' &&\r\n            LETTER_AND_DIGITS.test(siblings[end].body)) {\r\n            end += 1;\r\n        }\r\n        end -= 1;\r\n        if (start >= end) {\r\n            // No word found. Select a single character\r\n            setSelectionOffset(model, model.endOffset() - 1, 1);\r\n            return true;\r\n        }\r\n        setSelectionOffset(model, start, end - start);\r\n    }\r\n    else {\r\n        // In a math zone, select all the sibling nodes\r\n        if (model.sibling(0).type === 'mord' &&\r\n            /[0-9,.]/.test(model.sibling(0).body)) {\r\n            // In a number, select all the digits\r\n            let start = model.startOffset();\r\n            let end = model.endOffset();\r\n            //\r\n            while (isNumber(siblings[start]))\r\n                start -= 1;\r\n            while (isNumber(siblings[end]))\r\n                end += 1;\r\n            end -= 1;\r\n            setSelectionOffset(model, start, end - start);\r\n        }\r\n        else {\r\n            setSelectionOffset(model, 0, 'end');\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction selectAll(model) {\r\n    model.path = [{ relation: 'body', offset: 0 }];\r\n    return setSelectionOffset(model, 0, 'end');\r\n}\r\n/**\r\n * @return {boolean} True if the selection is an insertion point.\r\n */\r\nfunction selectionIsCollapsed(model) {\r\n    return model.extent === 0;\r\n}\r\nfunction setSelectionExtent(model, extent) {\r\n    model.extent = extent;\r\n}\r\nfunction collapseSelectionForward(model) {\r\n    if (model.extent === 0)\r\n        return false;\r\n    setSelectionOffset(model, model.endOffset());\r\n    return true;\r\n}\r\nfunction collapseSelectionBackward(model) {\r\n    if (model.extent === 0)\r\n        return false;\r\n    setSelectionOffset(model, model.startOffset());\r\n    return true;\r\n}\r\nfunction moveAfterParent(model) {\r\n    if (model.path.length > 1) {\r\n        const oldPath = model.clone();\r\n        model.path.pop();\r\n        setSelectionExtent(model, 0);\r\n        model.announce('move', oldPath);\r\n        return true;\r\n    }\r\n    model.announce('plonk');\r\n    return false;\r\n}\r\n/**\r\n * Extend the selection between `from` and `to` nodes.\r\n * Called during dragging.\r\n *\r\n * @param {object} options\r\n * - options.extendToWordBoundary\r\n * @return true if the range was actually changed\r\n */\r\nfunction setRange(model, from, to, options = {\r\n    extendToWordBoundary: false,\r\n}) {\r\n    // Measure the 'distance' between `from` and `to`\r\n    const distance = pathDistance(from, to);\r\n    if (distance === 0) {\r\n        // `from` and `to` are equal.\r\n        if (options.extendToWordBoundary) {\r\n            from = wordBoundary(model, from, -1);\r\n            to = wordBoundary(model, to, +1);\r\n            return setRange(model, from, to);\r\n        }\r\n        // Set the path to a collapsed insertion point\r\n        return setPath(model, clone(from), 0);\r\n    }\r\n    if (distance === 1) {\r\n        const extent = to[to.length - 1].offset - from[from.length - 1].offset;\r\n        if (options.extendToWordBoundary) {\r\n            from = wordBoundary(model, from, extent < 0 ? +1 : -1);\r\n            to = wordBoundary(model, to, extent < 0 ? -1 : +1);\r\n            return setRange(model, from, to);\r\n        }\r\n        // They're siblings, set an extent\r\n        return setPath(model, clone(from), extent);\r\n    }\r\n    // They're neither identical, not siblings.\r\n    // Find the common ancestor between the nodes\r\n    let commonAncestor = pathCommonAncestor(from, to);\r\n    const ancestorDepth = commonAncestor.length;\r\n    if (from.length === ancestorDepth ||\r\n        to.length === ancestorDepth ||\r\n        from[ancestorDepth].relation !== to[ancestorDepth].relation) {\r\n        return setPath(model, commonAncestor, -1);\r\n    }\r\n    commonAncestor.push(from[ancestorDepth]);\r\n    commonAncestor = clone(commonAncestor);\r\n    let extent = to[ancestorDepth].offset - from[ancestorDepth].offset + 1;\r\n    if (extent <= 0) {\r\n        if (to.length > ancestorDepth + 1) {\r\n            // axb/c+y -> select from y to x\r\n            commonAncestor[ancestorDepth].relation = to[ancestorDepth].relation;\r\n            commonAncestor[ancestorDepth].offset = to[ancestorDepth].offset;\r\n            commonAncestor[commonAncestor.length - 1].offset -= 1;\r\n            extent = -extent + 2;\r\n        }\r\n        else {\r\n            // x+(ayb/c) -> select from y to x\r\n            commonAncestor[ancestorDepth].relation = to[ancestorDepth].relation;\r\n            commonAncestor[ancestorDepth].offset = to[ancestorDepth].offset;\r\n            extent = -extent + 1;\r\n        }\r\n    }\r\n    else if (to.length <= from.length) {\r\n        // axb/c+y -> select from x to y\r\n        commonAncestor[commonAncestor.length - 1].offset -= 1;\r\n    }\r\n    else if (to.length > from.length) {\r\n        commonAncestor[ancestorDepth].offset -= 1;\r\n    }\r\n    return setPath(model, commonAncestor, extent);\r\n}\r\n/**\r\n * Locate the offset before the insertion point that would indicate\r\n * a good place to select as an implicit argument.\r\n * For example with '1+\\sin(x)', if the insertion point is at the\r\n * end, the implicit arg offset would be after the plus. As a result,\r\n * inserting a fraction after the sin would yield: '1+\\frac{\\sin(c)}{\\placeholder{}}'\r\n */\r\nfunction getImplicitArgOffset(model) {\r\n    const siblings = model.siblings();\r\n    let result = model.startOffset();\r\n    if (siblings[result].mode === 'text') {\r\n        while (result >= 1 && siblings[result].mode === 'text') {\r\n            result--;\r\n        }\r\n    }\r\n    else {\r\n        // Find the first 'mrel', etc... to the left of the insertion point\r\n        while (result >= 1 &&\r\n            /^(mord|surd|msubsup|leftright|mop)$/.test(siblings[result].type)) {\r\n            result--;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @param cb - A callback called for each selected atom in the\r\n * mathlist.\r\n */\r\nfunction forEachSelected(model, cb, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    options.recursive = (_a = options.recursive) !== null && _a !== void 0 ? _a : false;\r\n    const siblings = model.siblings();\r\n    const firstOffset = model.startOffset() + 1;\r\n    const lastOffset = model.endOffset() + 1;\r\n    if (options.recursive) {\r\n        for (let i = firstOffset; i < lastOffset; i++) {\r\n            if (siblings[i] && siblings[i].type !== 'first') {\r\n                siblings[i].forEach(cb);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (let i = firstOffset; i < lastOffset; i++) {\r\n            if (siblings[i] && siblings[i].type !== 'first') {\r\n                cb(siblings[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getContentFromSiblings(model, start, end) {\r\n    const siblings = model.siblings();\r\n    if (isEmptyMathlist(siblings))\r\n        return '';\r\n    if (siblings[0].type === 'first' && start === 0) {\r\n        start = 1;\r\n    }\r\n    if (model.parent().type === 'root' &&\r\n        start === 1 &&\r\n        end === siblings.length - 1) {\r\n        // It's the entire sibling list. Get the parent's latex\r\n        return model.parent().toLatex(false);\r\n    }\r\n    let result = '';\r\n    let i = start;\r\n    while (i <= end) {\r\n        result += siblings[i].toLatex(false);\r\n        i++;\r\n    }\r\n    return result;\r\n}\r\nfunction wordBoundary(model, path, dir) {\r\n    dir = dir < 0 ? -1 : +1;\r\n    const iter = new ModelPrivate();\r\n    iter.path = clone(path);\r\n    iter.root = model.root;\r\n    let i = 0;\r\n    while (iter.sibling(i) &&\r\n        iter.sibling(i).mode === 'text' &&\r\n        LETTER_AND_DIGITS.test(iter.sibling(i).body)) {\r\n        i += dir;\r\n    }\r\n    if (!iter.sibling(i))\r\n        i -= dir;\r\n    iter.path[iter.path.length - 1].offset += i;\r\n    return iter.path;\r\n}\r\n/*\r\n * Calculates the offset of the \"next word\".\r\n * This is inspired by the behavior of text editors on macOS, namely:\r\n    blue   yellow\r\n      ^-\r\n         ^-------\r\n * That is:\r\n\n * (1) If starts with an alphanumerical character, find the first alphanumerical\r\n * character which is followed by a non-alphanumerical character\r\n *\r\n * The behavior regarding non-alphanumeric characters is less consistent.\r\n * Here's the behavior we use:\r\n *\r\n *   +=-()_:”     blue\r\n * ^---------\r\n *   +=-()_:”     blue\r\n *      ^---------\r\n *   +=-()_:”blue\r\n *      ^--------\r\n *\r\n * (2) If starts in whitespace, skip whitespace, then find first non-whitespace*\r\n *    followed by whitespace\r\n * (*) Pages actually uses the character class of the first non-whitespace\r\n * encountered.\r\n *\r\n * (3) If starts in a non-whitespace, non alphanumerical character, find the first\r\n *      whitespace\r\n *\r\n */\r\nfunction wordBoundaryOffset(model, offset, dir) {\r\n    dir = dir < 0 ? -1 : +1;\r\n    const siblings = model.siblings();\r\n    if (!siblings[offset])\r\n        return offset;\r\n    if (siblings[offset].mode !== 'text')\r\n        return offset;\r\n    let result;\r\n    if (LETTER_AND_DIGITS.test(siblings[offset].body)) {\r\n        // (1) We start with an alphanumerical character\r\n        let i = offset;\r\n        let match;\r\n        do {\r\n            match =\r\n                siblings[i].mode === 'text' &&\r\n                    LETTER_AND_DIGITS.test(siblings[i].body);\r\n            i += dir;\r\n        } while (siblings[i] && match);\r\n        result = siblings[i] ? i - 2 * dir : i - dir;\r\n    }\r\n    else if (/\\s/.test(siblings[offset].body)) {\r\n        // (2) We start with whitespace\r\n        // Skip whitespace\r\n        let i = offset;\r\n        while (siblings[i] &&\r\n            siblings[i].mode === 'text' &&\r\n            /\\s/.test(siblings[i].body)) {\r\n            i += dir;\r\n        }\r\n        if (!siblings[i]) {\r\n            // We've reached the end\r\n            result = i - dir;\r\n        }\r\n        else {\r\n            let match = true;\r\n            do {\r\n                match =\r\n                    siblings[i].mode === 'text' &&\r\n                        !/\\s/.test(siblings[i].body);\r\n                i += dir;\r\n            } while (siblings[i] && match);\r\n            result = siblings[i] ? i - 2 * dir : i - dir;\r\n        }\r\n    }\r\n    else {\r\n        // (3)\r\n        let i = offset;\r\n        // Skip non-whitespace\r\n        while (siblings[i] &&\r\n            siblings[i].mode === 'text' &&\r\n            !/\\s/.test(siblings[i].body)) {\r\n            i += dir;\r\n        }\r\n        result = siblings[i] ? i : i - dir;\r\n        let match = true;\r\n        while (siblings[i] && match) {\r\n            match =\r\n                siblings[i].mode === 'text' &&\r\n                    /\\s/.test(siblings[i].body);\r\n            if (match)\r\n                result = i;\r\n            i += dir;\r\n        }\r\n        result = siblings[i] ? i - 2 * dir : i - dir;\r\n    }\r\n    return result - (dir > 0 ? 0 : 1);\r\n}\r\n/**\r\n * Iterate over each atom in the expression, starting with the focus.\r\n *\r\n * Return an array of all the paths for which the callback predicate\r\n * returned true.\r\n *\r\n * @param {function} cb - A predicate being passed a path and the atom at this\r\n * path. Return true to include the designated atom in the result.\r\n * @param {number} dir - `+1` to iterate forward, `-1` to iterate backward.\r\n * @return The paths (as a string) for all the atoms which the predicate is true\r\n */\r\nfunction filter(model, cb, dir = +1) {\r\n    dir = dir < 0 ? -1 : +1;\r\n    const result = [];\r\n    const iter = new ModelPrivate();\r\n    iter.path = clone(model.path);\r\n    iter.extent = model.extent;\r\n    iter.root = model.root;\r\n    if (dir >= 0) {\r\n        collapseSelectionForward(iter);\r\n    }\r\n    else {\r\n        collapseSelectionBackward(iter);\r\n        move(iter, 'forward');\r\n    }\r\n    const initialAnchor = getAnchor(iter);\r\n    do {\r\n        if (cb(getAnchor(iter), iter)) {\r\n            result.push(iter.toString());\r\n        }\r\n        if (dir >= 0) {\r\n            next(iter, { iterateAll: true });\r\n        }\r\n        else {\r\n            previous(iter, { iterateAll: true });\r\n        }\r\n    } while (initialAnchor !== getAnchor(iter));\r\n    return result;\r\n}\n\nconst DEFAULT_KEYBOARD_LAYOUT = platform() === 'apple'\r\n    ? {\r\n        id: 'apple.en-intl',\r\n        displayName: 'English (international)',\r\n        platform: 'apple',\r\n        locale: 'en',\r\n        score: 0,\r\n        mapping: {\r\n            KeyA: ['a', 'A', 'å', 'Å'],\r\n            KeyB: ['b', 'B', '∫', 'ı'],\r\n            KeyC: ['c', 'C', 'ç', 'Ç'],\r\n            KeyD: ['d', 'D', '∂', 'Î'],\r\n            KeyE: ['e', 'E', '´', '´'],\r\n            KeyF: ['f', 'F', 'ƒ', 'Ï'],\r\n            KeyG: ['g', 'G', '©', '˝'],\r\n            KeyH: ['h', 'H', '˙', 'Ó'],\r\n            KeyI: ['i', 'I', 'ˆ', 'ˆ'],\r\n            KeyJ: ['j', 'J', '∆', 'Ô'],\r\n            KeyK: ['k', 'K', '˚', ''],\r\n            KeyL: ['l', 'L', '¬', 'Ò'],\r\n            KeyM: ['m', 'M', 'µ', 'Â'],\r\n            KeyN: ['n', 'N', '˜', '˜'],\r\n            KeyO: ['o', 'O', 'ø', 'Ø'],\r\n            KeyP: ['p', 'P', 'π', '∏'],\r\n            KeyQ: ['q', 'Q', 'œ', 'Œ'],\r\n            KeyR: ['r', 'R', '®', '‰'],\r\n            KeyS: ['s', 'S', 'ß', 'Í'],\r\n            KeyT: ['t', 'T', '†', 'ˇ'],\r\n            KeyU: ['u', 'U', '¨', '¨'],\r\n            KeyV: ['v', 'V', '√', '◊'],\r\n            KeyW: ['w', 'W', '∑', '„'],\r\n            KeyX: ['x', 'X', '≈', '˛'],\r\n            KeyY: ['y', 'Y', '¥', 'Á'],\r\n            KeyZ: ['z', 'Z', 'Ω', '¸'],\r\n            Digit1: ['1', '!', '¡', '⁄'],\r\n            Digit2: ['2', '@', '™', '€'],\r\n            Digit3: ['3', '#', '£', '‹'],\r\n            Digit4: ['4', '$', '¢', '›'],\r\n            Digit5: ['5', '%', '∞', 'ﬁ'],\r\n            Digit6: ['6', 'ˆ', '§', 'ﬂ'],\r\n            Digit7: ['7', '&', '¶', '‡'],\r\n            Digit8: ['8', '*', '•', '°'],\r\n            Digit9: ['9', '(', 'ª', '·'],\r\n            Digit0: ['0', ')', 'º', '‚'],\r\n            Space: [' ', ' ', ' ', ' '],\r\n            Minus: ['-', '_', '–', '—'],\r\n            Equal: ['=', '+', '≠', '±'],\r\n            BracketLeft: ['[', '{', '“', '”'],\r\n            BracketRight: [']', '}', '‘', '’'],\r\n            Backslash: ['\\\\', '|', '«', '»'],\r\n            Semicolon: [';', ':', '…', 'Ú'],\r\n            Quote: [\"'\", '\"', 'æ', 'Æ'],\r\n            Backquote: ['`', '˜', '`', '`'],\r\n            Comma: [',', '<', '≤', '¯'],\r\n            Period: ['.', '>', '≥', '˘'],\r\n            Slash: ['/', '?', '÷', '¿'],\r\n            NumpadDivide: ['/', '/', '/', '/'],\r\n            NumpadMultiply: ['*', '*', '*', '*'],\r\n            NumpadSubtract: ['-', '-', '-', '-'],\r\n            NumpadAdd: ['+', '+', '+', '+'],\r\n            Numpad1: ['1', '1', '1', '1'],\r\n            Numpad2: ['2', '2', '2', '2'],\r\n            Numpad3: ['3', '3', '3', '3'],\r\n            Numpad4: ['4', '4', '4', '4'],\r\n            Numpad5: ['5', '5', '5', '5'],\r\n            Numpad6: ['6', '6', '6', '6'],\r\n            Numpad7: ['7', '7', '7', '7'],\r\n            Numpad8: ['8', '8', '8', '8'],\r\n            Numpad9: ['9', '9', '9', '9'],\r\n            Numpad0: ['0', '0', '0', '0'],\r\n            NumpadDecimal: ['.', '.', '.', '.'],\r\n            IntlBackslash: ['§', '±', '§', '±'],\r\n            NumpadEqual: ['=', '=', '=', '='],\r\n            AudioVolumeUp: ['', '=', '', '='],\r\n        },\r\n    }\r\n    : platform() === 'windows'\r\n        ? {\r\n            id: 'windows.en-intl',\r\n            displayName: 'English (international)',\r\n            platform: 'windows',\r\n            locale: 'en',\r\n            score: 0,\r\n            mapping: {\r\n                KeyA: ['a', 'A', 'á', 'Á'],\r\n                KeyB: ['b', 'B', '', ''],\r\n                KeyC: ['c', 'C', '©', '¢'],\r\n                KeyD: ['d', 'D', 'ð', 'Ð'],\r\n                KeyE: ['e', 'E', 'é', 'É'],\r\n                KeyF: ['f', 'F', '', ''],\r\n                KeyG: ['g', 'G', '', ''],\r\n                KeyH: ['h', 'H', '', ''],\r\n                KeyI: ['i', 'I', 'í', 'Í'],\r\n                KeyJ: ['j', 'J', '', ''],\r\n                KeyK: ['k', 'K', '', ''],\r\n                KeyL: ['l', 'L', 'ø', 'Ø'],\r\n                KeyM: ['m', 'M', 'µ', ''],\r\n                KeyN: ['n', 'N', 'ñ', 'Ñ'],\r\n                KeyO: ['o', 'O', 'ó', 'Ó'],\r\n                KeyP: ['p', 'P', 'ö', 'Ö'],\r\n                KeyQ: ['q', 'Q', 'ä', 'Ä'],\r\n                KeyR: ['r', 'R', '®', ''],\r\n                KeyS: ['s', 'S', 'ß', '§'],\r\n                KeyT: ['t', 'T', 'þ', 'Þ'],\r\n                KeyU: ['u', 'U', 'ú', 'Ú'],\r\n                KeyV: ['v', 'V', '', ''],\r\n                KeyW: ['w', 'W', 'å', 'Å'],\r\n                KeyX: ['x', 'X', '', ''],\r\n                KeyY: ['y', 'Y', 'ü', 'Ü'],\r\n                KeyZ: ['z', 'Z', 'æ', 'Æ'],\r\n                Digit1: ['1', '!', '¡', '¹'],\r\n                Digit2: ['2', '@', '²', ''],\r\n                Digit3: ['3', '#', '³', ''],\r\n                Digit4: ['4', '$', '¤', '£'],\r\n                Digit5: ['5', '%', '€', ''],\r\n                Digit6: ['6', '^', '¼', ''],\r\n                Digit7: ['7', '&', '½', ''],\r\n                Digit8: ['8', '*', '¾', ''],\r\n                Digit9: ['9', '(', '‘', ''],\r\n                Digit0: ['0', ')', '’', ''],\r\n                Space: [' ', ' ', '', ''],\r\n                Minus: ['-', '_', '¥', ''],\r\n                Equal: ['=', '+', '×', '÷'],\r\n                BracketLeft: ['[', '{', '«', ''],\r\n                BracketRight: [']', '}', '»', ''],\r\n                Backslash: ['\\\\', '|', '¬', '¦'],\r\n                Semicolon: [';', ':', '¶', '°'],\r\n                Quote: [\"'\", '\"', '´', '¨'],\r\n                Backquote: ['`', '~', '', ''],\r\n                Comma: [',', '<', 'ç', 'Ç'],\r\n                Period: ['.', '>', '', ''],\r\n                Slash: ['/', '?', '¿', ''],\r\n                NumpadDivide: ['/', '/', '', ''],\r\n                NumpadMultiply: ['*', '*', '', ''],\r\n                NumpadSubtract: ['-', '-', '', ''],\r\n                NumpadAdd: ['+', '+', '', ''],\r\n                IntlBackslash: ['\\\\', '|', '', ''],\r\n            },\r\n        }\r\n        : {\r\n            id: 'linux.en',\r\n            displayName: 'English',\r\n            platform: 'linux',\r\n            locale: 'en',\r\n            score: 0,\r\n            mapping: {\r\n                KeyA: ['a', 'A', 'a', 'A'],\r\n                KeyB: ['b', 'B', 'b', 'B'],\r\n                KeyC: ['c', 'C', 'c', 'C'],\r\n                KeyD: ['d', 'D', 'd', 'D'],\r\n                KeyE: ['e', 'E', 'e', 'E'],\r\n                KeyF: ['f', 'F', 'f', 'F'],\r\n                KeyG: ['g', 'G', 'g', 'G'],\r\n                KeyH: ['h', 'H', 'h', 'H'],\r\n                KeyI: ['i', 'I', 'i', 'I'],\r\n                KeyJ: ['j', 'J', 'j', 'J'],\r\n                KeyK: ['k', 'K', 'k', 'K'],\r\n                KeyL: ['l', 'L', 'l', 'L'],\r\n                KeyM: ['m', 'M', 'm', 'M'],\r\n                KeyN: ['n', 'N', 'n', 'N'],\r\n                KeyO: ['o', 'O', 'o', 'O'],\r\n                KeyP: ['p', 'P', 'p', 'P'],\r\n                KeyQ: ['q', 'Q', 'q', 'Q'],\r\n                KeyR: ['r', 'R', 'r', 'R'],\r\n                KeyS: ['s', 'S', 's', 'S'],\r\n                KeyT: ['t', 'T', 't', 'T'],\r\n                KeyU: ['u', 'U', 'u', 'U'],\r\n                KeyV: ['v', 'V', 'v', 'V'],\r\n                KeyW: ['w', 'W', 'w', 'W'],\r\n                KeyX: ['x', 'X', 'x', 'X'],\r\n                KeyY: ['y', 'Y', 'y', 'Y'],\r\n                KeyZ: ['z', 'Z', 'z', 'Z'],\r\n                Digit1: ['1', '!', '1', '!'],\r\n                Digit2: ['2', '@', '2', '@'],\r\n                Digit3: ['3', '#', '3', '#'],\r\n                Digit4: ['4', '$', '4', '$'],\r\n                Digit5: ['5', '%', '5', '%'],\r\n                Digit6: ['6', '^', '6', '^'],\r\n                Digit7: ['7', '&', '7', '&'],\r\n                Digit8: ['8', '*', '8', '*'],\r\n                Digit9: ['9', '(', '9', '('],\r\n                Digit0: ['0', ')', '0', ')'],\r\n                Space: [' ', ' ', ' ', ' '],\r\n                Minus: ['-', '_', '-', '_'],\r\n                Equal: ['=', '+', '=', '+'],\r\n                BracketLeft: ['[', '{', '[', '{'],\r\n                BracketRight: [']', '}', ']', '}'],\r\n                Backslash: ['\\\\', '|', '\\\\', '|'],\r\n                Semicolon: [';', ':', ';', ':'],\r\n                Quote: [\"'\", '\"', \"'\", '\"'],\r\n                Backquote: ['`', '~', '`', '~'],\r\n                Comma: [',', '<', ',', '<'],\r\n                Period: ['.', '>', '.', '>'],\r\n                Slash: ['/', '?', '/', '?'],\r\n                NumpadDivide: ['/', '/', '/', '/'],\r\n                NumpadMultiply: ['*', '*', '*', '*'],\r\n                NumpadSubtract: ['-', '-', '-', '-'],\r\n                NumpadAdd: ['+', '+', '+', '+'],\r\n                Numpad1: ['1', '1', '1', '1'],\r\n                Numpad2: ['2', '2', '2', '2'],\r\n                Numpad3: ['3', '3', '3', '3'],\r\n                Numpad4: ['4', '4', '4', '4'],\r\n                Numpad5: ['5', '5', '5', '5'],\r\n                Numpad6: ['6', '6', '6', '6'],\r\n                Numpad7: ['7', '7', '7', '7'],\r\n                Numpad8: ['8', '8', '8', '8'],\r\n                Numpad9: ['9', '9', '9', '9'],\r\n                Numpad0: ['0', '0', '0', '0'],\r\n                NumpadDecimal: ['', '.', '', '.'],\r\n                IntlBackslash: ['<', '>', '|', '¦'],\r\n                NumpadEqual: ['=', '=', '=', '='],\r\n                NumpadComma: ['.', '.', '.', '.'],\r\n                NumpadParenLeft: ['(', '(', '(', '('],\r\n                NumpadParenRight: [')', ')', ')', ')'],\r\n            },\r\n        };\r\n/* prettier-ignore */\r\nconst BASE_LAYOUT_MAPPING = {\r\n    enter: '[Enter]',\r\n    escape: '[Escape]',\r\n    backspace: '[Backspace]',\r\n    tab: '[Tab]',\r\n    space: '[Space]',\r\n    pausebreak: '[Pause]',\r\n    insert: '[Insert]',\r\n    home: '[Home]',\r\n    pageup: '[PageUp]',\r\n    delete: '[Delete]',\r\n    end: '[End]',\r\n    pagedown: '[PageDown]',\r\n    right: '[ArrowRight]',\r\n    left: '[ArrowLeft]',\r\n    down: '[ArrowDown]',\r\n    up: '[ArrowUp]',\r\n    numpad0: '[Numpad0]',\r\n    numpad1: '[Numpad1]',\r\n    numpad2: '[Numpad2]',\r\n    numpad3: '[Numpad3]',\r\n    numpad4: '[Numpad4]',\r\n    numpad5: '[Numpad5]',\r\n    numpad6: '[Numpad6]',\r\n    numpad7: '[Numpad7]',\r\n    numpad8: '[Numpad8]',\r\n    numpad9: '[Numpad9]',\r\n    'numpad_divide': '[NumpadDivide]',\r\n    'numpad_multiply': '[NumpadMultiply]',\r\n    'numpad_subtract': '[NumpadSubtract]',\r\n    'numpad_add': '[NumpadAdd]',\r\n    'numpad_decimal': '[NumpadDecimal]',\r\n    'numpad_separator': '[NumpadComma]',\r\n    capslock: '[Capslock]',\r\n    f1: '[F1]',\r\n    f2: '[F2]',\r\n    f3: '[F3]',\r\n    f4: '[F4]',\r\n    f5: '[F5]',\r\n    f6: '[F6]',\r\n    f7: '[F7]',\r\n    f8: '[F8]',\r\n    f9: '[F9]',\r\n    f10: '[F10]',\r\n    f11: '[F11]',\r\n    f12: '[F12]',\r\n    f13: '[F13]',\r\n    f14: '[F14]',\r\n    f15: '[F15]',\r\n    f16: '[F16]',\r\n    f17: '[F17]',\r\n    f18: '[F18]',\r\n    f19: '[F19]',\r\n};\r\nconst gKeyboardLayouts = [];\r\nlet gKeyboardLayout;\r\nfunction platform() {\r\n    let result = 'linux';\r\n    if ((navigator === null || navigator === void 0 ? void 0 : navigator.platform) && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\r\n        if (/^(mac)/i.test(navigator.platform)) {\r\n            result = 'apple';\r\n        }\r\n        else if (/^(win)/i.test(navigator.platform)) {\r\n            result = 'windows';\r\n        }\r\n        else if (/(android)/i.test(navigator.userAgent)) {\r\n            result = 'linux';\r\n        }\r\n        else if (/(iphone)/i.test(navigator.userAgent) ||\r\n            /(ipod)/i.test(navigator.userAgent) ||\r\n            /(ipad)/i.test(navigator.userAgent)) {\r\n            result = 'apple';\r\n        }\r\n        else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\r\n            result = 'linux';\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction register$1(layout) {\r\n    if (layout.platform === platform()) {\r\n        gKeyboardLayouts.push(layout);\r\n    }\r\n}\r\n/** Given the current estimated keyboard layout,\r\n *  return the unmodified key for the event.\r\n * For example, on AZERTY option+shift+'A' = 'Æ' -> 'a'\r\n * (event though the code is KeyQ)\r\n */\r\n// export function getUnmodifiedKey(evt: KeyboardEvent): string {\r\n//     if (!evt.shiftKey && !evt.altKey) {\r\n//         return evt.key;\r\n//     }\r\n//     // @todo: iterate over the entries for the current layout,\r\n//     // with the alt+shift modifiers set accordingly\r\n//     // and find the (first) entry that matches\r\n//     const layout = gKeyboardLayouts[0] ?? DEFAULT_KEYBOARD_LAYOUT;\r\n//     const index =\r\n//         evt.shiftKey && evt.altKey ? 3 : evt.altKey ? 2 : evt.shiftKey ? 1 : 0;\r\n//     for (const [key, value] of Object.entries(layout.mapping)) {\r\n//         if (key === evt.code && value[index] === evt.key) {\r\n//             return value[0];\r\n//         }\r\n//     }\r\n//     // We did not find a perfect match...\r\n//     // Look for an entry even if the keycode doesn't match...\r\n//     for (const [, value] of Object.entries(layout.mapping)) {\r\n//         if (value[index] === evt.key) {\r\n//             return value[0];\r\n//         }\r\n//     }\r\n//     // Really? Nothing matched?! Just return the key...\r\n//     return evt.key;\r\n// }\r\nfunction getCodeForKey(k) {\r\n    var _a, _b;\r\n    const layout = (_a = getActiveKeyboardLayout()) !== null && _a !== void 0 ? _a : DEFAULT_KEYBOARD_LAYOUT;\r\n    for (const [key, value] of Object.entries(layout.mapping)) {\r\n        if (value[0] === k)\r\n            return '[' + key + ']';\r\n        if (value[1] === k)\r\n            return 'shift+[' + key + ']';\r\n        if (value[2] === k)\r\n            return 'alt+[' + key + ']';\r\n        if (value[3] === k)\r\n            return 'shift+alt+[' + key + ']';\r\n    }\r\n    return (_b = BASE_LAYOUT_MAPPING[k]) !== null && _b !== void 0 ? _b : '';\r\n}\r\nfunction normalizeKeyboardEvent(evt) {\r\n    if (!evt.code) {\r\n        // For virtual keyboards (iOS, Android) and Microsoft Edge (!)\r\n        // the `evt.code`, which represents the physical key pressed, is set\r\n        // to undefined. In that case, map the virtual key (\"q\") to a\r\n        // pseudo-hardware key (\"KeyQ\")\r\n        const mapping = Object.entries(getActiveKeyboardLayout().mapping);\r\n        let altKey = false;\r\n        let shiftKey = false;\r\n        let code;\r\n        for (let index = 0; index < 4; index++) {\r\n            for (const [key, value] of mapping) {\r\n                if (value[index] === evt.key) {\r\n                    code = key;\r\n                    if (index === 3) {\r\n                        altKey = true;\r\n                        shiftKey = true;\r\n                    }\r\n                    else if (index === 2) {\r\n                        altKey = true;\r\n                    }\r\n                    else if (index === 1) {\r\n                        shiftKey = true;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (code)\r\n                break;\r\n        }\r\n        return new KeyboardEvent(evt.type, { ...evt, altKey, shiftKey, code });\r\n    }\r\n    return new KeyboardEvent(evt.type, evt);\r\n}\r\n// Given this keyboard event, and the `code`, `key` and modifiers\r\n// in it, increase the score of layouts that do match it.\r\n// Calling repeatedly this function will improve the accuracy of the\r\n// keyboard layout estimate.\r\nfunction validateKeyboardLayout(evt) {\r\n    const index = evt.shiftKey && evt.altKey ? 3 : evt.altKey ? 2 : evt.shiftKey ? 1 : 0;\r\n    if (evt.key === 'Unidentified')\r\n        return;\r\n    // Dead keys do not have enough info to validate the keyboard\r\n    // (we dont' know what char they could produce, only the physical key associated with them )\r\n    if (evt.key === 'Dead')\r\n        return;\r\n    const layouts = gKeyboardLayouts.filter((layout) => { var _a; return ((_a = layout.mapping[evt.code]) === null || _a === void 0 ? void 0 : _a[index]) === evt.key; });\r\n    if (layouts.length === 0)\r\n        return;\r\n    // Increase the score of the layouts that have a mapping compatible with this keyboard event.\r\n    layouts.forEach((x) => {\r\n        x.score += 1;\r\n    });\r\n    gKeyboardLayouts.sort((a, b) => b.score - a.score);\r\n}\r\nfunction setKeyboardLayoutLocale(locale) {\r\n    gKeyboardLayout = gKeyboardLayouts.find((x) => locale.startsWith(x.locale));\r\n}\r\nfunction getActiveKeyboardLayout() {\r\n    return gKeyboardLayout !== null && gKeyboardLayout !== void 0 ? gKeyboardLayout : gKeyboardLayouts[0];\r\n}\r\nregister$1(DEFAULT_KEYBOARD_LAYOUT);\r\nregister$1({\r\n    id: 'apple.french',\r\n    locale: 'fr',\r\n    displayName: 'French',\r\n    platform: 'apple',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['q', 'Q', '‡', 'Ω'],\r\n        KeyB: ['b', 'B', 'ß', '∫'],\r\n        KeyC: ['c', 'C', '©', '¢'],\r\n        KeyD: ['d', 'D', '∂', '∆'],\r\n        KeyE: ['e', 'E', 'ê', 'Ê'],\r\n        KeyF: ['f', 'F', 'ƒ', '·'],\r\n        KeyG: ['g', 'G', 'ﬁ', 'ﬂ'],\r\n        KeyH: ['h', 'H', 'Ì', 'Î'],\r\n        KeyI: ['i', 'I', 'î', 'ï'],\r\n        KeyJ: ['j', 'J', 'Ï', 'Í'],\r\n        KeyK: ['k', 'K', 'È', 'Ë'],\r\n        KeyL: ['l', 'L', '¬', '|'],\r\n        KeyM: [',', '?', '∞', '¿'],\r\n        KeyN: ['n', 'N', '~', 'ı'],\r\n        KeyO: ['o', 'O', 'œ', 'Œ'],\r\n        KeyP: ['p', 'P', 'π', '∏'],\r\n        KeyQ: ['a', 'A', 'æ', 'Æ'],\r\n        KeyR: ['r', 'R', '®', '‚'],\r\n        KeyS: ['s', 'S', 'Ò', '∑'],\r\n        KeyT: ['t', 'T', '†', '™'],\r\n        KeyU: ['u', 'U', 'º', 'ª'],\r\n        KeyV: ['v', 'V', '◊', '√'],\r\n        KeyW: ['z', 'Z', 'Â', 'Å'],\r\n        KeyX: ['x', 'X', '≈', '⁄'],\r\n        KeyY: ['y', 'Y', 'Ú', 'Ÿ'],\r\n        KeyZ: ['w', 'W', '‹', '›'],\r\n        Digit1: ['&', '1', '', '´'],\r\n        Digit2: ['é', '2', 'ë', '„'],\r\n        Digit3: ['\"', '3', '“', '”'],\r\n        Digit4: [\"'\", '4', '‘', '’'],\r\n        Digit5: ['(', '5', '{', '['],\r\n        Digit6: ['§', '6', '¶', 'å'],\r\n        Digit7: ['è', '7', '«', '»'],\r\n        Digit8: ['!', '8', '¡', 'Û'],\r\n        Digit9: ['ç', '9', 'Ç', 'Á'],\r\n        Digit0: ['à', '0', 'ø', 'Ø'],\r\n        Space: [' ', ' ', ' ', ' '],\r\n        Minus: [')', '°', '}', ']'],\r\n        Equal: ['-', '_', '—', '–'],\r\n        BracketLeft: ['^', '¨', 'ô', 'Ô'],\r\n        BracketRight: ['$', '*', '€', '¥'],\r\n        Backslash: ['`', '£', '@', '#'],\r\n        Semicolon: ['m', 'M', 'µ', 'Ó'],\r\n        Quote: ['ù', '%', 'Ù', '‰'],\r\n        Backquote: ['<', '>', '≤', '≥'],\r\n        Comma: [';', '.', '…', '•'],\r\n        Period: [':', '/', '÷', '\\\\'],\r\n        Slash: ['=', '+', '≠', '±'],\r\n        NumpadDivide: ['/', '/', '/', '/'],\r\n        NumpadMultiply: ['*', '*', '*', '*'],\r\n        NumpadSubtract: ['-', '-', '-', '-'],\r\n        NumpadAdd: ['+', '+', '+', '+'],\r\n        NumpadDecimal: [',', '.', ',', '.'],\r\n        IntlBackslash: ['@', '#', '•', 'Ÿ'],\r\n        NumpadEqual: ['=', '=', '=', '='],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'apple.spanish',\r\n    locale: 'es',\r\n    displayName: 'Spanish ISO',\r\n    platform: 'apple',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['a', 'A', 'å', 'Å'],\r\n        KeyB: ['b', 'B', 'ß', ''],\r\n        KeyC: ['c', 'C', '©', ' '],\r\n        KeyD: ['d', 'D', '∂', '∆'],\r\n        KeyE: ['e', 'E', '€', '€'],\r\n        KeyF: ['f', 'F', 'ƒ', 'ﬁ'],\r\n        KeyG: ['g', 'G', '', 'ﬂ'],\r\n        KeyH: ['h', 'H', '™', ' '],\r\n        KeyI: ['i', 'I', ' ', ' '],\r\n        KeyJ: ['j', 'J', '¶', '¯'],\r\n        KeyK: ['k', 'K', '§', 'ˇ'],\r\n        KeyL: ['l', 'L', ' ', '˘'],\r\n        KeyM: ['m', 'M', 'µ', '˚'],\r\n        KeyN: ['n', 'N', ' ', '˙'],\r\n        KeyO: ['o', 'O', 'ø', 'Ø'],\r\n        KeyP: ['p', 'P', 'π', '∏'],\r\n        KeyQ: ['q', 'Q', 'œ', 'Œ'],\r\n        KeyR: ['r', 'R', '®', ' '],\r\n        KeyS: ['s', 'S', '∫', ' '],\r\n        KeyT: ['t', 'T', '†', '‡'],\r\n        KeyU: ['u', 'U', ' ', ' '],\r\n        KeyV: ['v', 'V', '√', '◊'],\r\n        KeyW: ['w', 'W', 'æ', 'Æ'],\r\n        KeyX: ['x', 'X', '∑', '›'],\r\n        KeyY: ['y', 'Y', '¥', ' '],\r\n        KeyZ: ['z', 'Z', 'Ω', '‹'],\r\n        Digit1: ['1', '!', '|', 'ı'],\r\n        Digit2: ['2', '\"', '@', '˝'],\r\n        Digit3: ['3', '·', '#', '•'],\r\n        Digit4: ['4', '$', '¢', '£'],\r\n        Digit5: ['5', '%', '∞', '‰'],\r\n        Digit6: ['6', '&', '¬', ' '],\r\n        Digit7: ['7', '/', '÷', '⁄'],\r\n        Digit8: ['8', '(', '“', '‘'],\r\n        Digit9: ['9', ')', '”', '’'],\r\n        Digit0: ['0', '=', '≠', '≈'],\r\n        Space: [' ', ' ', ' ', ' '],\r\n        Minus: [\"'\", '?', '´', '¸'],\r\n        Equal: ['¡', '¿', '‚', '˛'],\r\n        BracketLeft: ['`', '^', '[', 'ˆ'],\r\n        BracketRight: ['+', '*', ']', '±'],\r\n        Backslash: ['ç', 'Ç', '}', '»'],\r\n        Semicolon: ['ñ', 'Ñ', '~', '˜'],\r\n        Quote: ['´', '¨', '{', '«'],\r\n        Backquote: ['<', '>', '≤', '≥'],\r\n        Comma: [',', ';', '„', ''],\r\n        Period: ['.', ':', '…', '…'],\r\n        Slash: ['-', '_', '–', '—'],\r\n        NumpadDivide: ['/', '/', '/', '/'],\r\n        NumpadMultiply: ['*', '*', '*', '*'],\r\n        NumpadSubtract: ['-', '-', '-', '-'],\r\n        NumpadAdd: ['+', '+', '+', '+'],\r\n        Numpad1: ['1', '1', '1', '1'],\r\n        Numpad2: ['2', '2', '2', '2'],\r\n        Numpad3: ['3', '3', '3', '3'],\r\n        Numpad4: ['4', '4', '4', '4'],\r\n        Numpad5: ['5', '5', '5', '5'],\r\n        Numpad6: ['6', '6', '6', '6'],\r\n        Numpad7: ['7', '7', '7', '7'],\r\n        Numpad8: ['8', '8', '8', '8'],\r\n        Numpad9: ['9', '9', '9', '9'],\r\n        Numpad0: ['0', '0', '0', '0'],\r\n        NumpadDecimal: [',', ',', ',', ','],\r\n        IntlBackslash: ['º', 'ª', '\\\\', '°'],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'windows.spanish',\r\n    locale: 'es',\r\n    displayName: 'Spanish',\r\n    platform: 'windows',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['a', 'A', '', ''],\r\n        KeyB: ['b', 'B', '', ''],\r\n        KeyC: ['c', 'C', '', ''],\r\n        KeyD: ['d', 'D', '', ''],\r\n        KeyE: ['e', 'E', '€', ''],\r\n        KeyF: ['f', 'F', '', ''],\r\n        KeyG: ['g', 'G', '', ''],\r\n        KeyH: ['h', 'H', '', ''],\r\n        KeyI: ['i', 'I', '', ''],\r\n        KeyJ: ['j', 'J', '', ''],\r\n        KeyK: ['k', 'K', '', ''],\r\n        KeyL: ['l', 'L', '', ''],\r\n        KeyM: ['m', 'M', '', ''],\r\n        KeyN: ['n', 'N', '', ''],\r\n        KeyO: ['o', 'O', '', ''],\r\n        KeyP: ['p', 'P', '', ''],\r\n        KeyQ: ['q', 'Q', '', ''],\r\n        KeyR: ['r', 'R', '', ''],\r\n        KeyS: ['s', 'S', '', ''],\r\n        KeyT: ['t', 'T', '', ''],\r\n        KeyU: ['u', 'U', '', ''],\r\n        KeyV: ['v', 'V', '', ''],\r\n        KeyW: ['w', 'W', '', ''],\r\n        KeyX: ['x', 'X', '', ''],\r\n        KeyY: ['y', 'Y', '', ''],\r\n        KeyZ: ['z', 'Z', '', ''],\r\n        Digit1: ['1', '!', '|', ''],\r\n        Digit2: ['2', '\"', '@', ''],\r\n        Digit3: ['3', '·', '#', ''],\r\n        Digit4: ['4', '$', '~', ''],\r\n        Digit5: ['5', '%', '€', ''],\r\n        Digit6: ['6', '&', '¬', ''],\r\n        Digit7: ['7', '/', '', ''],\r\n        Digit8: ['8', '(', '', ''],\r\n        Digit9: ['9', ')', '', ''],\r\n        Digit0: ['0', '=', '', ''],\r\n        Space: [' ', ' ', '', ''],\r\n        Minus: [\"'\", '?', '', ''],\r\n        Equal: ['¡', '¿', '', ''],\r\n        BracketLeft: ['`', '^', '[', ''],\r\n        BracketRight: ['+', '*', ']', ''],\r\n        Backslash: ['ç', 'Ç', '}', ''],\r\n        Semicolon: ['ñ', 'Ñ', '', ''],\r\n        Quote: ['´', '¨', '{', ''],\r\n        Backquote: ['º', 'ª', '\\\\', ''],\r\n        Comma: [',', ';', '', ''],\r\n        Period: ['.', ':', '', ''],\r\n        Slash: ['-', '_', '', ''],\r\n        NumpadDivide: ['/', '/', '', ''],\r\n        NumpadMultiply: ['*', '*', '', ''],\r\n        NumpadSubtract: ['-', '-', '', ''],\r\n        NumpadAdd: ['+', '+', '', ''],\r\n        IntlBackslash: ['<', '>', '', ''],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'linux.spanish',\r\n    locale: 'es',\r\n    displayName: 'Spanish',\r\n    platform: 'linux',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['a', 'A', 'æ', 'Æ'],\r\n        KeyB: ['b', 'B', '”', '’'],\r\n        KeyC: ['c', 'C', '¢', '©'],\r\n        KeyD: ['d', 'D', 'ð', 'Ð'],\r\n        KeyE: ['e', 'E', '€', '¢'],\r\n        KeyF: ['f', 'F', 'đ', 'ª'],\r\n        KeyG: ['g', 'G', 'ŋ', 'Ŋ'],\r\n        KeyH: ['h', 'H', 'ħ', 'Ħ'],\r\n        KeyI: ['i', 'I', '→', 'ı'],\r\n        KeyJ: ['j', 'J', '̉', '̛'],\r\n        KeyK: ['k', 'K', 'ĸ', '&'],\r\n        KeyL: ['l', 'L', 'ł', 'Ł'],\r\n        KeyM: ['m', 'M', 'µ', 'º'],\r\n        KeyN: ['n', 'N', 'n', 'N'],\r\n        KeyO: ['o', 'O', 'ø', 'Ø'],\r\n        KeyP: ['p', 'P', 'þ', 'Þ'],\r\n        KeyQ: ['q', 'Q', '@', 'Ω'],\r\n        KeyR: ['r', 'R', '¶', '®'],\r\n        KeyS: ['s', 'S', 'ß', '§'],\r\n        KeyT: ['t', 'T', 'ŧ', 'Ŧ'],\r\n        KeyU: ['u', 'U', '↓', '↑'],\r\n        KeyV: ['v', 'V', '“', '‘'],\r\n        KeyW: ['w', 'W', 'ł', 'Ł'],\r\n        KeyX: ['x', 'X', '»', '>'],\r\n        KeyY: ['y', 'Y', '←', '¥'],\r\n        KeyZ: ['z', 'Z', '«', '<'],\r\n        Digit1: ['1', '!', '|', '¡'],\r\n        Digit2: ['2', '\"', '@', '⅛'],\r\n        Digit3: ['3', '·', '#', '£'],\r\n        Digit4: ['4', '$', '~', '$'],\r\n        Digit5: ['5', '%', '½', '⅜'],\r\n        Digit6: ['6', '&', '¬', '⅝'],\r\n        Digit7: ['7', '/', '{', '⅞'],\r\n        Digit8: ['8', '(', '[', '™'],\r\n        Digit9: ['9', ')', ']', '±'],\r\n        Digit0: ['0', '=', '}', '°'],\r\n        Enter: ['\\r', '\\r', '\\r', '\\r'],\r\n        Escape: ['\\u001b', '\\u001b', '\\u001b', '\\u001b'],\r\n        Backspace: ['\\b', '\\b', '\\b', '\\b'],\r\n        Tab: ['\\t', '', '\\t', ''],\r\n        Space: [' ', ' ', ' ', ' '],\r\n        Minus: [\"'\", '?', '\\\\', '¿'],\r\n        Equal: ['¡', '¿', '̃', '~'],\r\n        BracketLeft: ['̀', '̂', '[', '̊'],\r\n        BracketRight: ['+', '*', ']', '̄'],\r\n        Backslash: ['ç', 'Ç', '}', '̆'],\r\n        Semicolon: ['ñ', 'Ñ', '~', '̋'],\r\n        Quote: ['́', '̈', '{', '{'],\r\n        Backquote: ['º', 'ª', '\\\\', '\\\\'],\r\n        Comma: [',', ';', '─', '×'],\r\n        Period: ['.', ':', '·', '÷'],\r\n        Slash: ['-', '_', '̣', '̇'],\r\n        NumpadDivide: ['/', '/', '/', '/'],\r\n        NumpadMultiply: ['*', '*', '*', '*'],\r\n        NumpadSubtract: ['-', '-', '-', '-'],\r\n        NumpadAdd: ['+', '+', '+', '+'],\r\n        NumpadEnter: ['\\r', '\\r', '\\r', '\\r'],\r\n        Numpad1: ['', '1', '', '1'],\r\n        Numpad2: ['', '2', '', '2'],\r\n        Numpad3: ['', '3', '', '3'],\r\n        Numpad4: ['', '4', '', '4'],\r\n        Numpad5: ['', '5', '', '5'],\r\n        Numpad6: ['', '6', '', '6'],\r\n        Numpad7: ['', '7', '', '7'],\r\n        Numpad8: ['', '8', '', '8'],\r\n        Numpad9: ['', '9', '', '9'],\r\n        Numpad0: ['', '0', '', '0'],\r\n        NumpadDecimal: ['', '.', '', '.'],\r\n        IntlBackslash: ['<', '>', '|', '¦'],\r\n        NumpadEqual: ['=', '=', '=', '='],\r\n        NumpadComma: ['.', '.', '.', '.'],\r\n        NumpadParenLeft: ['(', '(', '(', '('],\r\n        NumpadParenRight: [')', ')', ')', ')'],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'linux.french',\r\n    locale: 'fr',\r\n    displayName: 'French',\r\n    platform: 'apple',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['q', 'Q', '@', 'Ω'],\r\n        KeyB: ['b', 'B', '”', '’'],\r\n        KeyC: ['c', 'C', '¢', '©'],\r\n        KeyD: ['d', 'D', 'ð', 'Ð'],\r\n        KeyE: ['e', 'E', '€', '¢'],\r\n        KeyF: ['f', 'F', 'đ', 'ª'],\r\n        KeyG: ['g', 'G', 'ŋ', 'Ŋ'],\r\n        KeyH: ['h', 'H', 'ħ', 'Ħ'],\r\n        KeyI: ['i', 'I', '→', 'ı'],\r\n        KeyJ: ['j', 'J', '̉', '̛'],\r\n        KeyK: ['k', 'K', 'ĸ', '&'],\r\n        KeyL: ['l', 'L', 'ł', 'Ł'],\r\n        KeyM: [',', '?', '́', '̋'],\r\n        KeyN: ['n', 'N', 'n', 'N'],\r\n        KeyO: ['o', 'O', 'ø', 'Ø'],\r\n        KeyP: ['p', 'P', 'þ', 'Þ'],\r\n        KeyQ: ['a', 'A', 'æ', 'Æ'],\r\n        KeyR: ['r', 'R', '¶', '®'],\r\n        KeyS: ['s', 'S', 'ß', '§'],\r\n        KeyT: ['t', 'T', 'ŧ', 'Ŧ'],\r\n        KeyU: ['u', 'U', '↓', '↑'],\r\n        KeyV: ['v', 'V', '“', '‘'],\r\n        KeyW: ['z', 'Z', '«', '<'],\r\n        KeyX: ['x', 'X', '»', '>'],\r\n        KeyY: ['y', 'Y', '←', '¥'],\r\n        KeyZ: ['w', 'W', 'ł', 'Ł'],\r\n        Digit1: ['&', '1', '¹', '¡'],\r\n        Digit2: ['é', '2', '~', '⅛'],\r\n        Digit3: ['\"', '3', '#', '£'],\r\n        Digit4: [\"'\", '4', '{', '$'],\r\n        Digit5: ['(', '5', '[', '⅜'],\r\n        Digit6: ['-', '6', '|', '⅝'],\r\n        Digit7: ['è', '7', '`', '⅞'],\r\n        Digit8: ['_', '8', '\\\\', '™'],\r\n        Digit9: ['ç', '9', '^', '±'],\r\n        Digit0: ['à', '0', '@', '°'],\r\n        Enter: ['\\r', '\\r', '\\r', '\\r'],\r\n        Escape: ['\\u001b', '\\u001b', '\\u001b', '\\u001b'],\r\n        Backspace: ['\\b', '\\b', '\\b', '\\b'],\r\n        Tab: ['\\t', '', '\\t', ''],\r\n        Space: [' ', ' ', ' ', ' '],\r\n        Minus: [')', '°', ']', '¿'],\r\n        Equal: ['=', '+', '}', '̨'],\r\n        BracketLeft: ['̂', '̈', '̈', '̊'],\r\n        BracketRight: ['$', '£', '¤', '̄'],\r\n        Backslash: ['*', 'µ', '̀', '̆'],\r\n        Semicolon: ['m', 'M', 'µ', 'º'],\r\n        Quote: ['ù', '%', '̂', '̌'],\r\n        Backquote: ['²', '~', '¬', '¬'],\r\n        Comma: [';', '.', '─', '×'],\r\n        Period: [':', '/', '·', '÷'],\r\n        Slash: ['!', '§', '̣', '̇'],\r\n        NumpadMultiply: ['*', '*', '*', '*'],\r\n        NumpadSubtract: ['-', '-', '-', '-'],\r\n        NumpadAdd: ['+', '+', '+', '+'],\r\n        NumpadDecimal: ['', '.', '', '.'],\r\n        IntlBackslash: ['<', '>', '|', '¦'],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'windows.french',\r\n    locale: 'fr',\r\n    displayName: 'French',\r\n    platform: 'windows',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['q', 'Q', '', ''],\r\n        KeyB: ['b', 'B', '', ''],\r\n        KeyC: ['c', 'C', '', ''],\r\n        KeyD: ['d', 'D', '', ''],\r\n        KeyE: ['e', 'E', '€', ''],\r\n        KeyF: ['f', 'F', '', ''],\r\n        KeyG: ['g', 'G', '', ''],\r\n        KeyH: ['h', 'H', '', ''],\r\n        KeyI: ['i', 'I', '', ''],\r\n        KeyJ: ['j', 'J', '', ''],\r\n        KeyK: ['k', 'K', '', ''],\r\n        KeyL: ['l', 'L', '', ''],\r\n        KeyM: [',', '?', '', ''],\r\n        KeyN: ['n', 'N', '', ''],\r\n        KeyO: ['o', 'O', '', ''],\r\n        KeyP: ['p', 'P', '', ''],\r\n        KeyQ: ['a', 'A', '', ''],\r\n        KeyR: ['r', 'R', '', ''],\r\n        KeyS: ['s', 'S', '', ''],\r\n        KeyT: ['t', 'T', '', ''],\r\n        KeyU: ['u', 'U', '', ''],\r\n        KeyV: ['v', 'V', '', ''],\r\n        KeyW: ['z', 'Z', '', ''],\r\n        KeyX: ['x', 'X', '', ''],\r\n        KeyY: ['y', 'Y', '', ''],\r\n        KeyZ: ['w', 'W', '', ''],\r\n        Digit1: ['&', '1', '', ''],\r\n        Digit2: ['é', '2', '~', ''],\r\n        Digit3: ['\"', '3', '#', ''],\r\n        Digit4: [\"'\", '4', '{', ''],\r\n        Digit5: ['(', '5', '[', ''],\r\n        Digit6: ['-', '6', '|', ''],\r\n        Digit7: ['è', '7', '`', ''],\r\n        Digit8: ['_', '8', '\\\\', ''],\r\n        Digit9: ['ç', '9', '^', ''],\r\n        Digit0: ['à', '0', '@', ''],\r\n        Space: [' ', ' ', '', ''],\r\n        Minus: [')', '°', ']', ''],\r\n        Equal: ['=', '+', '}', ''],\r\n        BracketLeft: ['^', '¨', '', ''],\r\n        BracketRight: ['$', '£', '¤', ''],\r\n        Backslash: ['*', 'µ', '', ''],\r\n        Semicolon: ['m', 'M', '', ''],\r\n        Quote: ['ù', '%', '', ''],\r\n        Backquote: ['²', '', '', ''],\r\n        Comma: [';', '.', '', ''],\r\n        Period: [':', '/', '', ''],\r\n        Slash: ['!', '§', '', ''],\r\n        NumpadDivide: ['/', '/', '', ''],\r\n        NumpadMultiply: ['*', '*', '', ''],\r\n        NumpadSubtract: ['-', '-', '', ''],\r\n        NumpadAdd: ['+', '+', '', ''],\r\n        IntlBackslash: ['<', '>', '', ''],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'windows.german',\r\n    locale: 'de',\r\n    displayName: 'German',\r\n    platform: 'windows',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['a', 'A', '', ''],\r\n        KeyB: ['b', 'B', '', ''],\r\n        KeyC: ['c', 'C', '', ''],\r\n        KeyD: ['d', 'D', '', ''],\r\n        KeyE: ['e', 'E', '€', ''],\r\n        KeyF: ['f', 'F', '', ''],\r\n        KeyG: ['g', 'G', '', ''],\r\n        KeyH: ['h', 'H', '', ''],\r\n        KeyI: ['i', 'I', '', ''],\r\n        KeyJ: ['j', 'J', '', ''],\r\n        KeyK: ['k', 'K', '', ''],\r\n        KeyL: ['l', 'L', '', ''],\r\n        KeyM: ['m', 'M', 'µ', ''],\r\n        KeyN: ['n', 'N', '', ''],\r\n        KeyO: ['o', 'O', '', ''],\r\n        KeyP: ['p', 'P', '', ''],\r\n        KeyQ: ['q', 'Q', '@', ''],\r\n        KeyR: ['r', 'R', '', ''],\r\n        KeyS: ['s', 'S', '', ''],\r\n        KeyT: ['t', 'T', '', ''],\r\n        KeyU: ['u', 'U', '', ''],\r\n        KeyV: ['v', 'V', '', ''],\r\n        KeyW: ['w', 'W', '', ''],\r\n        KeyX: ['x', 'X', '', ''],\r\n        KeyY: ['z', 'Z', '', ''],\r\n        KeyZ: ['y', 'Y', '', ''],\r\n        Digit1: ['1', '!', '', ''],\r\n        Digit2: ['2', '\"', '²', ''],\r\n        Digit3: ['3', '§', '³', ''],\r\n        Digit4: ['4', '$', '', ''],\r\n        Digit5: ['5', '%', '', ''],\r\n        Digit6: ['6', '&', '', ''],\r\n        Digit7: ['7', '/', '{', ''],\r\n        Digit8: ['8', '(', '[', ''],\r\n        Digit9: ['9', ')', ']', ''],\r\n        Digit0: ['0', '=', '}', ''],\r\n        Space: [' ', ' ', '', ''],\r\n        Minus: ['ß', '?', '\\\\', 'ẞ'],\r\n        Equal: ['´', '`', '', ''],\r\n        BracketLeft: ['ü', 'Ü', '', ''],\r\n        BracketRight: ['+', '*', '~', ''],\r\n        Backslash: ['#', \"'\", '', ''],\r\n        Semicolon: ['ö', 'Ö', '', ''],\r\n        Quote: ['ä', 'Ä', '', ''],\r\n        Backquote: ['^', '°', '', ''],\r\n        Comma: [',', ';', '', ''],\r\n        Period: ['.', ':', '', ''],\r\n        Slash: ['-', '_', '', ''],\r\n        NumpadDivide: ['/', '/', '', ''],\r\n        NumpadMultiply: ['*', '*', '', ''],\r\n        NumpadSubtract: ['-', '-', '', ''],\r\n        NumpadAdd: ['+', '+', '', ''],\r\n        IntlBackslash: ['<', '>', '|', ''],\r\n    },\r\n});\r\nregister$1({\r\n    id: 'apple.german',\r\n    locale: 'de',\r\n    displayName: 'German',\r\n    platform: 'apple',\r\n    score: 0,\r\n    mapping: {\r\n        KeyA: ['a', 'A', 'å', 'Å'],\r\n        KeyB: ['b', 'B', '∫', '‹'],\r\n        KeyC: ['c', 'C', 'ç', 'Ç'],\r\n        KeyD: ['d', 'D', '∂', '™'],\r\n        KeyE: ['e', 'E', '€', '‰'],\r\n        KeyF: ['f', 'F', 'ƒ', 'Ï'],\r\n        KeyG: ['g', 'G', '©', 'Ì'],\r\n        KeyH: ['h', 'H', 'ª', 'Ó'],\r\n        KeyI: ['i', 'I', '⁄', 'Û'],\r\n        KeyJ: ['j', 'J', 'º', 'ı'],\r\n        KeyK: ['k', 'K', '∆', 'ˆ'],\r\n        KeyL: ['l', 'L', '@', 'ﬂ'],\r\n        KeyM: ['m', 'M', 'µ', '˘'],\r\n        KeyN: ['n', 'N', '~', '›'],\r\n        KeyO: ['o', 'O', 'ø', 'Ø'],\r\n        KeyP: ['p', 'P', 'π', '∏'],\r\n        KeyQ: ['q', 'Q', '«', '»'],\r\n        KeyR: ['r', 'R', '®', '¸'],\r\n        KeyS: ['s', 'S', '‚', 'Í'],\r\n        KeyT: ['t', 'T', '†', '˝'],\r\n        KeyU: ['u', 'U', '¨', 'Á'],\r\n        KeyV: ['v', 'V', '√', '◊'],\r\n        KeyW: ['w', 'W', '∑', '„'],\r\n        KeyX: ['x', 'X', '≈', 'Ù'],\r\n        KeyY: ['z', 'Z', 'Ω', 'ˇ'],\r\n        KeyZ: ['y', 'Y', '¥', '‡'],\r\n        Digit1: ['1', '!', '¡', '¬'],\r\n        Digit2: ['2', '\"', '“', '”'],\r\n        Digit3: ['3', '§', '¶', '#'],\r\n        Digit4: ['4', '$', '¢', '£'],\r\n        Digit5: ['5', '%', '[', 'ﬁ'],\r\n        Digit6: ['6', '&', ']', '^'],\r\n        Digit7: ['7', '/', '|', '\\\\'],\r\n        Digit8: ['8', '(', '{', '˜'],\r\n        Digit9: ['9', ')', '}', '·'],\r\n        Digit0: ['0', '=', '≠', '¯'],\r\n        Space: [' ', ' ', ' ', ' '],\r\n        Minus: ['ß', '?', '¿', '˙'],\r\n        Equal: ['´', '`', \"'\", '˚'],\r\n        BracketLeft: ['ü', 'Ü', '•', '°'],\r\n        BracketRight: ['+', '*', '±', ''],\r\n        Backslash: ['#', \"'\", '‘', '’'],\r\n        Semicolon: ['ö', 'Ö', 'œ', 'Œ'],\r\n        Quote: ['ä', 'Ä', 'æ', 'Æ'],\r\n        Backquote: ['<', '>', '≤', '≥'],\r\n        Comma: [',', ';', '∞', '˛'],\r\n        Period: ['.', ':', '…', '÷'],\r\n        Slash: ['-', '_', '–', '—'],\r\n        NumpadDivide: ['/', '/', '/', '/'],\r\n        NumpadMultiply: ['*', '*', '*', '*'],\r\n        NumpadSubtract: ['-', '-', '-', '-'],\r\n        NumpadAdd: ['+', '+', '+', '+'],\r\n        NumpadDecimal: [',', ',', '.', '.'],\r\n        IntlBackslash: ['^', '°', '„', '“'],\r\n        NumpadEqual: ['=', '=', '=', '='],\r\n    },\r\n});\n\nconst DEFAULT_KEYBINDINGS = [\r\n    { key: 'ctrl+alt+e', command: ['insert', '\\\\text{cmd+alt+e}'] },\r\n    { key: 'cmd+alt+a', command: ['insert', '\\\\text{cmd+alt+a}'] },\r\n    { key: 'ctrl+alt+a', command: ['insert', '\\\\text{ctrl+alt+a}'] },\r\n    { key: 'meta+alt+2', command: ['insert', '\\\\text{meta+alt+2}'] },\r\n    {\r\n        key: 'ctrl+alt+shift+a',\r\n        command: ['insert', '\\\\text{ctrl+alt+shift+a}'],\r\n    },\r\n    // { key: 'meta+alt+@', command: ['insert', '\\\\text{cmd+alt+@}'] },\r\n    { key: 'left', command: 'moveToPreviousChar' },\r\n    { key: 'right', command: 'moveToNextChar' },\r\n    { key: 'up', command: 'moveUp' },\r\n    { key: 'down', command: 'moveDown' },\r\n    { key: 'shift+[ArrowLeft]', command: 'extendToPreviousChar' },\r\n    { key: 'shift+[ArrowRight]', command: 'extendToNextChar' },\r\n    { key: 'shift+[ArrowUp]', command: 'extendUp' },\r\n    { key: 'shift+[ArrowDown]', command: 'extendDown' },\r\n    { key: '[Backspace]', command: 'deletePreviousChar' },\r\n    { key: 'alt+[Delete]', command: 'deletePreviousChar' },\r\n    { key: '[Delete]', command: 'deleteNextChar' },\r\n    { key: 'alt+[Backspace]', command: 'deleteNextChar' },\r\n    { key: 'alt+[ArrowLeft]', command: 'moveToPreviousWord' },\r\n    { key: 'alt+[ArrowRight]', command: 'moveToNextWord' },\r\n    { key: 'alt+shift+[ArrowLeft]', command: 'extendToPreviousWord' },\r\n    { key: 'alt+shift+[ArrowRight]', command: 'extendToNextWord' },\r\n    { key: 'ctrl+[ArrowLeft]', command: 'moveToGroupStart' },\r\n    { key: 'ctrl+[ArrowRight]', command: 'moveToGroupEnd' },\r\n    { key: 'ctrl+shift+[ArrowLeft]', command: 'extendToGroupStart' },\r\n    { key: 'ctrl+shift+[ArrowRight]', command: 'extendToGroupEnd' },\r\n    { key: '[Space]', ifMode: 'math', command: 'moveAfterParent' },\r\n    { key: 'shift+[Space]', ifMode: 'math', command: 'moveBeforeParent' },\r\n    { key: '[Home]', command: 'moveToMathFieldStart' },\r\n    { key: 'cmd+[ArrowLeft]', command: 'moveToMathFieldStart' },\r\n    { key: 'shift+[Home]', command: 'extendToMathFieldStart' },\r\n    { key: 'cmd+shift+[ArrowLeft]', command: 'extendToMathFieldStart' },\r\n    { key: '[End]', command: 'moveToMathFieldEnd' },\r\n    { key: 'cmd+[ArrowRight]', command: 'moveToMathFieldEnd' },\r\n    { key: 'shift+[End]', command: 'extendToMathFieldEnd' },\r\n    { key: 'cmd+shift+[ArrowRight]', command: 'extendToMathFieldEnd' },\r\n    { key: '[Pageup]', command: 'moveToGroupStart' },\r\n    { key: '[Pagedown]', command: 'moveToGroupEnd' },\r\n    { key: '[Tab]', ifMode: 'math', command: 'moveToNextPlaceholder' },\r\n    {\r\n        key: 'shift+[Tab]',\r\n        ifMode: 'math',\r\n        command: 'moveToPreviousPlaceholder',\r\n    },\r\n    { key: '[Tab]', ifMode: 'text', command: 'moveToNextPlaceholder' },\r\n    {\r\n        key: 'shift+[Tab]',\r\n        ifMode: 'text',\r\n        command: 'moveToPreviousPlaceholder',\r\n    },\r\n    { key: '[Escape]', ifMode: 'math', command: ['switchMode', 'command'] },\r\n    { key: '\\\\', ifMode: 'math', command: ['switchMode', 'command'] },\r\n    {\r\n        key: 'alt+[Equal]',\r\n        ifMode: 'math',\r\n        command: ['applyStyle', { mode: 'text' }],\r\n    },\r\n    {\r\n        key: 'alt+[Equal]',\r\n        ifMode: 'text',\r\n        command: ['applyStyle', { mode: 'math' }],\r\n    },\r\n    {\r\n        key: '[Escape]',\r\n        ifMode: 'command',\r\n        command: ['complete', { discard: true }],\r\n    },\r\n    {\r\n        key: '[Tab]',\r\n        ifMode: 'command',\r\n        command: ['complete', { acceptSuggestion: true }],\r\n    },\r\n    { key: '[Return]', ifMode: 'command', command: 'complete' },\r\n    { key: '[Enter]', ifMode: 'command', command: 'complete' },\r\n    {\r\n        key: 'shift+[Escape]',\r\n        ifMode: 'command',\r\n        command: ['complete', { discard: true }],\r\n    },\r\n    // this combination, for example in 60% keyboards it is mapped to ~\r\n    { key: '[ArrowDown]', ifMode: 'command', command: 'nextSuggestion' },\r\n    // { key: 'ios:command:[Tab]', ifMode: 'command',command: 'nextSuggestion' },\r\n    { key: '[ArrowUp]', ifMode: 'command', command: 'previousSuggestion' },\r\n    { key: 'ctrl+a', ifPlatform: '!macos', command: 'selectAll' },\r\n    { key: 'cmd+a', command: 'selectAll' },\r\n    // Rare keys on some extended keyboards\r\n    { key: '[Cut]', command: 'cutToClipboard' },\r\n    { key: '[Copy]', command: 'copyToClipboard' },\r\n    { key: '[Paste]', command: 'pasteFromClipboard' },\r\n    { key: '[Clear]', command: 'deletePreviousChar' },\r\n    { key: 'ctrl+z', ifPlatform: '!macos', command: 'undo' },\r\n    { key: 'cmd+z', command: 'undo' },\r\n    { key: '[Undo]', command: 'undo' },\r\n    { key: 'ctrl+y', ifPlatform: '!macos', command: 'redo' },\r\n    { key: 'cmd+shift+y', command: 'redo' },\r\n    { key: 'ctrl+shift+z', ifPlatform: '!macos', command: 'redo' },\r\n    { key: 'cmd+shift+z', command: 'redo' },\r\n    { key: '[Redo]', command: 'redo' },\r\n    { key: '[EraseEof]', command: 'deleteToGroupEnd' },\r\n    // EMACS/MACOS BINDINGS\r\n    { key: 'ctrl+b', ifPlatform: 'macos', command: 'moveToPreviousChar' },\r\n    { key: 'ctrl+f', ifPlatform: 'macos', command: 'moveToNextChar' },\r\n    { key: 'ctrl+p', ifPlatform: 'macos', command: 'moveUp' },\r\n    { key: 'ctrl+n', ifPlatform: 'macos', command: 'moveDown' },\r\n    { key: 'ctrl+a', ifPlatform: 'macos', command: 'moveToMathFieldStart' },\r\n    { key: 'ctrl+e', ifPlatform: 'macos', command: 'moveToMathFieldEnd' },\r\n    {\r\n        key: 'ctrl+shift+b',\r\n        ifPlatform: 'macos',\r\n        command: 'extendToPreviousChar',\r\n    },\r\n    { key: 'ctrl+shift+f', ifPlatform: 'macos', command: 'extendToNextChar' },\r\n    { key: 'ctrl+shift+p', ifPlatform: 'macos', command: 'extendUp' },\r\n    { key: 'ctrl+shift+n', ifPlatform: 'macos', command: 'extendDown' },\r\n    {\r\n        key: 'ctrl+shift+a',\r\n        ifPlatform: 'macos',\r\n        command: 'extendToMathFieldStart',\r\n    },\r\n    {\r\n        key: 'ctrl+shift+e',\r\n        ifPlatform: 'macos',\r\n        command: 'extendToMathFieldEnd',\r\n    },\r\n    { key: 'ctrl+alt+b', ifPlatform: 'macos', command: 'moveToPreviousWord' },\r\n    { key: 'ctrl+alt+f', ifPlatform: 'macos', command: 'moveToNextWord' },\r\n    {\r\n        key: 'ctrl+shift+alt+b',\r\n        ifPlatform: 'macos',\r\n        command: 'extendToPreviousWord',\r\n    },\r\n    {\r\n        key: 'ctrl+shift+alt+f',\r\n        ifPlatform: 'macos',\r\n        command: 'extendToNextWord',\r\n    },\r\n    { key: 'ctrl+h', ifPlatform: 'macos', command: 'deletePreviousChar' },\r\n    { key: 'ctrl+d', ifPlatform: 'macos', command: 'deleteNextChar' },\r\n    { key: 'ctrl+l', ifPlatform: 'macos', command: 'scrollIntoView' },\r\n    // { key: 'ctrl+t', ifPlatform: 'macos', command: 'transpose' },\r\n    {\r\n        key: 'shift+[Quote]',\r\n        ifMode: 'math',\r\n        command: ['switchMode', 'text', '', '“'],\r\n    },\r\n    {\r\n        key: 'shift+[Quote]',\r\n        ifMode: 'text',\r\n        command: ['switchMode', 'math', '”', ''],\r\n    },\r\n    // WOLFRAM MATHEMATICA BINDINGS\r\n    {\r\n        key: 'ctrl+[Digit2]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\sqrt{#0}$$'],\r\n    },\r\n    { key: 'ctrl+[Digit5]', ifMode: 'math', command: 'moveToOpposite' },\r\n    { key: 'ctrl+[Digit6]', ifMode: 'math', command: 'moveToSuperscript' },\r\n    { key: 'ctrl+[Minus]', ifMode: 'math', command: 'moveToSubscript' },\r\n    {\r\n        key: 'alt+[BracketLeft]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\left\\\\lbrack #0 \\\\right\\\\rbrack$$'],\r\n    },\r\n    {\r\n        key: 'alt+shift+[BracketLeft]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\left\\\\lbrace #0 \\\\right\\\\rbrace$$'],\r\n    },\r\n    { key: 'ctrl+[Return]', ifMode: 'math', command: 'addRowAfter' },\r\n    { key: 'ctrl+[Enter]', ifMode: 'math', command: 'addRowAfter' },\r\n    { key: 'cmd+[Return]', ifMode: 'math', command: 'addRowAfter' },\r\n    { key: 'cmd+[Enter]', ifMode: 'math', command: 'addRowAfter' },\r\n    { key: 'ctrl+;', ifMode: 'math', command: 'addRowAfter' },\r\n    { key: 'cmd+;', ifMode: 'math', command: 'addRowAfter' },\r\n    { key: 'ctrl+shift+;', ifMode: 'math', command: 'addRowBefore' },\r\n    { key: 'cmd+shift+;', ifMode: 'math', command: 'addRowBefore' },\r\n    { key: 'ctrl+[Comma]', ifMode: 'math', command: 'addColumnAfter' },\r\n    { key: 'cmd+[Comma]', ifMode: 'math', command: 'addColumnAfter' },\r\n    { key: 'ctrl+shift+[Comma]', ifMode: 'math', command: 'addColumnAfter' },\r\n    { key: 'cmd+shift+[Comma]', ifMode: 'math', command: 'addColumnAfter' },\r\n    // Excel keybindings:\r\n    // shift+space: select entire row, ctrl+space: select an entire column\r\n    // ctrl+shift++ or ctrl+numpad+\r\n    // ctrl+- to delete a row or columns\r\n    // MATHLIVE BINDINGS\r\n    // { key: 'alt+a', command: ['insert', '$$\\\\theta$$'] },\r\n    { key: 'alt+p', ifMode: 'math', command: ['insert', '$$\\\\pi$$'] },\r\n    { key: 'alt+v', ifMode: 'math', command: ['insert', '$$\\\\sqrt{#0}$$'] },\r\n    {\r\n        key: 'alt+w',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\sum_{i=#?}^{#?}$$'],\r\n    },\r\n    // { key: 'alt+b', command: ['insert', '$$\\\\int_{#?}^{#?}$$'] },\r\n    { key: 'alt+u', ifMode: 'math', command: ['insert', '$$\\\\cup$$'] },\r\n    { key: 'alt+n', ifMode: 'math', command: ['insert', '$$\\\\cap$$'] },\r\n    { key: 'alt+o', ifMode: 'math', command: ['insert', '$$\\\\emptyset$$'] },\r\n    {\r\n        key: 'alt+d',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\differentialD$$'],\r\n    },\r\n    {\r\n        key: 'alt+shift+o',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\varnothing$$'],\r\n    },\r\n    {\r\n        key: 'alt+shift+d',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\partial$$'],\r\n    },\r\n    {\r\n        key: 'alt+shift+p',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\prod_{i=#?}^{#?}$$'],\r\n    },\r\n    { key: 'alt+shift+u', ifMode: 'math', command: ['insert', '$$\\\\bigcup$$'] },\r\n    { key: 'alt+shift+n', ifMode: 'math', command: ['insert', '$$\\\\bigcap$$'] },\r\n    { key: 'alt+shift+a', ifMode: 'math', command: ['insert', '$$\\\\forall$$'] },\r\n    { key: 'alt+shift+e', ifMode: 'math', command: ['insert', '$$\\\\exists$$'] },\r\n    { key: 'alt+[Digit5]', ifMode: 'math', command: ['insert', '$\\\\infty$$'] },\r\n    { key: 'alt+[Digit6]', ifMode: 'math', command: ['insert', '$$\\\\wedge$$'] },\r\n    {\r\n        key: 'alt+shift+[Digit6]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\vee$$'],\r\n    },\r\n    { key: 'alt+[Digit9]', ifMode: 'math', command: ['insert', '('] },\r\n    { key: 'alt+[Digit0]', ifMode: 'math', command: ['insert', ')'] },\r\n    { key: 'alt+shift+[Backslash]', ifMode: 'math', command: ['insert', '|'] },\r\n    {\r\n        key: 'alt+[Backslash]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\backslash$$'],\r\n    },\r\n    {\r\n        key: '/',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\frac{#@}{#?}$$'],\r\n    },\r\n    {\r\n        key: 'alt+/',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\/$$'],\r\n    },\r\n    {\r\n        key: '[NumpadDivide]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\frac{#@}{#?}$$'],\r\n    },\r\n    {\r\n        key: 'alt+[NumpadDivide]',\r\n        ifMode: 'math',\r\n        command: ['insert', '\\\\frac{#?}{#@}'],\r\n    },\r\n    {\r\n        key: 'shift+[Backquote]',\r\n        ifMode: 'math',\r\n        command: ['insert', '$$\\\\~$$'],\r\n    },\r\n    // Accessibility\r\n    { key: 'alt+shift+k', command: 'toggleKeystrokeCaption' },\r\n    { key: 'alt+[Space]', command: 'toggleVirtualKeyboard' },\r\n    // Note: On Mac OS (as of 10.12), there is a bug/behavior that causes\r\n    // a beep to be generated with certain command+control key combinations.\r\n    // The workaround is to create a default binding file to silence them.\r\n    // In ~/Library/KeyBindings/DefaultKeyBinding.dict add these entries:\r\n    /*\r\n     {\r\n        \"^@\\UF701\" = \"noop:\";\r\n        \"^@\\UF702\" = \"noop:\";\r\n        \"^@\\UF703\" = \"noop:\";\r\n    }\r\n    */\r\n    {\r\n        key: 'ctrl+alt+[ArrowUp]',\r\n        command: ['speak', 'parent', { withHighlighting: false }],\r\n    },\r\n    {\r\n        key: 'ctrl+alt+[ArrowDown]',\r\n        command: ['speak', 'all', { withHighlighting: false }],\r\n    },\r\n];\r\n/**\r\n * Most commands can be associated to their keyboard shortcuts from the\r\n * DEFAULT_KEYBINDINGS table above, for example 'speakSelection' -> 'ctrl+KeyR'\r\n * However, those that contain complex commands are more ambiguous.\r\n * For example, '\\sqrt' -> 'math:alt+KeyV'. This table provides the reverse\r\n * mapping for those more complex commands. It is used when displaying\r\n * keybindings for specific commands in the popover.\r\n */\r\nconst REVERSE_KEYBINDINGS = {\r\n    '\\\\theta': 'alt+q',\r\n    '\\\\sqrt': ['alt+v', 'ctrl+[Digit2]'],\r\n    '\\\\pi': 'alt+p',\r\n    '\\\\prod': 'alt+shift+p',\r\n    '\\\\sum': 'alt+w',\r\n    '\\\\int': 'alt+b',\r\n    '\\\\cup': 'alt+u',\r\n    '\\\\cap': 'alt+n',\r\n    '\\\\bigcup': 'alt+shift+u',\r\n    '\\\\bigcap': 'alt+shift+n',\r\n    '\\\\forall': 'alt+shift+a',\r\n    '\\\\exists': 'alt+shift+e',\r\n    '\\\\infty': 'alt+[Digit5]',\r\n    '\\\\wedge': 'alt+[Digit5]',\r\n    '\\\\vee': 'alt+shift+[Digit6]',\r\n    '\\\\differentialD': 'alt+d',\r\n    '\\\\partial': 'alt+shift+d',\r\n    '\\\\frac': 'Slash',\r\n    '\\\\emptyset': 'alt+o',\r\n    '\\\\varnothing': 'alt+shift+o',\r\n    '\\\\~': '~',\r\n};\n\n/**\r\n * @param p The platform to test against.\r\n */\r\nfunction matchPlatform(p) {\r\n    if ((navigator === null || navigator === void 0 ? void 0 : navigator.platform) && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\r\n        let plat;\r\n        if (/^(mac)/i.test(navigator.platform)) {\r\n            plat = 'macos';\r\n        }\r\n        else if (/^(win)/i.test(navigator.platform)) {\r\n            plat = 'windows';\r\n        }\r\n        else if (/(android)/i.test(navigator.userAgent)) {\r\n            plat = 'android';\r\n        }\r\n        else if (/(iphone)/i.test(navigator.userAgent) ||\r\n            /(ipod)/i.test(navigator.userAgent) ||\r\n            /(ipad)/i.test(navigator.userAgent)) {\r\n            plat = 'ios';\r\n        }\r\n        else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\r\n            plat = 'chromeos';\r\n        }\r\n        if (p.startsWith('!') && !p.endsWith(plat))\r\n            return true;\r\n        if (p.endsWith(plat))\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Return the selector matching the keystroke.\r\n * The keybindings and keystroke should be in normalized form\r\n * (i.e. using key code, e.g. `[KeyQ]`\r\n *\r\n */\r\nfunction getCommandForKeybinding(keybindings, mode, keystroke) {\r\n    if (keybindings.length === 0)\r\n        return '';\r\n    // Try to match using a virtual keystroke\r\n    for (let i = keybindings.length - 1; i >= 0; i--) {\r\n        if (keybindings[i].key === keystroke) {\r\n            if (!keybindings[i].ifMode || keybindings[i].ifMode === mode) {\r\n                return keybindings[i].command;\r\n            }\r\n        }\r\n    }\r\n    return '';\r\n}\r\nfunction commandToString(command) {\r\n    let result = command;\r\n    if (isArray(result)) {\r\n        if (result.length > 0) {\r\n            result = result[0] + '(' + result.slice(1).join('') + ')';\r\n        }\r\n        else {\r\n            result = '';\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getKeybindingsForCommand(keybindings, command) {\r\n    let result = [];\r\n    if (typeof command === 'string') {\r\n        const candidate = REVERSE_KEYBINDINGS[command];\r\n        if (isArray(candidate)) {\r\n            result = candidate.slice();\r\n        }\r\n        else if (candidate) {\r\n            result.push(candidate);\r\n        }\r\n    }\r\n    // A command can be either a simple selector, or a selector\r\n    // with arguments. Normalize it to a string\r\n    const normalizedCommand = commandToString(command);\r\n    const regex = new RegExp('^' +\r\n        normalizedCommand\r\n            .replace('\\\\', '\\\\\\\\')\r\n            .replace('|', '\\\\|')\r\n            .replace('*', '\\\\*')\r\n            .replace('$', '\\\\$')\r\n            .replace('^', '\\\\^') +\r\n        '([^*a-zA-Z]|$)');\r\n    keybindings.forEach((keybinding) => {\r\n        if (regex.test(commandToString(keybinding.command))) {\r\n            result.push(keybinding);\r\n        }\r\n    });\r\n    return result.map(getKeybindingMarkup);\r\n}\r\n/**\r\n * Return a human readable representation of a shortcut as a markup string\r\n * @revisit\r\n */\r\nfunction getKeybindingMarkup(keystroke) {\r\n    var _a;\r\n    const useSymbol = matchPlatform('macos') || matchPlatform('ios');\r\n    const segments = keystroke.split('+');\r\n    let result = '';\r\n    for (const segment of segments) {\r\n        if (!useSymbol && result) {\r\n            result += '<span class=\"ML__shortcut-join\">+</span>';\r\n        }\r\n        if (segment.startsWith('Key')) {\r\n            result += segment.substr(3, 1);\r\n        }\r\n        else if (segment.startsWith('Digit')) {\r\n            result += segment.substr(5, 1);\r\n        }\r\n        else {\r\n            result += (_a = {\r\n                cmd: '\\u2318',\r\n                meta: useSymbol ? '\\u2318' : 'command',\r\n                shift: useSymbol ? '\\u21e7' : 'shift',\r\n                alt: useSymbol ? '\\u2325' : 'alt',\r\n                ctrl: useSymbol ? '\\u2303' : 'control',\r\n                '\\n': useSymbol ? '\\u23ce' : 'return',\r\n                '[return]': useSymbol ? '\\u23ce' : 'return',\r\n                '[enter]': useSymbol ? '\\u2324' : 'enter',\r\n                '[tab]': useSymbol ? '\\u21e5' : 'tab',\r\n                // 'Esc':          useSymbol ? '\\u238b' : 'esc',\r\n                '[escape]': 'esc',\r\n                '[backspace]': useSymbol ? '\\u232b' : 'backspace',\r\n                '[delete]': useSymbol ? '\\u2326' : 'del',\r\n                '[pageup]': useSymbol ? '\\u21de' : 'page up',\r\n                '[pagedown]': useSymbol ? '\\u21df' : 'page down',\r\n                '[home]': useSymbol ? '\\u2912' : 'home',\r\n                '[end]': useSymbol ? '\\u2913' : 'end',\r\n                '[space]': 'space',\r\n                '[equal]': '=',\r\n                '[minus]': '-',\r\n                '[comma]': ',',\r\n                '[backslash]': '\\\\',\r\n                '[bracketleft]': '[',\r\n                '[bracketright]': ']',\r\n                semicolon: ';',\r\n                period: '.',\r\n                comma: ',',\r\n                minus: '-',\r\n                equal: '=',\r\n                quote: \"'\",\r\n                bracketLeft: '[',\r\n                bracketRight: ']',\r\n                backslash: '\\\\',\r\n                intlbackslash: '\\\\',\r\n                backquote: '`',\r\n                slash: '/',\r\n                numpadmultiply: '* &#128290;',\r\n                numpaddivide: '/ &#128290;',\r\n                numpadsubtract: '- &#128290;',\r\n                numpadadd: '+ &#128290;',\r\n                numpaddecimal: '. &#128290;',\r\n                numpadcomma: ', &#128290;',\r\n                help: 'help',\r\n                left: '\\u21E0',\r\n                up: '\\u21E1',\r\n                right: '\\u21E2',\r\n                down: '\\u21E3',\r\n                '[arrowleft]': '\\u21E0',\r\n                '[arrowup]': '\\u21E1',\r\n                '[arrowright]': '\\u21E2',\r\n                '[arrowdown]': '\\u21E3',\r\n                '[digit0]': '0',\r\n                '[digit1]': '1',\r\n                '[digit2]': '2',\r\n                '[digit3]': '3',\r\n                '[digit4]': '4',\r\n                '[digit5]': '5',\r\n                '[digit6]': '6',\r\n                '[digit7]': '7',\r\n                '[digit8]': '8',\r\n                '[digit9]': '9',\r\n            }[segment.toLowerCase()]) !== null && _a !== void 0 ? _a : segment.toUpperCase();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction normalizeKeybinding(keybinding) {\r\n    if (keybinding.ifPlatform &&\r\n        !/^!?(macos|windows|android|ios|chromeos|other)$/.test(keybinding.ifPlatform)) {\r\n        throw new Error(`Unexpected platform \"${keybinding.ifPlatform}\" for keybinding ${keybinding.key}`);\r\n    }\r\n    let segments = keybinding.key.split('+');\r\n    const key = segments.pop();\r\n    let platform = keybinding.ifPlatform;\r\n    segments = segments.map((segment) => {\r\n        const x = segment.toLowerCase();\r\n        if (x === 'cmd') {\r\n            if (platform && platform !== 'macos' && platform !== 'ios') {\r\n                throw new Error('Unexpected \"cmd\" modifier with platform \"' + platform + '\"');\r\n            }\r\n            if (!platform) {\r\n                platform = matchPlatform('ios') ? 'ios' : 'macos';\r\n            }\r\n            return 'meta';\r\n        }\r\n        else if (x === 'win') {\r\n            if (platform && platform !== 'windows') {\r\n                throw new Error('Unexpected \"win\" modifier with platform \"' + platform + '\"');\r\n            }\r\n            platform = 'windows';\r\n            return 'meta';\r\n        }\r\n        return x;\r\n    });\r\n    if (platform && !matchPlatform(platform))\r\n        return undefined;\r\n    if (!/^\\[(.*)\\]$/.test(key)) {\r\n        // This is not a key code (e.g. `[KeyQ]`) it's a simple key (e.g. `a`)\r\n        // Convert it to a key code\r\n        const code = getCodeForKey(key);\r\n        if (!code) {\r\n            throw new Error('Invalid keybinding key \"' + keybinding.key + '\"');\r\n        }\r\n        segments = segments.concat(code.split('+'));\r\n    }\r\n    else {\r\n        segments.push(key);\r\n    }\r\n    return { ...keybinding, ifPlatform: platform, key: segments.join('+') };\r\n}\r\n/**\r\n * Parse the input keybindings and return them normalized:\r\n * - 'keys' are transformed to 'code' according to the current keyboard layout\r\n * - keybindings that don't apply to the current platform are removed\r\n */\r\nfunction normalizeKeybindings(keybindings, onError) {\r\n    const result = [];\r\n    const errors = [];\r\n    keybindings.forEach((x) => {\r\n        try {\r\n            const keybinding = normalizeKeybinding(x);\r\n            if (keybinding) {\r\n                result.push(keybinding);\r\n            }\r\n        }\r\n        catch (e) {\r\n            errors.push(e.message);\r\n        }\r\n    });\r\n    if (errors.length > 0) {\r\n        onError(errors);\r\n    }\r\n    return result;\r\n}\n\nfunction on(el, inSelectors, listener, options) {\r\n    const selectors = inSelectors.split(' ');\r\n    for (const sel of selectors) {\r\n        const m = sel.match(/(.*):(.*)/);\r\n        if (m) {\r\n            const options2 = options !== null && options !== void 0 ? options : {};\r\n            if (m[2] === 'active') {\r\n                options2.passive = false;\r\n            }\r\n            else {\r\n                options2[m[2]] = true;\r\n            }\r\n            el.addEventListener(m[1], listener, options2);\r\n        }\r\n        else {\r\n            el.addEventListener(sel, listener, options);\r\n        }\r\n    }\r\n}\r\nfunction off(el, inSelectors, listener, options) {\r\n    const selectors = inSelectors.split(' ');\r\n    for (const sel of selectors) {\r\n        const m = sel.match(/(.*):(.*)/);\r\n        if (m) {\r\n            const options2 = options !== null && options !== void 0 ? options : {};\r\n            if (m[2] === 'active') {\r\n                options2.passive = false;\r\n            }\r\n            else {\r\n                options2[m[2]] = true;\r\n            }\r\n            el.removeEventListener(m[1], listener, options2);\r\n        }\r\n        else {\r\n            el.removeEventListener(sel, listener, options);\r\n        }\r\n    }\r\n}\r\nfunction getSharedElement(id, cls) {\r\n    let result = document.getElementById(id);\r\n    if (result) {\r\n        result.setAttribute('data-refcount', Number(parseInt(result.getAttribute('data-refcount')) + 1).toString());\r\n    }\r\n    else {\r\n        result = document.createElement('div');\r\n        result.setAttribute('aria-hidden', 'true');\r\n        result.setAttribute('data-refcount', '1');\r\n        result.className = cls;\r\n        result.id = id;\r\n        document.body.appendChild(result);\r\n    }\r\n    return result;\r\n}\r\n// @revisit: check the elements are correctly released\r\nfunction releaseSharedElement(el) {\r\n    if (!el)\r\n        return;\r\n    const refcount = parseInt(el.getAttribute('data-refcount'));\r\n    if (refcount <= 1) {\r\n        el.remove();\r\n    }\r\n    else {\r\n        el.setAttribute('data-refcount', Number(refcount - 1).toString());\r\n    }\r\n}\r\n/**\r\n * Checks if the argument is a valid Mathfield.\r\n * After a Mathfield has been destroyed (for example by calling `dispose()`\r\n * the Mathfield is no longer valid. However, there may be some pending\r\n * operations invoked via requestAnimationFrame() for example, that would\r\n * need to ensure the mathfield is still valid by the time they're executed.\r\n */\r\nfunction isValidMathfield(mf) {\r\n    return mf.element && mf.element['mathfield'] === mf;\r\n}\r\n/**\r\n * Return the element which has the caret\r\n */\r\nfunction findElementWithCaret(el) {\r\n    var _a, _b;\r\n    return ((_b = (_a = el.querySelector('.ML__caret')) !== null && _a !== void 0 ? _a : el.querySelector('.ML__text-caret')) !== null && _b !== void 0 ? _b : el.querySelector('.ML__command-carett'));\r\n}\r\n/**\r\n * Return the (x,y) client coordinates of the caret\r\n */\r\nfunction getCaretPoint(el) {\r\n    const caret = findElementWithCaret(el);\r\n    if (caret) {\r\n        const bounds = caret.getBoundingClientRect();\r\n        const position = {\r\n            x: bounds.right,\r\n            y: bounds.bottom,\r\n            height: bounds.height,\r\n        };\r\n        return position;\r\n    }\r\n    return null;\r\n}\r\nfunction getSelectionBounds(field) {\r\n    const selectedNodes = field.querySelectorAll('.ML__selected');\r\n    if (selectedNodes && selectedNodes.length > 0) {\r\n        const selectionRect = {\r\n            top: Infinity,\r\n            bottom: -Infinity,\r\n            left: Infinity,\r\n            right: -Infinity,\r\n        };\r\n        // Calculate the union of the bounds of all the selected spans\r\n        selectedNodes.forEach((node) => {\r\n            const bounds = node.getBoundingClientRect();\r\n            if (bounds.left < selectionRect.left) {\r\n                selectionRect.left = bounds.left;\r\n            }\r\n            if (bounds.right > selectionRect.right) {\r\n                selectionRect.right = bounds.right;\r\n            }\r\n            if (bounds.bottom > selectionRect.bottom) {\r\n                selectionRect.bottom = bounds.bottom;\r\n            }\r\n            if (bounds.top < selectionRect.top) {\r\n                selectionRect.top = bounds.top;\r\n            }\r\n        });\r\n        const fieldRect = field.getBoundingClientRect();\r\n        const w = selectionRect.right - selectionRect.left;\r\n        const h = selectionRect.bottom - selectionRect.top;\r\n        selectionRect.left = Math.ceil(selectionRect.left - fieldRect.left + field.scrollLeft);\r\n        selectionRect.right = selectionRect.left + w;\r\n        selectionRect.top = Math.ceil(selectionRect.top - fieldRect.top);\r\n        selectionRect.bottom = selectionRect.top + h;\r\n        return selectionRect;\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Attach event handlers to an element so that it will react by executing\r\n * a command when pressed.\r\n * `\"command\"` can be:\r\n * - a string, a single selector\r\n * - an array, whose first element is a selector followed by one or more arguments.\r\n * - an object, with the following keys:\r\n *    * 'default': command performed on up, with a down + up sequence with no\r\n *      delay between down and up\r\n *    * 'alt', 'shift', 'altshift' keys: command performed on up with\r\n *      one of these modifiers pressed\r\n *    * 'pressed': command performed on 'down'\r\n *    * 'pressAndHoldStart': command performed after a tap/down followed by a\r\n * delay (optional)\r\n *    * 'pressAndHoldEnd': command performed on up, if there was a delay\r\n *     between down and up, if absent, 'default' is performed\r\n * The value of the keys specify which selector (string\r\n * or array) to perform depending on the keyboard state when the button is\r\n * pressed.\r\n *\r\n * The 'pressed' and 'active' classes will get added to\r\n * the element, as the :hover and :active pseudo-classes are not reliable\r\n * (at least on Chrome Android).\r\n *\r\n */\r\nfunction attachButtonHandlers(mathfield, el, command) {\r\n    if (typeof command === 'object' && (command.default || command.pressed)) {\r\n        // Attach the default (no modifiers pressed) command to the element\r\n        if (command.default) {\r\n            el.setAttribute('data-' + mathfield.options.namespace + 'command', JSON.stringify(command.default));\r\n        }\r\n        if (command.alt) {\r\n            el.setAttribute('data-' + mathfield.options.namespace + 'command-alt', JSON.stringify(command.alt));\r\n        }\r\n        if (command.altshift) {\r\n            el.setAttribute('data-' + mathfield.options.namespace + 'command-altshift', JSON.stringify(command.altshift));\r\n        }\r\n        if (command.shift) {\r\n            el.setAttribute('data-' + mathfield.options.namespace + 'command-shift', JSON.stringify(command.shift));\r\n        }\r\n        // .pressed: command to perform when the button is pressed (i.e.\r\n        // on mouse down/touch). Otherwise the command is performed when\r\n        // the button is released\r\n        if (command.pressed) {\r\n            el.setAttribute('data-' + mathfield.options.namespace + 'command-pressed', JSON.stringify(command.pressed));\r\n        }\r\n        if (command.pressAndHoldStart) {\r\n            el.setAttribute('data-' +\r\n                mathfield.options.namespace +\r\n                'command-pressAndHoldStart', JSON.stringify(command.pressAndHoldStart));\r\n        }\r\n        if (command.pressAndHoldEnd) {\r\n            el.setAttribute('data-' +\r\n                mathfield.options.namespace +\r\n                'command-pressAndHoldEnd', JSON.stringify(command.pressAndHoldEnd));\r\n        }\r\n    }\r\n    else {\r\n        // We need to turn the command into a string to attach it to the dataset\r\n        // associated with the button (the command could be an array made of a\r\n        // selector and one or more parameters)\r\n        el.setAttribute('data-' + mathfield.options.namespace + 'command', JSON.stringify(command));\r\n    }\r\n    let pressHoldStart;\r\n    let pressHoldElement;\r\n    let touchID;\r\n    let syntheticTarget; // Target while touch move\r\n    let pressAndHoldTimer;\r\n    on(el, 'mousedown touchstart:passive', (ev) => {\r\n        if (ev.type !== 'mousedown' || ev.buttons === 1) {\r\n            // The primary button was pressed or the screen was tapped.\r\n            ev.stopPropagation();\r\n            // Can't preventDefault() in a passive listener\r\n            if (ev.type !== 'touchstart') {\r\n                ev.preventDefault();\r\n            }\r\n            el.classList.add('pressed');\r\n            pressHoldStart = Date.now();\r\n            // Record the ID of the primary touch point for tracking on touchmove\r\n            if (ev.type === 'touchstart') {\r\n                touchID = ev.changedTouches[0].identifier;\r\n            }\r\n            // Parse the JSON to get the command (and its optional arguments)\r\n            // and perform it immediately\r\n            const command = el.getAttribute('data-' + mathfield.options.namespace + 'command-pressed');\r\n            if (command) {\r\n                mathfield.executeCommand(JSON.parse(command));\r\n            }\r\n            // If there is a `press and hold start` command, perform it\r\n            // after a delay, if we're still pressed by then.\r\n            const pressAndHoldStartCommand = el.getAttribute('data-' +\r\n                mathfield.options.namespace +\r\n                'command-pressAndHoldStart');\r\n            if (pressAndHoldStartCommand) {\r\n                pressHoldElement = el;\r\n                if (pressAndHoldTimer) {\r\n                    clearTimeout(pressAndHoldTimer);\r\n                }\r\n                pressAndHoldTimer = window.setTimeout(function () {\r\n                    if (el.classList.contains('pressed')) {\r\n                        mathfield.executeCommand(JSON.parse(pressAndHoldStartCommand));\r\n                    }\r\n                }, 300);\r\n            }\r\n        }\r\n    });\r\n    on(el, 'mouseleave touchcancel', () => {\r\n        el.classList.remove('pressed');\r\n        // let command = el.getAttribute('data-' + mathfield.config.namespace +\r\n        //     'command-pressAndHoldEnd');\r\n        // const now = Date.now();\r\n        // if (command && now > pressHoldStart + 300) {\r\n        //     mathfield.executeCommand(JSON.parse(command));\r\n        // }\r\n    });\r\n    on(el, 'touchmove:passive', (ev) => {\r\n        // Unlike with mouse tracking, touch tracking only sends events\r\n        // to the target that was originally tapped on. For consistency,\r\n        // we want to mimic the behavior of the mouse interaction by\r\n        // tracking the touch events and dispatching them to potential targets\r\n        // ev.preventDefault(); // can't preventDefault inside a passive event handler\r\n        for (let i = 0; i < ev.changedTouches.length; i++) {\r\n            if (ev.changedTouches[i].identifier === touchID) {\r\n                // Found a touch matching our primary/tracked touch\r\n                const target = document.elementFromPoint(ev.changedTouches[i].clientX, ev.changedTouches[i].clientY);\r\n                if (target !== syntheticTarget && syntheticTarget) {\r\n                    syntheticTarget.dispatchEvent(new MouseEvent('mouseleave'), { bubbles: true });\r\n                    syntheticTarget = null;\r\n                }\r\n                if (target) {\r\n                    syntheticTarget = target;\r\n                    target.dispatchEvent(new MouseEvent('mouseenter', {\r\n                        bubbles: true,\r\n                        buttons: 1,\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    on(el, 'mouseenter', (ev) => {\r\n        if (ev.buttons === 1) {\r\n            el.classList.add('pressed');\r\n        }\r\n    });\r\n    on(el, 'mouseup touchend click', (ev) => {\r\n        if (syntheticTarget) {\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            const target = syntheticTarget;\r\n            syntheticTarget = null;\r\n            target.dispatchEvent(new MouseEvent('mouseup', { bubbles: true }));\r\n            return;\r\n        }\r\n        el.classList.remove('pressed');\r\n        el.classList.add('active');\r\n        if (ev.type === 'click' && ev.detail !== 0) {\r\n            // This is a click event triggered by a mouse interaction\r\n            // (and not a keyboard interaction)\r\n            // Ignore it, we'll handle the mouseup (or touchend) instead.\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n            return;\r\n        }\r\n        // Since we want the active state to be visible for a while,\r\n        // use a timer to remove it after a short delay\r\n        window.setTimeout(function () {\r\n            el.classList.remove('active');\r\n        }, 150);\r\n        let command = el.getAttribute('data-' +\r\n            mathfield.options.namespace +\r\n            'command-pressAndHoldEnd');\r\n        const now = Date.now();\r\n        // If the button has not been pressed for very long or if we were\r\n        // not the button that started the press and hold, don't consider\r\n        // it a press-and-hold.\r\n        if (el !== pressHoldElement || now < pressHoldStart + 300) {\r\n            command = undefined;\r\n        }\r\n        if (!command && ev.altKey && ev.shiftKey) {\r\n            command = el.getAttribute('data-' + mathfield.options.namespace + 'command-altshift');\r\n        }\r\n        if (!command && ev.altKey) {\r\n            command = el.getAttribute('data-' + mathfield.options.namespace + 'command-alt');\r\n        }\r\n        if (!command && ev.shiftKey) {\r\n            command = el.getAttribute('data-' + mathfield.options.namespace + 'command-shift');\r\n        }\r\n        if (!command) {\r\n            command = el.getAttribute('data-' + mathfield.options.namespace + 'command');\r\n        }\r\n        if (command) {\r\n            // Parse the JSON to get the command (and its optional arguments)\r\n            // and perform it\r\n            mathfield.executeCommand(JSON.parse(command));\r\n        }\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n    });\r\n}\n\n// A textual description of a LaTeX command.\r\n// The value can be either a single string, or an array of string\r\n// in order to provide alternatives or additional context.\r\n// In that case, the first string in the array should be appropriate\r\n// to be spoken for accessibility.\r\nconst NOTES = {\r\n    '\\\\text': 'roman text',\r\n    '\\\\textrm': 'roman text',\r\n    '\\\\textnormal': 'roman text',\r\n    '\\\\textit': 'italic text',\r\n    '\\\\textbf': 'bold text',\r\n    '\\\\texttt': 'monospaced text',\r\n    '\\\\textsf': 'sans-serif text',\r\n    '\\\\mathrm': ['roman', '(upright)'],\r\n    '\\\\mathbf': 'bold',\r\n    '\\\\bf': 'bold',\r\n    '\\\\bold': 'bold',\r\n    '\\\\mathit': 'italic',\r\n    '\\\\mathbb': 'blackboard',\r\n    '\\\\mathscr': 'script',\r\n    '\\\\mathtt': ['typewriter', '(monospaced)'],\r\n    '\\\\mathsf': 'sans-serif',\r\n    '\\\\mathcal': 'caligraphic',\r\n    '\\\\frak': ['fraktur', '(gothic)'],\r\n    '\\\\mathfrak': ['fraktur', '(gothic)'],\r\n    '\\\\textcolor': 'text color',\r\n    '\\\\color': 'color',\r\n    '\\\\forall': 'for all',\r\n    '\\\\exists': 'there exists',\r\n    '\\\\nexists': 'there does not exist',\r\n    '\\\\frac': 'fraction',\r\n    '\\\\dfrac': 'display fraction',\r\n    '\\\\cfrac': 'continuous fraction',\r\n    '\\\\tfrac': 'text fraction',\r\n    '\\\\binom': 'binomial coefficient',\r\n    '\\\\dbinom': 'display binomial coefficient',\r\n    '\\\\tbinom': 'text binomial coefficient',\r\n    '\\\\pdiff': 'partial differential',\r\n    '\\\\vec': 'vector',\r\n    '\\\\check': 'caron',\r\n    '\\\\acute': 'acute',\r\n    '\\\\breve': 'breve',\r\n    '\\\\tilde': 'tilde',\r\n    '\\\\dot': 'dot',\r\n    '\\\\hat': ['hat', 'circumflex'],\r\n    '\\\\ddot': 'double dot',\r\n    '\\\\bar': 'bar',\r\n    '\\\\prime': 'prime',\r\n    '\\\\doubleprime': 'double prime',\r\n    '\\\\varnothing': 'empty set',\r\n    '\\\\emptyset': 'empty set',\r\n    '\\\\subseteq': 'subset of or <br>equal to',\r\n    '\\\\supseteq': 'superset of or <br>equal to',\r\n    '\\\\supset': 'superset of',\r\n    '\\\\subset': 'subset of',\r\n    '\\\\partial': 'partial derivative',\r\n    '\\\\bigcup': 'union',\r\n    '\\\\bigcap': 'intersection',\r\n    '\\\\approx': 'approximately equal to',\r\n    '\\\\notin': 'not an element of',\r\n    '\\\\in': ['element of', 'included in'],\r\n    '\\\\infty': 'infinity',\r\n    '\\\\land': 'logical and',\r\n    '\\\\sqrt': 'square root',\r\n    '\\\\prod': 'product',\r\n    '\\\\sum': 'summation',\r\n    '\\\\amalg': ['amalgamation', 'coproduct', 'free product', 'disjoint union'],\r\n    '\\\\cup': 'union with',\r\n    '\\\\cap': 'intersection with',\r\n    '\\\\int': 'integral',\r\n    '\\\\iint': 'surface integral',\r\n    '\\\\oint': 'curve integral',\r\n    '\\\\iiint': 'volume integral',\r\n    '\\\\iff': 'if and only if',\r\n    '\\\\ln': 'natural logarithm',\r\n    '\\\\boldsymbol': 'bold',\r\n    '\\\\setminus': 'set subtraction',\r\n    '\\\\stackrel': 'relation with symbol above',\r\n    '\\\\stackbin': 'operator with symbol above',\r\n    '\\\\underset': 'symbol with annotation below',\r\n    '\\\\overset': 'symbol with annotation above',\r\n    '\\\\hslash': ['h-bar', 'Planck constant'],\r\n    '\\\\gtrsim': 'greater than or <br>similar to',\r\n    '\\\\propto': 'proportional to',\r\n    '\\\\equiv': 'equivalent to',\r\n    '\\\\!': ['negative thin space', '(-3 mu)'],\r\n    '\\\\ ': ['space', '(6 mu)'],\r\n    '\\\\,': ['thin space', '(3 mu)'],\r\n    '\\\\:': ['medium space', '(4 mu)'],\r\n    '\\\\;': ['thick space', '(5 mu)'],\r\n    '\\\\quad': ['1 em space', '(18 mu)'],\r\n    '\\\\qquad': ['2 em space', '(36 mu)'],\r\n    '\\\\enskip': ['&#189; em space', '(9 mu)'],\r\n    '\\\\mp': 'minus or plus',\r\n    '\\\\pm': 'plus or minus',\r\n    '\\\\Im': 'Imaginary part of',\r\n    '\\\\Re': 'Real part of',\r\n    '\\\\gothicCapitalR': 'Real part of',\r\n    '\\\\gothicCapitalI': 'Imaginary part part of',\r\n    '\\\\differentialD': 'differential d',\r\n    '\\\\aleph': [\r\n        'aleph',\r\n        'infinite cardinal',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Cardinal_number\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\beth': [\r\n        'beth',\r\n        'beth number',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Beth_number\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\gimel': [\r\n        'gimel',\r\n        'gimel function',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Gimel_function\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\O': 'empty set',\r\n    '\\\\N': 'set of <br>natural numbers',\r\n    '\\\\Z': 'set of <br>integers',\r\n    '\\\\Q': 'set of <br>rational numbers',\r\n    '\\\\C': 'set of <br>complex numbers',\r\n    '\\\\R': 'set of <br>real numbers',\r\n    '\\\\P': 'set of <br>prime numbers',\r\n    '\\\\lesseqqgtr': 'less than, equal to or<br> greater than',\r\n    '\\\\gnapprox': 'greater than and <br>not approximately',\r\n    '\\\\lnapprox': 'lesser than and <br>not approximately',\r\n    '\\\\j': 'dotless j',\r\n    '\\\\i': 'dotless i',\r\n    '\\\\cdot': 'centered dot',\r\n    '\\\\lmoustache': 'left moustache',\r\n    '\\\\rmoustache': 'right moustache',\r\n    '\\\\nabla': ['nabla', 'del', 'differential vector operator'],\r\n    '\\\\square': [\r\n        'square',\r\n        'd’Alembert operator',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/D%27Alembert_operator\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\blacksquare': [\r\n        'black square',\r\n        'end of proof',\r\n        'tombstone',\r\n        'Halmos symbol',\r\n    ],\r\n    '\\\\Box': 'end of proof',\r\n    '\\\\colon': ['such that', 'ratio'],\r\n    '\\\\coloneq': ['is defined by', 'is assigned'],\r\n    '\\\\Colon': ['is defined by', 'as'],\r\n    '\\\\_': ['underbar', 'underscore'],\r\n    '\\\\ll': 'much less than',\r\n    '\\\\gg': 'much greater than',\r\n    '\\\\doteq': 'approximately equal to',\r\n    '\\\\Doteq': 'approximately equal to',\r\n    '\\\\doteqdot': 'approximately equal to',\r\n    '\\\\cong': ['isomorphism of', '(for algebras, modules...)'],\r\n    '\\\\det': ['determinant of', '(of a matrix)'],\r\n    '\\\\dotplus': 'Cartesian product algebra',\r\n    '\\\\otimes': [\r\n        'tensor product',\r\n        '(of algebras)',\r\n        'Kronecker product',\r\n        '(of matrices)',\r\n    ],\r\n    '\\\\oplus': ['direct sum', '(of modules)'],\r\n    '\\\\lb': 'base-2 logarithm',\r\n    '\\\\lg': 'base-10 logarithm',\r\n    '\\\\wp': [\r\n        'Weierstrass P',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Weierstrass%27s_elliptic_functions\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\wr': [\r\n        'wreath product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Wreath_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\top': ['tautology', 'Proposition P is universally true'],\r\n    '\\\\bot': ['contradiction', 'Proposition P is contradictory'],\r\n    '\\\\mid': ['probability', 'of event A given B'],\r\n    '\\\\mho': [\r\n        'Siemens',\r\n        'electrical conductance in SI unit',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Siemens_(unit)\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\Longrightarrow': 'implies',\r\n    '\\\\Longleftrightarrow': 'if, and only if,',\r\n    '\\\\prec': 'precedes',\r\n    '\\\\preceq': 'precedes or is equal to',\r\n    '\\\\succ': 'succeedes',\r\n    '\\\\succeq': 'succeedes or is equal to',\r\n    '\\\\perp': ['is perpendicular to', 'is independent of'],\r\n    '\\\\models': [\r\n        'entails',\r\n        'double-turnstyle, models',\r\n        'is a semantic consequence of',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Double_turnstile\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\vdash': [\r\n        'satisfies',\r\n        'turnstyle, assertion sign',\r\n        'syntactic inference',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Turnstile_(symbol)\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\implies': ['implies', 'logical consequence'],\r\n    '\\\\impliedby': ['implied by', 'logical consequence'],\r\n    '\\\\surd': ['surd', 'root of', 'checkmark'],\r\n    '\\\\ltimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\rtimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\leftthreetimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\rightthreetimes': [\r\n        'semi direct product',\r\n        '<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Semidirect_product\">Wikipedia <big>&#x203A;</big></a>',\r\n    ],\r\n    '\\\\divideontimes': ['divide on times'],\r\n    '\\\\curlywedge': 'nor',\r\n    '\\\\curlyvee': 'nand',\r\n    '\\\\simeq': 'is group isomorphic with',\r\n    '\\\\vartriangleleft': ['is a normal subgroup of', 'is an ideal ring of'],\r\n    '\\\\circ': ['circle', 'ring', 'function composition'],\r\n    '\\\\rlap': ['overlap right', '\\\\rlap{x}o'],\r\n    '\\\\llap': ['overlap left', 'o\\\\llap{/}'],\r\n    '\\\\colorbox': ['color box', '\\\\colorbox{#fbc0bd}{...}'],\r\n    '\\\\ast': ['asterisk', 'reflexive closure (as a superscript)'],\r\n    '\\\\bullet': 'bullet',\r\n    '\\\\lim': 'limit',\r\n};\r\nfunction getNote(symbol) {\r\n    let result = NOTES[symbol] || '';\r\n    if (isArray(result)) {\r\n        result = result.join('<br>');\r\n    }\r\n    return result;\r\n}\r\nfunction latexToMarkup(latex, mf) {\r\n    const parse = parseString(latex, 'math', null, mf.options.macros);\r\n    const spans = decompose({\r\n        mathstyle: MATHSTYLES.displaystyle,\r\n        macros: mf.options.macros,\r\n    }, parse);\r\n    const wrapper = makeStruts(makeSpan(spans, 'ML__base'), 'ML__mathlive');\r\n    return wrapper.toMarkup();\r\n}\r\nfunction showPopoverWithLatex(mf, latex, displayArrows) {\r\n    if (!latex || latex.length === 0) {\r\n        hidePopover(mf);\r\n        return;\r\n    }\r\n    const command = latex;\r\n    const commandMarkup = latexToMarkup(latex, mf);\r\n    const commandNote = getNote(command);\r\n    const keybinding = getKeybindingsForCommand(mf.keybindings, command).join('<br>');\r\n    let template = displayArrows\r\n        ? '<div class=\"ML__popover__prev-shortcut\" role=\"button\" aria-label=\"Previous suggestion\"><span><span>&#x25B2;</span></span></div>'\r\n        : '';\r\n    template += '<span class=\"ML__popover__content\" role=\"button\">';\r\n    template += '<div class=\"ML__popover__command\">' + commandMarkup + '</div>';\r\n    if (commandNote) {\r\n        template += '<div class=\"ML__popover__note\">' + commandNote + '</div>';\r\n    }\r\n    if (keybinding) {\r\n        template +=\r\n            '<div class=\"ML__popover__shortcut\">' + keybinding + '</div>';\r\n    }\r\n    template += '</span>';\r\n    template += displayArrows\r\n        ? '<div class=\"ML__popover__next-shortcut\" role=\"button\" aria-label=\"Next suggestion\"><span><span>&#x25BC;</span></span></div>'\r\n        : '';\r\n    showPopover(mf, template);\r\n    let el = mf.popover.getElementsByClassName('ML__popover__content');\r\n    if (el && el.length > 0) {\r\n        attachButtonHandlers(mf, el[0], {\r\n            default: ['complete', { acceptSuggestion: true }],\r\n        });\r\n    }\r\n    el = mf.popover.getElementsByClassName('ML__popover__prev-shortcut');\r\n    if (el && el.length > 0) {\r\n        attachButtonHandlers(mf, el[0], 'previousSuggestion');\r\n    }\r\n    el = mf.popover.getElementsByClassName('ML__popover__next-shortcut');\r\n    if (el && el.length > 0) {\r\n        attachButtonHandlers(mf, el[0], 'nextSuggestion');\r\n    }\r\n}\r\nfunction updatePopoverPosition(mf, options) {\r\n    // Check that the mathfield is still valid\r\n    // (we're calling ourselves from requestAnimationFrame() and the mathfield\r\n    // could have gotten destroyed\r\n    if (!mf.element || mf.element['mathfield'] !== mf)\r\n        return;\r\n    // If the popover pane is visible...\r\n    if (mf.popover.classList.contains('is-visible')) {\r\n        if (options === null || options === void 0 ? void 0 : options.deferred) {\r\n            // Call ourselves again later, typically after the\r\n            // rendering/layout of the DOM has been completed\r\n            window.requestAnimationFrame(() => updatePopoverPosition(mf));\r\n        }\r\n        else {\r\n            if (!getAnchor(mf.model) ||\r\n                getAnchor(mf.model).type !== 'command') {\r\n                hidePopover(mf);\r\n            }\r\n            else {\r\n                // ... get the caret position\r\n                const caretPoint = getCaretPoint(mf.field);\r\n                if (caretPoint)\r\n                    setPopoverPosition(mf, caretPoint);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction showPopover(mf, markup) {\r\n    mf.popover.innerHTML = mf.options.createHTML(markup);\r\n    const caretPoint = getCaretPoint(mf.field);\r\n    if (caretPoint)\r\n        setPopoverPosition(mf, caretPoint);\r\n    mf.popover.classList.add('is-visible');\r\n}\r\nfunction setPopoverPosition(mf, position) {\r\n    // get screen width & height (browser compatibility)\r\n    const screenHeight = window.innerHeight ||\r\n        document.documentElement.clientHeight ||\r\n        document.body.clientHeight;\r\n    const screenWidth = window.innerWidth ||\r\n        document.documentElement.clientWidth ||\r\n        document.body.clientWidth;\r\n    // get scrollbar size. This would be 0 in mobile device (also no needed).\r\n    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\r\n    const scrollbarHeight = window.innerHeight - document.documentElement.clientHeight;\r\n    const virtualkeyboardHeight = mf.virtualKeyboardVisible\r\n        ? mf.virtualKeyboard.element.offsetHeight\r\n        : 0;\r\n    // prevent screen overflow horizontal.\r\n    if (position.x + mf.popover.offsetWidth / 2 >\r\n        screenWidth - scrollbarWidth) {\r\n        mf.popover.style.left =\r\n            screenWidth - mf.popover.offsetWidth - scrollbarWidth + 'px';\r\n    }\r\n    else if (position.x - mf.popover.offsetWidth / 2 < 0) {\r\n        mf.popover.style.left = '0';\r\n    }\r\n    else {\r\n        mf.popover.style.left = position.x - mf.popover.offsetWidth / 2 + 'px';\r\n    }\r\n    // and position the popover right below or above the caret\r\n    if (position.y + mf.popover.offsetHeight + 5 >\r\n        screenHeight - scrollbarHeight - virtualkeyboardHeight) {\r\n        mf.popover.classList.add('ML__popover--reverse-direction');\r\n        mf.popover.style.top =\r\n            position.y - position.height - mf.popover.offsetHeight - 5 + 'px';\r\n    }\r\n    else {\r\n        mf.popover.classList.remove('ML__popover--reverse-direction');\r\n        mf.popover.style.top = position.y + 5 + 'px';\r\n    }\r\n}\r\nfunction hidePopover(mf) {\r\n    mf.popover.classList.remove('is-visible');\r\n}\n\nfunction extractCommandStringAroundInsertionPoint(model, beforeInsertionPointOnly = false) {\r\n    var _a;\r\n    let result = '';\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        const end = beforeInsertionPointOnly\r\n            ? model.anchorOffset() + 1\r\n            : command.end;\r\n        const siblings = model.siblings();\r\n        for (let i = command.start; i < end; i++) {\r\n            // All these atoms are 'command' atom with a body that's\r\n            // a single character\r\n            result += (_a = siblings[i].body) !== null && _a !== void 0 ? _a : '';\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param value - If true, decorate the command string around the\r\n * insertion point with an error indicator (red dotted underline). If false,\r\n * remove it.\r\n */\r\nfunction decorateCommandStringAroundInsertionPoint(model, hasError) {\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        const siblings = model.siblings();\r\n        for (let i = command.start; i < command.end; i++) {\r\n            siblings[i].isError = hasError;\r\n        }\r\n    }\r\n}\r\nfunction commitCommandStringBeforeInsertionPoint(model) {\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        const siblings = model.siblings();\r\n        const anchorOffset = model.anchorOffset() + 1;\r\n        for (let i = command.start; i < anchorOffset; i++) {\r\n            if (siblings[i]) {\r\n                siblings[i].isSuggestion = false;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction spliceCommandStringAroundInsertionPoint(model, mathlist) {\r\n    const command = getCommandOffsets(model);\r\n    if (command) {\r\n        if (!mathlist) {\r\n            model.siblings().splice(command.start, command.end - command.start);\r\n            setSelectionOffset(model, command.start - 1, 0);\r\n        }\r\n        else {\r\n            // Array.prototype.splice.apply(\r\n            //     model.siblings(),\r\n            //     [command.start, command.end - command.start].concat(mathlist)\r\n            // );\r\n            // @revisit\r\n            model\r\n                .siblings()\r\n                .splice(command.start, command.end - command.start, ...mathlist);\r\n            const newPlaceholders = [];\r\n            for (const atom of mathlist) {\r\n                atom.forEach((x) => {\r\n                    if (x.type === 'placeholder')\r\n                        newPlaceholders.push(x);\r\n                });\r\n            }\r\n            setSelectionExtent(model, 0);\r\n            // Set the anchor offset to a reasonable value that can be used by\r\n            // leap(). In particular, the current offset value may be invalid\r\n            // if the length of the mathlist is shorter than the name of the command\r\n            model.path[model.path.length - 1].offset = command.start - 1;\r\n            if (newPlaceholders.length === 0 || !leap(model, +1, false)) {\r\n                setSelectionOffset(model, command.start + mathlist.length - 1);\r\n            }\r\n        }\r\n        // Dispatch notifications\r\n        contentDidChange(model);\r\n    }\r\n}\r\nfunction removeCommandStringFromAtom(atom) {\r\n    if (!atom)\r\n        return;\r\n    if (isArray(atom)) {\r\n        for (let i = atom.length - 1; i >= 0; i--) {\r\n            if (atom[i].type === 'command') {\r\n                atom.splice(i, 1);\r\n                // i += 1;\r\n            }\r\n            else {\r\n                removeCommandStringFromAtom(atom[i]);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    removeCommandStringFromAtom(atom.body);\r\n    removeCommandStringFromAtom(atom.superscript);\r\n    removeCommandStringFromAtom(atom.subscript);\r\n    removeCommandStringFromAtom(atom.underscript);\r\n    removeCommandStringFromAtom(atom.overscript);\r\n    removeCommandStringFromAtom(atom.numer);\r\n    removeCommandStringFromAtom(atom.denom);\r\n    removeCommandStringFromAtom(atom.index);\r\n    if (atom.array) {\r\n        for (let j = arrayCellCount(atom.array); j >= 0; j--) {\r\n            removeCommandStringFromAtom(arrayCell(atom.array, j));\r\n        }\r\n    }\r\n}\r\nfunction removeCommandString(model) {\r\n    const contentWasChanging = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n    removeCommandStringFromAtom(model.root.body);\r\n    model.suppressChangeNotifications = contentWasChanging;\r\n    contentDidChange(model);\r\n}\n\nconst SPECIAL_OPERATORS = {\r\n    '\\\\pm': '&#177;',\r\n    '\\\\times': '&#215;',\r\n    '\\\\colon': ':',\r\n    '\\\\vert': '|',\r\n    '\\\\Vert': '\\u2225',\r\n    '\\\\mid': '\\u2223',\r\n    '\\\\lbrace': '{',\r\n    '\\\\rbrace': '}',\r\n    '\\\\langle': '\\u27e8',\r\n    '\\\\rangle': '\\u27e9',\r\n    '\\\\lfloor': '\\u230a',\r\n    '\\\\rfloor': '\\u230b',\r\n    '\\\\lceil': '\\u2308',\r\n    '\\\\rceil': '\\u2309',\r\n    '\\\\vec': '&#x20d7;',\r\n    '\\\\acute': '&#x00b4;',\r\n    '\\\\grave': '&#x0060;',\r\n    '\\\\dot': '&#x02d9;',\r\n    '\\\\ddot': '&#x00a8;',\r\n    '\\\\tilde': '&#x007e;',\r\n    '\\\\bar': '&#x00af;',\r\n    '\\\\breve': '&#x02d8;',\r\n    '\\\\check': '&#x02c7;',\r\n    '\\\\hat': '&#x005e;',\r\n};\r\nfunction xmlEscape(str) {\r\n    return (str\r\n        // .replace(/&/g, '&amp;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;'));\r\n}\r\nfunction makeID$1(id, options) {\r\n    if (!id || !options.generateID)\r\n        return '';\r\n    // Note: the 'extid' attribute is recognized by SRE as an attribute\r\n    // to be passed to SSML as a <mark> tag.\r\n    return ' extid=\"' + id + '\"';\r\n}\r\nfunction scanIdentifier(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    let mathML = '';\r\n    let body = '';\r\n    let superscript = -1;\r\n    let subscript = -1;\r\n    const atom = stream.atoms[stream.index];\r\n    if (stream.index < final &&\r\n        (atom.type === 'mord' || atom.type === 'textord') &&\r\n        '0123456789,.'.indexOf(atom.body) < 0) {\r\n        body = atomToMathML(atom, options);\r\n        if (atom.superscript) {\r\n            superscript = stream.index;\r\n        }\r\n        if (atom.subscript) {\r\n            subscript = stream.index;\r\n        }\r\n        stream.index += 1;\r\n    }\r\n    if (body.length > 0) {\r\n        result = true;\r\n        // If there are separate atoms for sub/sup, record them\r\n        if (isSuperscriptAtom(stream)) {\r\n            superscript = stream.index;\r\n            stream.index += 1;\r\n        }\r\n        if (isSubscriptAtom(stream)) {\r\n            subscript = stream.index;\r\n            stream.index += 1;\r\n        }\r\n        if (superscript >= 0 && subscript >= 0) {\r\n            mathML = '<msubsup>' + body;\r\n            mathML += toMathML(stream.atoms[subscript].subscript, 0, 0, options)\r\n                .mathML;\r\n            mathML += toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\r\n            mathML += '</msubsup>';\r\n        }\r\n        else if (superscript >= 0) {\r\n            mathML = '<msup>' + body;\r\n            if (isSuperscriptAtom(stream)) {\r\n                // There's another superscript after this one. Maybe double-prime?\r\n                const sup = toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\r\n                const sup2 = toMathML(stream.atoms[superscript + 1].superscript, 0, 0, options).mathML;\r\n                if ((sup === '<mi>\\u2032</mi>' ||\r\n                    sup === '<mi>&#x2032;</mi>') &&\r\n                    (sup2 === '<mi>\\u2032</mi>' || sup2 === '<mi>&#x2032;</mi>')) {\r\n                    mathML += '<mi>&#x2033;</mi>';\r\n                }\r\n                else if (sup === '<mi>\\u2032</mi>' ||\r\n                    sup === '<mi>&#x2032;</mi>') {\r\n                    mathML += '<mi>&#x2032;</mi>';\r\n                }\r\n                else {\r\n                    mathML += sup;\r\n                }\r\n            }\r\n            else {\r\n                mathML += toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\r\n            }\r\n            mathML += '</msup>';\r\n        }\r\n        else if (subscript >= 0) {\r\n            mathML = '<msub>' + body;\r\n            mathML += toMathML(stream.atoms[subscript].subscript, 0, 0, options)\r\n                .mathML;\r\n            mathML += '</msub>';\r\n        }\r\n        else {\r\n            mathML = body;\r\n        }\r\n        if ((stream.lastType === 'mi' ||\r\n            stream.lastType === 'mn' ||\r\n            stream.lastType === 'mtext' ||\r\n            stream.lastType === 'fence') &&\r\n            !/^<mo>(.*)<\\/mo>$/.test(mathML)) {\r\n            mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\r\n        }\r\n        if (body.endsWith('>f</mi>') || body.endsWith('>g</mi>')) {\r\n            mathML += '<mo>&x2061;</mo>'; // &ApplyFunction;\r\n            stream.lastType = 'applyfunction';\r\n        }\r\n        else {\r\n            stream.lastType = /^<mo>(.*)<\\/mo>$/.test(mathML) ? 'mo' : 'mi';\r\n        }\r\n        stream.mathML += mathML;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Return true if the current atom is a standalone superscript atom\r\n * i.e. an atom with no content, except of a superscript.\r\n * Superscripts can be encoded either as an attribute on the last atom\r\n * or as a standalone, empty, atom following the one to which it applies.\r\n * @param {object} stream\r\n */\r\nfunction isSuperscriptAtom(stream) {\r\n    return (stream.index < stream.atoms.length &&\r\n        stream.atoms[stream.index].superscript &&\r\n        stream.atoms[stream.index].type === 'msubsup');\r\n}\r\nfunction isSubscriptAtom(stream) {\r\n    return (stream.index < stream.atoms.length &&\r\n        stream.atoms[stream.index].subscript &&\r\n        stream.atoms[stream.index].type === 'msubsup');\r\n}\r\nfunction indexOfSuperscriptInNumber(stream) {\r\n    let result = -1;\r\n    let i = stream.index;\r\n    let done = false;\r\n    let found = false;\r\n    while (i < stream.atoms.length && !done && !found) {\r\n        done =\r\n            stream.atoms[i].type !== 'mord' ||\r\n                '0123456789,.'.indexOf(stream.atoms[i].body) < 0;\r\n        found = !done && stream.atoms[i].superscript;\r\n        i++;\r\n    }\r\n    if (found) {\r\n        result = i - 1;\r\n    }\r\n    return result;\r\n}\r\nfunction parseSubsup(base, stream, options) {\r\n    let result = false;\r\n    let mathML = '';\r\n    let atom = stream.atoms[stream.index - 1];\r\n    if (!atom)\r\n        return false;\r\n    if (!atom.superscript && !atom.subscript) {\r\n        if (isSuperscriptAtom(stream) || isSubscriptAtom(stream)) {\r\n            atom = stream.atoms[stream.index];\r\n            stream.index += 1;\r\n        }\r\n    }\r\n    if (!atom)\r\n        return false;\r\n    if (atom.superscript && atom.subscript) {\r\n        mathML = '<msubsup>' + base;\r\n        mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n        mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n        mathML += '</msubsup>';\r\n    }\r\n    else if (atom.superscript) {\r\n        mathML = '<msup>' + base;\r\n        mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n        mathML += '</msup>';\r\n    }\r\n    else if (atom.subscript) {\r\n        mathML = '<msub>' + base;\r\n        mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n        mathML += '</msub>';\r\n    }\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        stream.mathML += mathML;\r\n        stream.lastType = '';\r\n    }\r\n    return result;\r\n}\r\nfunction scanText(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    const initial = stream.index;\r\n    let mathML = '';\r\n    while (stream.index < final && stream.atoms[stream.index].mode === 'text') {\r\n        mathML += stream.atoms[stream.index].body\r\n            ? stream.atoms[stream.index].body\r\n            : ' ';\r\n        stream.index += 1;\r\n    }\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        mathML =\r\n            '<mtext' +\r\n                makeID$1(stream.atoms[initial].id, options) +\r\n                '>' +\r\n                mathML +\r\n                '</mtext>';\r\n        stream.mathML += mathML;\r\n        stream.lastType = 'mtext';\r\n    }\r\n    return result;\r\n}\r\nfunction scanNumber(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    const initial = stream.index;\r\n    let mathML = '';\r\n    let superscript = indexOfSuperscriptInNumber(stream);\r\n    if (superscript >= 0 && superscript < final) {\r\n        final = superscript;\r\n    }\r\n    while (stream.index < final &&\r\n        stream.atoms[stream.index].type === 'mord' &&\r\n        '0123456789,.'.indexOf(stream.atoms[stream.index].body) >= 0) {\r\n        mathML += stream.atoms[stream.index].body;\r\n        stream.index += 1;\r\n    }\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        mathML =\r\n            '<mn' +\r\n                makeID$1(stream.atoms[initial].id, options) +\r\n                '>' +\r\n                mathML +\r\n                '</mn>';\r\n        if (superscript < 0 && isSuperscriptAtom(stream)) {\r\n            superscript = stream.index;\r\n            stream.index += 1;\r\n        }\r\n        if (superscript >= 0) {\r\n            mathML = '<msup>' + mathML;\r\n            mathML += toMathML(stream.atoms[superscript].superscript, 0, 0, options).mathML;\r\n            mathML += '</msup>';\r\n        }\r\n        stream.mathML += mathML;\r\n        stream.lastType = 'mn';\r\n    }\r\n    return result;\r\n}\r\nfunction scanFence(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    let mathML = '';\r\n    let lastType = '';\r\n    if (stream.index < final && stream.atoms[stream.index].type === 'mopen') {\r\n        let found = false;\r\n        let depth = 0;\r\n        const openIndex = stream.index;\r\n        let closeIndex = -1;\r\n        let index = openIndex + 1;\r\n        while (index < final && !found) {\r\n            if (stream.atoms[index].type === 'mopen') {\r\n                depth += 1;\r\n            }\r\n            else if (stream.atoms[index].type === 'mclose') {\r\n                depth -= 1;\r\n            }\r\n            if (depth === -1) {\r\n                found = true;\r\n                closeIndex = index;\r\n            }\r\n            index += 1;\r\n        }\r\n        if (found) {\r\n            // TODO: could add attribute indicating it's a fence (fence=true)\r\n            mathML = '<mrow>';\r\n            mathML += toMo(stream.atoms[openIndex], options);\r\n            mathML += toMathML(stream.atoms, openIndex + 1, closeIndex, options)\r\n                .mathML;\r\n            // TODO: could add attribute indicating it's a fence (fence=true)\r\n            mathML += toMo(stream.atoms[closeIndex], options);\r\n            mathML += '</mrow>';\r\n            if (stream.lastType === 'mi' ||\r\n                stream.lastType === 'mn' ||\r\n                stream.lastType === 'mfrac' ||\r\n                stream.lastType === 'fence') {\r\n                mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\r\n            }\r\n            stream.index = closeIndex + 1;\r\n            if (parseSubsup(mathML, stream, options)) {\r\n                result = true;\r\n                stream.lastType = '';\r\n                mathML = '';\r\n            }\r\n            lastType = 'fence';\r\n        }\r\n    }\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        stream.mathML += mathML;\r\n        stream.lastType = lastType;\r\n    }\r\n    return result;\r\n}\r\nfunction scanOperator(stream, final, options) {\r\n    let result = false;\r\n    final = final || stream.atoms.length;\r\n    let mathML = '';\r\n    let lastType = '';\r\n    const atom = stream.atoms[stream.index];\r\n    if (stream.index < final &&\r\n        (atom.type === 'mbin' || atom.type === 'mrel')) {\r\n        mathML += atomToMathML(stream.atoms[stream.index], options);\r\n        stream.index += 1;\r\n        lastType = 'mo';\r\n    }\r\n    else if (stream.index < final && atom.type === 'mop') {\r\n        // mathML += '<mrow>';\r\n        if (atom.limits === 'limits' && (atom.superscript || atom.subscript)) {\r\n            // Operator with limits, e.g. \\sum\r\n            const op = toMo(atom, options);\r\n            if (atom.superscript && atom.subscript) {\r\n                // Both superscript and subscript\r\n                mathML +=\r\n                    (atom.limits !== 'nolimits'\r\n                        ? '<munderover>'\r\n                        : '<msubsup>') + op;\r\n                mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n                mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n                mathML +=\r\n                    atom.limits !== 'nolimits' ? '</munderover>' : '</msubsup>';\r\n            }\r\n            else if (atom.superscript) {\r\n                // Superscript only\r\n                mathML +=\r\n                    (atom.limits !== 'nolimits' ? '<mover>' : '<msup>') + op;\r\n                mathML += toMathML(atom.superscript, 0, 0, options).mathML;\r\n                mathML += atom.limits !== 'nolimits' ? '</mover>' : '</msup>';\r\n            }\r\n            else {\r\n                // Subscript only\r\n                mathML +=\r\n                    (atom.limits !== 'nolimits' ? '<munder>' : '<msub>') + op;\r\n                mathML += toMathML(atom.subscript, 0, 0, options).mathML;\r\n                mathML += atom.limits !== 'nolimits' ? '</munder>' : '</msub>';\r\n            }\r\n            lastType = 'mo';\r\n        }\r\n        else {\r\n            const atom = stream.atoms[stream.index];\r\n            const isUnit = atom.symbol === '\\\\operatorname';\r\n            const op = isUnit\r\n                ? '<mi class=\"MathML-Unit\"' +\r\n                    makeID$1(atom.id, options) +\r\n                    '>' +\r\n                    toString$1(atom.body) +\r\n                    '</mi>'\r\n                : toMo(atom, options);\r\n            mathML += op;\r\n            stream.index += 1;\r\n            if (parseSubsup(mathML, stream, options)) {\r\n                result = true;\r\n                stream.lastType = '';\r\n                mathML = '';\r\n            }\r\n            stream.index -= 1;\r\n            if (!isUnit && !/^<mo>(.*)<\\/mo>$/.test(op)) {\r\n                mathML += '<mo>&#x2061;</mo>'; // APPLY FUNCTION\r\n                // mathML += scanArgument(stream);\r\n                lastType = 'applyfunction';\r\n            }\r\n            else {\r\n                lastType = isUnit ? 'mi' : 'mo';\r\n            }\r\n        }\r\n        // mathML += '</mrow>';\r\n        if ((stream.lastType === 'mi' || stream.lastType === 'mn') &&\r\n            !/^<mo>(.*)<\\/mo>$/.test(mathML)) {\r\n            mathML = '<mo>&#8290;</mo>' + mathML; // &InvisibleTimes;\r\n        }\r\n        stream.index += 1;\r\n    }\r\n    if (mathML.length > 0) {\r\n        result = true;\r\n        stream.mathML += mathML;\r\n        stream.lastType = lastType;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Given an atom or an array of atoms, return their MathML representation as\r\n * a string.\r\n * @param {string|Atom|Atom[]} input\r\n * @param initial index of the input to start conversion from\r\n * @param final last index of the input to stop conversion to\r\n */\r\nfunction toMathML(input, initial, final, options) {\r\n    const result = {\r\n        atoms: input,\r\n        index: initial !== null && initial !== void 0 ? initial : 0,\r\n        mathML: '',\r\n        lastType: '',\r\n    };\r\n    if (typeof input === 'number' || typeof input === 'boolean') {\r\n        result.mathML = input.toString();\r\n    }\r\n    else if (typeof input === 'string') {\r\n        result.mathML = input;\r\n    }\r\n    else if (input instanceof Atom) {\r\n        result.mathML = atomToMathML(input, options);\r\n    }\r\n    else if (Array.isArray(input)) {\r\n        let count = 0;\r\n        final = final ? final : input ? input.length : 0;\r\n        while (result.index < final) {\r\n            if (scanText(result, final, options) ||\r\n                scanNumber(result, final, options) ||\r\n                scanIdentifier(result, final, options) ||\r\n                scanOperator(result, final, options) ||\r\n                scanFence(result, final, options)) {\r\n                count += 1;\r\n            }\r\n            else if (result.index < final) {\r\n                let mathML = atomToMathML(result.atoms[result.index], options);\r\n                if (result.lastType === 'mn' &&\r\n                    mathML.length > 0 &&\r\n                    result.atoms[result.index].type === 'genfrac') {\r\n                    // If this is a fraction preceded by a number (e.g. 2 1/2),\r\n                    // add an \"invisible plus\" (U+0264) character in front of it\r\n                    mathML = '<mo>&#x2064;</mo>' + mathML;\r\n                }\r\n                if (result.atoms[result.index].type === 'genfrac') {\r\n                    result.lastType = 'mfrac';\r\n                }\r\n                else {\r\n                    result.lastType = '';\r\n                }\r\n                if (mathML.length > 0) {\r\n                    result.mathML += mathML;\r\n                    count += 1;\r\n                }\r\n                result.index += 1;\r\n            }\r\n        }\r\n        // If there are more than a single element, wrap them in a mrow tag.\r\n        if (count > 1) {\r\n            result.mathML = '<mrow>' + result.mathML + '</mrow>';\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction toMo(atom, options) {\r\n    let result = '';\r\n    const body = toString$1(atom.body);\r\n    if (body) {\r\n        result = '<mo' + makeID$1(atom.id, options) + '>' + body + '</mo>';\r\n    }\r\n    return result;\r\n}\r\nfunction toString$1(atoms) {\r\n    if (!atoms)\r\n        return '';\r\n    if (typeof atoms === 'string')\r\n        return xmlEscape(atoms);\r\n    if (!Array.isArray(atoms) && typeof atoms.body === 'string') {\r\n        return xmlEscape(atoms.body);\r\n    }\r\n    let result = '';\r\n    for (const atom of atoms) {\r\n        if (typeof atom.body === 'string') {\r\n            result += atom.body;\r\n        }\r\n    }\r\n    return xmlEscape(result);\r\n}\r\n/**\r\n * Return a MathML fragment representation of a single atom\r\n *\r\n */\r\nfunction atomToMathML(atom, options) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n    // For named SVG atoms, map to a Unicode char\r\n    const SVG_CODE_POINTS = {\r\n        widehat: '^',\r\n        widecheck: 'ˇ',\r\n        widetilde: '~',\r\n        utilde: '~',\r\n        overleftarrow: '\\u2190',\r\n        underleftarrow: '\\u2190',\r\n        xleftarrow: '\\u2190',\r\n        overrightarrow: '\\u2192',\r\n        underrightarrow: '\\u2192',\r\n        xrightarrow: '\\u2192',\r\n        underbrace: '\\u23df',\r\n        overbrace: '\\u23de',\r\n        overgroup: '\\u23e0',\r\n        undergroup: '\\u23e1',\r\n        overleftrightarrow: '\\u2194',\r\n        underleftrightarrow: '\\u2194',\r\n        xleftrightarrow: '\\u2194',\r\n        Overrightarrow: '\\u21d2',\r\n        xRightarrow: '\\u21d2',\r\n        overleftharpoon: '\\u21bc',\r\n        xleftharpoonup: '\\u21bc',\r\n        overrightharpoon: '\\u21c0',\r\n        xrightharpoonup: '\\u21c0',\r\n        xLeftarrow: '\\u21d0',\r\n        xLeftrightarrow: '\\u21d4',\r\n        xhookleftarrow: '\\u21a9',\r\n        xhookrightarrow: '\\u21aa',\r\n        xmapsto: '\\u21a6',\r\n        xrightharpoondown: '\\u21c1',\r\n        xleftharpoondown: '\\u21bd',\r\n        xrightleftharpoons: '\\u21cc',\r\n        xleftrightharpoons: '\\u21cb',\r\n        xtwoheadleftarrow: '\\u219e',\r\n        xtwoheadrightarrow: '\\u21a0',\r\n        xlongequal: '=',\r\n        xtofrom: '\\u21c4',\r\n        xrightleftarrows: '\\u21c4',\r\n        xrightequilibrium: '\\u21cc',\r\n        xleftequilibrium: '\\u21cb',\r\n    };\r\n    const SPECIAL_IDENTIFIERS = {\r\n        '\\\\exponentialE': '&#x02147;',\r\n        '\\\\imaginaryI': '&#x2148;',\r\n        '\\\\differentialD': '&#x2146;',\r\n        '\\\\capitalDifferentialD': '&#x2145;',\r\n        '\\\\alpha': '&#x03b1;',\r\n        '\\\\pi': '&#x03c0;',\r\n        '\\\\infty': '&#x221e;',\r\n        '\\\\forall': '&#x2200;',\r\n        '\\\\nexists': '&#x2204;',\r\n        '\\\\exists': '&#x2203;',\r\n        '\\\\hbar': '\\u210f',\r\n        '\\\\cdotp': '\\u22c5',\r\n        '\\\\ldots': '\\u2026',\r\n        '\\\\cdots': '\\u22ef',\r\n        '\\\\ddots': '\\u22f1',\r\n        '\\\\vdots': '\\u22ee',\r\n        '\\\\ldotp': '\\u002e',\r\n    };\r\n    const MATH_VARIANTS = {\r\n        cal: 'script',\r\n        frak: 'fraktur',\r\n        bb: 'double-struck',\r\n        scr: 'script',\r\n        cmtt: 'monospace',\r\n        cmss: 'sans-serif',\r\n    };\r\n    const SPACING = {\r\n        '\\\\!': -3 / 18,\r\n        '\\\\ ': 6 / 18,\r\n        '\\\\,': 3 / 18,\r\n        '\\\\:': 4 / 18,\r\n        '\\\\;': 5 / 18,\r\n        '\\\\enspace': 0.5,\r\n        '\\\\quad': 1,\r\n        '\\\\qquad': 2,\r\n        '\\\\enskip': 0.5,\r\n    };\r\n    let result = '';\r\n    let sep = '';\r\n    let col, row, i;\r\n    let underscript, overscript, body;\r\n    let variant = MATH_VARIANTS[atom.fontFamily || atom.font] || '';\r\n    if (variant) {\r\n        variant = ' mathvariant=\"' + variant + '\"';\r\n    }\r\n    const command = atom.symbol;\r\n    if (atom.mode === 'text') {\r\n        result = '<mi' + makeID$1(atom.id, options) + '>' + atom.body + '</mi>';\r\n    }\r\n    else {\r\n        switch (atom.type) {\r\n            case 'first':\r\n                break; // nothing to do\r\n            case 'group':\r\n            case 'root':\r\n                result = toMathML(atom.body, 0, 0, options).mathML;\r\n                break;\r\n            case 'array':\r\n                if ((atom.leftDelim && atom.leftDelim !== '.') ||\r\n                    (atom.rightDelim && atom.rightDelim !== '.')) {\r\n                    result += '<mrow>';\r\n                    if (atom.leftDelim && atom.leftDelim !== '.') {\r\n                        result +=\r\n                            '<mo>' +\r\n                                (SPECIAL_OPERATORS[atom.leftDelim] ||\r\n                                    atom.leftDelim) +\r\n                                '</mo>';\r\n                    }\r\n                }\r\n                result += '<mtable';\r\n                if (atom.colFormat) {\r\n                    result += ' columnalign=\"';\r\n                    for (i = 0; i < atom.colFormat.length; i++) {\r\n                        if (atom.colFormat[i].align) {\r\n                            result +=\r\n                                { l: 'left', c: 'center', r: 'right' }[atom.colFormat[i].align] + ' ';\r\n                        }\r\n                    }\r\n                    result += '\"';\r\n                }\r\n                result += '>';\r\n                for (row = 0; row < atom.array.length; row++) {\r\n                    result += '<mtr>';\r\n                    for (col = 0; col < atom.array[row].length; col++) {\r\n                        result +=\r\n                            '<mtd>' +\r\n                                toMathML(atom.array[row][col], 0, 0, options)\r\n                                    .mathML +\r\n                                '</mtd>';\r\n                    }\r\n                    result += '</mtr>';\r\n                }\r\n                result += '</mtable>';\r\n                if ((atom.leftDelim && atom.leftDelim !== '.') ||\r\n                    (atom.rightDelim && atom.rightDelim !== '.')) {\r\n                    if (atom.rightDelim && atom.rightDelim !== '.') {\r\n                        result +=\r\n                            '<mo>' +\r\n                                (SPECIAL_OPERATORS[atom.leftDelim] ||\r\n                                    atom.rightDelim) +\r\n                                '</mo>';\r\n                    }\r\n                    result += '</mrow>';\r\n                }\r\n                break;\r\n            case 'genfrac':\r\n                if (atom.leftDelim || atom.rightDelim) {\r\n                    result += '<mrow>';\r\n                }\r\n                if (atom.leftDelim && atom.leftDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                            makeID$1(atom.id, options) +\r\n                            '>' +\r\n                            (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) +\r\n                            '</mo>';\r\n                }\r\n                if (atom.hasBarLine) {\r\n                    result += '<mfrac>';\r\n                    result +=\r\n                        toMathML(atom.numer, 0, 0, options).mathML ||\r\n                            '<mi>&nbsp;</mi>';\r\n                    result +=\r\n                        toMathML(atom.denom, 0, 0, options).mathML ||\r\n                            '<mi>&nbsp;</mi>';\r\n                    result += '</mfrac>';\r\n                }\r\n                else {\r\n                    // No bar line, i.e. \\choose, etc...\r\n                    result += '<mtable' + makeID$1(atom.id, options) + '>';\r\n                    result +=\r\n                        '<mtr>' +\r\n                            toMathML(atom.numer, 0, 0, options).mathML +\r\n                            '</mtr>';\r\n                    result +=\r\n                        '<mtr>' +\r\n                            toMathML(atom.denom, 0, 0, options).mathML +\r\n                            '</mtr>';\r\n                    result += '</mtable>';\r\n                }\r\n                if (atom.rightDelim && atom.rightDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                            makeID$1(atom.id, options) +\r\n                            '>' +\r\n                            (SPECIAL_OPERATORS[atom.rightDelim] ||\r\n                                atom.rightDelim) +\r\n                            '</mo>';\r\n                }\r\n                if (atom.leftDelim || atom.rightDelim) {\r\n                    result += '</mrow>';\r\n                }\r\n                break;\r\n            case 'surd':\r\n                if (atom.index) {\r\n                    result += '<mroot' + makeID$1(atom.id, options) + '>';\r\n                    result += toMathML(atom.body, 0, 0, options).mathML;\r\n                    result += toMathML(atom.index, 0, 0, options).mathML;\r\n                    result += '</mroot>';\r\n                }\r\n                else {\r\n                    result += '<msqrt' + makeID$1(atom.id, options) + '>';\r\n                    result += toMathML(atom.body, 0, 0, options).mathML;\r\n                    result += '</msqrt>';\r\n                }\r\n                break;\r\n            case 'leftright':\r\n                // TODO: could add fence=true attribute\r\n                result = '<mrow>';\r\n                if (atom.leftDelim && atom.leftDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                            makeID$1(atom.id, options) +\r\n                            '>' +\r\n                            (SPECIAL_OPERATORS[atom.leftDelim] || atom.leftDelim) +\r\n                            '</mo>';\r\n                }\r\n                if (atom.body) {\r\n                    result += toMathML(atom.body, 0, 0, options).mathML;\r\n                }\r\n                if (atom.rightDelim && atom.rightDelim !== '.') {\r\n                    result +=\r\n                        '<mo' +\r\n                            makeID$1(atom.id, options) +\r\n                            '>' +\r\n                            (SPECIAL_OPERATORS[atom.rightDelim] ||\r\n                                atom.rightDelim) +\r\n                            '</mo>';\r\n                }\r\n                result += '</mrow>';\r\n                break;\r\n            case 'sizeddelim':\r\n            case 'delim':\r\n                result +=\r\n                    '<mo separator=\"true\"' +\r\n                        makeID$1(atom.id, options) +\r\n                        '>' +\r\n                        (SPECIAL_OPERATORS[atom.delim] || atom.delim) +\r\n                        '</mo>';\r\n                break;\r\n            case 'accent':\r\n                result +=\r\n                    '<mover accent=\"true\"' + makeID$1(atom.id, options) + '>';\r\n                result += toMathML(atom.body, 0, 0, options).mathML;\r\n                result +=\r\n                    '<mo>' +\r\n                        (SPECIAL_OPERATORS[command] || atom.accent) +\r\n                        '</mo>';\r\n                result += '</mover>';\r\n                break;\r\n            case 'line':\r\n            case 'overlap':\r\n                break;\r\n            case 'overunder':\r\n                overscript = atom.overscript;\r\n                underscript = atom.underscript;\r\n                if ((atom.svgAbove || overscript) &&\r\n                    (atom.svgBelow || underscript)) {\r\n                    body = atom.body;\r\n                }\r\n                else if (overscript && overscript.length > 0) {\r\n                    body = atom.body;\r\n                    if ((_b = (_a = atom.body) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.underscript) {\r\n                        underscript = atom.body[0].underscript;\r\n                        body = atom.body[0].body;\r\n                    }\r\n                    else if (((_d = (_c = atom.body) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.type) === 'first' && ((_f = (_e = atom.body) === null || _e === void 0 ? void 0 : _e[1]) === null || _f === void 0 ? void 0 : _f.underscript)) {\r\n                        underscript = atom.body[1].underscript;\r\n                        body = atom.body[1].body;\r\n                    }\r\n                }\r\n                else if (underscript && underscript.length > 0) {\r\n                    body = atom.body;\r\n                    if ((_h = (_g = atom.body) === null || _g === void 0 ? void 0 : _g[0]) === null || _h === void 0 ? void 0 : _h.overscript) {\r\n                        overscript = atom.body[0].overscript;\r\n                        body = atom.body[0].body;\r\n                    }\r\n                    else if (((_k = (_j = atom.body) === null || _j === void 0 ? void 0 : _j[0]) === null || _k === void 0 ? void 0 : _k.type) === 'first' && ((_m = (_l = atom.body) === null || _l === void 0 ? void 0 : _l[1]) === null || _m === void 0 ? void 0 : _m.overscript)) {\r\n                        overscript = atom.body[1].overscript;\r\n                        body = atom.body[1].body;\r\n                    }\r\n                }\r\n                if ((atom.svgAbove || overscript) &&\r\n                    (atom.svgBelow || underscript)) {\r\n                    result += `<munderover ${variant} ${makeID$1(atom.id, options)}>`;\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgBody] ||\r\n                            toMathML(body, 0, 0, options).mathML;\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgBelow] ||\r\n                            toMathML(underscript, 0, 0, options).mathML;\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgAbove] ||\r\n                            toMathML(overscript, 0, 0, options).mathML;\r\n                    result += '</munderover>';\r\n                }\r\n                else if (atom.svgAbove || overscript) {\r\n                    result +=\r\n                        `<mover ${variant} ${makeID$1(atom.id, options)}>` +\r\n                            (SVG_CODE_POINTS[atom.svgBody] ||\r\n                                toMathML(body, 0, 0, options).mathML);\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgAbove] ||\r\n                            toMathML(overscript, 0, 0, options).mathML;\r\n                    result += '</mover>';\r\n                }\r\n                else if (atom.svgBelow || underscript) {\r\n                    result +=\r\n                        `<munder ${variant} ${makeID$1(atom.id, options)}>` +\r\n                            (SVG_CODE_POINTS[atom.svgBody] ||\r\n                                toMathML(body, 0, 0, options).mathML);\r\n                    result +=\r\n                        SVG_CODE_POINTS[atom.svgBelow] ||\r\n                            toMathML(underscript, 0, 0, options).mathML;\r\n                    result += '</munder>';\r\n                }\r\n                break;\r\n            case 'placeholder': // no real equivalent in MathML -- will generate a '?'qq\r\n            case 'mord': {\r\n                result =\r\n                    SPECIAL_IDENTIFIERS[command] ||\r\n                        command ||\r\n                        (typeof atom.body === 'string' ? atom.body : '');\r\n                const m = command\r\n                    ? command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/)\r\n                    : null;\r\n                if (m) {\r\n                    // It's a \\char command\r\n                    result = '&#x' + m[1] + ';';\r\n                }\r\n                else if (result.length > 0 && result.charAt(0) === '\\\\') {\r\n                    // This is an identifier with no special handling. Use the\r\n                    // Unicode value\r\n                    if (typeof atom.body === 'string' &&\r\n                        atom.body.charCodeAt(0) > 255) {\r\n                        result =\r\n                            '&#x' +\r\n                                ('000000' + atom.body.charCodeAt(0).toString(16)).substr(-4) +\r\n                                ';';\r\n                    }\r\n                    else if (typeof atom.body === 'string') {\r\n                        result = atom.body.charAt(0);\r\n                    }\r\n                    else {\r\n                        result = atom.body;\r\n                    }\r\n                }\r\n                const tag = /\\d/.test(result) ? 'mn' : 'mi';\r\n                result =\r\n                    '<' +\r\n                        tag +\r\n                        variant +\r\n                        makeID$1(atom.id, options) +\r\n                        '>' +\r\n                        xmlEscape(result) +\r\n                        '</' +\r\n                        tag +\r\n                        '>';\r\n                break;\r\n            }\r\n            case 'mbin':\r\n            case 'mrel':\r\n            case 'textord':\r\n            case 'minner':\r\n                if (command && SPECIAL_IDENTIFIERS[command]) {\r\n                    // Some 'textord' are actually identifiers. Check them here.\r\n                    result =\r\n                        '<mi' +\r\n                            makeID$1(atom.id, options) +\r\n                            '>' +\r\n                            SPECIAL_IDENTIFIERS[command] +\r\n                            '</mi>';\r\n                }\r\n                else if (command && SPECIAL_OPERATORS[command]) {\r\n                    result =\r\n                        '<mo' +\r\n                            makeID$1(atom.id, options) +\r\n                            '>' +\r\n                            SPECIAL_OPERATORS[command] +\r\n                            '</mo>';\r\n                }\r\n                else {\r\n                    result = toMo(atom, options);\r\n                }\r\n                break;\r\n            case 'mpunct':\r\n                result =\r\n                    '<mo separator=\"true\"' +\r\n                        makeID$1(atom.id, options) +\r\n                        '>' +\r\n                        (SPECIAL_OPERATORS[command] || command) +\r\n                        '</mo>';\r\n                break;\r\n            case 'mop':\r\n                if (atom.body !== '\\u200b') {\r\n                    // Not ZERO-WIDTH\r\n                    result = '<mo' + makeID$1(atom.id, options) + '>';\r\n                    if (command === '\\\\operatorname') {\r\n                        result += atom.body;\r\n                    }\r\n                    else {\r\n                        result += command || atom.body;\r\n                    }\r\n                    result += '</mo>';\r\n                }\r\n                break;\r\n            case 'mathstyle':\r\n                // TODO: mathstyle is a switch. Need to figure out its scope to properly wrap it around a <mstyle> tag\r\n                // if (atom.mathstyle === 'displaystyle') {\r\n                //     result += '<mstyle displaystyle=\"true\">';\r\n                //     result += '</mstyle>';\r\n                // } else {\r\n                //     result += '<mstyle displaystyle=\"false\">';\r\n                //     result += '</mstyle>';\r\n                // };\r\n                break;\r\n            case 'box':\r\n                result = '<menclose notation=\"box\"';\r\n                if (atom.backgroundcolor) {\r\n                    result +=\r\n                        ' mathbackground=\"' +\r\n                            stringToColor(atom.backgroundcolor) +\r\n                            '\"';\r\n                }\r\n                result +=\r\n                    makeID$1(atom.id, options) +\r\n                        '>' +\r\n                        toMathML(atom.body, 0, 0, options).mathML +\r\n                        '</menclose>';\r\n                break;\r\n            case 'spacing':\r\n                result += '<mspace width=\"' + (SPACING[command] || 0) + 'em\"/>';\r\n                break;\r\n            case 'enclose':\r\n                result = '<menclose notation=\"';\r\n                for (const notation in atom.notation) {\r\n                    if (Object.prototype.hasOwnProperty.call(atom.notation, notation) &&\r\n                        atom.notation[notation]) {\r\n                        result += sep + notation;\r\n                        sep = ' ';\r\n                    }\r\n                }\r\n                result +=\r\n                    makeID$1(atom.id, options) +\r\n                        '\">' +\r\n                        toMathML(atom.body, 0, 0, options).mathML +\r\n                        '</menclose>';\r\n                break;\r\n            case 'space':\r\n                result += '&nbsp;';\r\n                break;\r\n            case 'msupsub':\r\n                break;\r\n            case 'phantom':\r\n                break;\r\n            case 'composition':\r\n                break;\r\n            default:\r\n                console.log('In conversion to MathML, unknown type : ' + atom.type);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction atomsToMathML(atoms, options) {\r\n    return toMathML(atoms, 0, 0, options).mathML;\r\n}\n\n/*\r\n * Return a hash (32-bit integer) representing the content of the mathfield\r\n * (but not the selection state)\r\n */\r\nfunction hash(latex) {\r\n    let result = 0;\r\n    for (let i = 0; i < latex.length; i++) {\r\n        result = result * 31 + latex.charCodeAt(i);\r\n        result = result | 0; // Force it to a 32-bit number\r\n    }\r\n    return Math.abs(result);\r\n}\r\nfunction requestUpdate(mathfield) {\r\n    if (!mathfield.dirty) {\r\n        mathfield.dirty = true;\r\n        requestAnimationFrame(() => {\r\n            if (isValidMathfield(mathfield) && mathfield.dirty) {\r\n                render(mathfield);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Lay-out the mathfield and generate the DOM.\r\n *\r\n * This is usually done automatically, but if the font-size, or other geometric\r\n * attributes are modified, outside of MathLive, this function may need to be\r\n * called explicitly.\r\n *\r\n */\r\nfunction render(mathfield, renderOptions) {\r\n    renderOptions = renderOptions !== null && renderOptions !== void 0 ? renderOptions : {};\r\n    mathfield.dirty = false;\r\n    //\r\n    // 1. Stop and reset read aloud state\r\n    //\r\n    if (!window['mathlive']) {\r\n        window['mathlive'] = {};\r\n    }\r\n    //\r\n    // 2. Validate selection\r\n    //\r\n    if (!getAnchor(mathfield.model)) {\r\n        console.warn('Invalid selection, resetting it. ' +\r\n            pathToString(mathfield.model.path));\r\n        mathfield.model.path = [{ relation: 'body', offset: 0 }];\r\n    }\r\n    //\r\n    // 3. Update selection state and blinking cursor (caret)\r\n    //\r\n    mathfield.model.root.forEach((a) => {\r\n        a.caret = '';\r\n        a.isSelected = false;\r\n        a.containsCaret = false;\r\n    });\r\n    const hasFocus = mathfield.hasFocus();\r\n    if (selectionIsCollapsed(mathfield.model)) {\r\n        getAnchor(mathfield.model).caret =\r\n            hasFocus && !mathfield.options.readOnly ? mathfield.mode : '';\r\n    }\r\n    else {\r\n        forEachSelected(mathfield.model, (a) => {\r\n            a.isSelected = true;\r\n        });\r\n    }\r\n    if (hasFocus && !mathfield.options.readOnly) {\r\n        let ancestor = mathfield.model.ancestor(1);\r\n        let i = 1;\r\n        let done = false;\r\n        while (ancestor && !done) {\r\n            if (ancestor.type === 'surd' || ancestor.type === 'leftright') {\r\n                ancestor.containsCaret = true;\r\n                done = true;\r\n            }\r\n            i += 1;\r\n            ancestor = mathfield.model.ancestor(i);\r\n        }\r\n    }\r\n    //\r\n    // 4. Create spans corresponding to the updated mathlist\r\n    //\r\n    const spans = decompose({\r\n        mathstyle: MATHSTYLES.displaystyle,\r\n        letterShapeStyle: mathfield.options.letterShapeStyle,\r\n        atomIdsSettings: {\r\n            // Using the hash as a seed for the ID\r\n            // keeps the IDs the same until the content of the field changes.\r\n            seed: hash(mathfield.model.root.toLatex(false)),\r\n            // The `groupNumbers` flag indicates that extra spans should be generated\r\n            // to represent group of atoms, for example, a span to group\r\n            // consecutive digits to represent a number.\r\n            groupNumbers: renderOptions.forHighlighting,\r\n        },\r\n        smartFence: mathfield.options.smartFence,\r\n        macros: mathfield.options.macros,\r\n    }, mathfield.model.root);\r\n    //\r\n    // 5. Construct struts around the spans\r\n    //\r\n    const base = makeSpan(spans, 'ML__base');\r\n    base.attributes = {\r\n        // Sometimes Google Translate kicks in an attempts to 'translate' math\r\n        // This doesn't work very well, so turn off translate\r\n        translate: 'no',\r\n        // Hint to screen readers to not attempt to read this span\r\n        // They should use instead the 'aria-label' below.\r\n        'aria-hidden': 'true',\r\n    };\r\n    const wrapper = makeStruts(base, 'ML__mathlive');\r\n    //\r\n    // 6. Generate markup and accessible node\r\n    //\r\n    mathfield.field.innerHTML = mathfield.options.createHTML(wrapper.toMarkup(0, mathfield.options.horizontalSpacingScale));\r\n    mathfield.field.classList.toggle('ML__focused', hasFocus && !mathfield.options.readOnly);\r\n    mathfield.accessibleNode.innerHTML = mathfield.options.createHTML('<math xmlns=\"http://www.w3.org/1998/Math/MathML\">' +\r\n        atomsToMathML(mathfield.model.root, mathfield.options) +\r\n        '</math>');\r\n    //mathfield.ariaLiveText.textContent = \"\";\r\n    //\r\n    // 7. Calculate selection rectangle\r\n    //\r\n    const selectionRect = getSelectionBounds(mathfield.field);\r\n    if (selectionRect !== null) {\r\n        const selectionElement = document.createElement('div');\r\n        selectionElement.classList.add('ML__selection');\r\n        selectionElement.style.position = 'absolute';\r\n        selectionElement.style.left =\r\n            Number(selectionRect.left).toString() + 'px';\r\n        selectionElement.style.top =\r\n            Number(selectionRect.top).toString() + 'px';\r\n        selectionElement.style.width =\r\n            Number(Math.ceil(selectionRect.right - selectionRect.left)).toString() + 'px';\r\n        selectionElement.style.height =\r\n            Number(Math.ceil(selectionRect.bottom - selectionRect.top - 1)).toString() + 'px';\r\n        mathfield.field.insertBefore(selectionElement, mathfield.field.childNodes[0]);\r\n    }\r\n}\n\n// @revisit: move to mathfield.vibrate()\r\nconst HAPTIC_FEEDBACK_DURATION = 3; // in ms\r\nconst COMMANDS = {};\r\nfunction register$2(commands, options) {\r\n    options = options !== null && options !== void 0 ? options : { target: 'mathfield', canUndo: false };\r\n    Object.keys(commands).forEach((selector) => {\r\n        console.assert(!COMMANDS[selector], 'Selector already defined: ', selector);\r\n        COMMANDS[selector] = { ...options, fn: commands[selector] };\r\n    });\r\n}\r\nfunction perform(mathfield, command) {\r\n    var _a;\r\n    if (!command) {\r\n        return false;\r\n    }\r\n    let selector;\r\n    let args = [];\r\n    let handled = false;\r\n    let dirty = false;\r\n    if (isArray(command)) {\r\n        selector = command[0];\r\n        args = command.slice(1);\r\n    }\r\n    else {\r\n        selector = command;\r\n    }\r\n    // Convert kebab case (like-this) to camel case (likeThis).\r\n    selector = selector.replace(/-\\w/g, (m) => m[1].toUpperCase());\r\n    if (((_a = COMMANDS[selector]) === null || _a === void 0 ? void 0 : _a.target) === 'model') {\r\n        if (/^(delete|transpose|add)/.test(selector)) {\r\n            if (selector !== 'deletePreviousChar') {\r\n                mathfield.resetKeystrokeBuffer();\r\n            }\r\n        }\r\n        if (/^(delete|transpose|add)/.test(selector) &&\r\n            mathfield.mode !== 'command') {\r\n            // Update the undo state to account for the current selection\r\n            mathfield.popUndoStack();\r\n            mathfield.snapshot();\r\n        }\r\n        COMMANDS[selector].fn(mathfield.model, ...args);\r\n        if (/^(delete|transpose|add)/.test(selector) &&\r\n            mathfield.mode !== 'command') {\r\n            mathfield.snapshot();\r\n        }\r\n        if (/^(delete)/.test(selector) && mathfield.mode === 'command') {\r\n            const command = extractCommandStringAroundInsertionPoint(mathfield.model);\r\n            const suggestions = suggest(command);\r\n            if (suggestions.length === 0) {\r\n                hidePopover(mathfield);\r\n            }\r\n            else {\r\n                showPopoverWithLatex(mathfield, suggestions[0].match, suggestions.length > 1);\r\n            }\r\n        }\r\n        dirty = true;\r\n        handled = true;\r\n    }\r\n    else if (COMMANDS[selector]) {\r\n        dirty = COMMANDS[selector].fn(mathfield, ...args);\r\n        handled = true;\r\n    }\r\n    else {\r\n        throw Error('Unknown command \"' + selector + '\"');\r\n    }\r\n    // If the command changed the selection so that it is no longer\r\n    // collapsed, or if it was an editing command, reset the inline\r\n    // shortcut buffer and the user style\r\n    if (!selectionIsCollapsed(mathfield.model) ||\r\n        /^(transpose|paste|complete|((moveToNextChar|moveToPreviousChar|extend).*))_$/.test(selector)) {\r\n        mathfield.resetKeystrokeBuffer();\r\n        mathfield.style = {};\r\n    }\r\n    // Render the mathlist\r\n    if (dirty) {\r\n        requestUpdate(mathfield);\r\n    }\r\n    return handled;\r\n}\r\n/**\r\n * Perform a command, but:\r\n * * focus the mathfield\r\n * * provide haptic and audio feedback\r\n * This is used by the virtual keyboard when command keys (delete, arrows, etc..)\r\n * are pressed.\r\n */\r\nfunction performWithFeedback(mathfield, selector) {\r\n    // @revisit: have a registry of commands -> sound\r\n    mathfield.focus();\r\n    if (mathfield.options.keypressVibration && (navigator === null || navigator === void 0 ? void 0 : navigator.vibrate)) {\r\n        navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\r\n    }\r\n    // Convert kebab case to camel case.\r\n    selector = selector.replace(/-\\w/g, (m) => m[1].toUpperCase());\r\n    if (selector === 'moveToNextPlaceholder' ||\r\n        selector === 'moveToPreviousPlaceholder' ||\r\n        selector === 'complete') {\r\n        if (mathfield.returnKeypressSound) {\r\n            mathfield.returnKeypressSound.load();\r\n            mathfield.returnKeypressSound\r\n                .play()\r\n                .catch((err) => console.warn(err));\r\n        }\r\n        else if (mathfield.keypressSound) {\r\n            mathfield.keypressSound.load();\r\n            mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n        }\r\n    }\r\n    else if (selector === 'deletePreviousChar' ||\r\n        selector === 'deleteNextChar' ||\r\n        selector === 'deletePreviousWord' ||\r\n        selector === 'deleteNextWord' ||\r\n        selector === 'deleteToGroupStart' ||\r\n        selector === 'deleteToGroupEnd' ||\r\n        selector === 'deleteToMathFieldStart' ||\r\n        selector === 'deleteToMathFieldEnd') {\r\n        if (mathfield.deleteKeypressSound) {\r\n            mathfield.deleteKeypressSound.load();\r\n            mathfield.deleteKeypressSound\r\n                .play()\r\n                .catch((err) => console.warn(err));\r\n        }\r\n        else if (mathfield.keypressSound) {\r\n            mathfield.keypressSound.load();\r\n            mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n        }\r\n    }\r\n    else if (mathfield.keypressSound) {\r\n        mathfield.keypressSound.load();\r\n        mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n    }\r\n    return mathfield.executeCommand(selector);\r\n}\r\nregister$2({\r\n    performWithFeedback: (mathfield, command) => performWithFeedback(mathfield, command),\r\n});\n\n/**\r\n * Join all the cells at the indicated row into a single mathlist\r\n */\r\nfunction arrayJoinColumns(row, separator = ',', style) {\r\n    if (!row)\r\n        return [];\r\n    let result = [];\r\n    let sep;\r\n    for (let cell of row) {\r\n        if (cell && cell.length > 0 && cell[0].type === 'first') {\r\n            // Remove the 'first' atom, if present\r\n            cell = cell.slice(1);\r\n        }\r\n        if (cell && cell.length > 0) {\r\n            if (sep) {\r\n                result.push(sep);\r\n            }\r\n            else {\r\n                sep = new Atom('math', 'mpunct', separator, style);\r\n            }\r\n            result = result.concat(cell);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Join all the rows into a single atom list\r\n */\r\nfunction arrayJoinRows(array, separators = [';', ','], style) {\r\n    let result = [];\r\n    let sep;\r\n    for (const row of array) {\r\n        if (sep) {\r\n            result.push(sep);\r\n        }\r\n        else {\r\n            sep = new Atom('math', 'mpunct', separators[0], style);\r\n        }\r\n        result = result.concat(arrayJoinColumns(row, separators[1]));\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Return the number of non-empty cells in that column\r\n */\r\nfunction arrayColumnCellCount(array, col) {\r\n    let result = 0;\r\n    const colRow = { col: col, row: 0 };\r\n    while (colRow.row < array.length) {\r\n        const cell = arrayCell(array, colRow);\r\n        if (cell && cell.length > 0) {\r\n            let cellLen = cell.length;\r\n            if (cell[0].type === 'first')\r\n                cellLen -= 1;\r\n            if (cellLen > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        colRow.row += 1;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Remove the indicated column from the array\r\n */\r\nfunction arrayRemoveColumn(array, col) {\r\n    let row = 0;\r\n    while (row < array.length) {\r\n        if (array[row][col]) {\r\n            array[row].splice(col, 1);\r\n        }\r\n        row += 1;\r\n    }\r\n}\r\n/**\r\n * Remove the indicated row from the array\r\n */\r\nfunction arrayRemoveRow(array, row) {\r\n    array.splice(row, 1);\r\n}\r\n/**\r\n * Return the first non-empty cell, row by row\r\n */\r\nfunction arrayFirstCellByRow(array) {\r\n    const colRow = { col: 0, row: 0 };\r\n    while (colRow.row < array.length && !arrayCell(array, colRow)) {\r\n        colRow.row += 1;\r\n    }\r\n    return arrayCell(array, colRow) ? 'cell' + arrayIndex(array, colRow) : '';\r\n}\r\n/**\r\n * Internal primitive to add a column/row in a matrix\r\n */\r\nfunction addCell(model, where) {\r\n    // This command is only applicable if we're in an array\r\n    const parent = model.parent();\r\n    if (parent && parent.type === 'array' && isArray(parent.array)) {\r\n        const relation = model.relation();\r\n        if (parent.array) {\r\n            const colRow = arrayColRow(parent.array, relation);\r\n            if (where === 'after row' || where === 'before row') {\r\n                // Insert a row\r\n                colRow.col = 0;\r\n                colRow.row = colRow.row + (where === 'after row' ? 1 : 0);\r\n                parent.array.splice(colRow.row, 0, [[]]);\r\n            }\r\n            else {\r\n                // Insert a column\r\n                colRow.col += where === 'after column' ? 1 : 0;\r\n                parent.array[colRow.row].splice(colRow.col, 0, []);\r\n            }\r\n            const cellIndex = arrayIndex(parent.array, colRow);\r\n            model.path.pop();\r\n            model.path.push({\r\n                relation: 'cell' + cellIndex.toString(),\r\n                offset: 0,\r\n            });\r\n            model.insertFirstAtom();\r\n        }\r\n    }\r\n}\r\nfunction convertParentToArray(model) {\r\n    var _a;\r\n    const parent = model.parent();\r\n    if (parent.type === 'leftright') {\r\n        parent.type = 'array';\r\n        const envName = (_a = { '(': 'pmatrix', '\\\\lbrack': 'bmatrix', '\\\\lbrace': 'cases' }[parent.leftDelim]) !== null && _a !== void 0 ? _a : 'matrix';\r\n        const env = getEnvironmentDefinition(envName);\r\n        const array = [[parent.body]];\r\n        Object.assign(parent, env.parser(envName, [], array));\r\n        parent.mode = getAnchorMode(model);\r\n        parent.environmentName = envName;\r\n        parent.array = array;\r\n        parent.rowGaps = [0];\r\n        delete parent.body;\r\n        model.path[model.path.length - 1].relation = 'cell0';\r\n    }\r\n    // Note: could also be a group, or we could be a subscript or an\r\n    // underscript (for multi-valued conditions on a \\sum, for example)\r\n    // Or if at root, this could be a 'align*' environment\r\n}\r\nfunction addRowAfter(model) {\r\n    convertParentToArray(model);\r\n    addCell(model, 'after row');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\nfunction addRowBefore(model) {\r\n    convertParentToArray(model);\r\n    addCell(model, 'before row');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\nfunction addColumnAfter(model) {\r\n    convertParentToArray(model);\r\n    addCell(model, 'after column');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\nfunction addColumnBefore(model) {\r\n    convertParentToArray(model);\r\n    addCell(model, 'before column');\r\n    contentDidChange(model);\r\n    return true;\r\n}\r\nregister$2({\r\n    addRowAfter: addRowAfter,\r\n    addColumnAfter: addColumnAfter,\r\n    addRowBefore: addRowBefore,\r\n    addColumnBefore: addColumnBefore,\r\n}, { target: 'model', category: 'array-edit' });\n\n/**\r\n * @param dir If the selection is not collapsed, and dir is\r\n * negative, delete backwards, starting with the anchor atom.\r\n * That is, delete(-1) will delete only the anchor atom.\r\n * If dir = 0, delete only if the selection is not collapsed\r\n */\r\nfunction delete_(model, dir = 0) {\r\n    const contentWasChanging = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n    dir = dir < 0 ? -1 : dir > 0 ? +1 : dir;\r\n    removeSuggestion(model);\r\n    if (model.parent().array) {\r\n        if (dir < 0 && model.startOffset() === 0) {\r\n            const array = model.parent().array;\r\n            if (arrayFirstCellByRow(array) === model.relation()) {\r\n                // (1) First cell:\r\n                // delete array, replace it with linearized content\r\n                const atoms = arrayJoinRows(array);\r\n                model.path.pop();\r\n                model.siblings().splice(model.anchorOffset(), 1, ...atoms);\r\n                setSelectionOffset(model, model.anchorOffset() - 1, atoms.length);\r\n            }\r\n            else {\r\n                const colRow = arrayColRow(array, model.relation());\r\n                if (colRow.col === 0) {\r\n                    // (2) First (non-empty) column (but not first row):\r\n                    // Move to the end of the last cell of the previous row\r\n                    const dest = arrayAdjustRow(array, colRow, -1);\r\n                    dest.col = array[dest.row].length - 1;\r\n                    model.path[model.path.length - 1].relation =\r\n                        'cell' + arrayIndex(array, dest);\r\n                    const destLength = array[dest.row][dest.col].length;\r\n                    // (2.1) Linearize it and merge it with last cell of previous row\r\n                    // (note that atoms could be empty if there are no non-empty\r\n                    // cells left in the row)\r\n                    const atoms = arrayJoinColumns(array[colRow.row]);\r\n                    array[dest.row][dest.col] = array[dest.row][dest.col].concat(atoms);\r\n                    setSelectionOffset(model, destLength - 1, atoms.length);\r\n                    // (2.2) Remove row\r\n                    arrayRemoveRow(array, colRow.row);\r\n                }\r\n                else {\r\n                    // (3) Non-first column\r\n                    // (3.1) If column is empty, remove it\r\n                    if (arrayColumnCellCount(array, colRow.col) === 0) {\r\n                        arrayRemoveColumn(array, colRow.col);\r\n                        colRow.col -= 1;\r\n                        model.path[model.path.length - 1].relation =\r\n                            'cell' + arrayIndex(array, colRow);\r\n                        const destCell = array[colRow.row][colRow.col];\r\n                        setSelectionOffset(model, destCell.length - 1, 0);\r\n                    }\r\n                    // (3.2) merge cell with cell in previous column\r\n                }\r\n            }\r\n            // Dispatch notifications\r\n            model.suppressChangeNotifications = contentWasChanging;\r\n            selectionDidChange(model);\r\n            contentDidChange(model);\r\n            return;\r\n        }\r\n    }\r\n    const siblings = model.siblings();\r\n    if (!selectionIsCollapsed(model)) {\r\n        // There is a selection extent. Delete all the atoms within it.\r\n        const first = model.startOffset() + 1;\r\n        const last = model.endOffset() + 1;\r\n        model.announce('deleted', null, siblings.slice(first, last));\r\n        siblings.splice(first, last - first);\r\n        // Adjust the anchor\r\n        setSelectionOffset(model, first - 1);\r\n    }\r\n    else {\r\n        const anchorOffset = model.anchorOffset();\r\n        if (dir < 0) {\r\n            if (anchorOffset !== 0) {\r\n                // We're not at the begining of the sibling list.\r\n                // If the previous sibling is a compound (fractions, group),\r\n                // just move into it, otherwise delete it\r\n                const sibling = model.sibling(0);\r\n                if (sibling.type === 'leftright') {\r\n                    sibling.rightDelim = '?';\r\n                    move(model, 'backward');\r\n                }\r\n                else if (!sibling.captureSelection &&\r\n                    /^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(sibling.type)) {\r\n                    move(model, 'backward');\r\n                }\r\n                else {\r\n                    model.announce('deleted', null, siblings.slice(anchorOffset, anchorOffset + 1));\r\n                    siblings.splice(anchorOffset, 1);\r\n                    setSelectionOffset(model, anchorOffset - 1);\r\n                }\r\n            }\r\n            else {\r\n                // We're at the beginning of the sibling list.\r\n                // Delete what comes before\r\n                const relation = model.relation();\r\n                if (relation === 'superscript' || relation === 'subscript') {\r\n                    const supsub = model\r\n                        .parent()[relation].filter((atom) => atom.type !== 'placeholder' &&\r\n                        atom.type !== 'first');\r\n                    model.parent()[relation] = null;\r\n                    model.path.pop();\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 0].concat(supsub)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 0, ...supsub);\r\n                    setSelectionOffset(model, model.anchorOffset() - 1);\r\n                    model.announce('deleted: ' + relation);\r\n                }\r\n                else if (relation === 'denom') {\r\n                    // Fraction denominator\r\n                    const numer = model\r\n                        .parent()\r\n                        .numer.filter((atom) => atom.type !== 'placeholder' &&\r\n                        atom.type !== 'first');\r\n                    const denom = model\r\n                        .parent()\r\n                        .denom.filter((atom) => atom.type !== 'placeholder' &&\r\n                        atom.type !== 'first');\r\n                    model.path.pop();\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 1].concat(denom)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 1, ...denom);\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 0].concat(numer)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 0, ...numer);\r\n                    setSelectionOffset(model, model.anchorOffset() + numer.length - 1);\r\n                    model.announce('deleted: denominator');\r\n                }\r\n                else if (relation === 'body') {\r\n                    const body = model\r\n                        .siblings()\r\n                        .filter((atom) => atom.type !== 'placeholder');\r\n                    if (model.path.length > 1) {\r\n                        body.shift(); // Remove the 'first' atom\r\n                        model.path.pop();\r\n                        model\r\n                            .siblings()\r\n                            .splice(model.anchorOffset(), 1, ...body);\r\n                        setSelectionOffset(model, model.anchorOffset() - 1);\r\n                        model.announce('deleted: root');\r\n                    }\r\n                }\r\n                else {\r\n                    move(model, 'backward');\r\n                    deleteChar(model, -1);\r\n                }\r\n            }\r\n        }\r\n        else if (dir > 0) {\r\n            if (anchorOffset !== siblings.length - 1) {\r\n                if (/^(group|array|genfrac|surd|leftright|overlap|overunder|box|mathstyle|sizing)$/.test(model.sibling(1).type)) {\r\n                    move(model, 'forward');\r\n                }\r\n                else {\r\n                    model.announce('deleted', null, siblings.slice(anchorOffset + 1, anchorOffset + 2));\r\n                    siblings.splice(anchorOffset + 1, 1);\r\n                }\r\n            }\r\n            else {\r\n                // We're at the end of the sibling list, delete what comes next\r\n                const relation = model.relation();\r\n                if (relation === 'numer') {\r\n                    const numer = model\r\n                        .parent()\r\n                        .numer.filter((atom) => atom.type !== 'placeholder' &&\r\n                        atom.type !== 'first');\r\n                    const denom = model\r\n                        .parent()\r\n                        .denom.filter((atom) => atom.type !== 'placeholder' &&\r\n                        atom.type !== 'first');\r\n                    model.path.pop();\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 1].concat(denom)\r\n                    // );\r\n                    // Array.prototype.splice.apply(\r\n                    //     model.siblings(),\r\n                    //     [model.anchorOffset(), 0].concat(numer)\r\n                    // );\r\n                    // @revisit\r\n                    model.siblings().splice(model.anchorOffset(), 1, ...denom);\r\n                    model.siblings().splice(model.anchorOffset(), 0, ...numer);\r\n                    setSelectionOffset(model, model.anchorOffset() + numer.length - 1);\r\n                    model.announce('deleted: numerator');\r\n                }\r\n                else {\r\n                    move(model, 'forward');\r\n                    deleteChar(model, -1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Something has been deleted and the parent latex is no longer valid\r\n    invalidateVerbatimLatex(model);\r\n    // Dispatch notifications\r\n    model.suppressChangeNotifications = contentWasChanging;\r\n    selectionDidChange(model);\r\n    contentDidChange(model);\r\n}\r\n/**\r\n * Delete sibling atoms\r\n */\r\nfunction deleteAtoms(model, count) {\r\n    if (count > 0) {\r\n        model.siblings().splice(model.anchorOffset() + 1, count);\r\n    }\r\n    else {\r\n        model.siblings().splice(model.anchorOffset() + count + 1, -count);\r\n        setSelectionOffset(model, model.anchorOffset() + count);\r\n    }\r\n}\r\n/**\r\n * Delete the selection, or multiple characters\r\n */\r\nfunction deleteChar(model, count = 0) {\r\n    if (count === 0) {\r\n        delete_(model, 0);\r\n    }\r\n    else if (count > 0) {\r\n        while (count > 0) {\r\n            delete_(model, +1);\r\n            count--;\r\n        }\r\n    }\r\n    else {\r\n        while (count < 0) {\r\n            delete_(model, -1);\r\n            count++;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nfunction applyStyleToUnstyledAtoms(atom, style) {\r\n    if (!atom || !style)\r\n        return;\r\n    if (isAtomArray(atom)) {\r\n        // Apply styling options to each atom\r\n        atom.forEach((x) => applyStyleToUnstyledAtoms(x, style));\r\n    }\r\n    else if (typeof atom === 'object') {\r\n        if (!atom.color &&\r\n            !atom.backgroundColor &&\r\n            !atom.fontFamily &&\r\n            !atom.fontShape &&\r\n            !atom.fontSeries &&\r\n            !atom.fontSize) {\r\n            atom.applyStyle(style);\r\n            applyStyleToUnstyledAtoms(atom.body, style);\r\n            applyStyleToUnstyledAtoms(atom.numer, style);\r\n            applyStyleToUnstyledAtoms(atom.denom, style);\r\n            applyStyleToUnstyledAtoms(atom.index, style);\r\n            applyStyleToUnstyledAtoms(atom.overscript, style);\r\n            applyStyleToUnstyledAtoms(atom.underscript, style);\r\n            applyStyleToUnstyledAtoms(atom.subscript, style);\r\n            applyStyleToUnstyledAtoms(atom.superscript, style);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Apply a style (color, background) to the selection.\r\n *\r\n * If the style is already applied to the selection, remove it. If the selection\r\n * has the style partially applied (i.e. only some sections), remove it from\r\n * those sections, and apply it to the entire selection.\r\n */\r\nfunction applyStyle$3(model, style) {\r\n    // No selection, nothing to do.\r\n    if (selectionIsCollapsed(model))\r\n        return false;\r\n    function everyStyle(property, value) {\r\n        let result = true;\r\n        forEachSelected(model, (x) => {\r\n            result = result && x[property] === value;\r\n        }, { recursive: true });\r\n        return result;\r\n    }\r\n    if (style.color && everyStyle('color', style.color)) {\r\n        // If the selection already has this color, turn it off\r\n        style.color = 'none';\r\n    }\r\n    if (style.backgroundColor &&\r\n        everyStyle('backgroundColor', style.backgroundColor)) {\r\n        // If the selection already has this color, turn it off\r\n        style.backgroundColor = 'none';\r\n    }\r\n    if (style.fontFamily && everyStyle('fontFamily', style.fontFamily)) {\r\n        // If the selection already has this font family, turn it off\r\n        style.fontFamily = 'none';\r\n    }\r\n    if (style.series)\r\n        style.fontSeries = style.series;\r\n    if (style.fontSeries && everyStyle('fontSeries', style.fontSeries)) {\r\n        // If the selection already has this series (weight), turn it off\r\n        style.fontSeries = 'auto';\r\n    }\r\n    if (style.shape)\r\n        style.fontShape = style.shape;\r\n    if (style.fontShape && everyStyle('fontShape', style.fontShape)) {\r\n        // If the selection already has this shape (italic), turn it off\r\n        style.fontShape = 'auto';\r\n    }\r\n    if (style.size)\r\n        style.fontSize = style.size;\r\n    if (style.fontSize && everyStyle('fontSize', style.fontSize)) {\r\n        // If the selection already has this size, reset it to default size\r\n        style.fontSize = 'size5';\r\n    }\r\n    forEachSelected(model, (x) => x.applyStyle(style), { recursive: true });\r\n    contentDidChange(model);\r\n    return true;\r\n}\n\n/**\r\n * Normalize the model by adding 'first' atoms where necessary.\r\n * This function modifies the model in place.\r\n */\r\nfunction normalizeModel(model) {\r\n    model.root.forEach((x) => {\r\n        if (Array.isArray(x.body) &&\r\n            (x.body.length === 0 || x.body[0].type !== 'first')) {\r\n            x.body.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.superscript &&\r\n            (x.superscript.length === 0 || x.superscript[0].type !== 'first')) {\r\n            x.superscript.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.subscript &&\r\n            (x.subscript.length === 0 || x.subscript[0].type !== 'first')) {\r\n            x.subscript.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.overscript &&\r\n            (x.overscript.length === 0 || x.overscript[0].type !== 'first')) {\r\n            x.overscript.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.underscript &&\r\n            (x.underscript.length === 0 || x.underscript[0].type !== 'first')) {\r\n            x.underscript.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.numer && (x.numer.length === 0 || x.numer[0].type !== 'first')) {\r\n            x.numer.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.denom && (x.denom.length === 0 || x.denom[0].type !== 'first')) {\r\n            x.denom.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n        if (x.index && (x.index.length === 0 || x.index[0].type !== 'first')) {\r\n            x.index.unshift(new Atom(x.mode, 'first'));\r\n        }\r\n    });\r\n}\r\nfunction insert(model, s, options) {\r\n    var _a, _b, _c, _d;\r\n    // Try to insert a smart fence.\r\n    if (!((_a = options.smartFence) !== null && _a !== void 0 ? _a : false)) {\r\n        // When smartFence is turned off, only do a \"smart\" fence insert\r\n        // if we're inside a `leftright`, at the last char\r\n        const parent = model.parent();\r\n        if ((parent === null || parent === void 0 ? void 0 : parent.type) === 'leftright' &&\r\n            parent.rightDelim === '?' &&\r\n            model.endOffset() === model.siblings().length - 1 &&\r\n            /^[)}\\]|]$/.test(s)) {\r\n            parent.rightDelim = s;\r\n            move(model, 'forward');\r\n            normalizeModel(model);\r\n            contentDidChange(model);\r\n            return;\r\n        }\r\n    }\r\n    else if (insertSmartFence(model, s, options.style)) {\r\n        normalizeModel(model);\r\n        return;\r\n    }\r\n    const suppressChangeNotifications = model.suppressChangeNotifications;\r\n    if (options.suppressChangeNotifications) {\r\n        model.suppressChangeNotifications = true;\r\n    }\r\n    const contentWasChanging = model.suppressChangeNotifications;\r\n    model.suppressChangeNotifications = true;\r\n    if (!options.insertionMode)\r\n        options.insertionMode = 'replaceSelection';\r\n    if (!options.selectionMode)\r\n        options.selectionMode = 'placeholder';\r\n    if (!options.format)\r\n        options.format = 'auto';\r\n    options.macros = (_b = options.macros) !== null && _b !== void 0 ? _b : model.options.macros;\r\n    const mode = options.mode || getAnchorMode(model);\r\n    let mathlist;\r\n    // Save the content of the selection, if any\r\n    const args = [\r\n        makeRoot('math', getSelectedAtoms(model)).toLatex(false),\r\n    ];\r\n    // If a placeholder was specified, use it\r\n    const placeholder = (_c = options.placeholder) !== null && _c !== void 0 ? _c : '\\\\placeholder{}';\r\n    args['?'] = placeholder;\r\n    // Delete any selected items\r\n    if (options.insertionMode === 'replaceSelection' &&\r\n        !selectionIsCollapsed(model)) {\r\n        deleteChar(model);\r\n    }\r\n    else if (options.insertionMode === 'replaceAll') {\r\n        model.root.body = [];\r\n        model.root.latex = '';\r\n        model.path = [{ relation: 'body', offset: 0 }];\r\n        model.extent = 0;\r\n    }\r\n    else if (options.insertionMode === 'insertBefore') {\r\n        collapseSelectionBackward(model);\r\n    }\r\n    else if (options.insertionMode === 'insertAfter') {\r\n        collapseSelectionForward(model);\r\n    }\r\n    // Delete any placeholders before or after the insertion point\r\n    const siblings = model.siblings();\r\n    const firstOffset = model.startOffset();\r\n    if (firstOffset + 1 < siblings.length &&\r\n        siblings[firstOffset + 1] &&\r\n        siblings[firstOffset + 1].type === 'placeholder') {\r\n        deleteChar(model, 1);\r\n    }\r\n    else if (firstOffset > 0 &&\r\n        siblings[firstOffset] &&\r\n        siblings[firstOffset].type === 'placeholder') {\r\n        deleteChar(model, -1);\r\n    }\r\n    if (mode === 'math' && options.format === 'ASCIIMath') {\r\n        [, s] = parseMathString(s, { format: 'ASCIIMath' });\r\n        mathlist = parseString(s, 'math', null, options === null || options === void 0 ? void 0 : options.macros, false, model.listeners.onError);\r\n        // Simplify result.\r\n        simplifyParen(model, mathlist);\r\n    }\r\n    else if (mode !== 'text' &&\r\n        (options.format === 'auto' || options.format === 'latex')) {\r\n        if (mode === 'command') {\r\n            // Short-circuit the tokenizer and parser if in command mode\r\n            mathlist = [];\r\n            for (const c of s) {\r\n                if (COMMAND_MODE_CHARACTERS.test(c)) {\r\n                    mathlist.push(new Atom('command', 'command', c));\r\n                }\r\n            }\r\n        }\r\n        else if (s === '\\u001b') {\r\n            // Insert an 'esc' character triggers the command mode\r\n            mathlist = [new Atom('command', 'command', '\\\\')];\r\n        }\r\n        else {\r\n            if (options.format === 'auto') {\r\n                [options.format, s] = parseMathString(s);\r\n            }\r\n            if (args[0]) {\r\n                // There was a selection, we'll use it for #@\r\n                s = s.replace(/(^|[^\\\\])#@/g, '$1#0');\r\n            }\r\n            else if (/(^|[^\\\\])#@/.test(s)) {\r\n                // If we're inserting a latex fragment that includes a #@ argument\r\n                // substitute the preceding `mord`s or text mode atoms for it (implicit argument)\r\n                const offset = getImplicitArgOffset(model);\r\n                s = s.replace(/(^|[^\\\\])#@/g, '$1' +\r\n                    getContentFromSiblings(model, offset + 1, model.startOffset()));\r\n                // Delete the implicit argument\r\n                deleteAtoms(model, offset - model.startOffset());\r\n            }\r\n            else {\r\n                // No selection, no 'mord' before. Let's make '#@' a placeholder.\r\n                s = s.replace(/(^|[^\\\\])#@/g, '$1#?');\r\n            }\r\n            // If the whole string is bracketed by a mode shift command, remove it\r\n            if (/^\\$\\$(.*)\\$\\$$/.test(s)) {\r\n                s = s.substring(2, s.length - 2);\r\n            }\r\n            if (!args[0])\r\n                args[0] = placeholder;\r\n            mathlist = parseString(s, mode, args, options.macros, (_d = options.smartFence) !== null && _d !== void 0 ? _d : false, model.listeners.onError);\r\n            // Simplify result.\r\n            if (options.format !== 'latex') {\r\n                simplifyParen(model, mathlist);\r\n            }\r\n        }\r\n    }\r\n    else if (mode === 'text' || options.format === 'text') {\r\n        // Map special TeX characters to alternatives\r\n        // Must do this one first, since other replacements include backslash\r\n        s = s.replace(/\\\\/g, '\\\\textbackslash ');\r\n        s = s.replace(/#/g, '\\\\#');\r\n        s = s.replace(/\\$/g, '\\\\$');\r\n        s = s.replace(/%/g, '\\\\%');\r\n        s = s.replace(/&/g, '\\\\&');\r\n        // s = s.replace(/:/g, '\\\\colon');     // text colon?\r\n        // s = s.replace(/\\[/g, '\\\\lbrack');\r\n        // s = s.replace(/]/g, '\\\\rbrack');\r\n        s = s.replace(/_/g, '\\\\_');\r\n        s = s.replace(/{/g, '\\\\textbraceleft ');\r\n        s = s.replace(/}/g, '\\\\textbraceright ');\r\n        s = s.replace(/\\^/g, '\\\\textasciicircum ');\r\n        s = s.replace(/~/g, '\\\\textasciitilde ');\r\n        s = s.replace(/£/g, '\\\\textsterling ');\r\n        mathlist = parseString(s, 'text', args, options.macros, false, model.listeners.onError);\r\n    }\r\n    // Something has been inserted, and the parent's verbatim latex is no longer valid\r\n    invalidateVerbatimLatex(model);\r\n    // Some atoms may already have a style (for example if there was an\r\n    // argument, i.e. the selection, that this was applied to).\r\n    // So, don't apply style to atoms that are already styled, but *do*\r\n    // apply it to newly created atoms that have no style yet.\r\n    applyStyleToUnstyledAtoms(mathlist, options.style);\r\n    // Insert the mathlist at the position following the anchor\r\n    const parent = model.parent();\r\n    if (options.format !== 'latex' &&\r\n        model.options.removeExtraneousParentheses &&\r\n        parent &&\r\n        parent.type === 'leftright' &&\r\n        parent.leftDelim === '(' &&\r\n        isEmptyMathlist(parent.body) &&\r\n        mathlist &&\r\n        mathlist.length === 1 &&\r\n        mathlist[0].type === 'genfrac') {\r\n        // If the insert is fraction inside a lefright, remove the leftright\r\n        model.path.pop();\r\n        model.siblings()[model.anchorOffset()] = mathlist[0];\r\n    }\r\n    else {\r\n        if (options.format === 'latex' && args.length === 1 && !args[0]) {\r\n            // If we are given a latex string with no arguments, store it verbatim\r\n            // Caution: we can only do this if the toLatex() for this parent\r\n            // would return an empty string. If the latex is generated using other\r\n            // properties than parent.body, for example by adding '\\left.' and\r\n            // '\\right.' with a 'leftright' type, we can't use this shortcut.\r\n            if (parent.type === 'root' &&\r\n                isEmptyMathlist(parent.body)) {\r\n                parent.latex = s;\r\n            }\r\n        }\r\n        model.siblings().splice(model.anchorOffset() + 1, 0, ...mathlist);\r\n    }\r\n    // If needed, make sure there's a first atom in the siblings list\r\n    normalizeModel(model);\r\n    // Prepare to dispatch notifications\r\n    // (for selection changes, then content change)\r\n    model.suppressChangeNotifications = contentWasChanging;\r\n    // Update the anchor's location\r\n    if (options.selectionMode === 'placeholder') {\r\n        // Move to the next placeholder\r\n        const newPlaceholders = [];\r\n        for (const atom of mathlist) {\r\n            atom.forEach((x) => {\r\n                if (x.type === 'placeholder')\r\n                    newPlaceholders.push(x);\r\n            });\r\n        }\r\n        if (newPlaceholders.length === 0 || !leap(model, +1, false)) {\r\n            // No placeholder found, move to right after what we just inserted\r\n            setSelectionOffset(model, model.anchorOffset() + mathlist.length);\r\n            // model.path[model.path.length - 1].offset += mathlist.length;\r\n        }\r\n        else {\r\n            model.announce('move'); // should have placeholder selected\r\n        }\r\n    }\r\n    else if (options.selectionMode === 'before') ;\r\n    else if (options.selectionMode === 'after') {\r\n        setSelectionOffset(model, model.anchorOffset() + mathlist.length);\r\n    }\r\n    else if (options.selectionMode === 'item') {\r\n        setSelectionOffset(model, model.anchorOffset(), mathlist.length);\r\n    }\r\n    contentDidChange(model);\r\n    model.suppressChangeNotifications = suppressChangeNotifications;\r\n}\r\n/**\r\n * Create, remove or update a composition atom at the current location\r\n */\r\nfunction updateComposition(model, s) {\r\n    const anchor = getAnchor(model);\r\n    // We're creating or updating a composition\r\n    if (anchor.type === 'composition') {\r\n        // Composition already in progress, update it\r\n        anchor.body = s;\r\n    }\r\n    else {\r\n        // No composition yet, create one\r\n        // Remove previous caret\r\n        const caret = anchor.caret;\r\n        anchor.caret = '';\r\n        // Create 'composition' atom, with caret\r\n        const atom = new Atom(anchor.mode, 'composition', s);\r\n        atom.caret = caret;\r\n        model.siblings().splice(model.anchorOffset() + 1, 0, atom);\r\n        //Move cursor one past the composition zone\r\n        model.path[model.path.length - 1].offset += 1;\r\n    }\r\n}\r\n/**\r\n * Remve the composition zone\r\n */\r\nfunction removeComposition(model) {\r\n    const anchor = getAnchor(model);\r\n    if (anchor.type === 'composition') {\r\n        model.siblings().splice(model.anchorOffset(), 1);\r\n        model.path[model.path.length - 1].offset -= 1;\r\n    }\r\n}\r\nfunction removeParen(list) {\r\n    if (!list)\r\n        return undefined;\r\n    if (list.length === 1 &&\r\n        list[0].type === 'leftright' &&\r\n        list[0].leftDelim === '(') {\r\n        list = list[0].body;\r\n    }\r\n    return list;\r\n}\r\n/**\r\n * If it's a fraction with a parenthesized numerator or denominator\r\n * remove the parentheses\r\n *\r\n */\r\nfunction simplifyParen(model, atoms) {\r\n    if (atoms && model.options.removeExtraneousParentheses) {\r\n        for (let i = 0; atoms[i]; i++) {\r\n            if (atoms[i].type === 'leftright' && atoms[i].leftDelim === '(') {\r\n                if (isAtomArray(atoms[i].body)) {\r\n                    let genFracCount = 0;\r\n                    let genFracIndex = 0;\r\n                    let nonGenFracCount = 0;\r\n                    for (let j = 0; atoms[i].body[j]; j++) {\r\n                        if (atoms[i].body[j].type === 'genfrac') {\r\n                            genFracCount++;\r\n                            genFracIndex = j;\r\n                        }\r\n                        if (atoms[i].body[j].type !== 'first') {\r\n                            nonGenFracCount++;\r\n                        }\r\n                    }\r\n                    if (nonGenFracCount === 0 && genFracCount === 1) {\r\n                        // This is a single frac inside a leftright: remove the leftright\r\n                        atoms[i] = atoms[i].body[genFracIndex];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        atoms.forEach((atom) => {\r\n            if (atom.type === 'genfrac') {\r\n                simplifyParen(model, atom.numer);\r\n                simplifyParen(model, atom.denom);\r\n                atom.numer = removeParen(atom.numer);\r\n                atom.denom = removeParen(atom.denom);\r\n            }\r\n            if (atom.superscript) {\r\n                simplifyParen(model, atom.superscript);\r\n                atom.superscript = removeParen(atom.superscript);\r\n            }\r\n            if (atom.subscript) {\r\n                simplifyParen(model, atom.subscript);\r\n                atom.subscript = removeParen(atom.subscript);\r\n            }\r\n            if (atom.underscript) {\r\n                simplifyParen(model, atom.underscript);\r\n                atom.underscript = removeParen(atom.underscript);\r\n            }\r\n            if (atom.overscript) {\r\n                simplifyParen(model, atom.overscript);\r\n                atom.overscript = removeParen(atom.overscript);\r\n            }\r\n            if (atom.index) {\r\n                simplifyParen(model, atom.index);\r\n                atom.index = removeParen(atom.index);\r\n            }\r\n            if (atom.type === 'surd') {\r\n                simplifyParen(model, atom.body);\r\n                atom.body = removeParen(atom.body);\r\n            }\r\n            else if (isAtomArray(atom.body)) {\r\n                simplifyParen(model, atom.body);\r\n            }\r\n            if (atom.array) {\r\n                for (let i = arrayCellCount(atom.array); i >= 0; i--) {\r\n                    simplifyParen(model, arrayCell(atom.array, i));\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n// const MATCHING_FENCE = {\r\n//     '\\\\lbrace': ['\\\\rbrace'],\r\n//     '(': [')', ']', '\\\\rbrack'],\r\n//     // For (open/closed) intervals\r\n//     '\\\\rbrack': [')', ']', '\\\\rbrack', '[', '\\\\lbrack'],\r\n//     '\\\\lbrack': [')', ']', '\\\\rbrack', '[', '\\\\lbrack'],\r\n// };\r\n/**\r\n * Insert a smart fence '(', '{', '[', etc...\r\n * If not handled (because `fence` wasn't a fence), return false.\r\n */\r\nfunction insertSmartFence(model, fence, style) {\r\n    const parent = model.parent();\r\n    let delims = parent.type === 'leftright' ? parent.leftDelim + parent.rightDelim : '';\r\n    if (delims === '\\\\lbrace\\\\rbrace')\r\n        delims = '{}';\r\n    if (delims === '\\\\{\\\\}')\r\n        delims = '{}';\r\n    //\r\n    // 1. Are we inserting a middle fence?\r\n    // ...as in {...|...}\r\n    //\r\n    if (delims === '{}' && /\\||\\\\vert|\\\\Vert|\\\\mvert|\\\\mid/.test(fence)) {\r\n        insert(model, '\\\\,\\\\middle' + fence + '\\\\, ', {\r\n            mode: 'math',\r\n            format: 'latex',\r\n            style: style,\r\n        });\r\n        return true;\r\n    }\r\n    // Normalize some fences.\r\n    // Note that '{' and '}' are not valid braces.\r\n    // They should be '\\{' or '\\lbrace' and '\\}' or '\\rbrace'\r\n    if (fence === '{' || fence === '\\\\{')\r\n        fence = '\\\\lbrace';\r\n    if (fence === '}' || fence === '\\\\}')\r\n        fence = '\\\\rbrace';\r\n    if (fence === '[')\r\n        fence = '\\\\lbrack';\r\n    if (fence === ']')\r\n        fence = '\\\\rbrack';\r\n    //\r\n    // 2. Is it an open fence?\r\n    //\r\n    const rDelim = RIGHT_DELIM[fence];\r\n    if (rDelim && !(parent.type === 'leftright' && parent.leftDelim === '|')) {\r\n        // We have a valid open fence as input\r\n        let s = '';\r\n        const collapsed = selectionIsCollapsed(model) ||\r\n            getAnchor(model).type === 'placeholder';\r\n        if (model.sibling(0).isFunction) {\r\n            // We're before a function (e.g. `\\sin`, or 'f'):  this is an\r\n            // argument list.\r\n            // Use `\\mleft...\\mright'.\r\n            s = '\\\\mleft' + fence + '\\\\mright';\r\n        }\r\n        else {\r\n            s = '\\\\left' + fence + '\\\\right';\r\n        }\r\n        s += collapsed ? '?' : rDelim;\r\n        let content = [];\r\n        if (collapsed) {\r\n            content = model\r\n                .siblings()\r\n                .splice(model.anchorOffset() + 1, model.siblings().length);\r\n        }\r\n        insert(model, s, { mode: 'math', format: 'latex', style: style });\r\n        if (collapsed) {\r\n            // Move everything that was after the anchor into the leftright\r\n            model.sibling(0).body = content;\r\n            move(model, 'backward');\r\n        }\r\n        return true;\r\n    }\r\n    //\r\n    // 3. Is it a close fence?\r\n    //\r\n    let lDelim;\r\n    Object.keys(RIGHT_DELIM).forEach((delim) => {\r\n        if (fence === RIGHT_DELIM[delim])\r\n            lDelim = delim;\r\n    });\r\n    if (lDelim) {\r\n        // We found the matching open fence, so it was a valid close fence.\r\n        // Note that `lDelim` may not match `fence`. That's OK.\r\n        // If we're the last atom inside a 'leftright',\r\n        // update the parent\r\n        if (parent &&\r\n            parent.type === 'leftright' &&\r\n            model.endOffset() === model.siblings().length - 1) {\r\n            parent.rightDelim = fence;\r\n            move(model, 'forward');\r\n            contentDidChange(model);\r\n            return true;\r\n        }\r\n        // If we have a `leftright` sibling to our left\r\n        // with an indeterminate right fence,\r\n        // move what's between us and the `leftright` inside the `leftright`\r\n        const siblings = model.siblings();\r\n        let i;\r\n        for (i = model.endOffset(); i >= 0; i--) {\r\n            if (siblings[i].type === 'leftright' &&\r\n                siblings[i].rightDelim === '?') {\r\n                break;\r\n            }\r\n        }\r\n        if (i >= 0) {\r\n            siblings[i].rightDelim = fence;\r\n            siblings[i].body = siblings[i].body.concat(siblings.slice(i + 1, model.endOffset() + 1));\r\n            siblings.splice(i + 1, model.endOffset() - i);\r\n            setSelectionOffset(model, i);\r\n            contentDidChange(model);\r\n            return true;\r\n        }\r\n        // If we're inside a `leftright`, but not the last atom,\r\n        // and the `leftright` right delim is indeterminate\r\n        // adjust the body (put everything after the insertion point outside)\r\n        if (parent &&\r\n            parent.type === 'leftright' &&\r\n            parent.rightDelim === '?') {\r\n            parent.rightDelim = fence;\r\n            const tail = siblings.slice(model.endOffset() + 1);\r\n            siblings.splice(model.endOffset() + 1);\r\n            model.path.pop();\r\n            // Array.prototype.splice.apply(\r\n            //     model.siblings(),\r\n            //     [model.endOffset() + 1, 0].concat(tail)\r\n            // );\r\n            // @revisit: veryfiy this does the right thing\r\n            model.siblings().splice(model.endOffset() + 1, 0, ...tail);\r\n            contentDidChange(model);\r\n            return true;\r\n        }\r\n        // Is our grand-parent a 'leftright'?\r\n        // If `\\left(\\frac{1}{x|}\\right?` with the caret at `|`\r\n        // go up to the 'leftright' and apply it there instead\r\n        const grandparent = model.ancestor(2);\r\n        if (grandparent &&\r\n            grandparent.type === 'leftright' &&\r\n            grandparent.rightDelim === '?' &&\r\n            model.endOffset() === siblings.length - 1) {\r\n            move(model, 'forward');\r\n            return insertSmartFence(model, fence, style);\r\n        }\r\n        // Meh... We couldn't find a matching open fence. Just insert the\r\n        // closing fence as a regular character\r\n        return false;\r\n    }\r\n    return false;\r\n}\n\nclass PositionIterator {\r\n    constructor(root) {\r\n        this.positions = [];\r\n        this.root = root;\r\n        const model = new ModelPrivate();\r\n        model.root = root;\r\n        normalizeModel(model);\r\n        do {\r\n            this.positions.push({\r\n                path: model.toString(),\r\n                atom: getCurrentAtom(model),\r\n                depth: model.path.length,\r\n            });\r\n        } while (nextPosition(model));\r\n    }\r\n    at(index) {\r\n        return this.positions[index];\r\n    }\r\n    find(atom) {\r\n        for (let i = 0; i < this.positions.length; i++) {\r\n            if (this.positions[i].atom === atom) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    get lastPosition() {\r\n        return this.positions.length - 1;\r\n    }\r\n    paths(indexes) {\r\n        return indexes.map((i) => this.at(i).path);\r\n    }\r\n}\r\nfunction nextPosition(model) {\r\n    const NEXT_RELATION = {\r\n        body: 'numer',\r\n        numer: 'denom',\r\n        denom: 'index',\r\n        index: 'overscript',\r\n        overscript: 'underscript',\r\n        underscript: 'subscript',\r\n        subscript: 'superscript',\r\n    };\r\n    if (model.anchorOffset() === model.siblings(false).length - 1) {\r\n        // We've reached the end of this list.\r\n        // Is there another list to consider?\r\n        let relation = NEXT_RELATION[model.relation()];\r\n        const parent = model.parent();\r\n        while (relation && !parent[relation]) {\r\n            relation = NEXT_RELATION[relation];\r\n        }\r\n        // We found a new relation/set of siblings...\r\n        if (relation) {\r\n            setPosition(model, 0, relation);\r\n            return true;\r\n        }\r\n        // No more siblings, check if we have a sibling cell in an array\r\n        if (model.parent().array) {\r\n            const maxCellCount = arrayCellCount(model.parent().array);\r\n            let cellIndex = parseInt(model.relation().match(/cell([0-9]*)$/)[1]) + 1;\r\n            while (cellIndex < maxCellCount) {\r\n                const cell = arrayCell(model.parent().array, cellIndex, false);\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (cell && setPosition(model, 0, 'cell' + cellIndex)) {\r\n                    return true;\r\n                }\r\n                cellIndex += 1;\r\n            }\r\n        }\r\n        // No more siblings, go up to the parent.\r\n        if (model.path.length === 1) {\r\n            // We're already at the top: nowhere else to go\r\n            return false;\r\n        }\r\n        // We've reached the end of the siblings.\r\n        model.path.pop();\r\n        return true;\r\n    }\r\n    // Still some siblings to go through. Move on to the next one.\r\n    setPosition(model, model.anchorOffset() + 1);\r\n    const anchor = getCurrentAtom(model);\r\n    // Dive into its components, if the new anchor is a compound atom,\r\n    // and allows capture of the selection by its sub-elements\r\n    if (anchor && !anchor.captureSelection) {\r\n        let relation;\r\n        if (anchor.array) {\r\n            // Find the first non-empty cell in this array\r\n            let cellIndex = 0;\r\n            relation = '';\r\n            const maxCellCount = arrayCellCount(anchor.array);\r\n            while (!relation && cellIndex < maxCellCount) {\r\n                // Some cells could be null (sparse array), so skip them\r\n                if (arrayCell(anchor.array, cellIndex, false)) {\r\n                    relation = 'cell' + cellIndex.toString();\r\n                }\r\n                cellIndex += 1;\r\n            }\r\n            console.assert(relation);\r\n            model.path.push({ relation: relation, offset: 0 });\r\n            setPosition(model, 0, relation);\r\n            return true;\r\n        }\r\n        relation = 'body';\r\n        while (relation) {\r\n            if (isArray(anchor[relation])) {\r\n                model.path.push({ relation: relation, offset: 0 });\r\n                return true;\r\n            }\r\n            relation = NEXT_RELATION[relation];\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction setPosition(model, offset = 0, relation = '') {\r\n    // If no relation (\"children\", \"superscript\", etc...) is specified\r\n    // keep the current relation\r\n    const oldRelation = model.path[model.path.length - 1].relation;\r\n    if (!relation)\r\n        relation = oldRelation;\r\n    // If the relation is invalid, exit and return false\r\n    const parent = model.parent();\r\n    if (!parent && relation !== 'body')\r\n        return false;\r\n    const arrayRelation = relation.startsWith('cell');\r\n    if ((!arrayRelation && !parent[relation]) ||\r\n        (arrayRelation && !parent.array)) {\r\n        return false;\r\n    }\r\n    // Temporarily set the path to the potentially new relation to get the\r\n    // right siblings\r\n    model.path[model.path.length - 1].relation = relation;\r\n    const siblings = model.siblings(false);\r\n    const siblingsCount = siblings.length;\r\n    // Restore the relation\r\n    model.path[model.path.length - 1].relation = oldRelation;\r\n    // Calculate the new offset, and make sure it is in range\r\n    // (`setSelectionOffset()` can be called with an offset greater than\r\n    // the number of children, for example when doing an up from a\r\n    // numerator to a smaller denominator, e.g. \"1/(x+1)\".\r\n    if (offset < 0) {\r\n        offset = siblingsCount + offset;\r\n    }\r\n    offset = Math.max(0, Math.min(offset, siblingsCount - 1));\r\n    model.path[model.path.length - 1].relation = relation;\r\n    model.path[model.path.length - 1].offset = offset;\r\n    return true;\r\n}\r\nfunction getCurrentAtom(model) {\r\n    if (model.parent().array) {\r\n        return arrayCell(model.parent().array, model.relation())[model.anchorOffset()];\r\n    }\r\n    const siblings = model.siblings(false);\r\n    return siblings[Math.min(siblings.length - 1, model.anchorOffset())];\r\n}\n\nclass ModelPrivate {\r\n    constructor(options, listeners, hooks, target) {\r\n        this.options = {\r\n            mode: 'math',\r\n            removeExtraneousParentheses: false,\r\n            ...options,\r\n        };\r\n        this.root = makeRoot(this.options.mode);\r\n        this.path = [{ relation: 'body', offset: 0 }];\r\n        this.extent = 0;\r\n        this.setListeners(listeners);\r\n        this.setHooks(hooks);\r\n        this.mathfield = target;\r\n        this.suppressChangeNotifications = false;\r\n    }\r\n    clone() {\r\n        const result = new ModelPrivate(this.options, this.listeners, this.hooks, this.mathfield);\r\n        result.root = this.root;\r\n        result.path = clone(this.path);\r\n        return result;\r\n    }\r\n    setListeners(listeners) {\r\n        this.listeners = listeners;\r\n    }\r\n    setHooks(hooks) {\r\n        this.hooks = {\r\n            announce: (hooks === null || hooks === void 0 ? void 0 : hooks.announce) ? hooks.announce\r\n                : (_target, _command, _modelBefore, _atoms) => {\r\n                    return;\r\n                },\r\n            moveOut: (hooks === null || hooks === void 0 ? void 0 : hooks.moveOut) ? hooks.moveOut\r\n                : () => {\r\n                    return true;\r\n                },\r\n            tabOut: (hooks === null || hooks === void 0 ? void 0 : hooks.tabOut) ? hooks.tabOut\r\n                : () => {\r\n                    return true;\r\n                },\r\n        };\r\n    }\r\n    get selection() {\r\n        const anchor = getAnchor(this);\r\n        let focus = undefined;\r\n        if (this.parent().array) {\r\n            focus = arrayCell(this.parent().array, this.relation())[this.focusOffset()];\r\n        }\r\n        else {\r\n            const siblings = this.siblings();\r\n            focus = siblings[Math.min(siblings.length - 1, this.focusOffset())];\r\n        }\r\n        const iter = new PositionIterator(this.root);\r\n        return [\r\n            normalizeRange(iter, {\r\n                start: iter.find(anchor),\r\n                end: iter.find(focus),\r\n            }),\r\n        ];\r\n    }\r\n    set selection(value) {\r\n        setSelection(this, value);\r\n    }\r\n    get lastPosition() {\r\n        const iter = new PositionIterator(this.root);\r\n        return iter.lastPosition;\r\n    }\r\n    announce(command, // @revisit: be more explicit\r\n    modelBefore, atoms = []) {\r\n        this.hooks.announce(this.mathfield, command, modelBefore, atoms);\r\n    }\r\n    /**\r\n     * Return a string representation of the selection.\r\n     * @todo This is a bad name for this function, since it doesn't return\r\n     * a representation of the content, which one might expect...\r\n     *\r\n     * Note: Not private: used by filter\r\n     *\r\n     */\r\n    toString() {\r\n        return pathToString(this.path, this.extent);\r\n    }\r\n    /**\r\n     * Note: used by model-utils, so not private.\r\n     * @return array of children of the parent\r\n     */\r\n    siblings(addMisingFirstAtom = true) {\r\n        var _a;\r\n        if (this.path.length === 0)\r\n            return [];\r\n        let siblings;\r\n        if (this.parent().array) {\r\n            siblings = arrayCell(this.parent().array, this.relation());\r\n        }\r\n        else {\r\n            siblings = (_a = this.parent()[this.relation()]) !== null && _a !== void 0 ? _a : [];\r\n            if (typeof siblings === 'string')\r\n                siblings = [];\r\n        }\r\n        // If the 'first' atom is missing, insert it\r\n        if (addMisingFirstAtom &&\r\n            (siblings.length === 0 || siblings[0].type !== 'first')) {\r\n            siblings.unshift(new Atom(this.parent().mode, 'first'));\r\n        }\r\n        return siblings;\r\n    }\r\n    anchorOffset() {\r\n        return this.path.length > 0\r\n            ? this.path[this.path.length - 1].offset\r\n            : 0;\r\n    }\r\n    focusOffset() {\r\n        return this.path.length > 0\r\n            ? this.path[this.path.length - 1].offset + this.extent\r\n            : 0;\r\n    }\r\n    /**\r\n     *  True if the entire group is selected\r\n     */\r\n    groupIsSelected() {\r\n        return (this.startOffset() === 0 &&\r\n            this.endOffset() >= this.siblings().length - 1);\r\n    }\r\n    /**\r\n     * Offset of the first atom included in the selection\r\n     * i.e. `=1` => selection starts with and includes first atom\r\n     * With expression _x=_ and atoms :\r\n     * - 0: _<first>_\r\n     * - 1: _x_\r\n     * - 2: _=_\r\n     *\r\n     * - if caret is before _x_:  `start` = 0, `end` = 0\r\n     * - if caret is after _x_:   `start` = 1, `end` = 1\r\n     * - if _x_ is selected:      `start` = 1, `end` = 2\r\n     * - if _x=_ is selected:   `start` = 1, `end` = 3\r\n     * Note: accessed by model-selection, not private\r\n     */\r\n    startOffset() {\r\n        return Math.min(this.focusOffset(), this.anchorOffset());\r\n    }\r\n    /**\r\n     * Offset of the first atom not included in the selection\r\n     * i.e. max value of `siblings.length`\r\n     * `endOffset - startOffset = extent`\r\n     *\r\n     * Note: accessed by model-selection, not private\r\n     */\r\n    endOffset() {\r\n        return Math.max(this.focusOffset(), this.anchorOffset());\r\n    }\r\n    /**\r\n     * Sibling, relative to `anchor`\r\n     * `sibling(0)` = start of selection\r\n     * `sibling(-1)` = sibling immediately left of start offset\r\n     */\r\n    sibling(offset) {\r\n        return this.siblings()[this.startOffset() + offset];\r\n    }\r\n    // @revisit: move ancestor, and anything related to the selection to model-selection\r\n    /**\r\n     * Note: used by model-utils, so not private.\r\n     * @param ancestor distance from self to ancestor.\r\n     * - `ancestor` = 0: self\r\n     * - `ancestor` = 1: parent\r\n     * - `ancestor` = 2: grand-parent\r\n     * - etc...\r\n     */\r\n    ancestor(ancestor) {\r\n        // If the requested ancestor goes beyond what's available,\r\n        // return null\r\n        if (ancestor > this.path.length)\r\n            return null;\r\n        // Start with the root\r\n        let result = this.root;\r\n        // Iterate over the path segments, selecting the appropriate\r\n        for (let i = 0; i < this.path.length - ancestor; i++) {\r\n            const segment = this.path[i];\r\n            if (result.array) {\r\n                result = arrayCell(result.array, segment.relation)[segment.offset];\r\n            }\r\n            else if (!result[segment.relation]) {\r\n                // There is no such relation... (the path got out of sync with the tree)\r\n                return null;\r\n            }\r\n            else {\r\n                // Make sure the 'first' atom has been inserted, otherwise\r\n                // the segment.offset might be invalid\r\n                if (result[segment.relation].length === 0 ||\r\n                    result[segment.relation][0].type !== 'first') {\r\n                    result[segment.relation].unshift(new Atom(result[segment.relation][0].mode, 'first'));\r\n                }\r\n                const offset = Math.min(segment.offset, result[segment.relation].length - 1);\r\n                result = result[segment.relation][offset];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    parent() {\r\n        return this.ancestor(1);\r\n    }\r\n    relation() {\r\n        return this.path.length > 0\r\n            ? this.path[this.path.length - 1].relation\r\n            : '';\r\n    }\r\n    /**\r\n     * If necessary, insert a `first` atom in the sibling list.\r\n     * If there's already a `first` atom, do nothing.\r\n     * The `first` atom is used as a 'placeholder' to hold the blinking caret when\r\n     * the caret is positioned at the very beginning of the mathlist.\r\n     */\r\n    insertFirstAtom() {\r\n        this.siblings();\r\n    }\r\n}\r\nfunction setSelection(model, value) {\r\n    // @todo: for now, only consider the first range\r\n    const range = Array.isArray(value) ? value[0] : value;\r\n    // Normalize the range\r\n    const iter = new PositionIterator(model.root);\r\n    if (!range.direction)\r\n        range.direction = 'forward';\r\n    if (range.start < 0 || range.start > iter.lastPosition) {\r\n        range.start = iter.lastPosition;\r\n    }\r\n    if (typeof range.end === 'undefined')\r\n        range.end = range.start;\r\n    if (range.end < 0 || range.end > iter.lastPosition) {\r\n        range.end = iter.lastPosition;\r\n    }\r\n    let anchorPath;\r\n    if (range.direction === 'backward') {\r\n        anchorPath = iter.at(range.end).path;\r\n    }\r\n    else {\r\n        anchorPath = iter.at(range.start).path;\r\n    }\r\n    setPath(model, anchorPath, range.end - range.start);\r\n}\n\n/**\r\n * Switch the cursor to the superscript and select it. If there is no subscript\r\n * yet, create one.\r\n */\r\nfunction moveToSuperscript(model) {\r\n    collapseSelectionForward(model);\r\n    if (!getAnchor(model).superscript) {\r\n        if (getAnchor(model).subscript) {\r\n            getAnchor(model).superscript = [\r\n                new Atom(model.parent().mode, 'first'),\r\n            ];\r\n        }\r\n        else {\r\n            const sibling = model.sibling(1);\r\n            if (sibling === null || sibling === void 0 ? void 0 : sibling.superscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n            }\r\n            else if (sibling === null || sibling === void 0 ? void 0 : sibling.subscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n                getAnchor(model).superscript = [\r\n                    new Atom(model.parent().mode, 'first'),\r\n                ];\r\n            }\r\n            else {\r\n                if (getAnchor(model).limits !== 'limits') {\r\n                    model\r\n                        .siblings()\r\n                        .splice(model.anchorOffset() + 1, 0, new Atom(model.parent().mode, 'msubsup', '\\u200b', getAnchorStyle(model)));\r\n                    model.path[model.path.length - 1].offset += 1;\r\n                }\r\n                getAnchor(model).superscript = [\r\n                    new Atom(model.parent().mode, 'first'),\r\n                ];\r\n            }\r\n        }\r\n    }\r\n    model.path.push({ relation: 'superscript', offset: 0 });\r\n    selectGroup(model);\r\n    return true;\r\n}\r\n/**\r\n * Switch the cursor to the subscript and select it. If there is no subscript\r\n * yet, create one.\r\n */\r\nfunction moveToSubscript(model) {\r\n    collapseSelectionForward(model);\r\n    if (!getAnchor(model).subscript) {\r\n        if (getAnchor(model).superscript) {\r\n            getAnchor(model).subscript = [\r\n                new Atom(model.parent().mode, 'first'),\r\n            ];\r\n        }\r\n        else {\r\n            const sibling = model.sibling(1);\r\n            if (sibling === null || sibling === void 0 ? void 0 : sibling.subscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n            }\r\n            else if (sibling === null || sibling === void 0 ? void 0 : sibling.superscript) {\r\n                model.path[model.path.length - 1].offset += 1;\r\n                getAnchor(model).subscript = [\r\n                    new Atom(model.parent().mode, 'first'),\r\n                ];\r\n            }\r\n            else {\r\n                if (getAnchor(model).limits !== 'limits') {\r\n                    model\r\n                        .siblings()\r\n                        .splice(model.anchorOffset() + 1, 0, new Atom(model.parent().mode, 'msubsup', '\\u200b', getAnchorStyle(model)));\r\n                    model.path[model.path.length - 1].offset += 1;\r\n                }\r\n                getAnchor(model).subscript = [\r\n                    new Atom(model.parent().mode, 'first'),\r\n                ];\r\n            }\r\n        }\r\n    }\r\n    model.path.push({ relation: 'subscript', offset: 0 });\r\n    selectGroup(model);\r\n    return true;\r\n}\r\n/**\r\n * If cursor is currently in:\r\n * - superscript: move to subscript, creating it if necessary\r\n * - subscript: move to superscript, creating it if necessary\r\n * - numerator: move to denominator\r\n * - denominator: move to numerator\r\n * - otherwise: move to superscript\r\n */\r\nregister$2({\r\n    moveToOpposite: (model) => {\r\n        const OPPOSITE_RELATIONS = {\r\n            superscript: 'subscript',\r\n            subscript: 'superscript',\r\n            denom: 'numer',\r\n            numer: 'denom',\r\n        };\r\n        const oppositeRelation = OPPOSITE_RELATIONS[model.relation()];\r\n        if (!oppositeRelation) {\r\n            moveToSuperscript(model);\r\n        }\r\n        if (!model.parent()[oppositeRelation]) {\r\n            // Don't have children of the opposite relation yet\r\n            // Add them\r\n            model.parent()[oppositeRelation] = [\r\n                new Atom(model.parent().mode, 'first'),\r\n            ];\r\n        }\r\n        setSelectionOffset(model, 0, 'end', oppositeRelation);\r\n        return true;\r\n    },\r\n    moveBeforeParent: (model) => {\r\n        if (model.path.length > 1) {\r\n            model.path.pop();\r\n            setSelectionOffset(model, model.anchorOffset() - 1);\r\n            return true;\r\n        }\r\n        model.announce('plonk');\r\n        return false;\r\n    },\r\n    moveAfterParent: (model) => moveAfterParent(model),\r\n    moveToNextPlaceholder: (model) => leap(model, +1),\r\n    moveToPreviousPlaceholder: (model) => leap(model, -1),\r\n    moveToNextChar: (model) => move(model, 'forward'),\r\n    moveToPreviousChar: (model) => move(model, 'backward'),\r\n    moveUp: (model) => move(model, 'upward'),\r\n    moveDown: (model) => move(model, 'downward'),\r\n    moveToNextWord: (model) => skip(model, +1),\r\n    moveToPreviousWord: (model) => skip(model, -1),\r\n    moveToGroupStart: (model) => setSelectionOffset(model, 0),\r\n    moveToGroupEnd: (model) => setSelectionOffset(model, -1),\r\n    moveToMathFieldStart: (model) => jumpToMathFieldBoundary(model, -1),\r\n    moveToMathFieldEnd: (model) => jumpToMathFieldBoundary(model, +1),\r\n    moveToSuperscript: (model) => moveToSuperscript(model),\r\n    moveToSubscript: (model) => moveToSubscript(model),\r\n}, { target: 'model', category: 'selection-anchor' });\r\nregister$2({\r\n    selectGroup: (model) => selectGroup(model),\r\n    selectAll: (model) => selectAll(model),\r\n    extendToNextChar: (model) => extend(model, +1),\r\n    extendToPreviousChar: (model) => extend(model, -1),\r\n    extendToNextWord: (model) => skip(model, +1, { extend: true }),\r\n    extendToPreviousWord: (model) => skip(model, -1, { extend: true }),\r\n    extendUp: (model) => move(model, 'upward', { extend: true }),\r\n    extendDown: (model) => move(model, 'downward', { extend: true }),\r\n    /**\r\n     * Extend the selection until the next boundary is reached. A boundary\r\n     * is defined by an atom of a different type (mbin, mord, etc...)\r\n     * than the current focus. For example, in \"1234+x=y\", if the focus is between\r\n     * \"1\" and \"2\", invoking `extendToNextBoundary_` would extend the selection\r\n     * to \"234\".\r\n     */\r\n    extendToNextBoundary: (model) => skip(model, +1, { extend: true }),\r\n    /**\r\n     * Extend the selection until the previous boundary is reached. A boundary\r\n     * is defined by an atom of a different type (mbin, mord, etc...)\r\n     * than the current focus. For example, in \"1+23456\", if the focus is between\r\n     * \"5\" and \"6\", invoking `extendToPreviousBoundary` would extend the selection\r\n     * to \"2345\".\r\n     */\r\n    extendToPreviousBoundary: (model) => skip(model, -1, { extend: true }),\r\n    extendToGroupStart: (model) => {\r\n        setSelectionExtent(model, -model.anchorOffset());\r\n        return true;\r\n    },\r\n    extendToGroupEnd: (model) => {\r\n        setSelectionExtent(model, model.siblings().length - model.anchorOffset());\r\n        return true;\r\n    },\r\n    extendToMathFieldStart: (model) => jumpToMathFieldBoundary(model, -1, { extend: true }),\r\n    extendToMathFieldEnd: (model) => jumpToMathFieldBoundary(model, +1, { extend: true }),\r\n}, { target: 'model', category: 'selection-extend' });\r\nregister$2({\r\n    deleteAll: (model) => {\r\n        selectAll(model);\r\n        return deleteChar(model);\r\n    },\r\n    deleteNextChar: (model) => deleteChar(model, +1),\r\n    deletePreviousChar: (model) => deleteChar(model, -1),\r\n    deleteNextWord: (model) => {\r\n        skip(model, +1, { extend: true });\r\n        return deleteChar(model);\r\n    },\r\n    deletePreviousWord: (model) => {\r\n        skip(model, -1, { extend: true });\r\n        return deleteChar(model);\r\n    },\r\n    deleteToGroupStart: (model) => {\r\n        setSelectionExtent(model, -model.anchorOffset());\r\n        return deleteChar(model);\r\n    },\r\n    deleteToGroupEnd: (model) => {\r\n        jumpToMathFieldBoundary(model, -1, { extend: true });\r\n        return deleteChar(model);\r\n    },\r\n    deleteToMathFieldStart: (model) => {\r\n        jumpToMathFieldBoundary(model, -1, { extend: true });\r\n        return deleteChar(model);\r\n    },\r\n    deleteToMathFieldEnd: (model) => {\r\n        jumpToMathFieldBoundary(model, +1, { extend: true });\r\n        return deleteChar(model);\r\n    },\r\n}, { target: 'model', category: 'delete' });\n\n/**\r\n * This modules handles low-level keyboard events and normalize them across\r\n * browsers.\r\n *\r\n * See https://dvcs.w3.org/hg/d4e/raw-file/tip/key-event-test.html\r\n * (also at https://w3c.github.io/uievents/tools/key-event-viewer.html)\r\n *\r\n *\r\n * - **KeyboardEvent.key** (the printable value associated with the key or a string\r\n * for special keys)\r\n *  https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\n *  https://www.w3.org/TR/uievents-key/\r\n *\r\n * - **KeyboardEvent.code** (the physical key being pressed. On an AZERTY keyboard\r\n * the key labelled \"A\" is KeyQ)\r\n *  https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values\r\n *  https://www.w3.org/TR/uievents-code/\r\n *\r\n * Note:\r\n * - `charCode`, `keyCode` and `which` are deprecated\r\n *\r\n * For background, see this info regarding keybinding in VSCode:\r\n * - https://github.com/microsoft/vscode/tree/master/src/vs/workbench/services/keybinding\r\n * - https://github.com/microsoft/vscode/wiki/Keybinding-Issues\r\n */\r\nconst PRINTABLE_KEYCODE = [\r\n    'Backquote',\r\n    'Digit0',\r\n    'Digit1',\r\n    'Digit2',\r\n    'Digit3',\r\n    'Digit4',\r\n    'Digit5',\r\n    'Digit6',\r\n    'Digit7',\r\n    'Digit8',\r\n    'Digit9',\r\n    'Minus',\r\n    'Equal',\r\n    'IntlYen',\r\n    'KeyQ',\r\n    'KeyW',\r\n    'KeyE',\r\n    'KeyR',\r\n    'KeyT',\r\n    'KeyY',\r\n    'KeyU',\r\n    'KeyI',\r\n    'KeyO',\r\n    'KeyP',\r\n    'BracketLeft',\r\n    'BracketRight',\r\n    'Backslash',\r\n    'KeyA',\r\n    'KeyS',\r\n    'KeyD',\r\n    'KeyF',\r\n    'KeyG',\r\n    'KeyH',\r\n    'KeyJ',\r\n    'KeyK',\r\n    'KeyL',\r\n    'Semicolon',\r\n    'Quote',\r\n    'IntlBackslash',\r\n    'KeyZ',\r\n    'KeyX',\r\n    'KeyC',\r\n    'KeyV',\r\n    'KeyB',\r\n    'KeyN',\r\n    'KeyM',\r\n    'Comma',\r\n    'Period',\r\n    'Slash',\r\n    'IntlRo',\r\n    'Space',\r\n    'Numpad0',\r\n    'Numpad1',\r\n    'Numpad2',\r\n    'Numpad3',\r\n    'Numpad4',\r\n    'Numpad5',\r\n    'Numpad6',\r\n    'Numpad7',\r\n    'Numpad8',\r\n    'Numpad9',\r\n    'NumpadAdd',\r\n    'NumpadComma',\r\n    'NumpadDecimal',\r\n    'NumpadDivide',\r\n    'NumpadEqual',\r\n    'NumpadHash',\r\n    'NumpadMultiply',\r\n    'NumpadParenLeft',\r\n    'NumpadParenRight',\r\n    'NumpadStar',\r\n    'NumpadSubstract',\r\n];\r\nfunction mightProducePrintableCharacter(evt) {\r\n    if (evt.ctrlKey || evt.metaKey) {\r\n        // ignore ctrl/cmd-combination but not shift/alt-combinations\r\n        return false;\r\n    }\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\r\n    if (evt.key === 'Dead')\r\n        return false;\r\n    // When issued via a composition, the `code` field is empty\r\n    if (evt.code === '')\r\n        return true;\r\n    return PRINTABLE_KEYCODE.indexOf(evt.code) >= 0;\r\n}\r\n/**\r\n * Create a normalized representation of a keyboard event,\r\n * i.e., key code and modifier keys. For example:\r\n * - `ctrl+Shift+alt+[KeyF]`\r\n *\r\n * Note: the key code corresponds to a physical key, e.g. 'KeyQ' is\r\n * the key labeled 'A' on a French keyboard\r\n *\r\n */\r\nfunction keyboardEventToString(evt) {\r\n    evt = normalizeKeyboardEvent(evt);\r\n    const modifiers = [];\r\n    if (evt.ctrlKey)\r\n        modifiers.push('ctrl');\r\n    if (evt.metaKey)\r\n        modifiers.push('meta');\r\n    if (evt.altKey)\r\n        modifiers.push('alt');\r\n    if (evt.shiftKey)\r\n        modifiers.push('shift');\r\n    // If no modifiers, simply return the key name\r\n    if (modifiers.length === 0)\r\n        return '[' + evt.code + ']';\r\n    modifiers.push('[' + evt.code + ']');\r\n    return modifiers.join('+');\r\n}\r\n/**\r\n * Setup to capture the keyboard events from a `TextArea` and redispatch them to\r\n * handlers.\r\n *\r\n * In general, commands (arrows, delete, etc..) should be handled\r\n * in the `keystroke()` handler while text input should be handled in\r\n * `typedtext()`.\r\n *\r\n * @param {HTMLElement} textarea A `TextArea` element that will capture the keyboard\r\n * events. While this element will usually be a `TextArea`, it could be any\r\n * element that is focusable and can receive keyboard events.\r\n * @param {Object.<string, any>} handlers\r\n * @param {function} handlers.keystroke invoked on a key down event, including\r\n * for special keys such as ESC, arrow keys, tab, etc... and their variants\r\n * with modifiers.\r\n * @param {function} handlers.typedtext invoked on a keypress or other events\r\n * when a key corresponding to a character has been pressed. This include `a-z`,\r\n * `0-9`, `{}`, `^_()`, etc...\r\n * This does not include arrow keys, tab, etc... but does include 'space'\r\n * When a 'character' key is pressed, both `keystroke()` and `typedtext()` will\r\n * be invoked. When a control/function key is pressed, only `keystroke()` will\r\n * be invoked. In some cases, for example when using input methods or entering\r\n * emoji, only `typedtext()` will be invoked.\r\n */\r\nfunction delegateKeyboardEvents(textarea, handlers) {\r\n    let keydownEvent = null;\r\n    let keypressEvent = null;\r\n    let compositionInProgress = false;\r\n    let focusInProgress = false;\r\n    let blurInProgress = false;\r\n    // This callback is invoked after a keyboard event has been processed\r\n    // by the textarea\r\n    let callbackTimeoutID;\r\n    function defer(cb) {\r\n        clearTimeout(callbackTimeoutID);\r\n        callbackTimeoutID = setTimeout(() => {\r\n            clearTimeout(callbackTimeoutID);\r\n            cb();\r\n        });\r\n    }\r\n    function handleTypedText() {\r\n        // Some browsers (Firefox, Opera) fire a keypress event for commands\r\n        // such as cmd+C where there might be a non-empty selection.\r\n        // We need to ignore these.\r\n        if (textarea.selectionStart !== textarea.selectionEnd)\r\n            return;\r\n        const text = textarea.value;\r\n        textarea.value = '';\r\n        if (text.length > 0)\r\n            handlers.typedText(text);\r\n    }\r\n    const target = textarea;\r\n    target.addEventListener('keydown', (e) => {\r\n        // \"Process\" key indicates commit of IME session (on Firefox)\r\n        // It's handled with compositionEnd so it can be safely ignored\r\n        if (compositionInProgress ||\r\n            e.key === 'Process' ||\r\n            e.code === 'CapsLock' ||\r\n            /(Control|Meta|Alt|Shift)(Left|Right)/.test(e.code)) {\r\n            keydownEvent = null;\r\n            return;\r\n        }\r\n        keydownEvent = e;\r\n        keypressEvent = null;\r\n        if (!handlers.keystroke(keyboardEventToString(e), e)) {\r\n            keydownEvent = null;\r\n            textarea.value = '';\r\n        }\r\n    }, true);\r\n    target.addEventListener('keypress', (e) => {\r\n        if (compositionInProgress)\r\n            return;\r\n        // If this is not the first keypress after a keydown, that is,\r\n        // if this is a repeated keystroke, call the keystroke handler.\r\n        if (!compositionInProgress) {\r\n            if (keydownEvent && keypressEvent) {\r\n                handlers.keystroke(keyboardEventToString(keydownEvent), keydownEvent);\r\n            }\r\n            keypressEvent = e;\r\n            defer(handleTypedText);\r\n        }\r\n    }, true);\r\n    target.addEventListener('keyup', () => {\r\n        if (compositionInProgress)\r\n            return;\r\n        // If we've received a keydown, but no keypress, check what's in the\r\n        // textarea field.\r\n        if (keydownEvent && !keypressEvent) {\r\n            handleTypedText();\r\n        }\r\n    }, true);\r\n    target.addEventListener('paste', (ev) => {\r\n        // In some cases (Linux browsers), the text area might not be focused\r\n        // when doing a middle-click paste command.\r\n        textarea.focus();\r\n        textarea.value = '';\r\n        handlers.paste(ev);\r\n    }, true);\r\n    target.addEventListener('cut', () => {\r\n        handlers.cut();\r\n    }, true);\r\n    target.addEventListener('copy', (ev) => {\r\n        handlers.copy(ev);\r\n    }, true);\r\n    target.addEventListener('blur', (_ev) => {\r\n        if (blurInProgress || focusInProgress)\r\n            return;\r\n        blurInProgress = true;\r\n        keydownEvent = null;\r\n        keypressEvent = null;\r\n        if (handlers.blur)\r\n            handlers.blur();\r\n        blurInProgress = false;\r\n    }, true);\r\n    target.addEventListener('focus', (_ev) => {\r\n        if (blurInProgress || focusInProgress)\r\n            return;\r\n        focusInProgress = true;\r\n        if (handlers.focus)\r\n            handlers.focus();\r\n        focusInProgress = false;\r\n    }, true);\r\n    target.addEventListener('compositionstart', (ev) => {\r\n        compositionInProgress = true;\r\n        textarea.value = '';\r\n        if (handlers.compositionStart)\r\n            handlers.compositionStart(ev.data);\r\n    }, true);\r\n    target.addEventListener('compositionupdate', (ev) => {\r\n        if (!compositionInProgress)\r\n            return;\r\n        if (handlers.compositionUpdate)\r\n            handlers.compositionUpdate(ev.data);\r\n    }, true);\r\n    target.addEventListener('compositionend', (ev) => {\r\n        textarea.value = '';\r\n        if (!compositionInProgress)\r\n            return;\r\n        compositionInProgress = false;\r\n        if (handlers.compositionEnd)\r\n            handlers.compositionEnd(ev.data);\r\n    }, true);\r\n    // The `input` handler gets called when the field is changed,\r\n    // but no other relevant events have been triggered\r\n    // for example with emoji input...\r\n    target.addEventListener('input', (ev) => {\r\n        if (compositionInProgress)\r\n            return;\r\n        // If this was an `input` event sent as a result of a commit of\r\n        // IME, ignore it.\r\n        // (This is what FireFox does, even though the spec says it shouldn't happen)\r\n        // See https://github.com/w3c/uievents/issues/202\r\n        if (ev.inputType === 'insertCompositionText')\r\n            return;\r\n        // Paste is handled in paste handler\r\n        if (ev.inputType === 'insertFromPaste') {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            return;\r\n        }\r\n        defer(handleTypedText);\r\n    });\r\n    return {\r\n        cancelComposition: () => {\r\n            const savedBlur = handlers.blur;\r\n            const savedFocus = handlers.focus;\r\n            handlers.blur = null;\r\n            handlers.focus = null;\r\n            textarea.blur();\r\n            textarea.focus();\r\n            handlers.blur = savedBlur;\r\n            handlers.focus = savedFocus;\r\n        },\r\n        blur: () => {\r\n            if (typeof textarea.blur === 'function') {\r\n                textarea.blur();\r\n            }\r\n        },\r\n        focus: () => {\r\n            if (typeof textarea.blur === 'function') {\r\n                textarea.focus();\r\n            }\r\n        },\r\n        hasFocus: () => {\r\n            return deepActiveElement(document) === textarea;\r\n        },\r\n        setValue: (value) => {\r\n            if (value) {\r\n                textarea.value = value;\r\n                // The textarea may be a span (on mobile, for example), so check that\r\n                // it has a select() before calling it.\r\n                if (deepActiveElement(document) === textarea &&\r\n                    textarea.select) {\r\n                    textarea.select();\r\n                }\r\n            }\r\n            else {\r\n                textarea.value = '';\r\n                textarea.setAttribute('aria-label', '');\r\n            }\r\n        },\r\n        setAriaLabel: (value) => {\r\n            textarea.setAttribute('aria-label', 'after: ' + value);\r\n        },\r\n        moveTo: (x, y) => {\r\n            textarea.style.top = y + 'px';\r\n            textarea.style.left = x + 'px';\r\n        },\r\n    };\r\n}\r\nfunction deepActiveElement(root = document) {\r\n    var _a, _b;\r\n    if ((_b = (_a = root.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement) {\r\n        return deepActiveElement(root.activeElement.shadowRoot);\r\n    }\r\n    return root.activeElement;\r\n}\r\nfunction eventToChar(evt) {\r\n    var _a;\r\n    if (!evt)\r\n        return '';\r\n    let result;\r\n    if (evt.key === 'Unidentified') {\r\n        // On Android, the evt.key seems to always be 'Unidentified'.\r\n        // Get the value entered in the event target\r\n        if (evt.target) {\r\n            result = evt.target['value'];\r\n        }\r\n    }\r\n    result = (_a = result !== null && result !== void 0 ? result : evt.key) !== null && _a !== void 0 ? _a : evt.code;\r\n    if (/^(Dead|Return|Enter|Tab|Escape|Delete|PageUp|PageDown|Home|End|Help|ArrowLeft|ArrowRight|ArrowUp|ArrowDown)$/.test(result)) {\r\n        result = '';\r\n    }\r\n    return result;\r\n}\n\nclass UndoManager {\r\n    constructor(model) {\r\n        this.maximumDepth = 1000; // Maximum number of undo/redo states\r\n        this.record = false;\r\n        this.canCoalesce = false;\r\n        this.model = model;\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.stack = [];\r\n        this.index = -1;\r\n    }\r\n    startRecording() {\r\n        this.record = true;\r\n    }\r\n    canUndo() {\r\n        return this.index > 0;\r\n    }\r\n    canRedo() {\r\n        return this.index !== this.stack.length - 1;\r\n    }\r\n    undo(options) {\r\n        if (this.canUndo()) {\r\n            if (typeof (options === null || options === void 0 ? void 0 : options.onUndoStateWillChange) === 'function') {\r\n                options.onUndoStateWillChange(this.model.mathfield, 'undo');\r\n            }\r\n            this.restore(this.stack[this.index - 1], options);\r\n            this.index -= 1;\r\n            if (options && typeof options.onUndoStateDidChange === 'function') {\r\n                options.onUndoStateDidChange(this.model.mathfield, 'undo');\r\n            }\r\n            this.canCoalesce = false;\r\n        }\r\n    }\r\n    redo(options) {\r\n        if (this.canRedo()) {\r\n            if (typeof (options === null || options === void 0 ? void 0 : options.onUndoStateWillChange) === 'function') {\r\n                options.onUndoStateWillChange(this.model.mathfield, 'redo');\r\n            }\r\n            this.index += 1;\r\n            this.restore(this.stack[this.index], options);\r\n            if (options && typeof options.onUndoStateDidChange === 'function') {\r\n                options.onUndoStateDidChange(this.model.mathfield, 'redo');\r\n            }\r\n            this.canCoalesce = false;\r\n        }\r\n    }\r\n    pop() {\r\n        if (this.canUndo()) {\r\n            this.index -= 1;\r\n            this.stack.pop();\r\n        }\r\n    }\r\n    /**\r\n     * Push a snapshot of the content and selection of the mathfield onto the\r\n     * undo stack so that it can potentially be reverted to later.\r\n     */\r\n    snapshot(options) {\r\n        if (!this.record)\r\n            return;\r\n        if (typeof (options === null || options === void 0 ? void 0 : options.onUndoStateWillChange) === 'function') {\r\n            options.onUndoStateWillChange(this.model.mathfield, 'snapshot');\r\n        }\r\n        // Drop any entries that are part of the redo stack\r\n        this.stack.splice(this.index + 1, this.stack.length - this.index - 1);\r\n        // Add a new entry\r\n        this.stack.push({\r\n            latex: this.model.root.toLatex(false),\r\n            selection: this.model.selection,\r\n        });\r\n        this.index++;\r\n        // If we've reached the maximum number of undo operations, forget the\r\n        // oldest one.\r\n        if (this.stack.length > this.maximumDepth) {\r\n            this.stack.shift();\r\n        }\r\n        if (options && typeof options.onUndoStateDidChange === 'function') {\r\n            options.onUndoStateDidChange(this.model.mathfield, 'snapshot');\r\n        }\r\n        this.canCoalesce = false;\r\n    }\r\n    snapshotAndCoalesce(options) {\r\n        if (this.canCoalesce) {\r\n            this.pop();\r\n        }\r\n        this.snapshot(options);\r\n        this.canCoalesce = true;\r\n    }\r\n    /**\r\n     * Return an object capturing the state of the content and selection of the\r\n     * mathfield. Pass this object to restore() to reset the value of the math\r\n     * field to this saved value. This does not affect the undo stack.\r\n     */\r\n    save() {\r\n        return {\r\n            latex: this.model.root.toLatex(false),\r\n            selection: this.model.selection,\r\n        };\r\n    }\r\n    /**\r\n     * Set the content and selection of the mathfield to a value previously\r\n     * captured with save() or stored in the undo stack.\r\n     * This does not affect the undo stack.\r\n     */\r\n    restore(state, options) {\r\n        const wasSuppressing = this.model.suppressChangeNotifications;\r\n        if (typeof options.suppressChangeNotifications !== 'undefined') {\r\n            this.model.suppressChangeNotifications =\r\n                options.suppressChangeNotifications;\r\n        }\r\n        // Restore the content\r\n        insert(this.model, state ? state.latex : '', {\r\n            ...options,\r\n            format: 'latex',\r\n            mode: 'math',\r\n            insertionMode: 'replaceAll',\r\n            selectionMode: 'after',\r\n            smartFence: false,\r\n        });\r\n        // Restore the selection\r\n        this.model.selection = state ? state.selection : [{ start: 0 }];\r\n        this.model.suppressChangeNotifications = wasSuppressing;\r\n    }\r\n}\n\nconst SPECIAL_IDENTIFIERS = {\r\n    '\\u2212': '-',\r\n    '-': '-',\r\n    '\\\\alpha': 'alpha',\r\n    '\\\\beta': 'beta',\r\n    '\\\\gamma': 'gamma',\r\n    '\\\\delta': 'delta',\r\n    '\\\\epsilon': 'epsilon',\r\n    '\\\\varepsilon': 'varepsilon',\r\n    '\\\\zeta': 'zeta',\r\n    '\\\\eta': 'eta',\r\n    '\\\\theta': 'theta',\r\n    '\\\\vartheta': 'vartheta',\r\n    '\\\\iota': 'iota',\r\n    '\\\\kappa': 'kappa',\r\n    '\\\\lambda': 'lambda',\r\n    '\\\\mu': 'mu',\r\n    '\\\\nu': 'nu',\r\n    '\\\\xi': 'xi',\r\n    '\\\\pi': 'pi',\r\n    '\\\\rho': 'rho',\r\n    '\\\\sigma': 'sigma',\r\n    '\\\\tau': 'tau',\r\n    '\\\\upsilon': 'upsilon',\r\n    '\\\\phi': 'phi',\r\n    '\\\\varphi': 'varphi',\r\n    '\\\\chi': 'chi',\r\n    '\\\\psi': 'psi',\r\n    '\\\\omega': 'omega',\r\n    '\\\\Gamma': 'Gamma',\r\n    '\\\\Delta': 'Delta',\r\n    '\\\\Theta': 'Theta',\r\n    '\\\\Lambda': 'Lambda',\r\n    '\\\\Xi': 'Xi',\r\n    '\\\\Pi': 'Pi',\r\n    '\\\\Sigma': 'Sigma',\r\n    '\\\\Phi': 'Phi',\r\n    '\\\\Psi': 'Psi',\r\n    '\\\\Omega': 'Omega',\r\n};\r\nconst SPECIAL_OPERATORS$1 = {\r\n    '\\\\pm': '+-',\r\n    '\\\\times': 'xx',\r\n    '\\\\colon': ':',\r\n    '\\\\vert': '|',\r\n    '\\\\Vert': '||',\r\n    '\\\\mid': '|',\r\n    '\\\\lbrace': '{',\r\n    '\\\\rbrace': '}',\r\n    '\\\\langle': '(:',\r\n    '\\\\rangle': ':)',\r\n};\r\nfunction atomToAsciiMath(atom) {\r\n    if (!atom)\r\n        return '';\r\n    if (isArray(atom)) {\r\n        let result = '';\r\n        if (atom.length === 0)\r\n            return '';\r\n        if (atom[0].type === 'first')\r\n            atom = atom.slice(1);\r\n        if (atom.length === 0)\r\n            return '';\r\n        if (atom[0].mode === 'text') {\r\n            // Text mode... put it in (ASCII) quotes\r\n            let i = 0;\r\n            result = '\"';\r\n            while (atom[i] && atom[i].mode === 'text') {\r\n                result += atom[i].body;\r\n                i++;\r\n            }\r\n            result += '\"' + atomToAsciiMath(atom.slice(i));\r\n        }\r\n        else if (atom[0].mode === 'math') {\r\n            let i = 0;\r\n            while (atom[i] && atom[i].mode === 'math') {\r\n                result += atomToAsciiMath(atom[i]);\r\n                i++;\r\n            }\r\n            result += atomToAsciiMath(atom.slice(i));\r\n        }\r\n        else {\r\n            console.warn('toASCIIMath: Unexpected mode');\r\n        }\r\n        return result.trim();\r\n    }\r\n    if (atom.mode === 'text') {\r\n        return '\"' + atom.body + '\"'; // text -- add in (ASCII) quotes\r\n    }\r\n    let result = '';\r\n    const command = atom.symbol;\r\n    let m;\r\n    switch (atom.type) {\r\n        case 'group':\r\n        case 'root':\r\n            result = atomToAsciiMath(atom.body);\r\n            break;\r\n        case 'array':\r\n            break;\r\n        case 'genfrac':\r\n            if (atom.leftDelim || atom.rightDelim) {\r\n                result +=\r\n                    atom.leftDelim === '.' || !atom.leftDelim\r\n                        ? '{:'\r\n                        : atom.leftDelim;\r\n            }\r\n            if (atom.hasBarLine) {\r\n                result += '(';\r\n                result += atomToAsciiMath(atom.numer);\r\n                result += ')/(';\r\n                result += atomToAsciiMath(atom.denom);\r\n                result += ')';\r\n            }\r\n            else {\r\n                // No bar line, i.e. \\choose, etc...\r\n                result += '(' + atomToAsciiMath(atom.numer) + '),';\r\n                result += '(' + atomToAsciiMath(atom.denom) + ')';\r\n            }\r\n            if (atom.leftDelim || atom.rightDelim) {\r\n                result +=\r\n                    atom.rightDelim === '.' || !atom.rightDelim\r\n                        ? '{:'\r\n                        : atom.rightDelim;\r\n            }\r\n            break;\r\n        case 'surd':\r\n            if (atom.index) {\r\n                result +=\r\n                    'root(' +\r\n                        atomToAsciiMath(atom.index) +\r\n                        ')(' +\r\n                        atomToAsciiMath(atom.body) +\r\n                        ')';\r\n            }\r\n            else {\r\n                result += 'sqrt(' + atomToAsciiMath(atom.body) + ')';\r\n            }\r\n            break;\r\n        case 'leftright':\r\n            result +=\r\n                atom.leftDelim === '.' || !atom.leftDelim\r\n                    ? '{:'\r\n                    : atom.leftDelim;\r\n            result += atomToAsciiMath(atom.body);\r\n            result +=\r\n                atom.rightDelim === '.' || !atom.rightDelim\r\n                    ? ':}'\r\n                    : atom.rightDelim;\r\n            break;\r\n        case 'sizeddelim':\r\n        case 'delim':\r\n            // result += '<mo separator=\"true\"' + makeID(atom.id, options) + '>' + (SPECIAL_OPERATORS[atom.delim] || atom.delim) + '</mo>';\r\n            break;\r\n        case 'overlap':\r\n            break;\r\n        case 'overunder':\r\n            break;\r\n        case 'mord':\r\n            // @todo, deal with some special identifiers: \\alpha, etc...\r\n            result =\r\n                SPECIAL_IDENTIFIERS[command] ||\r\n                    command ||\r\n                    (typeof atom.body === 'string' ? atom.body : '');\r\n            if (result[0] === '\\\\')\r\n                result = String(result);\r\n            m = command\r\n                ? command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/)\r\n                : null;\r\n            if (m) {\r\n                // It's a \\char command\r\n                result = String.fromCharCode(parseInt('0x' + m[1]));\r\n            }\r\n            else if (result.length > 0 && result.charAt(0) === '\\\\') {\r\n                // atom is an identifier with no special handling. Use the\r\n                // Unicode value\r\n                if (typeof atom.body === 'string') {\r\n                    result = atom.body.charAt(0);\r\n                }\r\n                else {\r\n                    result = atom.symbol;\r\n                }\r\n            }\r\n            // result = '<mi' + variant + makeID(atom.id, options) + '>' + xmlEscape(result) + '</mi>';\r\n            break;\r\n        case 'mbin':\r\n        case 'mrel':\r\n        case 'textord':\r\n        case 'minner':\r\n            if (command && SPECIAL_IDENTIFIERS[command]) {\r\n                // Some 'textord' are actually identifiers. Check them here.\r\n                result = SPECIAL_IDENTIFIERS[command];\r\n            }\r\n            else if (command && SPECIAL_OPERATORS$1[command]) {\r\n                result = SPECIAL_OPERATORS$1[command];\r\n            }\r\n            else {\r\n                result = atom.body;\r\n            }\r\n            break;\r\n        case 'mopen':\r\n        case 'mclose':\r\n            result += atom.body;\r\n            break;\r\n        case 'mpunct':\r\n            result = SPECIAL_OPERATORS$1[command] || command;\r\n            break;\r\n        case 'mop':\r\n            if (atom.body !== '\\u200b') {\r\n                // Not ZERO-WIDTH\r\n                result = '';\r\n                if (command === '\\\\operatorname') {\r\n                    result += atomToAsciiMath(atom.body);\r\n                }\r\n                else {\r\n                    result += atom.body || command;\r\n                }\r\n                result += ' ';\r\n            }\r\n            break;\r\n        case 'mathstyle':\r\n            break;\r\n        case 'box':\r\n            break;\r\n        case 'spacing':\r\n            break;\r\n        case 'enclose':\r\n            break;\r\n        case 'space':\r\n            result = ' ';\r\n            break;\r\n    }\r\n    // Subscripts before superscripts (according to the ASCIIMath spec)\r\n    if (atom.subscript) {\r\n        result += '_';\r\n        const arg = atomToAsciiMath(atom.subscript);\r\n        if (arg.length > 1 && !/^(-)?\\d+(\\.\\d*)?$/.test(arg)) {\r\n            result += '(' + arg + ')';\r\n        }\r\n        else {\r\n            result += arg;\r\n        }\r\n    }\r\n    if (atom.superscript) {\r\n        result += '^';\r\n        const arg = atomToAsciiMath(atom.superscript);\r\n        if (arg.length > 1 && !/^(-)?\\d+(\\.\\d*)?$/.test(arg)) {\r\n            result += '(' + arg + ')';\r\n        }\r\n        else {\r\n            result += arg;\r\n        }\r\n    }\r\n    return result;\r\n}\n\nconst STRINGS = {\r\n    en: {\r\n        'keyboard.tooltip.functions': 'Functions',\r\n        'keyboard.tooltip.symbols': 'Symbols',\r\n        'keyboard.tooltip.greek': 'Greek Letters',\r\n        'keyboard.tooltip.command': 'LaTeX Command Mode',\r\n        'keyboard.tooltip.numeric': 'Numeric',\r\n        'keyboard.tooltip.roman': 'Roman Letters',\r\n        'tooltip.copy to clipboard': 'Copy to Clipboard',\r\n        'tooltip.redo': 'Redo',\r\n        'tooltip.toggle virtual keyboard': 'Toggle Virtual Keyboard',\r\n        'tooltip.undo': 'Undo',\r\n    },\r\n    ar: {\r\n        'keyboard.tooltip.functions': 'مهام',\r\n        'keyboard.tooltip.symbols': 'حرف او رمز',\r\n        'keyboard.tooltip.greek': 'حروف يونانية',\r\n        'keyboard.tooltip.command': 'حالة تلقي الأوامر اللاتك',\r\n        'keyboard.tooltip.numeric': 'الرقمية',\r\n        'keyboard.tooltip.roman': 'رموز الاحرف الرومانية',\r\n        'tooltip.copy to clipboard': 'نسخ إلى الحافظة',\r\n        'tooltip.redo': 'الإعادة',\r\n        'tooltip.toggle virtual keyboard': 'تبديل لوحة المفاتيح الإفتراضية',\r\n        'tooltip.undo': 'إلغاء',\r\n    },\r\n    de: {\r\n        'keyboard.tooltip.functions': 'Funktionen',\r\n        'keyboard.tooltip.symbols': 'Symbole',\r\n        'keyboard.tooltip.greek': 'Griechische Buchstaben',\r\n        'keyboard.tooltip.command': 'LaTeX-Befehlsmodus',\r\n        'keyboard.tooltip.numeric': 'Numerisch',\r\n        'keyboard.tooltip.roman': 'Römische Buchstaben',\r\n        'tooltip.copy to clipboard': 'In die Zwischenablage kopieren',\r\n        'tooltip.redo': 'Wiederholen',\r\n        'tooltip.toggle virtual keyboard': 'Virtuelle Tastatur umschalten',\r\n        'tooltip.undo': 'Widerrufen',\r\n    },\r\n    el: {\r\n        'keyboard.tooltip.functions': 'συναρτήσεις',\r\n        'keyboard.tooltip.symbols': 'σύμβολα',\r\n        'keyboard.tooltip.greek': 'ελληνικά γράμματα',\r\n        'keyboard.tooltip.command': 'Λειτουργία εντολών LaTeX',\r\n        'keyboard.tooltip.numeric': 'Αριθμητικός',\r\n        'keyboard.tooltip.roman': 'Ρωμαϊκά γράμματα',\r\n        'tooltip.copy to clipboard': 'Αντιγραφή στο πρόχειρο',\r\n        'tooltip.redo': 'Ξανακάνω',\r\n        'tooltip.toggle virtual keyboard': 'Εναλλαγή εικονικού πληκτρολογίου',\r\n        'tooltip.undo': 'Ξεκάνω',\r\n    },\r\n    es: {\r\n        'keyboard.tooltip.functions': 'Funciones',\r\n        'keyboard.tooltip.symbols': 'Símbolos',\r\n        'keyboard.tooltip.greek': 'Letras griegas',\r\n        'keyboard.tooltip.command': 'Modo Comando LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numérico',\r\n        'keyboard.tooltip.roman': 'Letras romanas',\r\n        'tooltip.copy to clipboard': 'Copiar al portapapeles',\r\n        'tooltip.redo': 'Rehacer',\r\n        'tooltip.toggle virtual keyboard': 'Alternar teclado virtual',\r\n        'tooltip.undo': 'Deshacer',\r\n    },\r\n    fa: {\r\n        'keyboard.tooltip.functions': 'توابع',\r\n        'keyboard.tooltip.symbols': 'نمادها',\r\n        'keyboard.tooltip.greek': 'حروف یونانی',\r\n        'keyboard.tooltip.command': 'حالت دستور لاتک',\r\n        'keyboard.tooltip.numeric': 'عددی',\r\n        'keyboard.tooltip.roman': 'حروف رومی',\r\n        'tooltip.copy to clipboard': 'کپی به کلیپبورد',\r\n        'tooltip.redo': 'بازگشت به بعد',\r\n        'tooltip.toggle virtual keyboard': 'نمایش/نهفتن کیبورد مجازی',\r\n        'tooltip.undo': 'بازگشت به قبل',\r\n    },\r\n    fr: {\r\n        'keyboard.tooltip.functions': 'Fonctions',\r\n        'keyboard.tooltip.symbols': 'Symboles',\r\n        'keyboard.tooltip.greek': 'Lettres grecques',\r\n        'keyboard.tooltip.command': 'Mode de commandes LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numérique',\r\n        'keyboard.tooltip.roman': 'Lettres romaines',\r\n        'tooltip.copy to clipboard': 'Copier dans le presse-papiers',\r\n        'tooltip.redo': 'Rétablir',\r\n        'tooltip.toggle virtual keyboard': 'Afficher/Masquer le clavier virtuel',\r\n        'tooltip.undo': 'Annuler',\r\n    },\r\n    it: {\r\n        'keyboard.tooltip.functions': 'Funzioni',\r\n        'keyboard.tooltip.symbols': 'Simboli',\r\n        'keyboard.tooltip.greek': 'Lettere greche',\r\n        'keyboard.tooltip.command': 'Modalità di comando LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numerico',\r\n        'keyboard.tooltip.roman': 'Lettere romane',\r\n        'tooltip.copy to clipboard': 'Copia negli appunti',\r\n        'tooltip.redo': 'Rifare',\r\n        'tooltip.toggle virtual keyboard': 'Attiva / disattiva la tastiera virtuale',\r\n        'tooltip.undo': 'Disfare',\r\n    },\r\n    ja: {\r\n        'keyboard.tooltip.functions': '関数',\r\n        'keyboard.tooltip.symbols': 'シンボル',\r\n        'keyboard.tooltip.greek': 'ギリシャ文字',\r\n        'keyboard.tooltip.command': 'LaTeXコマンドモード',\r\n        'keyboard.tooltip.numeric': '数値',\r\n        'keyboard.tooltip.roman': 'ローマ字',\r\n        'tooltip.copy to clipboard': 'クリップボードにコピー',\r\n        'tooltip.redo': 'やり直し',\r\n        'tooltip.toggle virtual keyboard': '仮想キーボードの切り替え',\r\n        'tooltip.undo': '元に戻す',\r\n    },\r\n    pl: {\r\n        'keyboard.tooltip.functions': 'Funkcje',\r\n        'keyboard.tooltip.symbols': 'Symbolika',\r\n        'keyboard.tooltip.greek': 'Litery greckie',\r\n        'keyboard.tooltip.command': 'Tryb poleceń LaTeX',\r\n        'keyboard.tooltip.numeric': 'Numeryczne',\r\n        'keyboard.tooltip.roman': 'Litery rzymskie',\r\n        'tooltip.copy to clipboard': 'Kopiuj do Schowka',\r\n        'tooltip.redo': 'Przywróć',\r\n        'tooltip.toggle virtual keyboard': 'Przełącz wirtualną klawiaturę',\r\n        'tooltip.undo': 'Cofnij',\r\n    },\r\n    ru: {\r\n        'keyboard.tooltip.functions': 'Функции',\r\n        'keyboard.tooltip.symbols': 'Символы',\r\n        'keyboard.tooltip.greek': 'Греческие буквы',\r\n        'keyboard.tooltip.command': 'Режим командной строки LaTeX',\r\n        'keyboard.tooltip.numeric': 'числовой',\r\n        'keyboard.tooltip.roman': 'Латинские буквы',\r\n        'tooltip.copy to clipboard': 'Скопировать в буфер обмена',\r\n        'tooltip.redo': 'переделывать',\r\n        'tooltip.toggle virtual keyboard': 'Переключить виртуальную клавиатуру',\r\n        'tooltip.undo': 'расстегивать',\r\n    },\r\n};\n\n// import { Keys } from '../types-utils';\r\nconst l10n = {};\r\nl10n.plural = function (value, s, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    options.type = (_a = options.type) !== null && _a !== void 0 ? _a : 'cardinal';\r\n    const language = l10n.locale.substring(0, 2);\r\n    const rules = options.type === 'ordinal' ? l10n._ordinal : l10n._cardinal;\r\n    let rule = options.type === 'ordinal'\r\n        ? l10n._ordinalPluralCategories.indexOf(rules.select(value))\r\n        : l10n._cardinalPluralCategories.indexOf(rules.select(value));\r\n    let result;\r\n    if (l10n.strings[l10n.locale])\r\n        result = l10n.strings[l10n.locale][s];\r\n    if (!result && l10n.strings[language])\r\n        result = l10n.strings[language][s];\r\n    if (!result) {\r\n        result = l10n.strings['en'][s];\r\n        if (!result)\r\n            result = s;\r\n        if (options.type === 'ordinal') {\r\n            rule = l10n._ordinalPluralCategories.indexOf(l10n._ordinalEnglish.select(value));\r\n        }\r\n        else {\r\n            rule = l10n._cardinalPluralCategories.indexOf(l10n._cardinalEnglish.select(value));\r\n        }\r\n    }\r\n    return result.split(';')[rule] || result.split(';')[0];\r\n};\r\n/*\r\n * Two forms for this function:\r\n * - merge(locale, strings)\r\n * Merge a dictionary of keys -> values for the specified locale\r\n * - merge(strings)\r\n * Merge a dictionary of locale code -> dictionary of keys -> values\r\n *\r\n */\r\nl10n.merge = function (locale, strings) {\r\n    if (locale && strings) {\r\n        const savedLocale = l10n._locale;\r\n        l10n.locale = locale; // Load the necessary json file\r\n        l10n.strings[locale] = {\r\n            ...l10n.strings[locale],\r\n            ...strings,\r\n        };\r\n        l10n.locale = savedLocale;\r\n    }\r\n    else if (locale && !strings) {\r\n        Object.keys(locale).forEach((l) => l10n.merge(l, locale[l]));\r\n    }\r\n};\r\n// Add getter and setter for the _locale property of l10n\r\nObject.defineProperty(l10n, 'locale', {\r\n    set(locale) {\r\n        l10n._locale = locale;\r\n        l10n._ordinal = null;\r\n        l10n._cardinal = null;\r\n    },\r\n    get() {\r\n        var _a;\r\n        // Use the browser defined language as the default language,\r\n        // \"english\" if not running in a browser (node.js)\r\n        if (!l10n._locale) {\r\n            // Use the setter, which will load the necessary .json files.\r\n            l10n._locale = (_a = navigator === null || navigator === void 0 ? void 0 : navigator.language.slice(0, 5)) !== null && _a !== void 0 ? _a : 'en';\r\n        }\r\n        return l10n._locale;\r\n    },\r\n});\r\nObject.defineProperty(l10n, 'ordinal', {\r\n    get() {\r\n        if (!l10n._ordinal) {\r\n            l10n._ordinalEnglish = new Intl.PluralRules('en', {\r\n                type: 'ordinal',\r\n            });\r\n            l10n._ordinalEnglishPluralCategories = l10n._ordinalEnglish.resolvedOptions().pluralCategories;\r\n            l10n._ordinal = new Intl.PluralRules(l10n.locale, {\r\n                type: 'ordinal',\r\n            });\r\n            l10n._ordinalPluralCategories = l10n._ordinal.resolvedOptions().pluralCategories;\r\n            //    \"zero\", \"one\", \"two\", \"few\", \"many\" and \"other\"\r\n        }\r\n        return l10n._ordinal;\r\n    },\r\n});\r\nObject.defineProperty(l10n, 'cardinal', {\r\n    get() {\r\n        if (!l10n._cardinal) {\r\n            l10n._cardinalEnglish = new Intl.PluralRules('en', {\r\n                type: 'cardinal',\r\n            });\r\n            l10n._cardinalEnglishPluralCategories = l10n._cardinalEnglish.resolvedOptions().pluralCategories;\r\n            l10n._cardinal = new Intl.PluralRules(l10n.locale, {\r\n                type: 'cardinal',\r\n            });\r\n            l10n._cardinalPluralCategories = l10n._ordinal.resolvedOptions().pluralCategories;\r\n        }\r\n        return l10n._cardinal;\r\n    },\r\n});\r\nl10n.strings = STRINGS;\r\nfunction localize(s) {\r\n    const language = l10n.locale.substring(0, 2);\r\n    let result = '';\r\n    // Attempt to find a match for the current locale\r\n    if (l10n.strings[l10n.locale])\r\n        result = l10n.strings[l10n.locale][s];\r\n    // If none is found, attempt to find a match for the language\r\n    if (!result && l10n.strings[language])\r\n        result = l10n.strings[language][s];\r\n    // If none is found, try english\r\n    if (!result)\r\n        result = l10n.strings['en'][s];\r\n    // If that didn't work, use the key...\r\n    if (!result)\r\n        result = s;\r\n    return result;\r\n}\n\nfunction insertSuggestion(model, s, l) {\r\n    removeSuggestion(model);\r\n    const mathlist = [];\r\n    // Make a mathlist from the string argument with the `suggestion` property set\r\n    const subs = s.substr(l);\r\n    for (const c of subs) {\r\n        const atom = new Atom('command', 'command', c);\r\n        atom.isSuggestion = true;\r\n        mathlist.push(atom);\r\n    }\r\n    // Splice in the mathlist after the insertion point, but don't change the\r\n    // insertion point\r\n    Array.prototype.splice.apply(model.siblings(), [model.anchorOffset() + 1, 0].concat(mathlist));\r\n}\r\n/**\r\n * When in command mode, insert the select command and return to math mode\r\n * If escape is true, the command is discared.\r\n * @param options.discard if true, the command is discarded and the\r\n * mode switched back to math\r\n * @param options.acceptSuggestion if true, accept the suggestion to\r\n * complete the command. Otherwise, only use what has been entered so far.\r\n */\r\nfunction complete(mathfield, options) {\r\n    options = options !== null && options !== void 0 ? options : { acceptSuggestion: false };\r\n    hidePopover(mathfield);\r\n    if (options.discard) {\r\n        spliceCommandStringAroundInsertionPoint(mathfield.model, null);\r\n        mathfield.switchMode('math');\r\n        return true;\r\n    }\r\n    const command = extractCommandStringAroundInsertionPoint(mathfield.model, !options.acceptSuggestion);\r\n    if (command) {\r\n        if (command === '\\\\(' || command === '\\\\)') {\r\n            spliceCommandStringAroundInsertionPoint(mathfield.model, []);\r\n            insert(mathfield.model, command.slice(1), {\r\n                mode: mathfield.mode,\r\n            });\r\n        }\r\n        else {\r\n            // We'll assume we want to insert in math mode\r\n            // (commands are only available in math mode)\r\n            mathfield.switchMode('math');\r\n            // Interpret the input as LaTeX code\r\n            const mathlist = parseString(command, 'math', null, mathfield.options.macros);\r\n            if (mathlist) {\r\n                spliceCommandStringAroundInsertionPoint(mathfield.model, mathlist);\r\n            }\r\n            else {\r\n                decorateCommandStringAroundInsertionPoint(mathfield.model, true);\r\n            }\r\n        }\r\n        mathfield.snapshot();\r\n        mathfield.model.announce('replacement');\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction updateSuggestion(mathfield) {\r\n    setPositionAfterCommitedCommand(mathfield.model);\r\n    removeSuggestion(mathfield.model);\r\n    const command = extractCommandStringAroundInsertionPoint(mathfield.model);\r\n    const suggestions = suggest(command);\r\n    if (suggestions.length === 0) {\r\n        hidePopover(mathfield);\r\n        decorateCommandStringAroundInsertionPoint(mathfield.model, true);\r\n    }\r\n    else {\r\n        const index = mathfield.suggestionIndex % suggestions.length;\r\n        const l = command.length - suggestions[index].match.length;\r\n        if (l !== 0) {\r\n            insertSuggestion(mathfield.model, suggestions[index].match, l);\r\n        }\r\n        showPopoverWithLatex(mathfield, suggestions[index].match, suggestions.length > 1);\r\n    }\r\n    requestUpdate(mathfield);\r\n    return true;\r\n}\r\nfunction nextSuggestion(mathfield) {\r\n    mathfield.suggestionIndex += 1;\r\n    // The modulo of the suggestionIndex is used to determine which suggestion\r\n    // to display, so no need to worry about rolling over.\r\n    updateSuggestion(mathfield);\r\n    return false;\r\n}\r\nfunction previousSuggestion(mathfield) {\r\n    mathfield.suggestionIndex -= 1;\r\n    if (mathfield.suggestionIndex < 0) {\r\n        // We're rolling over\r\n        // Get the list of suggestions, so we can know how many there are\r\n        // Not very efficient, but simple.\r\n        removeSuggestion(mathfield.model);\r\n        const command = extractCommandStringAroundInsertionPoint(mathfield.model);\r\n        const suggestions = suggest(command);\r\n        mathfield.suggestionIndex = suggestions.length - 1;\r\n    }\r\n    updateSuggestion(mathfield);\r\n    return false;\r\n}\r\nregister$2({\r\n    complete: complete,\r\n    nextSuggestion: nextSuggestion,\r\n    previousSuggestion: previousSuggestion,\r\n}, { target: 'mathfield', category: 'autocomplete' });\n\n// Markup\r\n// Two common flavor of markups: SSML and 'mac'. The latter is only available\r\n// when using the native TTS synthesizer on Mac OS.\r\n// Use SSML in the production rules below. The markup will either be striped\r\n// off or replaced with the 'mac' markup as necessary.\r\n//\r\n// SSML                                             Mac\r\n// ----                                             ----\r\n// <emphasis>WORD</emphasis>                        [[emph +]]WORD\r\n// <break time=\"150ms\"/>                            [[slc 150]]\r\n// <say-as interpret-as=\"character\">A</say-as>      [[char LTRL] A [[char NORM]]\r\n// https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/SpeechSynthesisProgrammingGuide/FineTuning/FineTuning.html#//apple_ref/doc/uid/TP40004365-CH5-SW3\r\n// https://pdfs.semanticscholar.org/8887/25b82b8dbb45dd4dd69b36a65f092864adb0.pdf\r\n// \"<audio src='non_existing_file.au'>File could not be played.</audio>\"\r\n// \"I am now <prosody rate='+0.06'>speaking 6% faster.</prosody>\"\r\nconst PRONUNCIATION = {\r\n    '\\\\alpha': 'alpha ',\r\n    '\\\\mu': 'mew ',\r\n    '\\\\sigma': 'sigma ',\r\n    '\\\\pi': 'pie ',\r\n    '\\\\imaginaryI': 'eye ',\r\n    '\\\\sum': 'Summation ',\r\n    '\\\\prod': 'Product ',\r\n    a: '<phoneme alphabet=\"ipa\" ph=\"eɪ\">a</phoneme>',\r\n    A: 'capital <phoneme alphabet=\"ipa\" ph=\"eɪ\">A</phoneme>',\r\n    '+': 'plus ',\r\n    '-': 'minus ',\r\n    ';': '<break time=\"150ms\"/> semi-colon <break time=\"150ms\"/>',\r\n    ',': '<break time=\"150ms\"/> comma  <break time=\"150ms\"/>',\r\n    '|': '<break time=\"150ms\"/>Vertical bar<break time=\"150ms\"/>',\r\n    '(': '<break time=\"150ms\"/>Open paren. <break time=\"150ms\"/>',\r\n    ')': '<break time=\"150ms\"/> Close paren. <break time=\"150ms\"/>',\r\n    '=': 'equals ',\r\n    '<': 'is less than ',\r\n    '\\\\lt': 'is less than ',\r\n    '<=': 'is less than or equal to ',\r\n    '\\\\le': 'is less than or equal to ',\r\n    '\\\\gt': 'is greater than ',\r\n    '>': 'is greater than ',\r\n    '\\\\ge': 'is greater than or equal to ',\r\n    '\\\\geq': 'is greater than or equal to ',\r\n    '\\\\leq': 'is less than or equal to ',\r\n    '!': 'factorial ',\r\n    '\\\\sin': 'sine ',\r\n    '\\\\cos': 'cosine ',\r\n    '\\u200b': '',\r\n    '\\u2212': 'minus ',\r\n    ':': '<break time=\"150ms\"/> such that <break time=\"200ms\"/> ',\r\n    '\\\\colon': '<break time=\"150ms\"/> such that <break time=\"200ms\"/> ',\r\n    '\\\\hbar': 'etch bar ',\r\n    '\\\\iff': '<break time=\"200ms\"/>if, and only if, <break time=\"200ms\"/>',\r\n    '\\\\Longleftrightarrow': '<break time=\"200ms\"/>if, and only if, <break time=\"200ms\"/>',\r\n    '\\\\land': 'and ',\r\n    '\\\\lor': 'or ',\r\n    '\\\\neg': 'not ',\r\n    '\\\\div': 'divided by ',\r\n    '\\\\forall': 'for all ',\r\n    '\\\\exists': 'there exists ',\r\n    '\\\\nexists': 'there does not exists ',\r\n    '\\\\in': 'element of ',\r\n    '\\\\N': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">n</say-as>',\r\n    '\\\\C': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">c</say-as>',\r\n    '\\\\Z': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">z</say-as>',\r\n    '\\\\Q': 'the set <break time=\"150ms\"/><say-as interpret-as=\"character\">q</say-as>',\r\n    '\\\\infty': 'infinity ',\r\n    '\\\\nabla': 'nabla ',\r\n    '\\\\partial': 'partial derivative of ',\r\n    '\\\\cdots': 'dot dot dot ',\r\n    '\\\\Rightarrow': 'implies ',\r\n    '\\\\lbrace': '<break time=\"150ms\"/>open brace<break time=\"150ms\"/>',\r\n    '\\\\{': '<break time=\"150ms\"/>open brace<break time=\"150ms\"/>',\r\n    '\\\\rbrace': '<break time=\"150ms\"/>close brace<break time=\"150ms\"/>',\r\n    '\\\\}': '<break time=\"150ms\"/>close brace<break time=\"150ms\"/>',\r\n    '\\\\langle': '<break time=\"150ms\"/>left angle bracket<break time=\"150ms\"/>',\r\n    '\\\\rangle': '<break time=\"150ms\"/>right angle bracket<break time=\"150ms\"/>',\r\n    '\\\\lfloor': '<break time=\"150ms\"/>open floor<break time=\"150ms\"/>',\r\n    '\\\\rfloor': '<break time=\"150ms\"/>close floor<break time=\"150ms\"/>',\r\n    '\\\\lceil': '<break time=\"150ms\"/>open ceiling<break time=\"150ms\"/>',\r\n    '\\\\rceil': '<break time=\"150ms\"/>close ceiling<break time=\"150ms\"/>',\r\n    '\\\\vert': '<break time=\"150ms\"/>vertical bar<break time=\"150ms\"/>',\r\n    '\\\\mvert': '<break time=\"150ms\"/>divides<break time=\"150ms\"/>',\r\n    '\\\\lvert': '<break time=\"150ms\"/>left vertical bar<break time=\"150ms\"/>',\r\n    '\\\\rvert': '<break time=\"150ms\"/>right vertical bar<break time=\"150ms\"/>',\r\n    // '\\\\lbrack':\t\t'left bracket',\r\n    // '\\\\rbrack':\t\t'right bracket',\r\n    '\\\\lbrack': '<break time=\"150ms\"/> open square bracket <break time=\"150ms\"/>',\r\n    '\\\\rbrack': '<break time=\"150ms\"/> close square bracket <break time=\"150ms\"/>',\r\n    // need to add code to detect singluar/plural. Until then spoken as plural since that is vastly more common\r\n    // note: need to worry about intervening &InvisibleTimes;.\r\n    // note: need to also do this when in numerator of fraction and number preceeds fraction\r\n    // note: need to do this for <msup>\r\n    mm: 'millimeters',\r\n    cm: 'centimeters',\r\n    km: 'kilometers',\r\n    kg: 'kilograms',\r\n};\r\nfunction getSpokenName(latex) {\r\n    let result = '';\r\n    if (latex.charAt(0) === '\\\\') {\r\n        result = ' ' + latex.replace('\\\\', '') + ' ';\r\n    }\r\n    return result;\r\n}\r\nfunction platform$1(p) {\r\n    let result = 'other';\r\n    if ((navigator === null || navigator === void 0 ? void 0 : navigator.platform) && (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\r\n        if (/^(mac)/i.test(navigator.platform)) {\r\n            result = 'mac';\r\n        }\r\n        else if (/^(win)/i.test(navigator.platform)) {\r\n            result = 'win';\r\n        }\r\n        else if (/(android)/i.test(navigator.userAgent)) {\r\n            result = 'android';\r\n        }\r\n        else if (/(iphone)/i.test(navigator.userAgent) ||\r\n            /(ipod)/i.test(navigator.userAgent) ||\r\n            /(ipad)/i.test(navigator.userAgent)) {\r\n            result = 'ios';\r\n        }\r\n        else if (/\\bCrOS\\b/i.test(navigator.userAgent)) {\r\n            result = 'chromeos';\r\n        }\r\n    }\r\n    return result === p ? p : '!' + p;\r\n}\r\nfunction isAtomic(atoms) {\r\n    let count = 0;\r\n    if (isAtomArray(atoms)) {\r\n        for (const atom of atoms) {\r\n            if (atom.type !== 'first') {\r\n                count += 1;\r\n            }\r\n        }\r\n    }\r\n    return count === 1;\r\n}\r\nfunction atomicID(atoms) {\r\n    if (isAtomArray(atoms)) {\r\n        for (const atom of atoms) {\r\n            if (atom.type !== 'first' && atom.id) {\r\n                return atom.id.toString();\r\n            }\r\n        }\r\n    }\r\n    return '';\r\n}\r\nfunction atomicValue(atoms) {\r\n    let result = '';\r\n    if (isAtomArray(atoms)) {\r\n        for (const atom of atoms) {\r\n            if (atom.type !== 'first' && typeof atom.body === 'string') {\r\n                result += atom.body;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction atomToSpeakableFragment(mode, atom, options) {\r\n    function letter(c) {\r\n        let result = '';\r\n        if (!options.textToSpeechMarkup) {\r\n            if (/[a-z]/.test(c)) {\r\n                result += \" '\" + c.toUpperCase() + \"'\";\r\n            }\r\n            else if (/[A-Z]/.test(c)) {\r\n                result += \" 'capital \" + c.toUpperCase() + \"'\";\r\n            }\r\n            else {\r\n                result += c;\r\n            }\r\n        }\r\n        else {\r\n            if (/[a-z]/.test(c)) {\r\n                result +=\r\n                    ' <say-as interpret-as=\"character\">' + c + '</say-as>';\r\n            }\r\n            else if (/[A-Z]/.test(c)) {\r\n                result += String('capital ' + c.toLowerCase());\r\n            }\r\n            else {\r\n                result += c;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function emph(s) {\r\n        return '<emphasis>' + s + '</emphasis>';\r\n    }\r\n    if (!atom)\r\n        return '';\r\n    let result = '';\r\n    if (isAtomArray(atom)) {\r\n        let isInDigitRun = false; // need to group sequence of digits\r\n        let isInTextRun = false; // need to group text\r\n        for (let i = 0; i < atom.length; i++) {\r\n            if (atom[i].mode !== 'text') {\r\n                isInTextRun = false;\r\n            }\r\n            if (i < atom.length - 2 &&\r\n                atom[i].type === 'mopen' &&\r\n                atom[i + 2].type === 'mclose' &&\r\n                atom[i + 1].type === 'mord') {\r\n                result += ' of ';\r\n                result += emph(atomToSpeakableFragment(mode, atom[i + 1], options));\r\n                i += 2;\r\n            }\r\n            else if (atom[i].mode === 'text') {\r\n                if (isInTextRun) {\r\n                    result += atom[i].body ? atom[i].body : ' ';\r\n                }\r\n                else {\r\n                    isInTextRun = true;\r\n                    result += atomToSpeakableFragment('text', atom[i], options);\r\n                }\r\n                // '.' and ',' should only be allowed if prev/next entry is a digit\r\n                // However, if that isn't the case, this still works because 'toSpeakableFragment' is called in either case.\r\n                // Note: the first char in a digit/text run potentially needs to have a 'mark', hence the call to 'toSpeakableFragment'\r\n            }\r\n            else if (atom[i].type === 'mord' &&\r\n                /[0123456789,.]/.test(atom[i].body)) {\r\n                if (isInDigitRun) {\r\n                    result += atom[i].body;\r\n                }\r\n                else {\r\n                    isInDigitRun = true;\r\n                    result += atomToSpeakableFragment(mode, atom[i], options);\r\n                }\r\n            }\r\n            else {\r\n                isInDigitRun = false;\r\n                result += atomToSpeakableFragment(mode, atom[i], options);\r\n            }\r\n        }\r\n    }\r\n    else if (atom.mode === 'text') {\r\n        if (atom.id && mode === 'math') {\r\n            result += '<mark name=\"' + atom.id.toString() + '\"/>';\r\n        }\r\n        result += atom.body;\r\n    }\r\n    else {\r\n        if (atom.id && mode === 'math') {\r\n            result += '<mark name=\"' + atom.id.toString() + '\"/>';\r\n        }\r\n        let numer = '';\r\n        let denom = '';\r\n        let body = '';\r\n        let supsubHandled = false;\r\n        switch (atom.type) {\r\n            case 'group':\r\n            case 'root':\r\n                result += atomToSpeakableFragment('math', atom.body, options);\r\n                break;\r\n            case 'genfrac':\r\n                numer = atomToSpeakableFragment('math', atom.numer, options);\r\n                denom = atomToSpeakableFragment('math', atom.denom, options);\r\n                if (isAtomic(atom.numer) && isAtomic(atom.denom)) {\r\n                    const COMMON_FRACTIONS = {\r\n                        '1/2': ' half ',\r\n                        '1/3': ' one third ',\r\n                        '2/3': ' two third',\r\n                        '1/4': ' one quarter ',\r\n                        '3/4': ' three quarter ',\r\n                        '1/5': ' one fifth ',\r\n                        '2/5': ' two fifths ',\r\n                        '3/5': ' three fifths ',\r\n                        '4/5': ' four fifths ',\r\n                        '1/6': ' one sixth ',\r\n                        '5/6': ' five sixths ',\r\n                        '1/8': ' one eight ',\r\n                        '3/8': ' three eights ',\r\n                        '5/8': ' five eights ',\r\n                        '7/8': ' seven eights ',\r\n                        '1/9': ' one ninth ',\r\n                        '2/9': ' two ninths ',\r\n                        '4/9': ' four ninths ',\r\n                        '5/9': ' five ninths ',\r\n                        '7/9': ' seven ninths ',\r\n                        '8/9': ' eight ninths ',\r\n                    };\r\n                    const commonFraction = COMMON_FRACTIONS[atomicValue(atom.numer) +\r\n                        '/' +\r\n                        atomicValue(atom.denom)];\r\n                    if (commonFraction) {\r\n                        result = commonFraction;\r\n                    }\r\n                    else {\r\n                        result += numer + ' over ' + denom;\r\n                    }\r\n                }\r\n                else {\r\n                    result +=\r\n                        ' the fraction <break time=\"150ms\"/>' +\r\n                            numer +\r\n                            ', over <break time=\"150ms\"/>' +\r\n                            denom +\r\n                            '.<break time=\"150ms\"/> End fraction.<break time=\"150ms\"/>';\r\n                }\r\n                break;\r\n            case 'surd':\r\n                body = atomToSpeakableFragment('math', atom.body, options);\r\n                if (!atom.index) {\r\n                    if (isAtomic(atom.body)) {\r\n                        result += ' the square root of ' + body + ' , ';\r\n                    }\r\n                    else {\r\n                        result +=\r\n                            ' the square root of <break time=\"200ms\"/>' +\r\n                                body +\r\n                                '. <break time=\"200ms\"/> End square root';\r\n                    }\r\n                }\r\n                else {\r\n                    let index = atomToSpeakableFragment('math', atom.index, options);\r\n                    index = index.trim();\r\n                    const index2 = index.replace(/<mark([^/]*)\\/>/g, '');\r\n                    if (index2 === '3') {\r\n                        result +=\r\n                            ' the cube root of <break time=\"200ms\"/>' +\r\n                                body +\r\n                                '. <break time=\"200ms\"/> End cube root';\r\n                    }\r\n                    else if (index2 === 'n') {\r\n                        result +=\r\n                            ' the nth root of <break time=\"200ms\"/>' +\r\n                                body +\r\n                                '. <break time=\"200ms\"/> End root';\r\n                    }\r\n                    else {\r\n                        result +=\r\n                            ' the root with index: <break time=\"200ms\"/>' +\r\n                                index +\r\n                                ', of <break time=\"200ms\"/>' +\r\n                                body +\r\n                                '. <break time=\"200ms\"/> End root';\r\n                    }\r\n                }\r\n                break;\r\n            case 'leftright':\r\n                result += PRONUNCIATION[atom.leftDelim] || atom.leftDelim;\r\n                result += atomToSpeakableFragment('math', atom.body, options);\r\n                result += PRONUNCIATION[atom.rightDelim] || atom.rightDelim;\r\n                break;\r\n            case 'rule':\r\n                // @todo\r\n                break;\r\n            case 'overunder':\r\n                // @todo\r\n                break;\r\n            case 'overlap':\r\n                // @todo\r\n                break;\r\n            case 'placeholder':\r\n                result += 'placeholder ' + atom.body;\r\n                break;\r\n            case 'delim':\r\n            case 'sizeddelim':\r\n            case 'mord':\r\n            case 'minner':\r\n            case 'mbin':\r\n            case 'mrel':\r\n            case 'mpunct':\r\n            case 'mopen':\r\n            case 'mclose':\r\n            case 'textord': {\r\n                const command = atom.symbol;\r\n                if (command === '\\\\mathbin' ||\r\n                    command === '\\\\mathrel' ||\r\n                    command === '\\\\mathopen' ||\r\n                    command === '\\\\mathclose' ||\r\n                    command === '\\\\mathpunct' ||\r\n                    command === '\\\\mathord' ||\r\n                    command === '\\\\mathinner') {\r\n                    result = atomToSpeakableFragment(mode, atom.body, options);\r\n                    break;\r\n                }\r\n                let atomValue = atom.body;\r\n                let latexValue = atom.symbol;\r\n                if (atom.type === 'delim' || atom.type === 'sizeddelim') {\r\n                    atomValue = latexValue = atom.delim;\r\n                }\r\n                if (mode === 'text') {\r\n                    result += atomValue;\r\n                }\r\n                else {\r\n                    if (atom.type === 'mbin') {\r\n                        result += '<break time=\"150ms\"/>';\r\n                    }\r\n                    if (atomValue) {\r\n                        const value = PRONUNCIATION[atomValue] ||\r\n                            (latexValue\r\n                                ? PRONUNCIATION[latexValue.trim()]\r\n                                : '');\r\n                        if (value) {\r\n                            result += ' ' + value;\r\n                        }\r\n                        else {\r\n                            const spokenName = latexValue\r\n                                ? getSpokenName(latexValue.trim())\r\n                                : '';\r\n                            result += spokenName\r\n                                ? spokenName\r\n                                : letter(atomValue);\r\n                        }\r\n                    }\r\n                    else {\r\n                        result += atomToSpeakableFragment('math', atom.body, options);\r\n                    }\r\n                    if (atom.type === 'mbin') {\r\n                        result += '<break time=\"150ms\"/>';\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'mop':\r\n                // @todo\r\n                if (atom.body !== '\\u200b') {\r\n                    // Not ZERO-WIDTH\r\n                    const trimLatex = atom.symbol;\r\n                    if (trimLatex === '\\\\sum') {\r\n                        if (atom.superscript && atom.subscript) {\r\n                            let sup = atomToSpeakableFragment('math', atom.superscript, options);\r\n                            sup = sup.trim();\r\n                            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the summation from <break time=\"200ms\"/>' +\r\n                                    sub +\r\n                                    '<break time=\"200ms\"/> to  <break time=\"200ms\"/>' +\r\n                                    sup +\r\n                                    '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        }\r\n                        else if (atom.subscript) {\r\n                            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the summation from <break time=\"200ms\"/>' +\r\n                                    sub +\r\n                                    '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        }\r\n                        else {\r\n                            result += ' the summation of';\r\n                        }\r\n                    }\r\n                    else if (trimLatex === '\\\\prod') {\r\n                        if (atom.superscript && atom.subscript) {\r\n                            let sup = atomToSpeakableFragment('math', atom.superscript, options);\r\n                            sup = sup.trim();\r\n                            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the product from <break time=\"200ms\"/>' +\r\n                                    sub +\r\n                                    '<break time=\"200ms\"/> to <break time=\"200ms\"/>' +\r\n                                    sup +\r\n                                    '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        }\r\n                        else if (atom.subscript) {\r\n                            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the product from <break time=\"200ms\"/>' +\r\n                                    sub +\r\n                                    '<break time=\"200ms\"/> of <break time=\"150ms\"/>';\r\n                            supsubHandled = true;\r\n                        }\r\n                        else {\r\n                            result += ' the product  of ';\r\n                        }\r\n                    }\r\n                    else if (trimLatex === '\\\\int') {\r\n                        if (atom.superscript && atom.subscript) {\r\n                            let sup = atomToSpeakableFragment('math', atom.superscript, options);\r\n                            sup = sup.trim();\r\n                            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n                            sub = sub.trim();\r\n                            result +=\r\n                                ' the integral from <break time=\"200ms\"/>' +\r\n                                    emph(sub) +\r\n                                    '<break time=\"200ms\"/> to <break time=\"200ms\"/>' +\r\n                                    emph(sup) +\r\n                                    ' <break time=\"200ms\"/> of ';\r\n                            supsubHandled = true;\r\n                        }\r\n                        else {\r\n                            result += ' the integral of <break time=\"200ms\"/> ';\r\n                        }\r\n                    }\r\n                    else if (typeof atom.body === 'string') {\r\n                        const value = PRONUNCIATION[atom.body] ||\r\n                            PRONUNCIATION[atom.symbol];\r\n                        if (value) {\r\n                            result += value;\r\n                        }\r\n                        else {\r\n                            result += ' ' + atom.body;\r\n                        }\r\n                    }\r\n                    else if (atom.symbol) {\r\n                        if (atom.symbol[0] === '\\\\') {\r\n                            result += ' ' + atom.symbol.substr(1);\r\n                        }\r\n                        else {\r\n                            result += ' ' + atom.symbol;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 'enclose':\r\n                body = atomToSpeakableFragment('math', atom.body, options);\r\n                if (isAtomic(atom.body)) {\r\n                    result += ' crossed out ' + body + ' , ';\r\n                }\r\n                else {\r\n                    result += ' crossed out ' + body + '. End cross out';\r\n                }\r\n                break;\r\n        }\r\n        if (!supsubHandled && atom.superscript) {\r\n            let sup = atomToSpeakableFragment(mode, atom.superscript, options);\r\n            sup = sup.trim();\r\n            const sup2 = sup.replace(/<[^>]*>/g, '');\r\n            if (isAtomic(atom.superscript)) {\r\n                if (mode === 'math') {\r\n                    const id = atomicID(atom.superscript);\r\n                    if (id) {\r\n                        result += '<mark name=\"' + id + '\"/>';\r\n                    }\r\n                }\r\n                if (sup2 === '\\u2032') {\r\n                    result += ' prime ';\r\n                }\r\n                else if (sup2 === '2') {\r\n                    result += ' squared ';\r\n                }\r\n                else if (sup2 === '3') {\r\n                    result += ' cubed ';\r\n                }\r\n                else if (isNaN(parseInt(sup2))) {\r\n                    result += ' to the ' + sup + '; ';\r\n                }\r\n                else {\r\n                    result +=\r\n                        ' to the <say-as interpret-as=\"ordinal\">' +\r\n                            sup2 +\r\n                            '</say-as> power; ';\r\n                }\r\n            }\r\n            else {\r\n                if (isNaN(parseInt(sup2))) {\r\n                    result += ' raised to the ' + sup + '; ';\r\n                }\r\n                else {\r\n                    result +=\r\n                        ' raised to the <say-as interpret-as=\"ordinal\">' +\r\n                            sup2 +\r\n                            '</say-as> power; ';\r\n                }\r\n            }\r\n        }\r\n        if (!supsubHandled && atom.subscript) {\r\n            let sub = atomToSpeakableFragment('math', atom.subscript, options);\r\n            sub = sub.trim();\r\n            if (isAtomic(atom.subscript)) {\r\n                result += ' sub ' + sub;\r\n            }\r\n            else {\r\n                result += ' subscript ' + sub + '. End subscript. ';\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param  atoms The atoms to represent as speakable text.\r\n */\r\nfunction atomToSpeakableText(atoms, speechOptions) {\r\n    var _a;\r\n    const options = {\r\n        ...speechOptions,\r\n        textToSpeechRulesOptions: { ...speechOptions.textToSpeechRulesOptions },\r\n    };\r\n    if (window['sre'] && options.textToSpeechRules === 'sre') {\r\n        const mathML = atomsToMathML(atoms, options);\r\n        if (mathML) {\r\n            if (options.textToSpeechMarkup) {\r\n                options.textToSpeechRulesOptions = (_a = options.textToSpeechRulesOptions) !== null && _a !== void 0 ? _a : {};\r\n                options.textToSpeechRulesOptions.markup =\r\n                    options.textToSpeechMarkup;\r\n                if (options.textToSpeechRulesOptions.markup === 'ssml') {\r\n                    options.textToSpeechRulesOptions.markup = 'ssml_step';\r\n                }\r\n                options.textToSpeechRulesOptions.rate =\r\n                    options.speechEngineRate;\r\n            }\r\n            if (options.textToSpeechRulesOptions) {\r\n                window['sre'].System.getInstance().setupEngine(options.textToSpeechRulesOptions);\r\n            }\r\n            return window['sre'].System.getInstance().toSpeech(mathML);\r\n        }\r\n        return '';\r\n    }\r\n    let result = atomToSpeakableFragment('math', atoms, options);\r\n    if (options.textToSpeechMarkup === 'ssml') {\r\n        let prosody = '';\r\n        if (options.speechEngineRate) {\r\n            prosody = '<prosody rate=\"' + options.speechEngineRate + '\">';\r\n        }\r\n        result =\r\n            `<?xml version=\"1.0\"?><speak version=\"1.1\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xml:lang=\"en-US\">` +\r\n                '<amazon:auto-breaths>' +\r\n                prosody +\r\n                '<p><s>' +\r\n                result +\r\n                '</s></p>' +\r\n                (prosody ? '</prosody>' : '') +\r\n                '</amazon:auto-breaths>' +\r\n                '</speak>';\r\n    }\r\n    else if (options.textToSpeechMarkup === 'mac' &&\r\n        platform$1('mac') === 'mac') {\r\n        // Convert SSML to Mac markup\r\n        result = result\r\n            .replace(/<mark([^/]*)\\/>/g, '')\r\n            .replace(/<emphasis>/g, '[[emph+]]')\r\n            .replace(/<\\/emphasis>/g, '')\r\n            .replace(/<break time=\"([0-9]*)ms\"\\/>/g, '[[slc $1]]')\r\n            .replace(/<say-as[^>]*>/g, '')\r\n            .replace(/<\\/say-as>/g, '');\r\n    }\r\n    else {\r\n        // If no markup was requested, or 'mac' markup, but we're not on a mac,\r\n        // remove any that we may have\r\n        // Strip out the SSML markup\r\n        result = result.replace(/<[^>]*>/g, '').replace(/\\s{2,}/g, ' ');\r\n    }\r\n    return result;\r\n}\n\nfunction speakableText(speechOptions, prefix, atoms) {\r\n    const options = {\r\n        ...speechOptions,\r\n        textToSpeechMarkup: '',\r\n        textToSpeechRulesOptions: {\r\n            ...speechOptions.textToSpeechRulesOptions,\r\n            markup: 'none',\r\n        },\r\n    };\r\n    return prefix + atomToSpeakableText(atoms, options);\r\n}\r\n/**\r\n *\r\n * Speak some part of the expression, either with or without synchronized highlighting.\r\n *\r\n * @param speakOptions.withHighlighting - If true, synchronized\r\n * highlighting of speech will happen (if possible). Default is false.\r\n */\r\n// @revisit: register 'speak' command with mathfield (to get access to SpeechOptions, which need to be passed down)\r\nregister$2({\r\n    speak: (mathfield, scope, options) => {\r\n        return speak(mathfield, scope, options);\r\n    },\r\n}, { target: 'mathfield', category: 'speech' });\r\nfunction speak(mathfield, scope, speakOptions) {\r\n    speakOptions = speakOptions !== null && speakOptions !== void 0 ? speakOptions : { withHighlighting: false };\r\n    function getAtoms(mathfield, scope) {\r\n        let result = null;\r\n        switch (scope) {\r\n            case 'all':\r\n                result = mathfield.model.root;\r\n                break;\r\n            case 'selection':\r\n                if (!selectionIsCollapsed(mathfield.model)) {\r\n                    result = getSelectedAtoms(mathfield.model);\r\n                }\r\n                break;\r\n            case 'left': {\r\n                const siblings = mathfield.model.siblings();\r\n                const last = mathfield.model.startOffset();\r\n                if (last >= 1) {\r\n                    result = [];\r\n                    for (let i = 1; i <= last; i++) {\r\n                        result.push(siblings[i]);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'right': {\r\n                const siblings = mathfield.model.siblings();\r\n                const first = mathfield.model.endOffset() + 1;\r\n                if (first <= siblings.length - 1) {\r\n                    result = [];\r\n                    for (let i = first; i <= siblings.length - 1; i++) {\r\n                        result.push(siblings[i]);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'group':\r\n                result = mathfield.model.siblings();\r\n                break;\r\n            case 'parent': {\r\n                const parent = mathfield.model.parent();\r\n                if (parent && parent.type !== 'root') {\r\n                    result = mathfield.model.parent();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function getFailedSpeech(scope) {\r\n        let result = '';\r\n        switch (scope) {\r\n            case 'all':\r\n                console.log('Internal failure: speak all failed');\r\n                break;\r\n            case 'selection':\r\n                result = 'no selection';\r\n                break;\r\n            case 'left':\r\n                result = 'at start';\r\n                break;\r\n            case 'right':\r\n                result = 'at end';\r\n                break;\r\n            case 'group':\r\n                console.log('Internal failure: speak group failed');\r\n                break;\r\n            case 'parent':\r\n                result = 'no parent';\r\n                break;\r\n            default:\r\n                console.log('unknown speak_ param value: \"' + scope + '\"');\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    const atoms = getAtoms(mathfield, scope);\r\n    if (atoms === null) {\r\n        mathfield.options.speakHook(getFailedSpeech(scope), mathfield.options);\r\n        return false;\r\n    }\r\n    const options = { ...mathfield.options };\r\n    if (speakOptions.withHighlighting || options.speechEngine === 'amazon') {\r\n        options.textToSpeechMarkup =\r\n            window['sre'] && options.textToSpeechRules === 'sre'\r\n                ? 'ssml_step'\r\n                : 'ssml';\r\n    }\r\n    const text = atomToSpeakableText(atoms, options);\r\n    if (speakOptions.withHighlighting) {\r\n        window['mathlive'].readAloudMathField = mathfield;\r\n        render(mathfield, { forHighlighting: true });\r\n        if (mathfield.options.readAloudHook) {\r\n            mathfield.options.readAloudHook(mathfield.field, text, mathfield.options);\r\n        }\r\n    }\r\n    else {\r\n        if (mathfield.options.speakHook) {\r\n            mathfield.options.speakHook(text, options);\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction defaultSpeakHook(text, config) {\r\n    if (!config && window && window['mathlive']) {\r\n        config = window['mathlive'].config;\r\n    }\r\n    config = config !== null && config !== void 0 ? config : {};\r\n    if (!config.speechEngine || config.speechEngine === 'local') {\r\n        // On ChromeOS: chrome.accessibilityFeatures.spokenFeedback\r\n        // See also https://developer.chrome.com/apps/tts\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        if (window) {\r\n            window.speechSynthesis.speak(utterance);\r\n        }\r\n        else {\r\n            console.log('Speak: ', text);\r\n        }\r\n    }\r\n    else if (config.speechEngine === 'amazon') {\r\n        if (!window || !window['AWS']) {\r\n            console.warn('AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk');\r\n        }\r\n        else {\r\n            const polly = new window['AWS'].Polly({ apiVersion: '2016-06-10' });\r\n            const params = {\r\n                OutputFormat: 'mp3',\r\n                VoiceId: config.speechEngineVoice,\r\n                Engine: [\r\n                    'Amy',\r\n                    'Emma',\r\n                    'Brian',\r\n                    'Ivy',\r\n                    'Joanna',\r\n                    'Kendra',\r\n                    'Kimberly',\r\n                    'Salli',\r\n                    'Joey',\r\n                    'Justin',\r\n                    'Matthew',\r\n                ].includes(config.speechEngineVoice)\r\n                    ? 'neural'\r\n                    : 'standard',\r\n                // SampleRate: '24000',\r\n                Text: text,\r\n                TextType: 'ssml',\r\n            };\r\n            // https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Polly.html#synthesizeSpeech-property\r\n            polly.synthesizeSpeech(params, function (err, data) {\r\n                if (err) {\r\n                    console.warn('polly.synthesizeSpeech() error:', err, err.stack);\r\n                    // announce('plonk');\r\n                }\r\n                else if (data === null || data === void 0 ? void 0 : data.AudioStream) {\r\n                    const uInt8Array = new Uint8Array(data.AudioStream);\r\n                    const blob = new Blob([uInt8Array.buffer], {\r\n                        type: 'audio/mpeg',\r\n                    });\r\n                    const url = URL.createObjectURL(blob);\r\n                    const audioElement = new Audio(url);\r\n                    audioElement.play().catch((err) => console.log(err));\r\n                }\r\n                else {\r\n                    console.log('polly.synthesizeSpeech():' + data);\r\n                }\r\n            });\r\n            // Can call AWS.Request() on the result of synthesizeSpeech()\r\n        }\r\n    }\r\n    else if (config.speechEngine === 'google') {\r\n        console.warn('The Google speech engine is not supported yet. Please come again.');\r\n        // @todo: implement support for Google Text-to-Speech API,\r\n        // using config.speechEngineToken, config.speechEngineVoice and\r\n        // config.speechEngineAudioConfig\r\n        // curl -H \"Authorization: Bearer \"$(gcloud auth application-default print-access-token) \\\r\n        //   -H \"Content-Type: application/json; charset=utf-8\" \\\r\n        //   --data \"{\r\n        //     'input':{\r\n        //       'text':'Android is a mobile operating system developed by Google,\r\n        //          based on the Linux kernel and designed primarily for\r\n        //          touchscreen mobile devices such as smartphones and tablets.'\r\n        //     },\r\n        //     'voice':{\r\n        //       'languageCode':'en-gb',\r\n        //       'name':'en-GB-Standard-A',\r\n        //       'ssmlGender':'FEMALE'\r\n        //     },\r\n        //     'audioConfig':{\r\n        //       'audioEncoding':'MP3'\r\n        //     }\r\n        //   }\" \"https://texttospeech.googleapis.com/v1beta1/text:synthesize\" > synthesize-text.txt\r\n    }\r\n}\n\n/**\r\n * Announce a change in selection or content via the aria-live region.\r\n *\r\n * @param action The action that invoked the change.\r\n * @param oldModel The previous value of the model before the change.\r\n */\r\nfunction defaultAnnounceHook(mathfield, action, oldModel, atoms) {\r\n    //** Fix: the focus is the end of the selection, so it is before where we want it\r\n    let liveText = '';\r\n    // const action = moveAmount > 0 ? \"right\" : \"left\";\r\n    if (action === 'plonk') {\r\n        // Use this sound to indicate (minor) errors, for\r\n        // example when a action has no effect.\r\n        if (mathfield.plonkSound) {\r\n            mathfield.plonkSound.load();\r\n            mathfield.plonkSound.play().catch((err) => console.warn(err));\r\n        }\r\n        // As a side effect, reset the keystroke buffer\r\n        mathfield.resetKeystrokeBuffer();\r\n    }\r\n    else if (action === 'delete') {\r\n        liveText = speakableText(mathfield.options, 'deleted: ', atoms);\r\n        //*** FIX: could also be moveUp or moveDown -- do something different like provide context???\r\n    }\r\n    else if (action === 'focus' || /move/.test(action)) {\r\n        //*** FIX -- should be xxx selected/unselected */\r\n        liveText =\r\n            (selectionIsCollapsed(mathfield.model) ? '' : 'selected: ') +\r\n                nextAtomSpeechText(mathfield, oldModel);\r\n    }\r\n    else if (action === 'replacement') {\r\n        // announce the contents\r\n        liveText = speakableText(mathfield.options, '', mathfield.model.sibling(0));\r\n    }\r\n    else if (action === 'line') {\r\n        // announce the current line -- currently that's everything\r\n        mathfield.accessibleNode.innerHTML = mathfield.options.createHTML('<math xmlns=\"http://www.w3.org/1998/Math/MathML\">' +\r\n            atomsToMathML(mathfield.model.root, mathfield.options) +\r\n            '</math>');\r\n        liveText = speakableText(mathfield.options, '', mathfield.model.root);\r\n        mathfield.keyboardDelegate.setAriaLabel('after: ' + liveText);\r\n        /*** FIX -- testing hack for setting braille ***/\r\n        // mathfield.accessibleNode.focus();\r\n        // console.log(\"before sleep\");\r\n        // sleep(1000).then(() => {\r\n        //     mathfield.textarea.focus();\r\n        //     console.log(\"after sleep\");\r\n        // });\r\n    }\r\n    else {\r\n        liveText = atoms\r\n            ? speakableText(mathfield.options, action + ' ', atoms)\r\n            : action;\r\n    }\r\n    // aria-live regions are only spoken when it changes; force a change by\r\n    // alternately using nonbreaking space or narrow nonbreaking space\r\n    const ariaLiveChangeHack = /\\u00a0/.test(mathfield.ariaLiveText.textContent)\r\n        ? ' \\u202f '\r\n        : ' \\u00a0 ';\r\n    mathfield.ariaLiveText.textContent = liveText + ariaLiveChangeHack;\r\n    // this.textarea.setAttribute('aria-label', liveText + ariaLiveChangeHack);\r\n}\r\n/* Returns the speech text of the next atom after the selection or\r\n *   an 'end of' phrasing based on what structure we are at the end of\r\n */\r\n// @revisit. Currently this = MathfieldPrivate, but it looks like model is enough\r\nfunction nextAtomSpeechText(mathfield, oldModel) {\r\n    function relation(parent, leaf) {\r\n        const EXPR_NAME = {\r\n            //    'array': 'should not happen',\r\n            numer: 'numerator',\r\n            denom: 'denominator',\r\n            index: 'index',\r\n            body: 'parent',\r\n            subscript: 'subscript',\r\n            superscript: 'superscript',\r\n        };\r\n        const PARENT_NAME = {\r\n            enclose: 'cross out',\r\n            leftright: 'fence',\r\n            surd: 'square root',\r\n            root: 'math field',\r\n        };\r\n        return leaf.relation === 'body'\r\n            ? PARENT_NAME[parent.type]\r\n            : EXPR_NAME[leaf.relation];\r\n    }\r\n    const oldPath = oldModel ? oldModel.path : [];\r\n    const path = mathfield.model.path;\r\n    const leaf = path[path.length - 1];\r\n    let result = '';\r\n    while (oldPath.length > path.length) {\r\n        result +=\r\n            'out of ' +\r\n                relation(oldModel.parent(), oldPath[oldPath.length - 1]) +\r\n                '; ';\r\n        oldPath.pop();\r\n    }\r\n    if (!selectionIsCollapsed(mathfield.model)) {\r\n        return speakableText(mathfield.options, '', getSelectedAtoms(mathfield.model));\r\n    }\r\n    // announce start of denominator, etc\r\n    const relationName = relation(mathfield.model.parent(), leaf);\r\n    if (leaf.offset === 0) {\r\n        result +=\r\n            (relationName ? 'start of ' + relationName : 'unknown') + ': ';\r\n    }\r\n    const atom = mathfield.model.sibling(Math.max(1, mathfield.model.extent));\r\n    if (atom) {\r\n        result += speakableText(mathfield.options, '', atom);\r\n    }\r\n    else if (leaf.offset !== 0) {\r\n        // don't say both start and end\r\n        result += relationName ? 'end of ' + relationName : 'unknown';\r\n    }\r\n    return result;\r\n}\n\nconst AUDIO_FEEDBACK_VOLUME = 0.5; // from 0.0 to 1.0\r\nconst NO_OP_LISTENER = () => {\r\n    return;\r\n};\r\nfunction loadSound(sound) {\r\n    if (typeof sound === 'string') {\r\n        const result = new Audio();\r\n        result.preload = 'none';\r\n        result.src = sound;\r\n        result.volume = AUDIO_FEEDBACK_VOLUME;\r\n        return result;\r\n    }\r\n    return sound;\r\n}\r\nfunction unloadSound(sound) {\r\n    if (sound instanceof HTMLAudioElement) {\r\n        sound.pause();\r\n        sound.removeAttribute('src');\r\n        sound.load();\r\n    }\r\n}\r\nfunction update(current, updates) {\r\n    const result = get(current, Object.keys(current));\r\n    Object.keys(updates).forEach((key) => {\r\n        var _a, _b, _c;\r\n        switch (key) {\r\n            case 'scriptDepth':\r\n                if (isArray(updates.scriptDepth)) {\r\n                    result.scriptDepth = [\r\n                        updates.scriptDepth[0],\r\n                        updates.scriptDepth[1],\r\n                    ];\r\n                }\r\n                else if (typeof updates.scriptDepth === 'number') {\r\n                    result.scriptDepth = [\r\n                        updates.scriptDepth,\r\n                        updates.scriptDepth,\r\n                    ];\r\n                }\r\n                else {\r\n                    throw Error('Unexpected value for scriptDepth');\r\n                }\r\n                break;\r\n            case 'namespace':\r\n                // Validate the namespace (used for `data-` attributes)\r\n                if (!/^[a-z]*[-]?$/.test(updates.namespace)) {\r\n                    throw Error('namespace must be a string of lowercase characters only');\r\n                }\r\n                if (!/-$/.test(updates.namespace)) {\r\n                    result.namespace = updates.namespace + '-';\r\n                }\r\n                else {\r\n                    result.namespace = updates.namespace;\r\n                }\r\n                break;\r\n            case 'locale':\r\n                result.locale =\r\n                    updates.locale === 'auto'\r\n                        ? (_a = navigator === null || navigator === void 0 ? void 0 : navigator.language.slice(0, 5)) !== null && _a !== void 0 ? _a : 'en' : updates.locale;\r\n                l10n.locale = result.locale;\r\n                break;\r\n            case 'strings':\r\n                l10n.merge(updates.strings);\r\n                result.strings = l10n.strings;\r\n                break;\r\n            case 'virtualKeyboardLayout':\r\n                if (updates.virtualKeyboardLayout === 'auto') {\r\n                    result.virtualKeyboardLayout = (_b = {\r\n                        fr: 'azerty',\r\n                        be: 'azerty',\r\n                        al: 'qwertz',\r\n                        ba: 'qwertz',\r\n                        cz: 'qwertz',\r\n                        de: 'qwertz',\r\n                        hu: 'qwertz',\r\n                        sk: 'qwertz',\r\n                        ch: 'qwertz',\r\n                    }[l10n.locale.substring(0, 2)]) !== null && _b !== void 0 ? _b : 'qwerty';\r\n                }\r\n                else {\r\n                    result.virtualKeyboardLayout =\r\n                        updates.virtualKeyboardLayout;\r\n                }\r\n                break;\r\n            case 'virtualKeyboardMode':\r\n                {\r\n                    const isTouchDevice = (_c = window.matchMedia) === null || _c === void 0 ? void 0 : _c.call(window, '(any-pointer: coarse)').matches;\r\n                    if (updates.virtualKeyboardMode === 'auto') {\r\n                        result.virtualKeyboardMode = isTouchDevice\r\n                            ? 'onfocus'\r\n                            : 'off';\r\n                    }\r\n                    else {\r\n                        result.virtualKeyboardMode =\r\n                            updates.virtualKeyboardMode;\r\n                    }\r\n                }\r\n                break;\r\n            case 'letterShapeStyle':\r\n                if (updates.letterShapeStyle === 'auto') {\r\n                    // Letter shape style (locale dependent)\r\n                    if (l10n.locale.substring(0, 2) === 'fr') {\r\n                        result.letterShapeStyle = 'french';\r\n                    }\r\n                    else {\r\n                        result.letterShapeStyle = 'tex';\r\n                    }\r\n                }\r\n                else {\r\n                    result.letterShapeStyle = updates.letterShapeStyle;\r\n                }\r\n                break;\r\n            case 'plonkSound':\r\n                unloadSound(result.plonkSound);\r\n                result.plonkSound = loadSound(updates.plonkSound);\r\n                break;\r\n            case 'keypressSound':\r\n                unloadSound(result.keypressSound);\r\n                if (typeof updates.keypressSound === 'string') {\r\n                    const sound = loadSound(updates.keypressSound);\r\n                    result.keypressSound = {\r\n                        delete: sound,\r\n                        return: sound,\r\n                        spacebar: sound,\r\n                        default: sound,\r\n                    };\r\n                }\r\n                else if (updates.keypressSound instanceof HTMLAudioElement) {\r\n                    result.keypressSound = {\r\n                        delete: updates.keypressSound,\r\n                        return: updates.keypressSound,\r\n                        spacebar: updates.keypressSound,\r\n                        default: updates.keypressSound,\r\n                    };\r\n                }\r\n                else {\r\n                    if (!updates.keypressSound.default) {\r\n                        throw Error('Missing keypressSound.default');\r\n                    }\r\n                    result.keypressSound = { ...updates.keypressSound };\r\n                    if (!result.keypressSound.return) {\r\n                        result.keypressSound.return =\r\n                            updates.keypressSound.default;\r\n                    }\r\n                    if (!result.keypressSound.spacebar) {\r\n                        result.keypressSound.spacebar =\r\n                            updates.keypressSound.default;\r\n                    }\r\n                    if (!result.keypressSound.delete) {\r\n                        result.keypressSound.delete =\r\n                            updates.keypressSound.default;\r\n                    }\r\n                }\r\n                break;\r\n            case 'onBlur':\r\n            case 'onFocus':\r\n            case 'onContentWillChange':\r\n            case 'onContentDidChange':\r\n            case 'onSelectionWillChange':\r\n            case 'onSelectionDidChange':\r\n            case 'onUndoStateWillChange':\r\n            case 'onUndoStateDidChange':\r\n            case 'onModeChange':\r\n            case 'onCommit':\r\n            case 'onVirtualKeyboardToggle':\r\n            case 'onReadAloudStatus':\r\n            case 'onError':\r\n                if (updates[key] === null) {\r\n                    result[key] = NO_OP_LISTENER;\r\n                }\r\n                else if (typeof updates[key] !== 'function') {\r\n                    throw Error(key + ' must be a function or null');\r\n                }\r\n                result[key] = updates[key];\r\n                break;\r\n            default:\r\n                if (isArray(updates[key])) {\r\n                    result[key] = [...updates[key]];\r\n                }\r\n                else if (typeof updates[key] === 'object') {\r\n                    result[key] = { ...updates[key] };\r\n                }\r\n                else {\r\n                    result[key] = updates[key];\r\n                }\r\n        }\r\n    });\r\n    // @revisit 1.0: for backward compatibility, interprets the overrideDefaultInlineShortcuts\r\n    // property\r\n    if (typeof updates.overrideDefaultInlineShortcuts !== 'undefined') {\r\n        if (updates.overrideDefaultInlineShortcuts) {\r\n            result.inlineShortcuts = updates.inlineShortcuts;\r\n        }\r\n        else {\r\n            result.inlineShortcuts = {\r\n                ...INLINE_SHORTCUTS,\r\n                ...updates.inlineShortcuts,\r\n            };\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction get(config, keys) {\r\n    let resolvedKeys;\r\n    if (typeof keys === 'string') {\r\n        resolvedKeys = [keys];\r\n    }\r\n    else if (typeof keys === 'undefined') {\r\n        resolvedKeys = Object.keys(config);\r\n    }\r\n    else {\r\n        resolvedKeys = keys;\r\n    }\r\n    const result = {};\r\n    resolvedKeys.forEach((x) => {\r\n        if (isArray(result[x])) {\r\n            result[x] = [...result[x]];\r\n        }\r\n        else if (typeof result[x] === 'object') {\r\n            result[x] = { ...result[x] };\r\n        }\r\n        else {\r\n            result[x] = config[x];\r\n        }\r\n    });\r\n    // If requested a single key, return its value\r\n    if (typeof keys === 'string') {\r\n        return result[keys];\r\n    }\r\n    return result;\r\n}\r\nfunction getDefault() {\r\n    return {\r\n        namespace: '',\r\n        substituteTextArea: undefined,\r\n        readOnly: false,\r\n        createHTML: (s) => s,\r\n        fontsDirectory: './fonts',\r\n        defaultMode: 'math',\r\n        macros: MACROS,\r\n        horizontalSpacingScale: 1.0,\r\n        letterShapeStyle: 'auto',\r\n        smartMode: false,\r\n        smartFence: true,\r\n        smartSuperscript: true,\r\n        scriptDepth: [Infinity, Infinity],\r\n        removeExtraneousParentheses: true,\r\n        ignoreSpacebarInMathMode: true,\r\n        locale: l10n.locale,\r\n        strings: l10n.strings,\r\n        keybindings: DEFAULT_KEYBINDINGS,\r\n        overrideDefaultInlineShortcuts: false,\r\n        inlineShortcuts: {},\r\n        inlineShortcutTimeout: 0,\r\n        virtualKeyboardToggleGlyph: `<span style=\"width: 21px; margin-top: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"/></svg></span>`,\r\n        virtualKeyboardMode: 'auto',\r\n        virtualKeyboards: 'all',\r\n        virtualKeyboardLayout: 'auto',\r\n        customVirtualKeyboardLayers: {},\r\n        customVirtualKeyboards: {},\r\n        virtualKeyboardTheme: /android|cros/i.test(navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)\r\n            ? 'material'\r\n            : 'apple',\r\n        keypressVibration: true,\r\n        keypressSound: null,\r\n        plonkSound: null,\r\n        textToSpeechRules: 'mathlive',\r\n        textToSpeechMarkup: '',\r\n        textToSpeechRulesOptions: {},\r\n        speechEngine: 'local',\r\n        speechEngineVoice: 'Joanna',\r\n        speechEngineRate: '100%',\r\n        speakHook: NO_OP_LISTENER,\r\n        readAloudHook: NO_OP_LISTENER,\r\n        onAnnounce: defaultAnnounceHook,\r\n        onKeystroke: () => true,\r\n        onMoveOutOf: () => true,\r\n        onTabOutOf: () => true,\r\n        onBlur: NO_OP_LISTENER,\r\n        onFocus: NO_OP_LISTENER,\r\n        onContentWillChange: NO_OP_LISTENER,\r\n        onContentDidChange: NO_OP_LISTENER,\r\n        onSelectionWillChange: NO_OP_LISTENER,\r\n        onSelectionDidChange: NO_OP_LISTENER,\r\n        onUndoStateWillChange: NO_OP_LISTENER,\r\n        onUndoStateDidChange: NO_OP_LISTENER,\r\n        onModeChange: NO_OP_LISTENER,\r\n        onVirtualKeyboardToggle: NO_OP_LISTENER,\r\n        onReadAloudStatus: NO_OP_LISTENER,\r\n        onCommit: NO_OP_LISTENER,\r\n        onError: () => {\r\n            return;\r\n        },\r\n    };\r\n}\n\n/**\r\n * Convert the atoms before the anchor to 'text' mode\r\n * @param count - how many atoms back to look at\r\n * @param {function} until - callback to indicate when to stop\r\n * @private\r\n */\r\nfunction convertLastAtomsToText(mathfield, count, until) {\r\n    if (typeof count === 'function') {\r\n        until = count;\r\n        count = Infinity;\r\n    }\r\n    if (typeof count === 'undefined') {\r\n        count = Infinity;\r\n    }\r\n    let i = 0;\r\n    let done = false;\r\n    while (!done) {\r\n        const atom = mathfield.model.sibling(i);\r\n        done =\r\n            count === 0 ||\r\n                !atom ||\r\n                atom.mode !== 'math' ||\r\n                !(/mord|textord|mpunct/.test(atom.type) ||\r\n                    (atom.type === 'mop' && /[a-zA-Z]+/.test(atom.body))) ||\r\n                Boolean(atom.superscript) ||\r\n                Boolean(atom.subscript) ||\r\n                (until && !until(atom));\r\n        if (!done) {\r\n            atom.applyStyle({ mode: 'text' });\r\n            atom.symbol = atom.body;\r\n            atom.latex = '';\r\n        }\r\n        i -= 1;\r\n        count -= 1;\r\n    }\r\n    contentDidChange(mathfield.model);\r\n}\r\n/**\r\n * Convert the atoms before the anchor to 'math' mode 'mord'\r\n * @param {number} count - how many atoms back to look at\r\n * @param {function} until - callback to indicate when to stop\r\n * @private\r\n */\r\nfunction convertLastAtomsToMath(mathfield, count, until) {\r\n    if (typeof count === 'function') {\r\n        until = count;\r\n        count = Infinity;\r\n    }\r\n    if (typeof count === 'undefined') {\r\n        count = Infinity;\r\n    }\r\n    let i = 0;\r\n    let done = false;\r\n    while (!done) {\r\n        const atom = mathfield.model.sibling(i);\r\n        done =\r\n            count === 0 ||\r\n                !atom ||\r\n                atom.mode !== 'text' ||\r\n                atom.body === ' ' ||\r\n                (until && !until(atom));\r\n        if (!done) {\r\n            atom.applyStyle({ mode: 'math' });\r\n        }\r\n        i -= 1;\r\n        count -= 1;\r\n    }\r\n    removeIsolatedSpace(mathfield);\r\n    contentDidChange(mathfield.model);\r\n}\r\n/**\r\n * Going backwards from the anchor, if a text zone consisting of a single\r\n * space character is found (i.e. it is surrounded by math zone),\r\n * remove it.\r\n */\r\nfunction removeIsolatedSpace(mathfield) {\r\n    let i = 0;\r\n    while (mathfield.model.sibling(i) &&\r\n        mathfield.model.sibling(i).mode === 'math') {\r\n        i -= 1;\r\n    }\r\n    // If the atom before the last one converted is a\r\n    // text mode space, preceded by a math mode atom,\r\n    // remove the space\r\n    if (mathfield.model.sibling(i) &&\r\n        mathfield.model.sibling(i).mode === 'text' &&\r\n        mathfield.model.sibling(i).body === ' ' &&\r\n        (!mathfield.model.sibling(i - 1) ||\r\n            mathfield.model.sibling(i - 1).mode === 'math')) {\r\n        mathfield.model.siblings().splice(i - 1, 1);\r\n        contentDidChange(mathfield.model);\r\n        // We need to adjust the selection after doing some surgery on the atoms list\r\n        // But we don't want to receive selection notification changes\r\n        // which could have a side effect of changing the mode :(\r\n        const save = mathfield.model.suppressChangeNotifications;\r\n        mathfield.model.suppressChangeNotifications = true;\r\n        setSelectionOffset(mathfield.model, mathfield.model.anchorOffset() - 1);\r\n        mathfield.model.suppressChangeNotifications = save;\r\n    }\r\n}\r\n/**\r\n * Return the characters before anchor that could potentially be turned\r\n * into text mode.\r\n * This excludes things like 'mop' (e.g. \\sin)\r\n */\r\nfunction getTextBeforeAnchor(mathfield) {\r\n    // Going backwards, accumulate\r\n    let result = '';\r\n    let i = 0;\r\n    let done = false;\r\n    while (!done) {\r\n        const atom = mathfield.model.sibling(i);\r\n        done = !(atom &&\r\n            ((atom.mode === 'text' && !atom.type) ||\r\n                (atom.mode === 'math' && /mord|textord|mpunct/.test(atom.type))));\r\n        if (!done) {\r\n            result = atom.body + result;\r\n        }\r\n        i -= 1;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Consider whether to switch mode give the content before the anchor\r\n * and the character being input\r\n *\r\n * @param keystroke\r\n * @param evt - a Event corresponding to the keystroke\r\n * @return true if the mode should change\r\n */\r\nfunction smartMode(mathfield, keystroke, evt) {\r\n    if (mathfield.smartModeSuppressed) {\r\n        return false;\r\n    }\r\n    if (mathfield.model.endOffset() < mathfield.model.siblings().length - 1) {\r\n        return false;\r\n    }\r\n    if (!evt || !mightProducePrintableCharacter(evt)) {\r\n        return false;\r\n    }\r\n    const c = eventToChar(evt);\r\n    if (!selectionIsCollapsed(mathfield.model)) {\r\n        // There is a selection\r\n        if (mathfield.mode === 'text') {\r\n            if (/[/_^]/.test(c)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    const context = getTextBeforeAnchor(mathfield) + c;\r\n    if (mathfield.mode === 'text') {\r\n        // We're in text mode. Should we switch to math?\r\n        if (keystroke === 'Esc' || /[/\\\\]/.test(c)) {\r\n            // If this is a command for a fraction,\r\n            // or the '\\' command mode key\r\n            // switch to 'math'\r\n            return true;\r\n        }\r\n        if (/[\\^_]/.test(c)) {\r\n            // If this is a superscript or subscript\r\n            // switch to 'math'\r\n            if (/(^|\\s)[a-zA-Z][^_]$/.test(context)) {\r\n                // If left hand context is a single letter,\r\n                // convert it to math\r\n                convertLastAtomsToMath(mathfield, 1);\r\n            }\r\n            return true;\r\n        }\r\n        // If this is a closing matching fence\r\n        // switch to 'math' mode\r\n        const lFence = { ')': '(', '}': '{', ']': '[' }[c];\r\n        if (lFence &&\r\n            mathfield.model.parent() &&\r\n            mathfield.model.parent().type === 'leftright' &&\r\n            mathfield.model.parent().leftDelim === lFence) {\r\n            return true;\r\n        }\r\n        if (/(^|[^a-zA-Z])(a|I)[ ]$/.test(context)) {\r\n            // Single letters that are valid words in the current language\r\n            // Do nothing. @todo: localization\r\n            return false;\r\n        }\r\n        if (/[$€£₤₺¥¤฿¢₡₧₨₹₩₱]/u.test(c)) {\r\n            // A currency symbol.\r\n            // Switch to math mode\r\n            return true;\r\n        }\r\n        if (/(^|[^a-zA-Z'’])[a-zA-Z][ ]$/.test(context)) {\r\n            // An isolated letter, followed by a space:\r\n            // Convert the letter to math, stay in text mode.\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return false;\r\n        }\r\n        if (/[^0-9]\\.[^0-9\\s]$/.test(context)) {\r\n            // A period followed by something other than space or a digit\r\n            // and not preceded by a digit.\r\n            // We thought this was a text period, but turns out it's not\r\n            // Turn it into a \\cdot\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            const atom = mathfield.model.sibling(0);\r\n            atom.body = '⋅'; // centered dot\r\n            atom.variant = 'normal'; // @revisit. Was 'auto'. Check for proper conversion.\r\n            atom.symbol = '\\\\cdot';\r\n            atom.latex = '';\r\n            return true;\r\n        }\r\n        if (/(^|\\s)[a-zA-Z][^a-zA-Z]$/.test(context)) {\r\n            // Single letter (x), followed by a non-letter (>, =...)\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/\\.[0-9]$/.test(context)) {\r\n            // If the new character is a digit,\r\n            // and it was preceded by a dot (which may have been converted\r\n            // to text)\r\n            // turn the dot back into 'math'\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/[(][0-9+\\-.]$/.test(context)) {\r\n            // An open paren followed by a number\r\n            // Turn the paren back to math and switch.\r\n            convertLastAtomsToMath(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/[(][a-z][,;]$/.test(context)) {\r\n            // An open paren followed by a single letter, then a \",\" or \";\"\r\n            // Turn the paren back and letter to math and switch.\r\n            convertLastAtomsToMath(mathfield, 2);\r\n            return true;\r\n        }\r\n        // The tests above can look behind and change what had previously\r\n        // been entered. Now, let's just look at the typed character.\r\n        if (/[0-9+\\-=><*|]$/.test(c)) {\r\n            // If this new character looks like a number,\r\n            // or a relational operator (=, <, >)\r\n            // or a \"*\" or \"|\"\r\n            // (note that <=, >=, etc... are handled separately as shortcuts)\r\n            // switch to 'math'\r\n            removeIsolatedSpace(mathfield);\r\n            return true;\r\n        }\r\n    }\r\n    else {\r\n        // We're in math mode. Should we switch to text?\r\n        if (keystroke === '[Space]') {\r\n            convertLastAtomsToText(mathfield, undefined, (a) => /[a-z][:,;.]$/.test(a.body));\r\n            return true;\r\n        }\r\n        if (/[a-zA-Z]{3,}$/.test(context) &&\r\n            !/(dxd|abc|xyz|uvw)$/.test(context)) {\r\n            // A sequence of three characters\r\n            // (except for some exceptions)\r\n            // Convert them to text.\r\n            convertLastAtomsToText(mathfield, undefined, (a) => /[a-zA-Z]/.test(a.body));\r\n            return true;\r\n        }\r\n        if (/(^|\\W)(if|If)$/i.test(context)) {\r\n            // @todo localization\r\n            convertLastAtomsToText(mathfield, 1);\r\n            return true;\r\n        }\r\n        if (/(\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9|[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5){3,}$/u.test(context) &&\r\n            !/(αβγ)$/.test(context)) {\r\n            // A sequence of three *greek* characters\r\n            // (except for one exception)\r\n            // Convert them to text.\r\n            convertLastAtomsToText(mathfield, undefined, (a) => /(:|,|;|.|\\u0393|\\u0394|\\u0398|\\u039b|\\u039E|\\u03A0|\\u03A3|\\u03a5|\\u03a6|\\u03a8|\\u03a9|[\\u03b1-\\u03c9]|\\u03d1|\\u03d5|\\u03d6|\\u03f1|\\u03f5)/u.test(a.body));\r\n            return true;\r\n        }\r\n        if (c === '?') {\r\n            // If the last character is a question mark,\r\n            // turn it to 'text'\r\n            return true;\r\n        }\r\n        if (c === '.' && !/[0-9-+]\\.$/.test(context)) {\r\n            // A period after something other than a digit (or minus)\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\nfunction showKeystroke(mathfield, keystroke) {\r\n    const vb = mathfield.keystrokeCaption;\r\n    if (vb && mathfield.keystrokeCaptionVisible) {\r\n        const bounds = mathfield.element.getBoundingClientRect();\r\n        vb.style.left = bounds.left + 'px';\r\n        vb.style.top = bounds.top - 64 + 'px';\r\n        vb.innerHTML = mathfield.options.createHTML('<span>' +\r\n            (getKeybindingMarkup(keystroke) || keystroke) +\r\n            '</span>' +\r\n            vb.innerHTML);\r\n        vb.style.visibility = 'visible';\r\n        setTimeout(function () {\r\n            if (vb.childNodes.length > 0) {\r\n                vb.removeChild(vb.childNodes[vb.childNodes.length - 1]);\r\n            }\r\n            if (vb.childNodes.length === 0) {\r\n                vb.style.visibility = 'hidden';\r\n            }\r\n        }, 3000);\r\n    }\r\n}\r\n/**\r\n * @param evt - An Event corresponding to the keystroke.\r\n */\r\nfunction onKeystroke(mathfield, keystroke, evt) {\r\n    // 1. Update the keybindings according to the current keyboard layout\r\n    // 1.1 Possibly update the current keyboard layout based on this event\r\n    validateKeyboardLayout(evt);\r\n    const activeLayout = getActiveKeyboardLayout();\r\n    if (mathfield.keyboardLayout !== activeLayout.id) {\r\n        // console.log('Switching to keyboard layout ' + activeLayout.id);\r\n        mathfield.keyboardLayout = activeLayout.id;\r\n        mathfield.keybindings = normalizeKeybindings(mathfield.options.keybindings, (e) => {\r\n            if (typeof mathfield.options.onError === 'function') {\r\n                mathfield.options.onError({\r\n                    code: 'invalid-keybinding',\r\n                    arg: e.join('\\n'),\r\n                });\r\n            }\r\n            console.log(e.join('\\n'));\r\n        });\r\n    }\r\n    // 2. Display the keystroke in the keystroke panel (if visible)\r\n    showKeystroke(mathfield, keystroke);\r\n    // 3. Reset the timer for the keystroke buffer reset\r\n    clearTimeout(mathfield.keystrokeBufferResetTimer);\r\n    // 4. Give a chance to the custom keystroke handler to intercept the event\r\n    if (mathfield.options.onKeystroke &&\r\n        !mathfield.options.onKeystroke(mathfield, keystroke, evt)) {\r\n        if (evt === null || evt === void 0 ? void 0 : evt.preventDefault) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n        return false;\r\n    }\r\n    // 5. Let's try to find a matching shortcut or command\r\n    let shortcut;\r\n    let stateIndex;\r\n    let selector;\r\n    let resetKeystrokeBuffer = false;\r\n    // 5.1 Check if the keystroke, prefixed with the previously typed keystrokes,\r\n    // would match a long shortcut (i.e. '~~')\r\n    // Ignore the key if command or control is pressed (it may be a keybinding,\r\n    // see 5.3)\r\n    if (mathfield.mode !== 'command' &&\r\n        (!evt || (!evt.ctrlKey && !evt.metaKey))) {\r\n        if (keystroke === '[Backspace]') {\r\n            // Special case for backspace\r\n            mathfield.keystrokeBuffer = mathfield.keystrokeBuffer.slice(0, -1);\r\n            mathfield.keystrokeBufferStates.pop();\r\n            mathfield.resetKeystrokeBuffer({ defer: true });\r\n        }\r\n        else if (!mightProducePrintableCharacter(evt)) {\r\n            // It was a non-alpha character (PageUp, End, etc...)\r\n            mathfield.resetKeystrokeBuffer();\r\n        }\r\n        else {\r\n            const c = eventToChar(evt);\r\n            // Find the longest substring that matches a shortcut\r\n            const candidate = mathfield.keystrokeBuffer + c;\r\n            let i = 0;\r\n            while (!shortcut && i < candidate.length) {\r\n                let siblings;\r\n                if (mathfield.keystrokeBufferStates[i]) {\r\n                    const iter = new ModelPrivate();\r\n                    iter.root = makeRoot('math', parseString(mathfield.keystrokeBufferStates[i].latex, mathfield.options.defaultMode, null, mathfield.options.macros));\r\n                    normalizeModel(iter);\r\n                    iter.selection =\r\n                        mathfield.keystrokeBufferStates[i].selection;\r\n                    siblings = iter.siblings();\r\n                }\r\n                else {\r\n                    siblings = mathfield.model.siblings();\r\n                }\r\n                shortcut = getInlineShortcut(siblings, candidate.slice(i), mathfield.options.inlineShortcuts);\r\n                i += 1;\r\n            }\r\n            stateIndex =\r\n                mathfield.keystrokeBufferStates.length - (candidate.length - i);\r\n            mathfield.keystrokeBuffer += c;\r\n            mathfield.keystrokeBufferStates.push(mathfield.getUndoRecord());\r\n            if (getInlineShortcutsStartingWith(candidate, mathfield.options)\r\n                .length <= 1) {\r\n                resetKeystrokeBuffer = true;\r\n            }\r\n            else {\r\n                mathfield.resetKeystrokeBuffer({ defer: true });\r\n            }\r\n        }\r\n    }\r\n    // 5.2. Should we switch mode?\r\n    // Need to check this before determing if there's a valid shortcut\r\n    // since if we switch to math mode, we may want to apply the shortcut\r\n    // e.g. \"slope = rise/run\"\r\n    if (mathfield.options.smartMode) {\r\n        const previousMode = mathfield.mode;\r\n        if (shortcut) {\r\n            // If we found a shortcut (e.g. \"alpha\"),\r\n            // switch to math mode and insert it\r\n            mathfield.mode = 'math';\r\n        }\r\n        else if (smartMode(mathfield, keystroke, evt)) {\r\n            mathfield.mode = { math: 'text', text: 'math' }[mathfield.mode];\r\n            selector = '';\r\n        }\r\n        // Notify of mode change\r\n        if (mathfield.mode !== previousMode &&\r\n            typeof mathfield.options.onModeChange === 'function') {\r\n            mathfield.options.onModeChange(mathfield, mathfield.mode);\r\n        }\r\n    }\r\n    // 5.3 Check if this matches a keybinding\r\n    // Need to check this **after** checking for inline shortcuts because\r\n    // shift+backquote is a keybinding that inserts \"\\~\"\", but \"~~\" is a\r\n    // shortcut for \"\\approx\" and needs to have priority over shift+backquote\r\n    if (!shortcut && !selector) {\r\n        selector = getCommandForKeybinding(mathfield.keybindings, mathfield.mode, keystroke);\r\n    }\r\n    if (!shortcut &&\r\n        !selector &&\r\n        (keystroke === '[Enter]' || keystroke === '[Return]')) {\r\n        // No matching keybinding: trigger a commit\r\n        if (typeof mathfield.options.onCommit === 'function') {\r\n            mathfield.options.onCommit(mathfield);\r\n            if (evt === null || evt === void 0 ? void 0 : evt.preventDefault) {\r\n                evt.preventDefault();\r\n                evt.stopPropagation();\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    // No shortcut :( We're done.\r\n    if (!shortcut && !selector) {\r\n        return true;\r\n    }\r\n    if (mathfield.options.readOnly && selector[0] === 'insert') {\r\n        return true;\r\n    }\r\n    //\r\n    // 6. Perform the action matching this selector or insert the shortcut\r\n    //\r\n    //\r\n    // 6.1 Remove any error indicator (wavy underline) on the current command\r\n    // sequence (if there are any)\r\n    //\r\n    decorateCommandStringAroundInsertionPoint(mathfield.model, false);\r\n    //\r\n    // 6.2 If we have a `moveAfterParent` selector (usually triggered with\r\n    // `spacebar), and we're at the end of a smart fence, close the fence with\r\n    // an empty (.) right delimiter\r\n    //\r\n    const parent = mathfield.model.parent();\r\n    if (selector === 'moveAfterParent' &&\r\n        parent &&\r\n        parent.type === 'leftright' &&\r\n        mathfield.model.endOffset() === mathfield.model.siblings().length - 1 &&\r\n        mathfield.options.smartFence &&\r\n        insertSmartFence(mathfield.model, '.', mathfield.style)) {\r\n        // Pressing the space bar (moveAfterParent selector) when at the end\r\n        // of a potential smartFence will close it as a semi-open fence\r\n        selector = '';\r\n        requestUpdate(mathfield); // Re-render the closed smartFence\r\n    }\r\n    //\r\n    // 6.3 If this is the Spacebar and we're just before or right after\r\n    // a text zone, insert the space inside the text zone\r\n    //\r\n    if (mathfield.mode === 'math' && keystroke === '[Spacebar]' && !shortcut) {\r\n        const nextSibling = mathfield.model.sibling(1);\r\n        const previousSibling = mathfield.model.sibling(-1);\r\n        if ((nextSibling && nextSibling.mode === 'text') ||\r\n            (previousSibling && previousSibling.mode === 'text')) {\r\n            insert(mathfield.model, ' ', { mode: 'text' });\r\n        }\r\n    }\r\n    //\r\n    // 6.4 If there's a selector, perform it.\r\n    //\r\n    if (selector) {\r\n        mathfield.executeCommand(selector);\r\n    }\r\n    else if (shortcut) {\r\n        //\r\n        // 6.5 Cancel the (upcoming) composition\r\n        // This is to prevent starting a composition when the keyboard event\r\n        // has already been handled.\r\n        // Example: alt+U -> \\cup, but could also be diaeresis deak key (¨) which\r\n        // starts a composition\r\n        //\r\n        mathfield.keyboardDelegate.cancelComposition();\r\n        //\r\n        // 6.6 Insert the shortcut\r\n        // If the shortcut is a mandatory escape sequence (\\}, etc...)\r\n        // don't make it undoable, this would result in syntactically incorrect\r\n        // formulas\r\n        //\r\n        const style = {\r\n            ...getAnchorStyle(mathfield.model),\r\n            ...mathfield.style,\r\n        };\r\n        if (!/^(\\\\{|\\\\}|\\\\[|\\\\]|\\\\@|\\\\#|\\\\$|\\\\%|\\\\^|\\\\_|\\\\backslash)$/.test(shortcut)) {\r\n            // To enable the substitution to be undoable,\r\n            // insert the character before applying the substitution\r\n            const saveMode = mathfield.mode;\r\n            insert(mathfield.model, eventToChar(evt), {\r\n                suppressChangeNotifications: true,\r\n                mode: mathfield.mode,\r\n                style: style,\r\n            });\r\n            // Create a snapshot with the inserted character\r\n            mathfield.snapshotAndCoalesce();\r\n            // Revert to the state before the beginning of the shortcut\r\n            // (restore doesn't change the undo stack)\r\n            mathfield.restoreToUndoRecord(mathfield.keystrokeBufferStates[stateIndex]);\r\n            mathfield.mode = saveMode;\r\n        }\r\n        const save = mathfield.model.suppressChangeNotifications;\r\n        mathfield.model.suppressChangeNotifications = true;\r\n        // Insert the substitute, possibly as a smart fence\r\n        insert(mathfield.model, shortcut, {\r\n            format: 'latex',\r\n            mode: mathfield.mode,\r\n            style: style,\r\n            smartFence: true,\r\n        });\r\n        // Check if as a result of the substitution there is now an isolated\r\n        // (text mode) space (surrounded by math). In which case, remove it.\r\n        removeIsolatedSpace(mathfield);\r\n        // Switch (back) to text mode if the shortcut ended with a space\r\n        if (shortcut.endsWith(' ')) {\r\n            mathfield.mode = 'text';\r\n            insert(mathfield.model, ' ', { mode: 'text', style: style });\r\n        }\r\n        mathfield.model.suppressChangeNotifications = save;\r\n        contentDidChange(mathfield.model);\r\n        selectionDidChange(mathfield.model);\r\n        mathfield.snapshot();\r\n        mathfield.dirty = true; // Mark the field as dirty. It will get rendered in scrollIntoView()\r\n        mathfield.model.announce('replacement');\r\n        // If we're done with the shortcuts (found a unique one), reset it.\r\n        if (resetKeystrokeBuffer) {\r\n            mathfield.resetKeystrokeBuffer();\r\n        }\r\n    }\r\n    //\r\n    // 7. Make sure the insertion point is scrolled into view\r\n    //\r\n    mathfield.scrollIntoView();\r\n    //\r\n    // 8. Keystroke has been handled, if it wasn't caught in the default\r\n    // case, so prevent propagation\r\n    //\r\n    if (evt === null || evt === void 0 ? void 0 : evt.preventDefault) {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * This handler is invoked when text has been typed, pasted in or input with\r\n * an input method. As a result, `text` can be a sequence of characters to\r\n * be inserted.\r\n * @param {string} text\r\n * @param {object} options\r\n * @param {boolean} options.focus - If true, the mathfield will be focused\r\n * @param {boolean} options.feedback - If true, provide audio and haptic feedback\r\n * @param {boolean} options.simulateKeystroke - If true, generate some synthetic\r\n * keystrokes (useful to trigger inline shortcuts, for example)\r\n * @param {boolean} options.commandMode - If true, switch to command mode if\r\n * necessary, then insert text\r\n * @private\r\n */\r\nfunction onTypedText(mathfield, text, options) {\r\n    if (mathfield.options.readOnly) {\r\n        mathfield.model.announce('plonk');\r\n        return;\r\n    }\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    // Focus, then provide audio and haptic feedback\r\n    if (options.focus) {\r\n        mathfield.focus();\r\n    }\r\n    if (options.feedback) {\r\n        if (mathfield.options.keypressVibration && (navigator === null || navigator === void 0 ? void 0 : navigator.vibrate)) {\r\n            navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\r\n        }\r\n        if (mathfield.keypressSound) {\r\n            mathfield.keypressSound.load();\r\n            mathfield.keypressSound.play().catch((err) => console.warn(err));\r\n        }\r\n    }\r\n    if (options.commandMode && mathfield.mode !== 'command') {\r\n        mathfield.switchMode('command');\r\n    }\r\n    // Remove any error indicator on the current command sequence\r\n    // (if there is one)\r\n    decorateCommandStringAroundInsertionPoint(mathfield.model, false);\r\n    if (options.simulateKeystroke) {\r\n        // for (const c of text) {\r\n        const c = text.charAt(0);\r\n        const ev = new KeyboardEvent('keypress', { key: c });\r\n        if (!onKeystroke(mathfield, c, ev)) {\r\n            return;\r\n        }\r\n        // }\r\n    }\r\n    // Insert the specified text at the current insertion point.\r\n    // If the selection is not collapsed, the content will be deleted first.\r\n    let popoverText = '';\r\n    let displayArrows = false;\r\n    const style = {\r\n        ...getAnchorStyle(mathfield.model),\r\n        ...mathfield.style,\r\n    };\r\n    // Decompose the string into an array of graphemes.\r\n    // This is necessary to correctly process what is displayed as a single\r\n    // glyph (a grapheme) but which is composed of multiple Unicode\r\n    // codepoints. This is the case in particular for some emojis, such as\r\n    // those with a skin tone modifier, the country flags emojis or\r\n    // compound emojis such as the professional emojis, including the\r\n    // David Bowie emoji: 👨🏻‍🎤\r\n    const graphemes = splitGraphemes(text);\r\n    for (const c of graphemes) {\r\n        if (mathfield.mode === 'command') {\r\n            removeSuggestion(mathfield.model);\r\n            mathfield.suggestionIndex = 0;\r\n            const command = extractCommandStringAroundInsertionPoint(mathfield.model);\r\n            const suggestions = suggest(command + c);\r\n            displayArrows = suggestions.length > 1;\r\n            if (suggestions.length === 0) {\r\n                insert(mathfield.model, c, { mode: 'command' });\r\n                if (/^\\\\[a-zA-Z\\\\*]+$/.test(command + c)) {\r\n                    // This looks like a command name, but not a known one\r\n                    decorateCommandStringAroundInsertionPoint(mathfield.model, true);\r\n                }\r\n                hidePopover(mathfield);\r\n            }\r\n            else {\r\n                insert(mathfield.model, c, { mode: 'command' });\r\n                if (suggestions[0].match !== command + c) {\r\n                    insertSuggestion(mathfield.model, suggestions[0].match, -suggestions[0].match.length + command.length + 1);\r\n                }\r\n                popoverText = suggestions[0].match;\r\n            }\r\n        }\r\n        else if (mathfield.mode === 'math') {\r\n            // Some characters are mapped to commands. Handle them here.\r\n            // This is important to handle synthetic text input and\r\n            // non-US keyboards, on which, fop example, the '^' key is\r\n            // not mapped to  'Shift-Digit6'.\r\n            const selector = {\r\n                '^': 'moveToSuperscript',\r\n                _: 'moveToSubscript',\r\n                ' ': 'moveAfterParent',\r\n            }[c];\r\n            if (selector) {\r\n                if (selector === 'moveToSuperscript') {\r\n                    if (superscriptDepth(mathfield) >=\r\n                        mathfield.options.scriptDepth[1]) {\r\n                        mathfield.model.announce('plonk');\r\n                        return;\r\n                    }\r\n                }\r\n                else if (selector === 'moveToSubscript') {\r\n                    if (subscriptDepth(mathfield) >=\r\n                        mathfield.options.scriptDepth[0]) {\r\n                        mathfield.model.announce('plonk');\r\n                        return;\r\n                    }\r\n                }\r\n                mathfield.executeCommand(selector);\r\n            }\r\n            else {\r\n                if (mathfield.options.smartSuperscript &&\r\n                    mathfield.model.relation() === 'superscript' &&\r\n                    /[0-9]/.test(c) &&\r\n                    mathfield.model.siblings().filter((x) => x.type !== 'first')\r\n                        .length === 0) {\r\n                    // We are inserting a digit into an empty superscript\r\n                    // If smartSuperscript is on, insert the digit, and\r\n                    // exit the superscript.\r\n                    insert(mathfield.model, c, {\r\n                        mode: 'math',\r\n                        style: style,\r\n                    });\r\n                    moveAfterParent(mathfield.model);\r\n                }\r\n                else {\r\n                    insert(mathfield.model, c, {\r\n                        mode: 'math',\r\n                        style: style,\r\n                        smartFence: mathfield.options.smartFence,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else if (mathfield.mode === 'text') {\r\n            insert(mathfield.model, c, { mode: 'text', style: style });\r\n        }\r\n    }\r\n    if (mathfield.mode !== 'command') {\r\n        mathfield.snapshotAndCoalesce();\r\n    }\r\n    // Mark the mathfield dirty\r\n    // (it will get rendered in scrollIntoView())\r\n    mathfield.dirty = true;\r\n    // Make sure the insertion point is visible\r\n    mathfield.scrollIntoView();\r\n    // Since the location of the popover depends on the position of the caret\r\n    // only show the popover after the formula has been rendered and the\r\n    // position of the caret calculated\r\n    showPopoverWithLatex(mathfield, popoverText, displayArrows);\r\n}\r\nfunction superscriptDepth(mathfield) {\r\n    let result = 0;\r\n    let i = 0;\r\n    let atom = mathfield.model.ancestor(i);\r\n    let wasSuperscript = false;\r\n    while (atom) {\r\n        if (atom.superscript || atom.subscript) {\r\n            result += 1;\r\n        }\r\n        if (atom.superscript) {\r\n            wasSuperscript = true;\r\n        }\r\n        else if (atom.subscript) {\r\n            wasSuperscript = false;\r\n        }\r\n        i += 1;\r\n        atom = mathfield.model.ancestor(i);\r\n    }\r\n    return wasSuperscript ? result : 0;\r\n}\r\nfunction subscriptDepth(mathfield) {\r\n    let result = 0;\r\n    let i = 0;\r\n    let atom = mathfield.model.ancestor(i);\r\n    let wasSubscript = false;\r\n    while (atom) {\r\n        if (atom.superscript || atom.subscript) {\r\n            result += 1;\r\n        }\r\n        if (atom.superscript) {\r\n            wasSubscript = false;\r\n        }\r\n        else if (atom.subscript) {\r\n            wasSubscript = true;\r\n        }\r\n        i += 1;\r\n        atom = mathfield.model.ancestor(i);\r\n    }\r\n    return wasSubscript ? result : 0;\r\n}\n\nregister$2({\r\n    undo: (mathfield) => {\r\n        complete(mathfield);\r\n        // Undo to the previous state\r\n        mathfield.undo();\r\n        return true;\r\n    },\r\n    redo: (mathfield) => {\r\n        complete(mathfield);\r\n        mathfield.redo();\r\n        return true;\r\n    },\r\n    scrollIntoView: (mathfield) => {\r\n        mathfield.scrollIntoView();\r\n        return true;\r\n    },\r\n    scrollToStart: (mathfield) => {\r\n        mathfield.field.scroll(0, 0);\r\n        return true;\r\n    },\r\n    scrollToEnd: (mathfield) => {\r\n        const fieldBounds = mathfield.field.getBoundingClientRect();\r\n        mathfield.field.scroll(fieldBounds.left - window.scrollX, 0);\r\n        return true;\r\n    },\r\n    enterCommandMode: (mathfield) => {\r\n        mathfield.switchMode('command');\r\n        return true;\r\n    },\r\n    toggleKeystrokeCaption: (mathfield) => {\r\n        mathfield.keystrokeCaptionVisible = !mathfield.keystrokeCaptionVisible;\r\n        mathfield.keystrokeCaption.innerHTML = '';\r\n        if (!mathfield.keystrokeCaptionVisible) {\r\n            mathfield.keystrokeCaption.style.visibility = 'hidden';\r\n        }\r\n        return false;\r\n    },\r\n    switchMode: (mathfield, mode) => {\r\n        mathfield.switchMode(mode);\r\n        return true;\r\n    },\r\n    insert: (mathfield, s, options) => mathfield.insert(s, options),\r\n    typedText: (mathfield, text) => {\r\n        onTypedText(mathfield, text);\r\n        return true;\r\n    },\r\n    commit: (mathfield) => {\r\n        if (typeof mathfield.options.onCommit === 'function') {\r\n            mathfield.options.onCommit(mathfield);\r\n        }\r\n        return true;\r\n    },\r\n});\n\nfunction applyStyle$4(mathfield, inStyle) {\r\n    mathfield.resetKeystrokeBuffer();\r\n    const style = validateStyle(inStyle);\r\n    if (style.mode) {\r\n        // There's a mode ('text', 'math', 'command') change\r\n        if (selectionIsCollapsed(mathfield.model)) {\r\n            // Nothing selected\r\n            mathfield.switchMode(style.mode);\r\n        }\r\n        else {\r\n            // Convert the selection from one mode to another\r\n            const previousMode = mathfield.mode;\r\n            const targetMode = (getAnchorMode(mathfield.model) ||\r\n                mathfield.options.defaultMode) === 'math'\r\n                ? 'text'\r\n                : 'math';\r\n            let convertedSelection = mathfield.getValue(mathfield.selection, 'ASCIIMath');\r\n            if (targetMode === 'math' && /^\"[^\"]+\"$/.test(convertedSelection)) {\r\n                convertedSelection = convertedSelection.slice(1, -1);\r\n            }\r\n            mathfield.insert(convertedSelection, {\r\n                mode: targetMode,\r\n                selectionMode: 'item',\r\n                format: targetMode === 'text' ? 'text' : 'ASCIIMath',\r\n            });\r\n            mathfield.mode = targetMode;\r\n            if (mathfield.model.groupIsSelected()) {\r\n                // The entire group was selected. Adjust parent mode if\r\n                // appropriate\r\n                const parent = mathfield.model.parent();\r\n                if (parent &&\r\n                    (parent.type === 'group' || parent.type === 'root')) {\r\n                    parent.mode = targetMode;\r\n                }\r\n            }\r\n            // Notify of mode change\r\n            if (mathfield.mode !== previousMode &&\r\n                typeof mathfield.options.onModeChange === 'function') {\r\n                mathfield.options.onModeChange(mathfield, mathfield.mode);\r\n            }\r\n        }\r\n        delete style.mode;\r\n    }\r\n    if (selectionIsCollapsed(mathfield.model)) {\r\n        // No selection, let's update the 'current' style\r\n        if (mathfield.style.fontSeries &&\r\n            style.fontSeries === mathfield.style.fontSeries) {\r\n            style.fontSeries = 'auto';\r\n        }\r\n        if (style.fontShape && style.fontShape === mathfield.style.fontShape) {\r\n            style.fontShape = 'auto';\r\n        }\r\n        if (style.color && style.color === mathfield.style.color) {\r\n            style.color = 'none';\r\n        }\r\n        if (style.backgroundColor &&\r\n            style.backgroundColor === mathfield.style.backgroundColor) {\r\n            style.backgroundColor = 'none';\r\n        }\r\n        if (style.fontSize && style.fontSize === mathfield.style.fontSize) {\r\n            style.fontSize = 'auto';\r\n        }\r\n        mathfield.style = { ...mathfield.style, ...style };\r\n        // This style will be used the next time an atom is inserted\r\n    }\r\n    else {\r\n        // Change the style of the selection\r\n        applyStyle$3(mathfield.model, style);\r\n        mathfield.snapshot();\r\n    }\r\n    return true;\r\n}\r\nregister$2({ applyStyle: applyStyle$4 }, { target: 'mathfield' });\r\n/**\r\n * Validate a style specification object\r\n */\r\nfunction validateStyle(style) {\r\n    const result = {};\r\n    if (typeof style.mode === 'string') {\r\n        result.mode = style.mode.toLowerCase();\r\n        console.assert(result.mode === 'math' ||\r\n            result.mode === 'text' ||\r\n            result.mode === 'command');\r\n    }\r\n    if (typeof style.color === 'string') {\r\n        result.color = style.color;\r\n    }\r\n    if (typeof style.backgroundColor === 'string') {\r\n        result.backgroundColor = style.backgroundColor;\r\n    }\r\n    if (typeof style.fontFamily === 'string') {\r\n        result.fontFamily = style.fontFamily;\r\n    }\r\n    if (typeof style.series === 'string') {\r\n        result.fontSeries = style.series;\r\n    }\r\n    if (typeof style.fontSeries === 'string') {\r\n        result.fontSeries = style.fontSeries.toLowerCase();\r\n    }\r\n    if (result.fontSeries) {\r\n        result.fontSeries =\r\n            {\r\n                bold: 'b',\r\n                medium: 'm',\r\n                normal: 'm',\r\n            }[result.fontSeries] || result.fontSeries;\r\n    }\r\n    if (typeof style.shape === 'string') {\r\n        result.fontShape = style.shape;\r\n    }\r\n    if (typeof style.fontShape === 'string') {\r\n        result.fontShape = style.fontShape.toLowerCase();\r\n    }\r\n    if (result.fontShape) {\r\n        result.fontShape =\r\n            {\r\n                italic: 'it',\r\n                up: 'n',\r\n                upright: 'n',\r\n                normal: 'n',\r\n            }[result.fontShape] || result.fontShape;\r\n    }\r\n    if (typeof style.size === 'string') {\r\n        result.fontSize = style.size;\r\n    }\r\n    else if (typeof style.size === 'number') {\r\n        result.fontSize = 'size' + Math.min(0, Math.max(10, style.size));\r\n    }\r\n    if (typeof style.fontSize === 'string') {\r\n        result.fontSize = style.fontSize.toLowerCase();\r\n    }\r\n    if (result.fontSize) {\r\n        result.fontSize =\r\n            {\r\n                tiny: 'size1',\r\n                scriptsize: 'size2',\r\n                footnotesize: 'size3',\r\n                small: 'size4',\r\n                normal: 'size5',\r\n                normalsize: 'size5',\r\n                large: 'size6',\r\n                Large: 'size7',\r\n                LARGE: 'size8',\r\n                huge: 'size9',\r\n                Huge: 'size10',\r\n            }[result.fontSize] || result.fontSize;\r\n    }\r\n    return result;\r\n}\n\nfunction onPaste(mathfield, ev) {\r\n    let text = '';\r\n    // Try to get a MathJSON data type\r\n    const json = ev.clipboardData.getData('application/json');\r\n    if (json) {\r\n        try {\r\n            text = astToLatex(json, {});\r\n        }\r\n        catch (e) {\r\n            text = '';\r\n        }\r\n    }\r\n    // If that didn't work, try some plain text\r\n    if (!text) {\r\n        text = ev.clipboardData.getData('text/plain');\r\n    }\r\n    if (text) {\r\n        insert(mathfield.model, text, {\r\n            smartFence: mathfield.options.smartFence,\r\n            mode: 'math',\r\n        });\r\n        requestUpdate(mathfield);\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n    }\r\n    return true;\r\n}\r\nfunction onCut(mathfield) {\r\n    // Clearing the selection will have the side effect of clearing the\r\n    // content of the textarea. However, the textarea value is what will\r\n    // be copied to the clipboard, so defer the clearing of the selection\r\n    // to later, after the cut operation has been handled.\r\n    setTimeout(function () {\r\n        mathfield.$clearSelection();\r\n        requestUpdate(mathfield);\r\n    }.bind(mathfield), 0);\r\n    return true;\r\n}\r\nfunction onCopy(mathfield, e) {\r\n    if (selectionIsCollapsed(mathfield.model)) {\r\n        e.clipboardData.setData('text/plain', '$$' + mathfield.getValue('latex-expanded') + '$$');\r\n        e.clipboardData.setData('application/json', mathfield.getValue('json'));\r\n        e.clipboardData.setData('application/xml', mathfield.getValue('mathML'));\r\n    }\r\n    else {\r\n        e.clipboardData.setData('text/plain', '$$' +\r\n            mathfield.getValue(mathfield.selection, 'latex-expanded') +\r\n            '$$');\r\n        e.clipboardData.setData('application/json', mathfield.getValue(mathfield.selection, 'json'));\r\n        e.clipboardData.setData('application/xml', mathfield.getValue(mathfield.selection, 'mathML'));\r\n    }\r\n    // Prevent the current document selection from being written to the clipboard.\r\n    e.preventDefault();\r\n}\r\nregister$2({\r\n    copyToClipboard: (mathfield) => {\r\n        mathfield.focus();\r\n        // If the selection is empty, select the entire field before\r\n        // copying it.\r\n        if (selectionIsCollapsed(mathfield.model)) {\r\n            mathfield.select();\r\n        }\r\n        document.execCommand('copy');\r\n        return false;\r\n    },\r\n    cutToClipboard: (mathfield) => {\r\n        mathfield.focus();\r\n        document.execCommand('cut');\r\n        return true;\r\n    },\r\n    pasteFromClipboard: (mathfield) => {\r\n        mathfield.focus();\r\n        document.execCommand('paste');\r\n        return true;\r\n    },\r\n}, { target: 'mathfield', category: 'clipboard' });\n\nlet gLastTap;\r\nlet gTapCount = 0;\r\nfunction onPointerDown(mathfield, evt) {\r\n    const that = mathfield;\r\n    let anchor;\r\n    let trackingPointer = false;\r\n    let trackingWords = false;\r\n    let dirty = false;\r\n    // If a mouse button other than the main one was pressed, return.\r\n    // On iOS 12.4 Safari and Firefox on Android (which do not support\r\n    // PointerEvent) the touchstart event is sent with event.buttons = 0\r\n    // which for a mouse event would normally be an\r\n    // invalid button. Accept this button 0.\r\n    if (evt.buttons !== 1 && evt.buttons !== 0) {\r\n        return;\r\n    }\r\n    let scrollLeft = false;\r\n    let scrollRight = false;\r\n    // Note: evt['touches'] is for touchstart (when PointerEvent is not supported)\r\n    const anchorX = evt['touches'] ? evt['touches'][0].clientX : evt.clientX;\r\n    const anchorY = evt['touches'] ? evt['touches'][0].clientY : evt.clientY;\r\n    const anchorTime = Date.now();\r\n    const scrollInterval = setInterval(() => {\r\n        if (scrollLeft) {\r\n            that.field.scroll({ top: 0, left: that.field.scrollLeft - 16 });\r\n        }\r\n        else if (scrollRight) {\r\n            that.field.scroll({ top: 0, left: that.field.scrollLeft + 16 });\r\n        }\r\n    }, 32);\r\n    function endPointerTracking(evt) {\r\n        if (window.PointerEvent) {\r\n            off(that.field, 'pointermove', onPointerMove);\r\n            off(that.field, 'pointerup pointercancel', endPointerTracking);\r\n            // off(window, 'pointermove', onPointerMove);\r\n            // off(window, 'pointerup blur', endPointerTracking);\r\n            that.field.releasePointerCapture(evt.pointerId);\r\n        }\r\n        else {\r\n            off(that.field, 'touchmove', onPointerMove);\r\n            off(that.field, 'touchcancel touchend', endPointerTracking);\r\n            off(window, 'mousemove', onPointerMove);\r\n            off(window, 'mouseup blur', endPointerTracking);\r\n        }\r\n        trackingPointer = false;\r\n        clearInterval(scrollInterval);\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n    function onPointerMove(evt) {\r\n        const x = evt['touches'] ? evt['touches'][0].clientX : evt.clientX;\r\n        const y = evt['touches'] ? evt['touches'][0].clientY : evt.clientY;\r\n        // Ignore events that are within small spatial and temporal bounds\r\n        // of the pointer down\r\n        const hysteresis = evt.pointerType === 'touch' ? 20 : 5;\r\n        if (Date.now() < anchorTime + 500 &&\r\n            Math.abs(anchorX - x) < hysteresis &&\r\n            Math.abs(anchorY - y) < hysteresis) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n            return;\r\n        }\r\n        const fieldBounds = that.field.getBoundingClientRect();\r\n        scrollRight = x > fieldBounds.right;\r\n        scrollLeft = x < fieldBounds.left;\r\n        let actualAnchor = anchor;\r\n        if (window.PointerEvent) {\r\n            if (!evt.isPrimary) {\r\n                actualAnchor = pathFromPoint(that, evt.clientX, evt.clientY, {\r\n                    bias: 0,\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (evt['touches'] && evt['touches'].length === 2) {\r\n                actualAnchor = pathFromPoint(that, evt['touches'][1].clientX, evt['touches'][1].clientY, { bias: 0 });\r\n            }\r\n        }\r\n        const focus = pathFromPoint(that, x, y, {\r\n            bias: x <= anchorX ? (x === anchorX ? 0 : -1) : +1,\r\n        });\r\n        if (focus &&\r\n            setRange(that.model, actualAnchor, focus, {\r\n                extendToWordBoundary: trackingWords,\r\n            })) {\r\n            // Re-render if the range has actually changed\r\n            requestUpdate(mathfield);\r\n        }\r\n        // Prevent synthetic mouseMove event when this is a touch event\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n    // Calculate the tap count\r\n    if (gLastTap &&\r\n        Math.abs(gLastTap.x - anchorX) < 5 &&\r\n        Math.abs(gLastTap.y - anchorY) < 5 &&\r\n        Date.now() < gLastTap.time + 500) {\r\n        gTapCount += 1;\r\n        gLastTap.time = anchorTime;\r\n    }\r\n    else {\r\n        gLastTap = {\r\n            x: anchorX,\r\n            y: anchorY,\r\n            time: anchorTime,\r\n        };\r\n        gTapCount = 1;\r\n    }\r\n    const bounds = mathfield.field.getBoundingClientRect();\r\n    if (anchorX >= bounds.left &&\r\n        anchorX <= bounds.right &&\r\n        anchorY >= bounds.top &&\r\n        anchorY <= bounds.bottom) {\r\n        // Focus the mathfield\r\n        if (!mathfield.hasFocus()) {\r\n            dirty = true;\r\n            mathfield.keyboardDelegate.focus();\r\n        }\r\n        // Clicking or tapping the field resets the keystroke buffer and\r\n        // smart mode\r\n        mathfield.resetKeystrokeBuffer();\r\n        mathfield.smartModeSuppressed = false;\r\n        const wrapperBounds = mathfield.field\r\n            .querySelector('.ML__mathlive')\r\n            .getBoundingClientRect();\r\n        if (anchorX > wrapperBounds.right) {\r\n            // If outside the bounds of the rendered formula,\r\n            // set the anchor to the last element of the root\r\n            anchor = [\r\n                {\r\n                    relation: 'body',\r\n                    offset: mathfield.model.root.body.length - 1,\r\n                },\r\n            ];\r\n        }\r\n        else {\r\n            anchor = pathFromPoint(mathfield, anchorX, anchorY, { bias: 0 });\r\n        }\r\n        if (anchor) {\r\n            // Set a `tracking` class to avoid triggering the hover of the virtual\r\n            // keyboard toggle, for example\r\n            mathfield.element.classList.add('tracking');\r\n            if (evt.shiftKey) {\r\n                // Extend the selection if the shift-key is down\r\n                setRange(mathfield.model, mathfield.model.path, anchor);\r\n                anchor = clone(mathfield.model.path);\r\n                anchor[anchor.length - 1].offset -= 1;\r\n            }\r\n            else {\r\n                setPath(mathfield.model, anchor, 0);\r\n            }\r\n            // The selection has changed, so we'll need to re-render\r\n            dirty = true;\r\n            // Reset any user-specified style\r\n            mathfield.style = {};\r\n            // evt.detail contains the number of consecutive clicks\r\n            // for double-click, triple-click, etc...\r\n            // (note that evt.detail is not set when using pointerEvent)\r\n            if (evt.detail === 3 || gTapCount > 2) {\r\n                endPointerTracking(evt);\r\n                if (evt.detail === 3 || gTapCount === 3) {\r\n                    // This is a triple-click\r\n                    selectAll(mathfield.model);\r\n                }\r\n            }\r\n            else if (!trackingPointer) {\r\n                trackingPointer = true;\r\n                if (window.PointerEvent) {\r\n                    on(that.field, 'pointermove', onPointerMove);\r\n                    on(that.field, 'pointerup pointercancel', endPointerTracking);\r\n                    that.field.setPointerCapture(evt.pointerId);\r\n                }\r\n                else {\r\n                    on(window, 'blur', endPointerTracking);\r\n                    if (evt['touches']) {\r\n                        // This is a touchstart event (and PointerEvent is not supported)\r\n                        // To receive the subsequent touchmove/touch, need to\r\n                        // listen to this evt.target.\r\n                        // This was a touch event\r\n                        on(evt.target, 'touchmove', onPointerMove);\r\n                        on(evt.target, 'touchcancel touchend', endPointerTracking);\r\n                    }\r\n                    else {\r\n                        on(window, 'mousemove', onPointerMove);\r\n                        on(window, 'mouseup', endPointerTracking);\r\n                    }\r\n                }\r\n                if (evt.detail === 2 || gTapCount === 2) {\r\n                    // This is a double-click\r\n                    trackingWords = true;\r\n                    selectGroup(mathfield.model);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        gLastTap = null;\r\n    }\r\n    if (dirty) {\r\n        requestUpdate(mathfield);\r\n    }\r\n    // Prevent the browser from handling, in particular when this is a\r\n    // touch event prevent the synthetic mouseDown event from being generated\r\n    evt.preventDefault();\r\n}\r\n/**\r\n * Return a tuple of an element and a distance from point (x, y)\r\n */\r\nfunction nearestElementFromPoint(el, x, y) {\r\n    let result = { element: null, distance: Number.POSITIVE_INFINITY };\r\n    // This element may not have a matching atom, but its children might\r\n    let considerChildren = true;\r\n    if (el.getAttribute('data-atom-id')) {\r\n        result.element = el;\r\n        // Calculate the (square of the) distance to the rectangle\r\n        const r = el.getBoundingClientRect();\r\n        const dx = x - (r.left + r.right) / 2;\r\n        const dy = y - (r.top + r.bottom) / 2;\r\n        result.distance = dx * dx + dy * dy;\r\n        // Only consider children if the target is inside the (horizontal)\r\n        // bounds of the element.\r\n        // This avoid searching the numerator/denominator when a fraction\r\n        // is the last element in the formula.\r\n        considerChildren = x >= r.left && x <= r.right;\r\n    }\r\n    if (considerChildren && el.children) {\r\n        for (const child of el.children) {\r\n            const nearest = nearestElementFromPoint(child, x, y);\r\n            if (nearest.element && nearest.distance <= result.distance) {\r\n                result = nearest;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param options.bias  if 0, the midpoint of the bounding box\r\n * is considered to return the sibling. If <0, the left sibling is\r\n * favored, if >0, the right sibling\r\n */\r\nfunction pathFromPoint(mathfield, x, y, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    options.bias = (_a = options.bias) !== null && _a !== void 0 ? _a : 0;\r\n    // Try to find the deepest element that is near the point that was\r\n    // clicked on (the point could be outside of the element)\r\n    const nearest = nearestElementFromPoint(mathfield.field, x, y);\r\n    const el = nearest.element;\r\n    const id = el ? el.getAttribute('data-atom-id') : null;\r\n    if (!id)\r\n        return undefined;\r\n    // Let's find the atom that has a matching ID with the element that\r\n    // was clicked on (or near)\r\n    const paths = filter(mathfield.model, (atom) => {\r\n        // If the atom allows children to be selected, match only if\r\n        // the ID of  the atom matches the one we're looking for.\r\n        if (!atom.captureSelection) {\r\n            return atom.id === id;\r\n        }\r\n        // If the atom does not allow children to be selected\r\n        // (captureSelection === true), the element matches if any of\r\n        // its children has an ID that matches.\r\n        let found = false;\r\n        atom.forEach((x) => {\r\n            if (x.id === id)\r\n                found = true;\r\n        });\r\n        return found;\r\n    });\r\n    if (!paths || paths.length === 0)\r\n        return undefined;\r\n    // (There should be exactly one atom that matches this ID...)\r\n    // Set the result to the path to this atom\r\n    const result = pathFromString(paths[0]).path;\r\n    if (options.bias === 0) {\r\n        // If the point clicked is to the left of the vertical midline,\r\n        // adjust the path to *before* the atom (i.e. after the\r\n        // preceding atom)\r\n        const bounds = el.getBoundingClientRect();\r\n        if (x < bounds.left + bounds.width / 2 &&\r\n            !el.classList.contains('ML__placeholder')) {\r\n            result[result.length - 1].offset = Math.max(0, result[result.length - 1].offset - 1);\r\n        }\r\n    }\r\n    else if (options.bias < 0) {\r\n        result[result.length - 1].offset = Math.min(mathfield.model.siblings().length - 1, Math.max(0, result[result.length - 1].offset + options.bias));\r\n    }\r\n    return result;\r\n}\n\nvar css_248z = \".ML__keyboard{--keyboard-background:rgba(209,213,217,0.97);--keyboard-text:#000;--keyboard-text-active:var(--primary,hsl(var(--hue,212),40%,50%));--keyboard-background-border:#ddd;--keycap-background:#fff;--keycap-background-active:#e5e5e5;--keycap-background-border:#e5e6e9;--keycap-background-border-bottom:#8d8f92;--keycap-text:#000;--keycap-text-active:#fff;--keycap-secondary-text:#000;--keycap-modifier-background:#b9bdc7;--keycap-modifier-border:#c5c9d0;--keycap-modifier-border-bottom:#989da6;--keyboard-alternate-background:#fff;--keyboard-alternate-background-active:#e5e5e5;--keyboard-alternate-text:#000;position:fixed;left:0;bottom:-267px;width:100vw;z-index:var(--keyboard-zindex,105);padding-top:5px;transform:translate(0);opacity:0;visibility:hidden;transition:.28s cubic-bezier(0,0,.2,1);transition-property:transform,opacity;-webkit-backdrop-filter:grayscale(50%);backdrop-filter:grayscale(50%);background-color:var(--keyboard-background);border:1px solid var(--keyboard-background-border);font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:16px;font-weight:400;margin:0;text-shadow:none;box-sizing:border-box;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.ML__keyboard.is-visible{transform:translateY(-267px);opacity:1;visibility:visible;transition-timing-function:cubic-bezier(.4,0,1,1)}.ML__keyboard .tex{font-family:KaTeX_Main,Cambria Math,Asana Math,OpenSymbol,Symbola,STIX,Times,serif!important}.ML__keyboard .tex-math{font-family:KaTeX_Math,Cambria Math,Asana Math,OpenSymbol,Symbola,STIX,Times,serif!important}.ML__keyboard .tt{font-family:IBM Plex Mono,Source Code Pro,Consolas,Roboto Mono,Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Courier,monospace!important;font-size:30px;font-weight:400}.ML__keyboard.alternate-keys{visibility:hidden;max-width:286px;background-color:var(--keyboard-alternate-background);text-align:center;border-radius:6px;position:fixed;bottom:auto;top:0;box-sizing:content-box;transform:none;z-index:calc(var(--keyboard-zindex, 105) + 1);display:flex;flex-direction:row;justify-content:center;align-content:center;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);transition:none}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys{max-width:320px}}.ML__keyboard.alternate-keys.is-visible{visibility:visible}.ML__keyboard.alternate-keys ul{list-style:none;margin:3px;padding:0;display:flex;flex-flow:row wrap-reverse;justify-content:center}.ML__keyboard.alternate-keys ul>li{display:flex;flex-flow:column;align-items:center;justify-content:center;font-size:30px;height:70px;width:70px;box-sizing:border-box;margin:0;background:transparent;border:1px solid transparent;border-radius:5px;pointer-events:all;color:var(--keyboard-alternate-text);fill:currentColor}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys ul>li{font-size:24px;height:50px;width:50px}}.ML__keyboard.alternate-keys ul>li.active,.ML__keyboard.alternate-keys ul>li.pressed,.ML__keyboard.alternate-keys ul>li:hover{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);background:var(--keyboard-alternate-background-active);color:var(--keyboard-text-active)}.ML__keyboard.alternate-keys ul>li.small{font-size:18px}.ML__keyboard.alternate-keys ul>li.small-button{width:42px;height:42px;margin:2px;background:#fbfbfb}.ML__keyboard.alternate-keys ul>li.small-button:hover{background:var(--keyboard-alternate-background-active)}.ML__keyboard.alternate-keys ul>li.box>div,.ML__keyboard.alternate-keys ul>li.box>span{border:1px dashed rgba(0,0,0,.24)}.ML__keyboard.alternate-keys ul>li .warning{min-height:60px;min-width:60px;background:#cd0030;color:#fff;padding:5px;display:flex;align-items:center;justify-content:center;border-radius:5px}.ML__keyboard.alternate-keys ul>li .warning.active,.ML__keyboard.alternate-keys ul>li .warning.pressed,.ML__keyboard.alternate-keys ul>li .warning:hover{background:red}.ML__keyboard.alternate-keys ul>li .warning svg{width:50px;height:50px}.ML__keyboard.alternate-keys ul>li aside{font-size:12px;line-height:12px;opacity:.78;padding-top:2px}.ML__keyboard>div.keyboard-layer{display:none;outline:none}.ML__keyboard>div.keyboard-layer.is-visible{display:flex;flex-flow:column}.ML__keyboard>div>div.keyboard-toolbar{align-self:center;display:flex;flex-flow:row;justify-content:space-between;width:736px}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard>div>div.keyboard-toolbar{width:556px}}@media only screen and (max-width:767px){.ML__keyboard>div>div.keyboard-toolbar{width:365px;max-width:100vw}}.ML__keyboard>div>div.keyboard-toolbar svg{height:20px;width:20px}@media only screen and (max-width:767px){.ML__keyboard>div>div.keyboard-toolbar svg{height:13px;width:17px}}.ML__keyboard>div>div.keyboard-toolbar>.left{position:relative;display:flex;justify-content:flex-start;flex-flow:row}.ML__keyboard>div>div.keyboard-toolbar>.right{display:flex;justify-content:flex-end;flex-flow:row}.ML__keyboard>div>div.keyboard-toolbar>div>div{display:flex;align-items:baseline;justify-content:center;pointer-events:all;color:var(--keyboard-text);fill:currentColor;background:0;font-size:110%;cursor:pointer;min-height:0;padding:4px 10px;margin:7px 4px 6px;box-shadow:none;border:none;border-bottom:2px solid transparent}.ML__keyboard>div>div.keyboard-toolbar>div>div.disabled.pressed svg,.ML__keyboard>div>div.keyboard-toolbar>div>div.disabled:hover svg,.ML__keyboard>div>div.keyboard-toolbar>div>div.disabled svg{color:var(--keyboard-text);opacity:.2}@media only screen and (max-width:414px){.ML__keyboard>div>div.keyboard-toolbar>div>div{font-size:100%;padding:0 6px 0 0}}@media only screen and (max-width:767px){.ML__keyboard>div>div.keyboard-toolbar>div>div{padding-left:4px;padding-right:4px;font-size:90%}}.ML__keyboard>div>div.keyboard-toolbar>div>div.active,.ML__keyboard>div>div.keyboard-toolbar>div>div.pressed,.ML__keyboard>div>div.keyboard-toolbar>div>div:active,.ML__keyboard>div>div.keyboard-toolbar>div>div:hover{color:var(--keyboard-text-active)}.ML__keyboard>div>div.keyboard-toolbar>div>div.selected{color:var(--keyboard-text-active);border-bottom:2px solid var(--keyboard-text-active);margin-bottom:8px;padding-bottom:0}.ML__keyboard div .rows{border:0;border-collapse:separate;clear:both;margin:auto;display:flex;flex-flow:column;align-items:center}.ML__keyboard div .rows>ul{list-style:none;height:40px;margin:0 0 3px;padding:0}.ML__keyboard div .rows>ul>li{display:flex;flex-flow:column;align-items:center;justify-content:center;width:34px;margin-right:2px;height:40px;box-sizing:border-box;padding:8px 0;vertical-align:top;text-align:center;float:left;color:var(--keycap-text);fill:currentColor;font-size:20px;background:var(--keycap-background);border:1px solid var(--keycap-background-border);border-bottom-color:var(--keycap-background-border-bottom);border-radius:5px;pointer-events:all;position:relative;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ML__keyboard div .rows>ul>li:last-child{margin-right:0}.ML__keyboard div .rows>ul>li.small{font-size:16px}.ML__keyboard div .rows>ul>li.tt{color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.bottom{justify-content:flex-end}.ML__keyboard div .rows>ul>li.left{align-items:flex-start;padding-left:4px}.ML__keyboard div .rows>ul>li.right{align-items:flex-end;padding-right:4px}.ML__keyboard div .rows>ul>li svg{width:20px;height:20px}.ML__keyboard div .rows>ul>li .warning{height:25px;width:25px;min-height:25px;min-width:25px;background:#cd0030;color:#fff;border-radius:100%;padding:5px;display:flex;align-items:center;justify-content:center;margin-bottom:-2px}.ML__keyboard div .rows>ul>li .warning svg{width:16px;height:16px}@media only screen and (max-width:768px){.ML__keyboard div .rows>ul>li .warning{height:16px;width:16px;min-height:16px;min-width:16px}.ML__keyboard div .rows>ul>li .warning svg{width:14px;height:14px}}.ML__keyboard div .rows>ul>li>.w0{width:0}.ML__keyboard div .rows>ul>li>.w5{width:16px}.ML__keyboard div .rows>ul>li>.w15{width:52px}.ML__keyboard div .rows>ul>li>.w20{width:70px}.ML__keyboard div .rows>ul>li>.w50{width:178px}.ML__keyboard div .rows>ul>li.separator{background:transparent;border:none;pointer-events:none}@media only screen and (max-width:560px){.ML__keyboard div .rows>ul>li.if-wide{display:none}}.ML__keyboard div .rows>ul>li.tex-math{font-size:25px}.ML__keyboard div .rows>ul>li.pressed,.ML__keyboard div .rows>ul>li:hover{background:var(--keycap-background-active);color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.action.active,.ML__keyboard div .rows>ul>li.action:active,.ML__keyboard div .rows>ul>li.keycap.active,.ML__keyboard div .rows>ul>li.keycap:active{transform:translateY(-20px) scale(1.4);z-index:calc(var(--keyboard-zindex, 105) - 5);color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.modifier.active,.ML__keyboard div .rows>ul>li.modifier:active{background:var(--keyboard-text-active);color:var(--keycap-text-active)}.ML__keyboard div .rows>ul>li.action.font-glyph,.ML__keyboard div .rows>ul>li.modifier.font-glyph{font-size:18px}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li.action.font-glyph,.ML__keyboard div .rows>ul>li.modifier.font-glyph{font-size:16px}}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li.bigfnbutton,.ML__keyboard div .rows>ul>li.fnbutton{font-size:12px}}.ML__keyboard div .rows>ul>li.bigfnbutton{font-size:14px}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li.bigfnbutton{font-size:9px}}.ML__keyboard div .rows>ul>li.action,.ML__keyboard div .rows>ul>li.modifier{background-color:var(--keycap-modifier-background);border-bottom-color:var(--keycap-modifier-border);border-color:var(--keycap-modifier-border) var(--keycap-modifier-border) var(--keycap-modifier-border-bottom);font-size:65%;font-weight:100}.ML__keyboard div .rows>ul>li.action.selected,.ML__keyboard div .rows>ul>li.modifier.selected{color:var(--keyboard-text-active)}.ML__keyboard div .rows>ul>li.action.selected.active,.ML__keyboard div .rows>ul>li.action.selected.pressed,.ML__keyboard div .rows>ul>li.action.selected:active,.ML__keyboard div .rows>ul>li.action.selected:hover,.ML__keyboard div .rows>ul>li.modifier.selected.active,.ML__keyboard div .rows>ul>li.modifier.selected.pressed,.ML__keyboard div .rows>ul>li.modifier.selected:active,.ML__keyboard div .rows>ul>li.modifier.selected:hover{color:#fff}.ML__keyboard div .rows>ul>li.keycap.w50{font-size:80%;padding-top:10px;font-weight:100}.ML__keyboard div .rows>ul>li small{color:#555}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li small{font-size:9px}}.ML__keyboard div .rows>ul>li aside{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:10px;line-height:10px;color:#666}@media only screen and (max-width:767px){.ML__keyboard div .rows>ul>li aside{display:none}}@media only screen and (max-width:414px){.ML__keyboard div .rows>ul>li{width:calc(10vw - 2px);margin-right:2px}.ML__keyboard div .rows>ul>.w5{width:calc(5vw - 2px)}.ML__keyboard div .rows>ul>.w15{width:calc(15vw - 2px)}.ML__keyboard div .rows>ul>.w20{width:calc(20vw - 2px)}.ML__keyboard div .rows>ul>.w50{width:calc(50vw - 2px)}}@media only screen and (min-width:415px) and (max-width:768px){.ML__keyboard div .rows>ul>li{width:37px;margin-right:3px}.ML__keyboard div .rows>ul>.w5{width:17px}.ML__keyboard div .rows>ul>.w15{width:57px}.ML__keyboard div .rows>ul>.w20{width:77px}.ML__keyboard div .rows>ul>.w50{width:197px}}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard div .rows>ul{height:52px}.ML__keyboard div .rows>ul>li{height:52px;width:51px;margin-right:4px}.ML__keyboard div .rows>ul>.w5{width:23.5px}.ML__keyboard div .rows>ul>.w15{width:78.5px}.ML__keyboard div .rows>ul>.w20{width:106px}.ML__keyboard div .rows>ul>.w50{width:271px}}@media only screen and (min-width:1025px){.ML__keyboard div .rows>ul{height:52px}.ML__keyboard div .rows>ul>li{height:52px;width:66px;margin-right:6px}.ML__keyboard div .rows>ul>.action,.ML__keyboard div .rows>ul>.modifier{font-size:80%}.ML__keyboard div .rows>ul>.w5{width:30px}.ML__keyboard div .rows>ul>.w15{width:102px}.ML__keyboard div .rows>ul>.w20{width:138px}.ML__keyboard div .rows>ul>.w50{width:354px}}@media (prefers-color-scheme:dark){body:not([theme=light]) .ML__keyboard{--hue:206;--keyboard-background:hsl(var(--hue,212),19%,38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue,212),100%,60%);--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:hsl(var(--hue,212),35%,42%);--keycap-background-border:hsl(var(--hue,212),25%,35%);--keycap-background-border-bottom:#426b8a;--keycap-text:#d0d0d0;--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),19%,38%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}}body[theme=dark] .ML__keyboard{--hue:206;--keyboard-background:hsl(var(--hue,212),19%,38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue,212),100%,60%);--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:hsl(var(--hue,212),35%,42%);--keycap-background-border:hsl(var(--hue,212),25%,35%);--keycap-background-border-bottom:#426b8a;--keycap-text:#d0d0d0;--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),19%,38%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}div.ML__keyboard.material{--keyboard-background:rgba(209,213,217,0.9);--keyboard-background-border:#ddd;--keycap-background:transparent;--keycap-background-active:#cccfd1;--keycap-background-border:transparent;--keyboard-alternate-background:#efefef;--keyboard-alternate-text:#000;font-family:Roboto,sans-serif}div.ML__keyboard.material.alternate-keys{background:var(--keyboard-alternate-background);border:1px solid transparent;border-radius:5px;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}div.ML__keyboard.material.alternate-keys ul li.active,div.ML__keyboard.material.alternate-keys ul li.pressed,div.ML__keyboard.material.alternate-keys ul li:active,div.ML__keyboard.material.alternate-keys ul li:hover{border:1px solid transparent;background:#5f97fc;color:#fff;fill:currentColor}div.ML__keyboard.material .keyboard-toolbar>div>div{font-size:16px}div.ML__keyboard.material .keyboard-toolbar div.div.active,div.ML__keyboard.material .keyboard-toolbar div.div.pressed,div.ML__keyboard.material .keyboard-toolbar div div:active,div.ML__keyboard.material .keyboard-toolbar div div:hover{color:#5f97fc;fill:currentColor}div.ML__keyboard.material .keyboard-toolbar>div>.selected{color:#5f97fc;fill:currentColor;border-bottom:2px solid #5f97fc;margin-bottom:8px;padding-bottom:0}div.ML__keyboard.material div>.rows>ul>.keycap{background:transparent;border:1px solid transparent;border-radius:5px;color:var(--keycap-text);fill:currentColor;transition:none}div.ML__keyboard.material div>.rows>ul>.keycap.tt{color:#5f97fc}div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"]{margin-top:10px;margin-bottom:10px;height:20px;background:#e0e0e0}div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"].active,div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"].pressed,div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"]:active,div.ML__keyboard.material div>.rows>ul>.keycap[data-key=\\\" \\\"]:hover{background:#d0d0d0;box-shadow:none;transform:none}div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):hover{border:1px solid transparent;background:var(--keycap-background-active);box-shadow:none}div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).active,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).pressed,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):active{background:var(--keyboard-alternate-background);color:var(--keyboard-alternate-text);box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23)}@media only screen and (max-width:767px){div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).active,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).pressed,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):active{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);font-size:10px;vertical-align:top;width:19.5px;margin-right:10px;margin-left:10px;transform:translateY(-20px) scale(2);transition:none;justify-content:flex-start;padding:2px 0 0;z-index:calc(var(--ML_keyboard-zindex, 105) - 5)}}@media only screen and (max-width:414px){div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).active,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]).pressed,div.ML__keyboard.material div>.rows>ul>.keycap:not([data-key=\\\" \\\"]):active{width:16.5px}}@media only screen and (max-width:767px){div.ML__keyboard.material div>.rows>ul>.keycap:last-child.active,div.ML__keyboard.material div>.rows>ul>.keycap:last-child:active{margin-right:0;margin-left:14px}}div.ML__keyboard.material div div.rows ul li.action,div.ML__keyboard.material div div.rows ul li.modifier{background:transparent;border:0;color:#869096;fill:currentColor;font-size:16px;transition:none}div.ML__keyboard.material div div.rows ul li.action.selected,div.ML__keyboard.material div div.rows ul li.modifier.selected{color:#5f97fc;border-radius:0;border-bottom:2px solid #5f97fc}div.ML__keyboard.material div div.rows ul li.action.active,div.ML__keyboard.material div div.rows ul li.action.pressed,div.ML__keyboard.material div div.rows ul li.action:active,div.ML__keyboard.material div div.rows ul li.action:hover,div.ML__keyboard.material div div.rows ul li.modifier.active,div.ML__keyboard.material div div.rows ul li.modifier.pressed,div.ML__keyboard.material div div.rows ul li.modifier:active,div.ML__keyboard.material div div.rows ul li.modifier:hover{border:0;color:var(--keycap-text);background:var(--keycap-background-active);box-shadow:none}div.ML__keyboard.material div div.rows ul li.bigfnbutton,div.ML__keyboard.material div div.rows ul li.fnbutton{background:transparent;border:0}div.ML__keyboard.material div div.rows ul li.bigfnbutton.selected,div.ML__keyboard.material div div.rows ul li.fnbutton.selected{color:#5f97fc;fill:currentColor;border-radius:0;border-bottom:2px solid #5f97fc}div.ML__keyboard.material div div.rows ul li.bigfnbutton.active,div.ML__keyboard.material div div.rows ul li.bigfnbutton.pressed,div.ML__keyboard.material div div.rows ul li.bigfnbutton:active,div.ML__keyboard.material div div.rows ul li.bigfnbutton:hover,div.ML__keyboard.material div div.rows ul li.fnbutton.active,div.ML__keyboard.material div div.rows ul li.fnbutton.pressed,div.ML__keyboard.material div div.rows ul li.fnbutton:active,div.ML__keyboard.material div div.rows ul li.fnbutton:hover{border:0;color:#5f97fc;fill:currentColor;background:var(--keycap-background-active);box-shadow:none}@media (prefers-color-scheme:dark){body:not([theme=light]) div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue,212),19%,18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:#d0d0d0;--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),8%,2%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}}body[theme=dark] div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue,212),19%,18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:#333;--keycap-background:hsl(var(--hue,212),25%,39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:#d0d0d0;--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue,212),35%,40%);--keycap-modifier-border:hsl(var(--hue,212),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue,212),35%,42%);--keyboard-alternate-background:hsl(var(--hue,212),8%,2%);--keyboard-alternate-background-active:hsl(var(--hue,212),35%,42%);--keyboard-alternate-text:#d1d1d1}\";\n\nclass VirtualKeyboard {\r\n    constructor(mathfield) {\r\n        this.mathfield = mathfield;\r\n        this.element = document.createElement('div');\r\n        // Listen to know when the mouse has been released without being\r\n        // captured to remove the alternate keys panel and the shifted state of the\r\n        // keyboard.\r\n        // @todo should use a scrim instead (to prevent elements underneat the alt\r\n        // layer from reacting while the alt layer is up)\r\n        window.addEventListener('mouseup', this);\r\n        window.addEventListener('blur', this);\r\n        window.addEventListener('touchend', this);\r\n        window.addEventListener('touchcancel', this);\r\n    }\r\n    handleEvent(evt) {\r\n        switch (evt.type) {\r\n            case 'mouseup':\r\n            case 'blur':\r\n            case 'touchend':\r\n            case 'touchcancel':\r\n                unshiftKeyboardLayer(this.mathfield);\r\n                break;\r\n        }\r\n    }\r\n    dispose() {\r\n        releaseSharedElement(document.getElementById('mathlive-alternate-keys-panel'));\r\n        this.element.remove();\r\n    }\r\n}\r\nconst KEYBOARDS = {\r\n    numeric: {\r\n        tooltip: 'keyboard.tooltip.numeric',\r\n        layer: 'math',\r\n        label: '123',\r\n        layers: ['math'],\r\n    },\r\n    roman: {\r\n        tooltip: 'keyboard.tooltip.roman',\r\n        layer: 'lower-roman',\r\n        label: 'ABC',\r\n        layers: ['lower-roman', 'upper-roman'],\r\n    },\r\n    greek: {\r\n        tooltip: 'keyboard.tooltip.greek',\r\n        layer: 'lower-greek',\r\n        label: '&alpha;&beta;&gamma;',\r\n        classes: 'tex-math',\r\n        layers: ['lower-greek', 'upper-greek'],\r\n    },\r\n    functions: {\r\n        tooltip: 'keyboard.tooltip.functions',\r\n        layer: 'functions',\r\n        label: '<i>f</i>&thinsp;()',\r\n        classes: 'tex',\r\n        layers: ['functions'],\r\n    },\r\n    symbols: {\r\n        tooltip: 'keyboard.tooltip.symbols',\r\n        layer: 'symbols',\r\n        label: '&infin;≠∈',\r\n        classes: 'tex',\r\n        layers: ['symbols'],\r\n    },\r\n    command: {\r\n        tooltip: 'keyboard.tooltip.command',\r\n        // For the command keyboard, perform a command rather than\r\n        // doing a simple layer switch, as we want to enter command mode\r\n        // when the keyboard is activated\r\n        command: 'enterCommandMode',\r\n        label: `<svg><use xlink:href='#svg-command' /></svg>`,\r\n        layers: ['lower-command', 'upper-command', 'symbols-command'],\r\n    },\r\n    style: {\r\n        tooltip: 'keyboard.tooltip.style',\r\n        layer: 'style',\r\n        label: '<b>b</b><i>i</i>𝔹',\r\n    },\r\n};\r\nconst SHIFTED_KEYS = {\r\n    '\\\\varphi ': ['&Phi;', '\\\\Phi '],\r\n    '\\\\varsigma ': ['&Sigma;', '\\\\Sigma '],\r\n    '\\\\epsilon ': ['&#x0190;', '{\\\\char\"0190}'],\r\n    '\\\\rho ': ['&#x3A1', '{\\\\char\"3A1}'],\r\n    '\\\\tau ': ['&#x3A4;', '{\\\\char\"3A4}'],\r\n    '\\\\upsilon ': ['&Upsilon;', '\\\\Upsilon '],\r\n    '\\\\theta ': ['&Theta;', '\\\\Theta '],\r\n    '\\\\iota ': ['&Iota;', '{\\\\char\"399}'],\r\n    '\\\\omicron ': ['&#x039F;', '{\\\\char\"39F}'],\r\n    '\\\\pi ': ['&Pi;', '\\\\Pi '],\r\n    '\\\\alpha ': ['&Alpha;', '{\\\\char\"391}'],\r\n    '\\\\sigma ': ['&Sigma;', '\\\\Sigma '],\r\n    '\\\\delta ': ['&Delta;', '\\\\Delta '],\r\n    '\\\\phi ': ['&#x03a6;', '\\\\Phi '],\r\n    '\\\\gamma ': ['&Gamma;', '\\\\Gamma '],\r\n    '\\\\eta ': ['&Eta;', '{\\\\char\"397}'],\r\n    '\\\\xi ': ['&Xi;', '\\\\Xi '],\r\n    '\\\\kappa ': ['&Kappa;', '{\\\\char\"39A}'],\r\n    '\\\\lambda ': ['&Lambda;', '\\\\Lambda '],\r\n    '\\\\zeta ': ['&Zeta;', '{\\\\char\"396}'],\r\n    '\\\\chi ': ['&Chi;', '{\\\\char\"3A7}'],\r\n    '\\\\psi ': ['&Psi;', '\\\\Psi '],\r\n    '\\\\omega ': ['&Omega;', '\\\\Omega '],\r\n    '\\\\beta ': ['&Beta;', '{\\\\char\"392}'],\r\n    '\\\\nu ': ['&Nu;', '{\\\\char\"39D}'],\r\n    '\\\\mu ': ['&Mu;', '{\\\\char\"39C}'],\r\n};\r\n// const FUNCTIONS = [\r\n//     'Basic',\r\n//         ['\\\\sin', '\\\\cos', '\\\\tan', '\\\\min', '\\\\max', '\\\\gcd', '\\\\lcm', '\\\\repeat', 'encapsulate', 'recognize'],\r\n//     'Operators',\r\n//         ['\\\\sum', '\\\\prod', '\\\\bigcup_x']\r\n// ]\r\nconst ALT_KEYS_BASE = {\r\n    '0': [\r\n        '\\\\emptyset',\r\n        '\\\\varnothing',\r\n        '\\\\infty',\r\n        { latex: '#?_0', insert: '#@_0' },\r\n        '\\\\circ',\r\n        '\\\\bigcirc',\r\n        '\\\\bullet',\r\n    ],\r\n    '2': ['\\\\frac{1}{2}', { latex: '#?^2', insert: '#@^2' }],\r\n    '3': ['\\\\frac{1}{3}', { latex: '#?^3', insert: '#@^3' }],\r\n    '.': [\r\n        ',',\r\n        ';',\r\n        '\\\\colon',\r\n        { latex: ':', aside: 'ratio' },\r\n        { latex: '\\\\cdotp', aside: 'center dot', classes: 'box' },\r\n        { latex: '\\\\cdots', aside: 'center ellipsis', classes: 'box' },\r\n        { latex: '\\\\ldotp', aside: 'low dot', classes: 'box' },\r\n        { latex: '\\\\ldots', aside: 'low ellipsis', classes: 'box' },\r\n        { latex: '\\\\vdots', aside: '', classes: 'box' },\r\n        { latex: '\\\\ddots', aside: '', classes: 'box' },\r\n        '\\\\odot',\r\n        '\\\\oslash',\r\n        '\\\\circledcirc',\r\n    ],\r\n    '*': [\r\n        '\\\\cdot',\r\n        '\\\\ast',\r\n        '\\\\star',\r\n        '\\\\bigstar',\r\n        '\\\\ltimes',\r\n        '\\\\rtimes',\r\n        '\\\\rightthreetimes',\r\n        '\\\\leftthreetimes',\r\n        '\\\\intercal',\r\n        '\\\\prod',\r\n        { latex: '\\\\prod_{n\\\\mathop=0}^{\\\\infty}', classes: 'small' },\r\n    ],\r\n    '+': [\r\n        '\\\\pm',\r\n        '\\\\mp',\r\n        '\\\\sum',\r\n        { latex: '\\\\sum_{n\\\\mathop=0}^{\\\\infty}', classes: 'small' },\r\n        '\\\\dotplus',\r\n        '\\\\oplus',\r\n    ],\r\n    '-': ['\\\\pm', '\\\\mp', '\\\\ominus', '\\\\vert #0  \\\\vert'],\r\n    '/': ['\\\\divideontimes', '/', '\\\\div'],\r\n    '(': [\r\n        '\\\\left( #0\\\\right)',\r\n        '\\\\left[ #0\\\\right]',\r\n        '\\\\left\\\\{ #0\\\\right\\\\}',\r\n        '\\\\left\\\\langle #0\\\\right\\\\rangle',\r\n        '\\\\lfloor',\r\n        '\\\\llcorner',\r\n        '(',\r\n        '\\\\lbrack',\r\n        '\\\\lvert',\r\n        '\\\\lVert',\r\n        '\\\\lgroup',\r\n        '\\\\langle',\r\n        '\\\\lceil',\r\n        '\\\\ulcorner',\r\n        '\\\\lmoustache',\r\n        '\\\\lbrace',\r\n    ],\r\n    ')': [\r\n        '\\\\rfloor',\r\n        '\\\\lrcorner',\r\n        ')',\r\n        '\\\\rbrack',\r\n        '\\\\rvert',\r\n        '\\\\rVert',\r\n        '\\\\rgroup',\r\n        '\\\\rangle',\r\n        '\\\\rceil',\r\n        '\\\\urcorner',\r\n        '\\\\rmoustache',\r\n        '\\\\rbrace',\r\n    ],\r\n    '=': [\r\n        '\\\\cong',\r\n        '\\\\asymp',\r\n        '\\\\equiv',\r\n        '\\\\differencedelta',\r\n        '\\\\varpropto',\r\n        '\\\\thickapprox',\r\n        '\\\\approxeq',\r\n        '\\\\thicksim',\r\n        '\\\\backsim',\r\n        '\\\\eqsim',\r\n        '\\\\simeq',\r\n        '\\\\Bumpeq',\r\n        '\\\\bumpeq',\r\n        '\\\\doteq',\r\n        '\\\\Doteq',\r\n        '\\\\fallingdotseq',\r\n        '\\\\risingdotseq',\r\n        '\\\\coloneq',\r\n        '\\\\eqcirc',\r\n        '\\\\circeq',\r\n        '\\\\triangleq',\r\n        '\\\\between',\r\n    ],\r\n    '!=': ['\\\\neq', '\\\\ncong', '', '\\\\nsim'],\r\n    '<': [\r\n        '\\\\leq',\r\n        '\\\\leqq',\r\n        '\\\\lneqq',\r\n        '\\\\ll',\r\n        '\\\\nless',\r\n        '\\\\nleq',\r\n        '\\\\precsim',\r\n        '\\\\lesssim',\r\n        '\\\\lessgtr',\r\n        '\\\\prec',\r\n        '\\\\preccurlyeq',\r\n        '\\\\lessdot',\r\n        '\\\\nprec',\r\n    ],\r\n    '>': [\r\n        '\\\\geq',\r\n        '\\\\geqq',\r\n        '\\\\gneqq',\r\n        '\\\\gg',\r\n        '\\\\ngtr',\r\n        '\\\\ngeq',\r\n        '\\\\succsim',\r\n        '\\\\gtrsim',\r\n        '\\\\gtrless',\r\n        '\\\\succ',\r\n        '\\\\succcurlyeq',\r\n        '\\\\gtrdot',\r\n        '\\\\nsucc',\r\n    ],\r\n    set: ['\\\\in', '\\\\owns', '\\\\subset', '\\\\nsubset', '\\\\supset', '\\\\nsupset'],\r\n    '!set': ['\\\\notin', '\\\\backepsilon'],\r\n    subset: [],\r\n    supset: [],\r\n    infinity: ['\\\\aleph_0', '\\\\aleph_1', '\\\\omega', '\\\\mathfrak{m}'],\r\n    'numeric-pi': ['\\\\prod', '\\\\theta', '\\\\rho', '\\\\sin', '\\\\cos', '\\\\tan'],\r\n    ee: ['\\\\times 10^{#?}', '\\\\ln', '\\\\ln_{10}', '\\\\log'],\r\n    '^': ['_{#?}'],\r\n    // Integrals\r\n    int: [\r\n        { latex: '\\\\int_{#?}^{#?}', classes: 'small' },\r\n        { latex: '\\\\int', classes: 'small' },\r\n        { latex: '\\\\smallint', classes: 'small' },\r\n        { latex: '\\\\iint', classes: 'small' },\r\n        { latex: '\\\\iiint', classes: 'small' },\r\n        { latex: '\\\\oint', classes: 'small' },\r\n        { latex: '\\\\dfrac{\\\\rd}{\\\\rd x}', classes: 'small' },\r\n        { latex: '\\\\frac{\\\\partial}{\\\\partial x}', classes: 'small' },\r\n        '\\\\capitalDifferentialD',\r\n        '\\\\rd',\r\n        '\\\\partial',\r\n    ],\r\n    nabla: ['\\\\nabla\\\\times', '\\\\nabla\\\\cdot', '\\\\nabla^{2}'],\r\n    '!': ['!!', '\\\\Gamma', '\\\\Pi'],\r\n    accents: [\r\n        '\\\\bar{#@}',\r\n        '\\\\vec{#@}',\r\n        '\\\\hat{#@}',\r\n        '\\\\check{#@}',\r\n        '\\\\dot{#@}',\r\n        '\\\\ddot{#@}',\r\n        '\\\\mathring{#@}',\r\n        '\\\\breve{#@}',\r\n        '\\\\acute{#@}',\r\n        '\\\\tilde{#@}',\r\n        '\\\\grave{#@}',\r\n    ],\r\n    // 'absnorm': [{latex:'\\\\lVert #@ \\\\rVert', aside:'norm'},\r\n    //     {latex:'\\\\lvert #@ \\\\rvert', aside:'determinant'},\r\n    //     {latex:'\\\\begin{cardinality} #@ \\\\end{cardinality}', aside:'cardinality'},\r\n    //     {latex:'\\\\lvert #@ \\\\rvert', aside:'length'},\r\n    //     {latex:'\\\\lvert #@ \\\\rvert', aside:'order'},\r\n    // ],\r\n    A: [\r\n        { latex: '\\\\aleph', aside: 'aleph' },\r\n        { latex: '\\\\forall', aside: 'for all' },\r\n    ],\r\n    a: [\r\n        { latex: '\\\\aleph', aside: 'aleph' },\r\n        { latex: '\\\\forall', aside: 'for all' },\r\n    ],\r\n    b: [{ latex: '\\\\beth', aside: 'beth' }],\r\n    B: [{ latex: '\\\\beth', aside: 'beth' }],\r\n    c: [{ latex: '\\\\C', aside: 'set of complex numbers' }],\r\n    d: [{ latex: '\\\\daleth', aside: 'daleth' }],\r\n    D: [{ latex: '\\\\daleth', aside: 'daleth' }],\r\n    e: [\r\n        { latex: '\\\\exponentialE', aside: 'exponential e' },\r\n        { latex: '\\\\exists', aside: 'there is' },\r\n        { latex: '\\\\nexists', aside: 'there isn’t' },\r\n    ],\r\n    g: [{ latex: '\\\\gimel', aside: 'gimel' }],\r\n    G: [{ latex: '\\\\gimel', aside: 'gimel' }],\r\n    h: [\r\n        { latex: '\\\\hbar', aside: 'h bar' },\r\n        { latex: '\\\\hslash', aside: 'h slash' },\r\n    ],\r\n    i: [{ latex: '\\\\imaginaryI', aside: 'imaginary i' }],\r\n    j: [{ latex: '\\\\imaginaryJ', aside: 'imaginary j' }],\r\n    l: [{ latex: '\\\\ell', aside: 'ell' }],\r\n    n: [{ latex: '\\\\N', aside: 'set of natural numbers' }],\r\n    p: [{ latex: '\\\\P', aside: 'set of primes' }],\r\n    q: [{ latex: '\\\\Q', aside: 'set of rational numbers' }],\r\n    r: [{ latex: '\\\\R', aside: 'set of real numbers' }],\r\n    z: [{ latex: '\\\\Z', aside: 'set of integers' }],\r\n    'x-var': [\r\n        'y',\r\n        'z',\r\n        't',\r\n        'r',\r\n        { latex: 'f(#?)', classes: 'small' },\r\n        { latex: 'g(#?)', classes: 'small' },\r\n        'x^2',\r\n        'x^n',\r\n        'x_n',\r\n        'x_{n+1}',\r\n        'x_i',\r\n        'x_{i+1}',\r\n    ],\r\n    'n-var': ['i', 'j', 'p', 'k', 'a', 'u'],\r\n    ii: ['\\\\Re', '\\\\Im', '\\\\imaginaryJ', '\\\\Vert #0 \\\\Vert'],\r\n    logic: [\r\n        { latex: '\\\\exists', aside: 'there is' },\r\n        { latex: '\\\\nexists', aside: 'there isn’t' },\r\n        { latex: '\\\\ni', aside: 'such that' },\r\n        { latex: '\\\\Colon', aside: 'such that' },\r\n        { latex: '\\\\implies', aside: 'implies' },\r\n        { latex: '\\\\impliedby', aside: 'implied by' },\r\n        { latex: '\\\\iff', aside: 'if and only if' },\r\n        { latex: '\\\\land', aside: 'and' },\r\n        { latex: '\\\\lor', aside: 'or' },\r\n        { latex: '\\\\oplus', aside: 'xor' },\r\n        { latex: '\\\\lnot', aside: 'not' },\r\n        { latex: '\\\\downarrow', aside: 'nor' },\r\n        { latex: '\\\\uparrow', aside: 'nand' },\r\n        { latex: '\\\\curlywedge', aside: 'nor' },\r\n        { latex: '\\\\bar\\\\curlywedge', aside: 'nand' },\r\n        // {latex:'\\\\barwedge', aside:'bar wedge'},\r\n        // {latex:'\\\\curlyvee', aside:'curly vee'},\r\n        // {latex:'\\\\veebar', aside:'vee bar'},\r\n        { latex: '\\\\therefore', aside: 'therefore' },\r\n        { latex: '\\\\because', aside: 'because' },\r\n        { latex: '^\\\\biconditional', aside: 'biconditional' },\r\n        '\\\\leftrightarrow',\r\n        '\\\\Leftrightarrow',\r\n        '\\\\to',\r\n        '\\\\models',\r\n        '\\\\vdash',\r\n        '\\\\gets',\r\n        '\\\\dashv',\r\n        '\\\\roundimplies',\r\n    ],\r\n    'set-operators': [\r\n        '\\\\cap',\r\n        '\\\\cup',\r\n        '\\\\setminus',\r\n        '\\\\smallsetminus',\r\n        '\\\\complement',\r\n    ],\r\n    'set-relations': [\r\n        '\\\\in',\r\n        '\\\\notin',\r\n        '\\\\ni',\r\n        '\\\\owns',\r\n        '\\\\subset',\r\n        '\\\\supset',\r\n        '\\\\subseteq',\r\n        '\\\\supseteq',\r\n        '\\\\subsetneq',\r\n        '\\\\supsetneq',\r\n        '\\\\varsubsetneq',\r\n        '\\\\subsetneqq',\r\n        '\\\\nsubset',\r\n        '\\\\nsupset',\r\n        '\\\\nsubseteq',\r\n        '\\\\nsupseteq',\r\n    ],\r\n    space: [\r\n        {\r\n            latex: '\\\\char\"203A\\\\!\\\\char\"2039',\r\n            insert: '\\\\!',\r\n            aside: 'negative thin space<br>⁻³⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\,\\\\unicode{\"2039}',\r\n            insert: '\\\\,',\r\n            aside: 'thin space<br>³⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\:\\\\unicode{\"2039}',\r\n            insert: '\\\\:',\r\n            aside: 'medium space<br>⁴⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\;\\\\unicode{\"2039}',\r\n            insert: '\\\\;',\r\n            aside: 'thick space<br>⁵⧸₁₈ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\ \\\\unicode{\"2039}',\r\n            insert: '\\\\ ',\r\n            aside: '⅓ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\enspace\\\\unicode{\"2039}',\r\n            insert: '\\\\enspace',\r\n            aside: '½ em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\quad\\\\unicode{\"2039}',\r\n            insert: '\\\\quad',\r\n            aside: '1 em',\r\n        },\r\n        {\r\n            latex: '\\\\unicode{\"203A}\\\\qquad\\\\unicode{\"2039}',\r\n            insert: '\\\\qquad',\r\n            aside: '2 em',\r\n        },\r\n    ],\r\n    // @todo could also delete to end\r\n    delete: [\r\n        {\r\n            label: '<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>',\r\n            command: '\"deleteAll\"',\r\n        },\r\n    ],\r\n    // @todo Tab: could turn on speech, visible keyboard...\r\n    '->|': [],\r\n};\r\nlet ALT_KEYS = {};\r\nconst LAYERS = {\r\n    math: `\n        <div class='rows'>\n            <ul>\n                <li class='keycap tex' data-alt-keys='x-var'><i>x</i></li>\n                <li class='keycap tex' data-alt-keys='n-var'><i>n</i></li>\n                <li class='separator w5'></li>\n                <row name='numpad-1'/>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-insert='$$\\\\exponentialE$$' data-alt-keys='ee'>e</li>\n                <li class='keycap tex' data-insert='$$\\\\imaginaryI$$' data-alt-keys='ii'>i</li>\n                <li class='keycap tex' data-latex='\\\\pi' data-alt-keys='numeric-pi'></li>\n            </ul>\n            <ul>\n                <li class='keycap tex' data-key='<' data-alt-keys='<'>&lt;</li>\n                <li class='keycap tex' data-key='>' data-alt-keys='>'>&gt;</li>\n                <li class='separator w5'></li>\n                <row name='numpad-2'/>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-alt-keys='x2' data-insert='$$#@^{2}$$'><span><i>x</i>&thinsp;²</span></li>\n                <li class='keycap tex' data-alt-keys='^' data-insert='$$#@^{#?}$$'><span><i>x</i><sup>&thinsp;<small>&#x2b1a;</small></sup></span></li>\n                <li class='keycap tex' data-alt-keys='sqrt' data-insert='$$\\\\sqrt{#0}$$' data-latex='\\\\sqrt{#0}'></li>\n            </ul>\n            <ul>\n                <li class='keycap tex' data-alt-keys='(' >(</li>\n                <li class='keycap tex' data-alt-keys=')' >)</li>\n                <li class='separator w5'></li>\n                <row name='numpad-3'/>\n                <li class='separator w5'></li>\n                <li class='keycap tex small' data-alt-keys='int' data-latex='\\\\int_0^\\\\infty'><span></span></li>\n                <li class='keycap tex' data-latex='\\\\forall' data-alt-keys='logic' ></li>\n                <li class='action font-glyph bottom right' data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'>&#x232b;</li></ul>\n            </ul>\n            <ul>\n                <li class='keycap' data-alt-keys='foreground-color' data-command='[\"applyStyle\",{\"color\":\"#cc2428\"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428; box-sizing: border-box'></span></li>\n                <li class='keycap' data-alt-keys='background-color' data-command='[\"applyStyle\",{\"backgroundColor\":\"#fff590\"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590; box-sizing: border-box'></span></li>\n                <li class='separator w5'></li>\n                <row name='numpad-4'/>\n                <li class='separator w5'></li>\n                <arrows/>\n            </ul>\n        </div>\n    `,\r\n    'lower-roman': `\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='lower-1' shift-layer='upper-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='lower-2'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='lower-3'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap' >;</li>\n                <li class='keycap' data-alt-keys=','>,</li>\n                <li class='keycap w50' data-key=' ' data-alt-keys='space'>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    'upper-roman': `\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='upper-1'  shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='upper-2' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='upper-3' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap' >;</li>\n                <li class='keycap' data-alt-keys='.'>;</li>\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    symbols: `\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\lbrace '>{</li>\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rbrace '>}</li>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-alt-keys='set' data-insert='\\\\in '>&#x2208;</li>\n                <li class='keycap tex' data-alt-keys='!set' data-insert='\\\\notin '>&#x2209;</li>\n                <li class='keycap tex' data-insert='\\\\Re '>&#x211c;<aside>Real</aside></li>\n                <li class='keycap tex' data-insert='\\\\Im '>&#x2111;<aside>Imaginary</aside></li>\n                <li class='keycap w15' data-insert='\\\\ulcorner#0\\\\urcorner '><span><sup>&#x250c;</sup><span><span style='color:#ddd'>o</span><sup>&#x2510;</sup></span><aside>ceil</aside></li>\n                <li class='keycap tex' data-alt-keys='nabla' data-insert='\\\\nabla '>&#x2207;<aside>nabla</aside></li>\n                <li class='keycap tex' data-alt-keys='infinity' data-insert='\\\\infty '>&#x221e;</li>\n\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\lbrack '>[</li>\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rbrack '>]</li>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-alt-keys='subset' data-insert='\\\\subset '>&#x2282;</li>\n                <li class='keycap tex' data-alt-keys='supset' data-insert='\\\\supset '>&#x2283;</li>\n                <li class='keycap tex' data-key='!' data-alt-keys='!'>!<aside>factorial</aside></li>\n                <li class='keycap' data-insert='$$^{\\\\prime} $$'><span><sup><span><span style='color:#ddd'>o</span>&#x2032</sup></span><aside>prime</aside></li>\n                <li class='keycap w15' data-insert='\\\\llcorner#0\\\\lrcorner '><span><sub>&#x2514;</sub><span style='color:#ddd'>o</span><sub>&#x2518;</sub></span><aside>floor</aside></li>\n                <li class='keycap tex' data-insert='\\\\partial '>&#x2202;<aside>partial<br>derivative</aside></li>\n                <li class='keycap tex' data-insert='\\\\emptyset '>&#x2205;<aside>empty set</aside></li>\n\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <li class='keycap tex' data-alt-keys='(' data-insert='\\\\langle '>&#x27e8;</li>\n                <li class='keycap tex' data-alt-keys=')' data-insert='\\\\rangle '>&#x27e9;</li>\n                <li class='separator w5'></li>\n                <li class='keycap tex' data-insert='\\\\subseteq '>&#x2286;</li>\n                <li class='keycap tex' data-insert='\\\\supseteq '>&#x2287;</li>\n                <li class='keycap tex' data-alt-keys='accents' data-insert='$$\\\\vec{#@}$$' data-latex='\\\\vec{#?}' data-aside='vector'></li>\n                <li class='keycap tex' data-alt-keys='accents' data-insert='$$\\\\bar{#@}$$' data-latex='\\\\bar{#?}' data-aside='bar'></li>\n                <li class='keycap tex' data-alt-keys='absnorm' data-insert='$$\\\\left| #0 \\\\right|$$' data-latex='\\\\left| #? \\\\right|' data-aside='abs'></li>\n                <li class='keycap tex' data-insert='\\\\ast '>&#x2217;<aside>asterisk</aside></li>\n\n                <li class='action font-glyph bottom right w15'\n                    data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\n                    data-shifted-command='\"deleteAll\"'\n                    data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\n                >&#x232b;</li>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap tex' data-insert=','>,</li>\n                <li class='keycap tex' data-insert='\\\\cdot '>&#x22c5;<aside>centered dot</aside></li>\n                <li class='keycap tex' data-insert='\\\\colon '>:<aside>colon</aside></li>\n                <li class='keycap tex' data-insert='\\\\circ '>&#x2218;<aside>circle</aside></li>\n                <li class='keycap tex' data-insert='\\\\approx '>&#x2248;<aside>approx.</aside></li>\n                <li class='keycap tex' data-insert='\\\\ne '>&#x2260;</li>\n                <li class='keycap tex' data-insert='\\\\pm '>&#x00b1;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    'lower-greek': `\n        <div class='rows'>\n            <ul><li class='keycap tex' data-insert='\\\\varphi '><i>&#x03c6;</i><aside>phi var.</aside></li>\n                <li class='keycap tex' data-insert='\\\\varsigma '><i>&#x03c2;</i><aside>sigma var.</aside></li>\n                <li class='keycap tex' data-insert='\\\\epsilon '><i>&#x03f5;</i></li>\n                <li class='keycap tex' data-insert='\\\\rho '><i>&rho;</i></li>\n                <li class='keycap tex' data-insert='\\\\tau '><i>&tau;</i></li>\n                <li class='keycap tex' data-insert='\\\\upsilon '><i>&upsilon;</i></li>\n                <li class='keycap tex' data-insert='\\\\theta '><i>&theta;</i></li>\n                <li class='keycap tex' data-insert='\\\\iota '><i>&iota;</i></li>\n                <li class='keycap tex' data-insert='\\\\omicron '>&omicron;</i></li>\n                <li class='keycap tex' data-insert='\\\\pi '><i>&pi;</i></li>\n            </ul>\n            <ul><li class='keycap tex' data-insert='\\\\alpha ' data-shifted='&Alpha;' data-shifted-command='[\"insert\",\"{\\\\\\\\char\\\\\"391}\"]'><i>&alpha;</i></li>\n                <li class='keycap tex' data-insert='\\\\sigma '><i>&sigma;</i></li>\n                <li class='keycap tex' data-insert='\\\\delta '><i>&delta;</i></li>\n                <li class='keycap tex' data-insert='\\\\phi '><i>&#x03d5;</i></i></li>\n                <li class='keycap tex' data-insert='\\\\gamma '><i>&gamma;</i></li>\n                <li class='keycap tex' data-insert='\\\\eta '><i>&eta;</i></li>\n                <li class='keycap tex' data-insert='\\\\xi '><i>&xi;</i></li>\n                <li class='keycap tex' data-insert='\\\\kappa '><i>&kappa;</i></li>\n                <li class='keycap tex' data-insert='\\\\lambda '><i>&lambda;</i></li>\n            </ul>\n            <ul><li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='upper-greek'>&#x21e7;</li>\n                <li class='keycap tex' data-insert='\\\\zeta '><i>&zeta;</i></li>\n                <li class='keycap tex' data-insert='\\\\chi '><i>&chi;</i></li>\n                <li class='keycap tex' data-insert='\\\\psi '><i>&psi;</i></li>\n                <li class='keycap tex' data-insert='\\\\omega '><i>&omega;</i></li>\n                <li class='keycap tex' data-insert='\\\\beta '><i>&beta;</i></li>\n                <li class='keycap tex' data-insert='\\\\nu '><i>&nu;</i></li>\n                <li class='keycap tex' data-insert='\\\\mu '><i>&mu;</i></li>\n                <li class='action font-glyph bottom right w15'\n                    data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\n                    data-shifted-command='\"deleteAll\"'\n                    data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\n                >&#x232b;</li>\n            </ul>\n            <ul>\n                <li class='keycap ' data-key=' '>&nbsp;</li>\n                <li class='keycap'>,</li>\n                <li class='keycap tex' data-insert='\\\\varepsilon '><i>&#x03b5;</i><aside>epsilon var.</aside></li>\n                <li class='keycap tex' data-insert='\\\\vartheta '><i>&#x03d1;</i><aside>theta var.</aside></li>\n                <li class='keycap tex' data-insert='\\\\varkappa '><i>&#x3f0;</i><aside>kappa var.</aside></li>\n                <li class='keycap tex' data-insert='\\\\varpi '><i>&#x03d6;<aside>pi var.</aside></i></li>\n                <li class='keycap tex' data-insert='\\\\varrho '><i>&#x03f1;</i><aside>rho var.</aside></li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    'upper-greek': `\n        <div class='rows'>\n            <ul><li class='keycap tex' data-insert='\\\\Phi '>&Phi;<aside>phi</aside></li>\n                <li class='keycap tex' data-insert='\\\\Sigma '>&Sigma;<aside>sigma</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"0190}'>&#x0190;<aside>epsilon</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"3A1}'>&#x3A1;<aside>rho</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"3A4}'>&#x3A4;<aside>tau</aside></li>\n                <li class='keycap tex' data-insert='\\\\Upsilon '>&Upsilon;<aside>upsilon</aside></li>\n                <li class='keycap tex' data-insert='\\\\Theta '>&Theta;<aside>theta</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"399}'>&Iota;<aside>iota</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"39F}'>&#x039F;<aside>omicron</aside></li>\n                <li class='keycap tex' data-insert='\\\\Pi '>&Pi;<aside>pi</aside></li></ul>\n            <ul><li class='keycap tex' data-insert='{\\\\char\"391}'>&#x391;<aside>alpha</aside></li>\n                <li class='keycap tex' data-insert='\\\\Sigma '>&Sigma;<aside>sigma</aside></li>\n                <li class='keycap tex' data-insert='\\\\Delta '>&Delta;<aside>delta</aside></li>\n                <li class='keycap tex' data-insert='\\\\Phi '>&#x03a6;<aside>phi</aside></li>\n                <li class='keycap tex' data-insert='\\\\Gamma '>&Gamma;<aside>gamma</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"397}'>&Eta;<aside>eta</aside></li>\n                <li class='keycap tex' data-insert='\\\\Xi '>&Xi;<aside>xi</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"39A}'>&Kappa;<aside>kappa</aside></li>\n                <li class='keycap tex' data-insert='\\\\Lambda '>&Lambda;<aside>lambda</aside></li></ul>\n            <ul><li class='shift modifier font-glyph bottom left selected w15 layer-switch' data-layer='lower-greek'>&#x21e7;</li>\n                <li class='keycap tex' data-insert='{\\\\char\"396}'>&Zeta;<aside>zeta</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"3A7}'>&Chi;<aside>chi</aside></li>\n                <li class='keycap tex' data-insert='\\\\Psi '>&Psi;<aside>psi</aside></li>\n                <li class='keycap tex' data-insert='\\\\Omega '>&Omega;<aside>omega</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"392}'>&Beta;<aside>beta</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"39D}'>&Nu;<aside>nu</aside></li>\n                <li class='keycap tex' data-insert='{\\\\char\"39C}'>&Mu;<aside>mu</aside></li>\n                <li class='action font-glyph bottom right w15' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'>&#x232b;</li></ul>\n            <ul>\n                <li class='separator w10'>&nbsp;</li>\n                <li class='keycap'>.</li>\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    'lower-command': `\n        <div class='rows'>\n            <ul><row name='lower-1' class='tt' shift-layer='upper-command'/></ul>\n            <ul><row name='lower-2' class='tt' shift-layer='upper-command'/></ul>\n            <ul><row name='lower-3' class='tt' shift-layer='upper-command'/></ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'>01#</li>\n                <li class='keycap tt' data-shifted='[' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \"[\"]'>{</li>\n                <li class='keycap tt' data-shifted=']' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \"]\"]'>}</li>\n                <li class='keycap tt' data-shifted='(' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \"(\"]'>^</li>\n                <li class='keycap tt' data-shifted=')' data-shifted-command='[\"insertAndUnshiftKeyboardLayer\", \")\"]'>_</li>\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    'upper-command': `\n        <div class='rows'>\n            <ul><row name='upper-1' class='tt' shift-layer='lower-command'/></ul>\n            <ul><row name='upper-2' class='tt' shift-layer='lower-command'/></ul>\n            <ul><row name='upper-3' class='tt' shift-layer='lower-command'/></ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='symbols-command'01#</li>\n                <li class='keycap tt'>[</li>\n                <li class='keycap tt'>]</li>\n                <li class='keycap tt'>(</li>\n                <li class='keycap tt'>)</li>\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    'symbols-command': `\n        <div class='rows'>\n            <ul><li class='keycap tt'>1</li><li class='keycap tt'>2</li><li class='keycap tt'>3</li><li class='keycap tt'>4</li><li class='keycap tt'>5</li><li class='keycap tt'>6</li><li class='keycap tt'>7</li><li class='keycap tt'>8</li><li class='keycap tt'>9</li><li class='keycap tt'>0</li></ul>\n            <ul><li class='keycap tt'>!</li><li class='keycap tt'>@</li><li class='keycap tt'>#</li><li class='keycap tt'>$</li><li class='keycap tt'>%</li><li class='keycap tt'>^</li><li class='keycap tt'>&</li><li class='keycap tt'>*</li><li class='keycap tt'>+</li><li class='keycap tt'>=</li></ul>\n            <ul>\n                <li class='keycap tt'>\\\\</li>\n                <li class='keycap tt'>|</li>\n                <li class='keycap tt'>/</li>\n                <li class='keycap tt'>\\`</li>\n                <li class='keycap tt'>;</li>\n                <li class='keycap tt'>:</li>\n                <li class='keycap tt'>?</li>\n                <li class='keycap tt'>'</li>\n                <li class='keycap tt'>\"</li>\n                <li class='action font-glyph bottom right'\n                    data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\n                    data-shifted-command='\"deleteAll\"'\n                    data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\n                >&#x232b;</li>\n            </ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='lower-command'>abc</li>\n                <li class='keycap tt'>&lt;</li>\n                <li class='keycap tt'>&gt;</li>\n                <li class='keycap tt'>~</li>\n                <li class='keycap tt'>,</li>\n                <li class='keycap tt'>.</li>\n                <li class='keycap' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    functions: `\n        <div class='rows'>\n            <ul><li class='separator'></li>\n                <li class='fnbutton' data-insert='\\\\sin'></li>\n                <li class='fnbutton' data-insert='\\\\sin^{-1}'></li>\n                <li class='fnbutton' data-insert='\\\\ln'></li>\n                <li class='fnbutton' data-insert='\\\\exponentialE^{#?}'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{lcm}(#?)$$' data-latex='\\\\operatorname{lcm}()'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{ceil}(#?)$$' data-latex='\\\\operatorname{ceil}()'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\lim_{n\\\\to\\\\infty}$$'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\int$$'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{abs}(#?)$$' data-latex='\\\\operatorname{abs}()'></li>\n            </ul>\n            <ul><li class='separator'></li>\n                <li class='fnbutton' data-insert='\\\\cos'></li>\n                <li class='fnbutton' data-insert='\\\\cos^{-1}'></li>\n                <li class='fnbutton' data-insert='\\\\ln_{10}'></li>\n                <li class='fnbutton' data-insert='$$10^{#?}$$'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{gcd}(#?)$$' data-latex='\\\\operatorname{gcd}()'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{floor}(#?)$$' data-latex='\\\\operatorname{floor}()'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\sum_{n\\\\mathop=0}^{\\\\infty}$$'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\int_{0}^{\\\\infty}$$'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{sign}(#?)$$' data-latex='\\\\operatorname{sign}()'></li>\n            </ul>\n            <ul><li class='separator'></li>\n                <li class='fnbutton' data-insert='\\\\tan'></li>\n                <li class='fnbutton' data-insert='\\\\tan^{-1}'></li>\n                <li class='fnbutton' data-insert='$$\\\\log_{#?}$$'></li>\n                <li class='fnbutton' data-insert='$$\\\\sqrt[#?]{#0}$$'></li>\n                <li class='bigfnbutton' data-insert='$$#0 \\\\mod$$' data-latex='\\\\mod'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\operatorname{round}(#?) $$' data-latex='\\\\operatorname{round}()'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\prod_{n\\\\mathop=0}^{\\\\infty}$$' data-latex='{\\\\scriptstyle \\\\prod_{n=0}^{\\\\infty}}'></li>\n                <li class='bigfnbutton' data-insert='$$\\\\frac{\\\\differentialD #0}{\\\\differentialD x}$$'></li>\n                <li class='action font-glyph bottom right' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'>&#x232b;</li></ul>\n            <ul><li class='separator'></li>\n                <li class='fnbutton'>(</li>\n                <li class='fnbutton'>)</li>\n                <li class='fnbutton' data-insert='$$^{#?} $$' data-latex='x^{#?} '></li>\n                <li class='fnbutton' data-insert='$$_{#?} $$' data-latex='x_{#?} '></li>\n                <li class='keycap w20 ' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>`,\r\n    style: `\n        <div class='rows'>\n            <ul>\n                <li class='keycap' data-alt-keys='foreground-color' data-command='[\"applyStyle\",{\"color\":\"#cc2428\"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428'></span></li>\n                <li class='keycap' data-alt-keys='background-color' data-command='[\"applyStyle\",{\"backgroundColor\":\"#fff590\"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590'></span></li>\n                <li class='separator w5'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"size\":\"size3\"}]' data-latex='\\\\scriptsize\\\\text{small}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"size\":\"size5\"}]' data-latex='\\\\scriptsize\\\\text{normal}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"size\":\"size9\"}]' data-latex='\\\\huge\\\\text{big}'></li>\n                <li class='separator w5'></li>\n                <li class='keycap' data-latex='\\\\langle' data-command='[\"insert\", \"\\\\\\\\langle\", {\"smartFence\":true}]'></li>\n            </ul>\n            <ul>\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"l\"}]' data-latex='\\\\fontseries{l}\\\\text{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"m\"}]' data-latex='\\\\fontseries{m}\\\\text{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"b\"}]' data-latex='\\\\fontseries{b}\\\\text{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"bx\"}]' data-latex='\\\\fontseries{bx}\\\\text{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"sb\"}]' data-latex='\\\\fontseries{sb}\\\\text{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"series\":\"c\"}]' data-latex='\\\\fontseries{c}\\\\text{Ab}'></li>\n            </ul>\n            <ul>\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"up\"}]' data-latex='\\\\textup{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"it\"}]' data-latex='\\\\textit{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"sl\"}]' data-latex='\\\\textsl{Ab}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"shape\":\"sc\"}]' data-latex='\\\\textsc{Ab}'></li>\n                <li class='separator w5'></li>\n                <li class='keycap' data-insert='$$\\\\emph{#?} $$' data-latex='\\\\text{\\\\emph{emph}}'></li>\n            </ul>\n            <ul>\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cmr\"}]' data-latex='\\\\textrm{Az}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cmtt\"}]' data-latex='\\\\texttt{Az}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cmss\"}]' data-latex='\\\\textsf{Az}'></li>\n\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"bb\"}]'  data-latex='\\\\mathbb{AZ}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"scr\"}]'  data-latex='\\\\mathscr{AZ}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"cal\"}]' data-latex='\\\\mathcal{A1}'></li>\n                <li class='keycap' data-command='[\"applyStyle\",{\"fontFamily\":\"frak\"}]' data-latex='\\\\mathfrak{Az}'></li>\n            </ul>\n        </div>`,\r\n};\r\nfunction latexToMarkup$1(latex, arg, mf) {\r\n    // Since we don't have preceding atoms, we'll interpret #@ as a placeholder\r\n    latex = latex.replace(/(^|[^\\\\])#@/g, '$1#?');\r\n    return makeStruts(makeSpan(decompose({\r\n        mathstyle: MATHSTYLES.displaystyle,\r\n        macros: mf.options.macros,\r\n    }, parseString(latex, 'math', arg, mf.options.macros)), 'ML__base'), 'ML__mathlive').toMarkup();\r\n}\r\n/**\r\n * Return a markup string for the keyboard toolbar for the specified layer.\r\n */\r\nfunction makeKeyboardToolbar(mf, keyboardIDs, currentKeyboard) {\r\n    var _a;\r\n    // The left hand side of the toolbar has a list of all the available keyboards\r\n    let result = \"<div class='left'>\";\r\n    const keyboardList = keyboardIDs.replace(/\\s+/g, ' ').split(' ');\r\n    if (keyboardList.length > 1) {\r\n        const keyboards = {\r\n            ...KEYBOARDS,\r\n            ...((_a = mf.options.customVirtualKeyboards) !== null && _a !== void 0 ? _a : {}),\r\n        };\r\n        for (const keyboard of keyboardList) {\r\n            if (!keyboards[keyboard]) {\r\n                console.error('Unknown virtual keyboard \"' + keyboard + '\"');\r\n                break;\r\n            }\r\n            result += \"<div class='\";\r\n            if (keyboard === currentKeyboard) {\r\n                result += 'selected ';\r\n            }\r\n            else {\r\n                if (keyboards[keyboard].command) {\r\n                    result += 'action ';\r\n                }\r\n                else {\r\n                    result += 'layer-switch ';\r\n                }\r\n            }\r\n            result += (keyboards[keyboard].classes || '') + \"'\";\r\n            if (keyboards[keyboard].tooltip) {\r\n                result +=\r\n                    \"data-ML__tooltip='\" +\r\n                        localize(keyboards[keyboard].tooltip) +\r\n                        \"' \";\r\n                result += \"data-placement='top' data-delay='1s'\";\r\n            }\r\n            if (keyboard !== currentKeyboard) {\r\n                if (keyboards[keyboard].command) {\r\n                    result +=\r\n                        'data-command=\\'\"' +\r\n                            keyboards[keyboard].command +\r\n                            '\"\\'';\r\n                }\r\n                if (keyboards[keyboard].layer) {\r\n                    result += \"data-layer='\" + keyboards[keyboard].layer + \"'\";\r\n                }\r\n            }\r\n            result += '>' + keyboards[keyboard].label + '</div>';\r\n        }\r\n    }\r\n    result += '</div>';\r\n    // The right hand side of the toolbar, with the copy/undo/redo commands\r\n    result += `\n        <div class='right'>\n            <div class='action'\n                data-command='\"copyToClipboard\"'\n                data-ML__tooltip='${localize('tooltip.copy to clipboard')}' data-placement='top' data-delay='1s'>\n                <svg><use xlink:href='#svg-copy' /></svg>\n            </div>\n            <div class='action disabled'\n                data-command='\"undo\"'\n                data-ML__tooltip='${localize('tooltip.undo')}' data-placement='top' data-delay='1s'>\n                <svg><use xlink:href='#svg-undo' /></svg>\n            </div>\n            <div class='action disabled'\n                data-command='\"redo\"'\n                data-ML__tooltip='${localize('tooltip.redo')}' data-placement='top' data-delay='1s'>\n                <svg><use xlink:href='#svg-redo' /></svg>\n            </div>\n        </div>\n    `;\r\n    return \"<div class='keyboard-toolbar' role='toolbar'>\" + result + '</div>';\r\n}\r\nfunction makeKeycap(mf, elList, chainedCommand) {\r\n    var _a;\r\n    for (let i = 0; i < elList.length; ++i) {\r\n        const el = elList[i];\r\n        let html;\r\n        // Display\r\n        if (el.getAttribute('data-latex')) {\r\n            html = latexToMarkup$1(el.getAttribute('data-latex').replace(/&quot;/g, '\"'), { '?': '{\\\\color{#555}{\\\\scriptstyle \\\\char\"2B1A}}' }, mf);\r\n        }\r\n        else if (el.getAttribute('data-insert') && el.innerHTML === '') {\r\n            html = latexToMarkup$1(el.getAttribute('data-insert').replace(/&quot;/g, '\"'), { '?': '{\\\\color{#555}{\\\\scriptstyle \\\\char\"2B1A}}' }, mf);\r\n        }\r\n        else if (el.getAttribute('data-content')) {\r\n            html = el.getAttribute('data-content').replace(/&quot;/g, '\"');\r\n        }\r\n        if (el.getAttribute('data-aside')) {\r\n            html =\r\n                (html !== null && html !== void 0 ? html : '') +\r\n                    '<aside>' +\r\n                    el.getAttribute('data-aside').replace(/&quot;/g, '\"') +\r\n                    '</aside>';\r\n        }\r\n        if (typeof html !== 'undefined') {\r\n            el.innerHTML = mf.options.createHTML(html);\r\n        }\r\n        if (el.getAttribute('data-classes')) {\r\n            el.classList.add(el.getAttribute('data-classes'));\r\n        }\r\n        const key = (_a = el.getAttribute('data-insert')) === null || _a === void 0 ? void 0 : _a.replace(/&quot;/g, '\"');\r\n        if (key && SHIFTED_KEYS[key]) {\r\n            el.setAttribute('data-shifted', SHIFTED_KEYS[key][0]);\r\n            el.setAttribute('data-shifted-command', JSON.stringify([\r\n                'insertAndUnshiftKeyboardLayer',\r\n                SHIFTED_KEYS[key][1],\r\n            ]));\r\n        }\r\n        // Commands\r\n        let handlers;\r\n        if (el.getAttribute('data-command')) {\r\n            handlers = JSON.parse(el.getAttribute('data-command'));\r\n        }\r\n        else if (el.getAttribute('data-insert')) {\r\n            handlers = [\r\n                'insert',\r\n                el.getAttribute('data-insert'),\r\n                {\r\n                    focus: true,\r\n                    feedback: true,\r\n                    mode: 'math',\r\n                    format: 'latex',\r\n                    resetStyle: true,\r\n                },\r\n            ];\r\n        }\r\n        else if (el.getAttribute('data-latex')) {\r\n            handlers = [\r\n                'insert',\r\n                el.getAttribute('data-latex'),\r\n                {\r\n                    focus: true,\r\n                    feedback: true,\r\n                    mode: 'math',\r\n                    format: 'latex',\r\n                    resetStyle: true,\r\n                },\r\n            ];\r\n        }\r\n        else {\r\n            handlers = [\r\n                'typedText',\r\n                el.getAttribute('data-key') || el.textContent,\r\n                { focus: true, feedback: true, simulateKeystroke: true },\r\n            ];\r\n        }\r\n        if (chainedCommand) {\r\n            handlers = [chainedCommand, handlers];\r\n        }\r\n        if (el.getAttribute('data-alt-keys')) {\r\n            const altKeys = ALT_KEYS[el.getAttribute('data-alt-keys')];\r\n            if (altKeys) {\r\n                handlers = {\r\n                    default: handlers,\r\n                    pressAndHoldStart: [\r\n                        'showAlternateKeys',\r\n                        el.getAttribute('data-alt-keys'),\r\n                        altKeys,\r\n                    ],\r\n                    pressAndHoldEnd: 'hideAlternateKeys',\r\n                };\r\n            }\r\n            else {\r\n                console.warn('Unknown alt key set: \"' + el.getAttribute('data-alt-keys'));\r\n            }\r\n        }\r\n        attachButtonHandlers(mf, el, handlers);\r\n    }\r\n}\r\n/**\r\n * Expand the shortcut tags (e.g. <row>) inside a layer.\r\n */\r\nfunction expandLayerMarkup(mf, layer) {\r\n    const ROWS = {\r\n        // First row should be 10 key wide\r\n        // Second row should be 10 key wide\r\n        // Third row should be 8.5 key wide\r\n        // One row should have ^ (shift key) which is 1.5 key wide\r\n        // One row should have ~ (delete key) which is .5 or 1.5 key wide\r\n        qwerty: {\r\n            'lower-1': 'qwertyuiop',\r\n            'lower-2': ' asdfghjkl ',\r\n            'lower-3': '^zxcvbnm~',\r\n            'upper-1': 'QWERTYUIOP',\r\n            'upper-2': ' ASDFGHJKL ',\r\n            'upper-3': '^ZXCVBNM~',\r\n            'numpad-1': '789/',\r\n            'numpad-2': '456*',\r\n            'numpad-3': '123-',\r\n            'numpad-4': '0.=+',\r\n        },\r\n        azerty: {\r\n            'lower-1': 'azertyuiop',\r\n            'lower-2': 'qsdfghjklm',\r\n            'lower-3': '^ wxcvbn ~',\r\n            'upper-1': 'AZERTYUIOP',\r\n            'upper-2': 'QSDFGHJKLM',\r\n            'upper-3': '^ WXCVBN ~',\r\n        },\r\n        qwertz: {\r\n            'lower-1': 'qwertzuiop',\r\n            'lower-2': ' asdfghjkl ',\r\n            'lower-3': '^yxcvbnm~',\r\n            'upper-1': 'QWERTZUIOP',\r\n            'upper-2': ' ASDFGHJKL',\r\n            'upper-3': '^YXCVBNM~',\r\n        },\r\n        dvorak: {\r\n            'lower-1': '^  pyfgcrl ',\r\n            'lower-2': 'aoeuidhtns',\r\n            'lower-3': 'qjkxbmwvz~',\r\n            'upper-1': '^  PYFGCRL ',\r\n            'upper-2': 'AOEUIDHTNS',\r\n            'upper-3': 'QJKXBMWVZ~',\r\n        },\r\n        colemak: {\r\n            'lower-1': ' qwfpgjluy ',\r\n            'lower-2': 'arstdhneio',\r\n            'lower-3': '^zxcvbkm~',\r\n            'upper-1': ' QWFPGNLUY ',\r\n            'upper-2': 'ARSTDHNEIO',\r\n            'upper-3': '^ZXCVBKM~',\r\n        },\r\n    };\r\n    const layout = ROWS[mf.options.virtualKeyboardLayout]\r\n        ? ROWS[mf.options.virtualKeyboardLayout]\r\n        : ROWS['qwerty'];\r\n    let result = layer;\r\n    let row;\r\n    result = result.replace(/<arrows\\/>/g, `\n        <li class='action' data-command='[\"performWithFeedback\",\"moveToPreviousChar\"]'\n            data-shifted='<svg><use xlink:href=\"#svg-angle-double-left\" /></svg>'\n            data-shifted-command='[\"performWithFeedback\",\"extendToPreviousChar\"]'>\n            <svg><use xlink:href='#svg-arrow-left' /></svg>\n        </li>\n        <li class='action' data-command='[\"performWithFeedback\",\"moveToNextChar\"]'\n            data-shifted='<svg><use xlink:href=\"#svg-angle-double-right\" /></svg>'\n            data-shifted-command='[\"performWithFeedback\",\"extendToNextChar\"]'>\n            <svg><use xlink:href='#svg-arrow-right' /></svg>\n        </li>\n        <li class='action' data-command='[\"performWithFeedback\",\"moveToNextPlaceholder\"]'>\n        <svg><use xlink:href='#svg-tab' /></svg></li>`);\r\n    let m = result.match(/(<row\\s+)(.*)((?:<\\/row|\\/)>)/);\r\n    while (m) {\r\n        row = '';\r\n        const attributesArray = m[2].match(/[a-zA-Z][a-zA-Z0-9-]*=(['\"])(.*?)\\1/g);\r\n        const attributes = {};\r\n        for (const attribute of attributesArray) {\r\n            const m2 = attribute.match(/([a-zA-Z][a-zA-Z0-9-]*)=(['\"])(.*?)\\2/);\r\n            attributes[m2[1]] = m2[3];\r\n        }\r\n        let keys = layout[attributes['name']];\r\n        if (!keys)\r\n            keys = ROWS['qwerty'][attributes['name']];\r\n        if (!keys) {\r\n            console.warn('Unknown roman keyboard row: ' + attributes['name']);\r\n        }\r\n        else {\r\n            for (const c of keys) {\r\n                let cls = attributes['class'] || '';\r\n                if (cls)\r\n                    cls = ' ' + cls;\r\n                if (c === '~') {\r\n                    row += `<li class='action font-glyph bottom right `;\r\n                    row +=\r\n                        keys.length - (keys.match(/ /g) || []).length / 2 === 10\r\n                            ? 'w10'\r\n                            : 'w15';\r\n                    row += `' data-shifted='<span class=\"warning\"><svg><use xlink:href=\"#svg-trash\" /></svg></span>'\n                        data-shifted-command='\"deleteAll\"'\n                        data-alt-keys='delete' data-command='[\"performWithFeedback\",\"deletePreviousChar\"]'\n                        >&#x232b;</li>`;\r\n                }\r\n                else if (c === ' ') {\r\n                    // Separator\r\n                    row += \"<li class='separator w5'></li>\";\r\n                }\r\n                else if (c === '^') {\r\n                    // Shift key\r\n                    row +=\r\n                        `<li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='` +\r\n                            attributes['shift-layer'] +\r\n                            `'>&#x21e7;</li>`;\r\n                }\r\n                else if (c === '/') {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                            cls +\r\n                            \"' data-alt-keys='/' data-insert='\\\\frac{#@}{#?}'>&divide;</li>\";\r\n                }\r\n                else if (c === '*') {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                            cls +\r\n                            \"' data-alt-keys='*' data-insert='\\\\times '>&times;</li>\";\r\n                }\r\n                else if (c === '-') {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                            cls +\r\n                            \"' data-alt-keys='-' data-key='-' data-alt-keys='-'>&#x2212;</li>\";\r\n                }\r\n                else if (/tt/.test(cls)) {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                            cls +\r\n                            \"' data-alt-keys='\" +\r\n                            c +\r\n                            \"'\" +\r\n                            ` data-command='[\"typedText\",\"` +\r\n                            c +\r\n                            `\",{\"commandMode\":true, \"focus\":true, \"feedback\":true}]'` +\r\n                            '>' +\r\n                            c +\r\n                            '</li>';\r\n                }\r\n                else {\r\n                    row +=\r\n                        \"<li class='keycap\" +\r\n                            cls +\r\n                            \"' data-alt-keys='\" +\r\n                            c +\r\n                            \"'>\" +\r\n                            c +\r\n                            '</li>';\r\n                }\r\n            }\r\n        }\r\n        result = result.replace(new RegExp(m[1] + m[2] + m[3]), row);\r\n        m = result.match(/(<row\\s+)(.*)((?:<\\/row|\\/)>)/);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Construct a virtual keyboard element based on the config options in the\r\n * mathfield and an optional theme.\r\n */\r\nfunction makeKeyboard(mf, theme) {\r\n    var _a, _b;\r\n    const svgIcons = `<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\n\n            <symbol id=\"svg-command\" viewBox=\"0 0 640 512\">\n                <path d=\"M34.495 36.465l211.051 211.05c4.686 4.686 4.686 12.284 0 16.971L34.495 475.535c-4.686 4.686-12.284 4.686-16.97 0l-7.071-7.07c-4.686-4.686-4.686-12.284 0-16.971L205.947 256 10.454 60.506c-4.686-4.686-4.686-12.284 0-16.971l7.071-7.07c4.686-4.687 12.284-4.687 16.97 0zM640 468v-10c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h328c6.627 0 12-5.373 12-12z\"/>\n            </symbol>\n\n            <symbol id=\"svg-undo\" viewBox=\"0 0 512 512\">\n                <path d=\"M20 8h10c6.627 0 12 5.373 12 12v110.625C85.196 57.047 165.239 7.715 256.793 8.001 393.18 8.428 504.213 120.009 504 256.396 503.786 393.181 392.834 504 256 504c-63.926 0-122.202-24.187-166.178-63.908-5.113-4.618-5.354-12.561-.482-17.433l7.069-7.069c4.503-4.503 11.749-4.714 16.482-.454C150.782 449.238 200.935 470 256 470c117.744 0 214-95.331 214-214 0-117.744-95.331-214-214-214-82.862 0-154.737 47.077-190.289 116H180c6.627 0 12 5.373 12 12v10c0 6.627-5.373 12-12 12H20c-6.627 0-12-5.373-12-12V20c0-6.627 5.373-12 12-12z\"/>\n            </symbol>\n            <symbol id=\"svg-redo\" viewBox=\"0 0 512 512\">\n                <path d=\"M492 8h-10c-6.627 0-12 5.373-12 12v110.625C426.804 57.047 346.761 7.715 255.207 8.001 118.82 8.428 7.787 120.009 8 256.396 8.214 393.181 119.166 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-7.069-7.069c-4.503-4.503-11.749-4.714-16.482-.454C361.218 449.238 311.065 470 256 470c-117.744 0-214-95.331-214-214 0-117.744 95.331-214 214-214 82.862 0 154.737 47.077 190.289 116H332c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h160c6.627 0 12-5.373 12-12V20c0-6.627-5.373-12-12-12z\"/>\n            </symbol>\n            <symbol id=\"svg-arrow-left\" viewBox=\"0 0 192 512\">\n                <path d=\"M25.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L64.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L25 264.5c-4.6-4.7-4.6-12.3.1-17z\"/>\n            </symbol>\n            <symbol id=\"svg-arrow-right\" viewBox=\"0 0 192 512\">\n                    <path d=\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17z\"/>\n            </symbol>\n            <symbol id=\"svg-tab\" viewBox=\"0 0 448 512\">\n                    <path d=\"M32 217.1c0-8.8 7.2-16 16-16h144v-93.9c0-7.1 8.6-10.7 13.6-5.7l143.5 143.1c6.3 6.3 6.3 16.4 0 22.7L205.6 410.4c-5 5-13.6 1.5-13.6-5.7v-93.9H48c-8.8 0-16-7.2-16-16v-77.7m-32 0v77.7c0 26.5 21.5 48 48 48h112v61.9c0 35.5 43 53.5 68.2 28.3l143.6-143c18.8-18.8 18.8-49.2 0-68L228.2 78.9c-25.1-25.1-68.2-7.3-68.2 28.3v61.9H48c-26.5 0-48 21.6-48 48zM436 64h-8c-6.6 0-12 5.4-12 12v360c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12z\"/>\n            </symbol>\n            <symbol id=\"svg-copy\" viewBox=\"0 0 448 512\">\n                <path d=\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM352 32.491a15.88 15.88 0 0 1 7.431 4.195l51.882 51.883A15.885 15.885 0 0 1 415.508 96H352V32.491zM288 464c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V144c0-8.822 7.178-16 16-16h80v240c0 26.51 21.49 48 48 48h112v48zm128-96c0 8.822-7.178 16-16 16H176c-8.822 0-16-7.178-16-16V48c0-8.822 7.178-16 16-16h144v72c0 13.2 10.8 24 24 24h72v240z\"/>\n            </symbol>\n            <symbol id=\"svg-angle-double-right\" viewBox=\"0 0 320 512\">\n                <path d=\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17zm128-17l-117.8-116c-4.7-4.7-12.3-4.7-17 0l-7.1 7.1c-4.7 4.7-4.7 12.3 0 17L255.3 256 153.1 356.4c-4.7 4.7-4.7 12.3 0 17l7.1 7.1c4.7 4.7 12.3 4.7 17 0l117.8-116c4.6-4.7 4.6-12.3-.1-17z\"/>\n            </symbol>\n            <symbol id=\"svg-angle-double-left\" viewBox=\"0 0 320 512\">\n                <path d=\"M153.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L192.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L153 264.5c-4.6-4.7-4.6-12.3.1-17zm-128 17l117.8 116c4.7 4.7 12.3 4.7 17 0l7.1-7.1c4.7-4.7 4.7-12.3 0-17L64.7 256l102.2-100.4c4.7-4.7 4.7-12.3 0-17l-7.1-7.1c-4.7-4.7-12.3-4.7-17 0L25 247.5c-4.6 4.7-4.6 12.3.1 17z\"/>\n            </symbol>\n            <symbol id=\"svg-trash\" viewBox=\"0 0 448 512\">\n                <path d=\"M336 64l-33.6-44.8C293.3 7.1 279.1 0 264 0h-80c-15.1 0-29.3 7.1-38.4 19.2L112 64H24C10.7 64 0 74.7 0 88v2c0 3.3 2.7 6 6 6h26v368c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V96h26c3.3 0 6-2.7 6-6v-2c0-13.3-10.7-24-24-24h-88zM184 32h80c5 0 9.8 2.4 12.8 6.4L296 64H152l19.2-25.6c3-4 7.8-6.4 12.8-6.4zm200 432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V96h320v368zm-176-44V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm-80 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm160 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12z\"/>\n            </symbol>\n        </svg>\n        `;\r\n    // <symbol id=\"svg-wikipedia\" viewBox=\"0 0 640 512\">\r\n    //         <path d=\"M640 51.2l-.3 12.2c-28.1.8-45 15.8-55.8 40.3-25 57.8-103.3 240-155.3 358.6H415l-81.9-193.1c-32.5 63.6-68.3 130-99.2 193.1-.3.3-15 0-15-.3C172 352.3 122.8 243.4 75.8 133.4 64.4 106.7 26.4 63.4.2 63.7c0-3.1-.3-10-.3-14.2h161.9v13.9c-19.2 1.1-52.8 13.3-43.3 34.2 21.9 49.7 103.6 240.3 125.6 288.6 15-29.7 57.8-109.2 75.3-142.8-13.9-28.3-58.6-133.9-72.8-160-9.7-17.8-36.1-19.4-55.8-19.7V49.8l142.5.3v13.1c-19.4.6-38.1 7.8-29.4 26.1 18.9 40 30.6 68.1 48.1 104.7 5.6-10.8 34.7-69.4 48.1-100.8 8.9-20.6-3.9-28.6-38.6-29.4.3-3.6 0-10.3.3-13.6 44.4-.3 111.1-.3 123.1-.6v13.6c-22.5.8-45.8 12.8-58.1 31.7l-59.2 122.8c6.4 16.1 63.3 142.8 69.2 156.7L559.2 91.8c-8.6-23.1-36.4-28.1-47.2-28.3V49.6l127.8 1.1.2.5z\"/>\r\n    // </symbol>\r\n    // <symbol id=\"svg-link\" viewBox=\"0 0 512 512\">\r\n    //         <path d=\"M301.148 394.702l-79.2 79.19c-50.778 50.799-133.037 50.824-183.84 0-50.799-50.778-50.824-133.037 0-183.84l79.19-79.2a132.833 132.833 0 0 1 3.532-3.403c7.55-7.005 19.795-2.004 20.208 8.286.193 4.807.598 9.607 1.216 14.384.481 3.717-.746 7.447-3.397 10.096-16.48 16.469-75.142 75.128-75.3 75.286-36.738 36.759-36.731 96.188 0 132.94 36.759 36.738 96.188 36.731 132.94 0l79.2-79.2.36-.36c36.301-36.672 36.14-96.07-.37-132.58-8.214-8.214-17.577-14.58-27.585-19.109-4.566-2.066-7.426-6.667-7.134-11.67a62.197 62.197 0 0 1 2.826-15.259c2.103-6.601 9.531-9.961 15.919-7.28 15.073 6.324 29.187 15.62 41.435 27.868 50.688 50.689 50.679 133.17 0 183.851zm-90.296-93.554c12.248 12.248 26.362 21.544 41.435 27.868 6.388 2.68 13.816-.68 15.919-7.28a62.197 62.197 0 0 0 2.826-15.259c.292-5.003-2.569-9.604-7.134-11.67-10.008-4.528-19.371-10.894-27.585-19.109-36.51-36.51-36.671-95.908-.37-132.58l.36-.36 79.2-79.2c36.752-36.731 96.181-36.738 132.94 0 36.731 36.752 36.738 96.181 0 132.94-.157.157-58.819 58.817-75.3 75.286-2.651 2.65-3.878 6.379-3.397 10.096a163.156 163.156 0 0 1 1.216 14.384c.413 10.291 12.659 15.291 20.208 8.286a131.324 131.324 0 0 0 3.532-3.403l79.19-79.2c50.824-50.803 50.799-133.062 0-183.84-50.802-50.824-133.062-50.799-183.84 0l-79.2 79.19c-50.679 50.682-50.688 133.163 0 183.851z\"/>\r\n    // </symbol>\r\n    //     <symbol id=\"svg-external-link\" viewBox=\"0 0 448 512\">\r\n    //     <path d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm16 400c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V80c0-8.822 7.178-16 16-16h352c8.822 0 16 7.178 16 16v352zM99.515 374.828c-4.686-4.686-4.686-12.284 0-16.971l195.15-195.15-.707-.707-89.958.342c-6.627 0-12-5.373-12-12v-9.999c0-6.628 5.372-12 12-12L340 128c6.627 0 12 5.372 12 12l-.343 136c0 6.627-5.373 12-12 12h-9.999c-6.627 0-12-5.373-12-12l.342-89.958-.707-.707-195.15 195.15c-4.686 4.686-12.284 4.686-16.971 0l-5.657-5.657z\"/>\r\n    // </symbol>\r\n    // <symbol id=\"svg-external-link\" viewBox=\"0 0 512 512\">\r\n    //     <path d=\"M256 40c118.621 0 216 96.075 216 216 0 119.291-96.61 216-216 216-119.244 0-216-96.562-216-216 0-119.203 96.602-216 216-216m0-32C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm-36 344h12V232h-12c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h48c6.627 0 12 5.373 12 12v140h12c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12h-72c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12zm36-240c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"/>\r\n    // </symbol>\r\n    let markup = svgIcons;\r\n    inject(null, css_248z);\r\n    // Auto-populate the ALT_KEYS table\r\n    ALT_KEYS_BASE['foreground-color'] = [];\r\n    for (const color of LINE_COLORS) {\r\n        ALT_KEYS_BASE['foreground-color'].push({\r\n            classes: 'small-button',\r\n            content: '<span style=\"border-radius:50%;width:32px;height:32px; box-sizing: border-box; border: 3px solid ' +\r\n                color +\r\n                '\"></span>',\r\n            command: '[\"applyStyle\",{\"color\":\"' + color + '\"}]',\r\n        });\r\n    }\r\n    ALT_KEYS_BASE['background-color'] = [];\r\n    for (const color of AREA_COLORS) {\r\n        ALT_KEYS_BASE['background-color'].push({\r\n            classes: 'small-button',\r\n            content: '<span style=\"border-radius:50%;width:32px;height:32px; background:' +\r\n                color +\r\n                '\"></span>',\r\n            command: '[\"applyStyle\",{\"backgroundColor\":\"' + color + '\"}]',\r\n        });\r\n    }\r\n    ALT_KEYS = { ...ALT_KEYS_BASE };\r\n    Object.keys(ALT_KEYS).forEach((key) => {\r\n        ALT_KEYS[key] = ALT_KEYS[key].slice();\r\n    });\r\n    const UPPER_ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    const LOWER_ALPHA = 'abcdefghijklmnopqrstuvwxyz';\r\n    const DIGITS = '0123456789';\r\n    // Define the alternate set for uppercase keys\r\n    for (let i = 0; i < 26; i++) {\r\n        const key = UPPER_ALPHA[i];\r\n        if (!ALT_KEYS[key])\r\n            ALT_KEYS[key] = [];\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbb{' + key + '}',\r\n            aside: 'blackboard',\r\n            insert: '\\\\mathbb{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + key + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + key + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathtt{' + key + '}',\r\n            aside: 'monospace',\r\n            insert: '\\\\mathtt{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathcal{' + key + '}',\r\n            aside: 'calligraphy',\r\n            insert: '\\\\mathcal{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + key + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + key + '}',\r\n        });\r\n    }\r\n    // Define the alternate set for lowercase keys\r\n    for (let i = 0; i <= 26; i++) {\r\n        const key = LOWER_ALPHA[i];\r\n        if (!ALT_KEYS[key])\r\n            ALT_KEYS[key] = [];\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + key + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + key + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathtt{' + key + '}',\r\n            aside: 'monospace',\r\n            insert: '\\\\mathtt{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + key + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + key + '}',\r\n        });\r\n    }\r\n    for (let i = 0; i < 10; i++) {\r\n        const key = DIGITS[i];\r\n        if (!ALT_KEYS[key])\r\n            ALT_KEYS[key] = [];\r\n        // The mathbb font does not appear to include digits,\r\n        // although it's supposed to.\r\n        // ALT_KEYS[key].push({\r\n        //         latex: '\\\\underset{\\\\textsf{\\\\footnotesize blackboard}}{\\\\mathbb{' + key + '}}',\r\n        //         insert: '\\\\mathbb{' + key + '}}'});\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathbf{' + key + '}',\r\n            aside: 'bold',\r\n            insert: '\\\\mathbf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathsf{' + key + '}',\r\n            aside: 'sans',\r\n            insert: '\\\\mathsf{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathtt{' + key + '}',\r\n            aside: 'monospace',\r\n            insert: '\\\\mathtt{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathcal{' + key + '}',\r\n            aside: 'script',\r\n            insert: '\\\\mathcal{' + key + '}',\r\n        });\r\n        ALT_KEYS[key].unshift({\r\n            latex: '\\\\mathfrak{' + key + '}',\r\n            aside: 'fraktur',\r\n            insert: '\\\\mathfrak{' + key + '}',\r\n        });\r\n    }\r\n    let keyboardIDs = mf.options.virtualKeyboards;\r\n    if (!keyboardIDs) {\r\n        keyboardIDs = 'all';\r\n    }\r\n    keyboardIDs = keyboardIDs.replace(/\\ball\\b/i, 'numeric functions symbols roman  greek');\r\n    const layers = {\r\n        ...LAYERS,\r\n        ...((_a = mf.options.customVirtualKeyboardLayers) !== null && _a !== void 0 ? _a : {}),\r\n    };\r\n    const keyboards = {\r\n        ...KEYBOARDS,\r\n        ...((_b = mf.options.customVirtualKeyboards) !== null && _b !== void 0 ? _b : {}),\r\n    };\r\n    const keyboardList = keyboardIDs.replace(/\\s+/g, ' ').split(' ');\r\n    for (const keyboard of keyboardList) {\r\n        if (!keyboards[keyboard]) {\r\n            console.error('Unknown virtual keyboard \"' + keyboard + '\"');\r\n            break;\r\n        }\r\n        // Add the default layer to the list of layers,\r\n        // and make sure the list of layers is uniquified.\r\n        let keyboardLayers = keyboards[keyboard].layers || [];\r\n        if (keyboards[keyboard].layer) {\r\n            keyboardLayers.push(keyboards[keyboard].layer);\r\n        }\r\n        keyboardLayers = Array.from(new Set(keyboardLayers));\r\n        for (const layerName of keyboardLayers) {\r\n            if (!layers[layerName]) {\r\n                console.error('Unknown virtual keyboard layer: \"' + layerName + '\"');\r\n                break;\r\n            }\r\n            if (typeof layers[layerName] === 'object') {\r\n                const layer = layers[layerName];\r\n                // Process JSON layer to web element based layer.\r\n                let tempLayer = '';\r\n                if (layer.styles) {\r\n                    tempLayer += `<style>${layer.styles}</style>`;\r\n                }\r\n                if (layer.backdrop) {\r\n                    tempLayer += `<div class='${layer.backdrop}'>`;\r\n                }\r\n                if (layer.container) {\r\n                    tempLayer += `<div class='${layer.container}'>`;\r\n                }\r\n                if (layer.rows) {\r\n                    tempLayer += `<div class='rows'>`;\r\n                    for (const row of layer.rows) {\r\n                        tempLayer += `<ul>`;\r\n                        for (const keycap of row) {\r\n                            tempLayer += `<li`;\r\n                            if (keycap.class) {\r\n                                tempLayer += ` class=\"${keycap.class}\"`;\r\n                            }\r\n                            if (keycap.key) {\r\n                                tempLayer += ` data-key=\"${keycap.key}\"`;\r\n                            }\r\n                            if (keycap.command) {\r\n                                if (typeof keycap.command === 'string') {\r\n                                    tempLayer += ` data-command='\"${keycap.command}\"'`;\r\n                                }\r\n                                else {\r\n                                    tempLayer += ` data-command='`;\r\n                                    tempLayer += JSON.stringify(keycap.command);\r\n                                    tempLayer += `'`;\r\n                                }\r\n                            }\r\n                            if (keycap.insert) {\r\n                                tempLayer += ` data-insert=\"${keycap.insert}\"`;\r\n                            }\r\n                            if (keycap.latex) {\r\n                                tempLayer += ` data-latex=\"${keycap.latex}\"`;\r\n                            }\r\n                            if (keycap.aside) {\r\n                                tempLayer += ` data-aside=\"${keycap.aside}\"`;\r\n                            }\r\n                            if (keycap.altKeys) {\r\n                                tempLayer += ` data-alt-keys=\"${keycap.altKeys}\"`;\r\n                            }\r\n                            if (keycap.shifted) {\r\n                                tempLayer += ` data-shifted=\"${keycap.shifted}\"`;\r\n                            }\r\n                            if (keycap.shiftedCommand) {\r\n                                tempLayer += ` data-shifted-command=\"${keycap.shiftedCommand}\"`;\r\n                            }\r\n                            tempLayer += `>${keycap.label ? keycap.label : ''}</li>`;\r\n                        }\r\n                        tempLayer += `</ul>`;\r\n                    }\r\n                    tempLayer += `</div>`;\r\n                }\r\n                if (layer.container) {\r\n                    tempLayer += '</div>';\r\n                }\r\n                if (layer.backdrop) {\r\n                    tempLayer += '</div>';\r\n                }\r\n                layers[layerName] = tempLayer;\r\n            }\r\n            markup +=\r\n                `<div tabindex=\"-1\" class='keyboard-layer' data-layer='` +\r\n                    layerName +\r\n                    `'>`;\r\n            markup += makeKeyboardToolbar(mf, keyboardIDs, keyboard);\r\n            const layerMarkup = layers[layerName];\r\n            // A layer can contain 'shortcuts' (i.e. <row> tags) that need to\r\n            // be expanded\r\n            markup += expandLayerMarkup(mf, layerMarkup);\r\n            markup += '</div>';\r\n        }\r\n    }\r\n    const result = new VirtualKeyboard(mf);\r\n    result.element.className = 'ML__keyboard';\r\n    if (theme) {\r\n        result.element.classList.add(theme);\r\n    }\r\n    else if (mf.options.virtualKeyboardTheme) {\r\n        result.element.classList.add(mf.options.virtualKeyboardTheme);\r\n    }\r\n    result.element.innerHTML = mf.options.createHTML(markup);\r\n    // Attach the element handlers\r\n    makeKeycap(mf, [].slice.call(result.element.querySelectorAll('.keycap, .action, .fnbutton, .bigfnbutton')));\r\n    const elList = result.element.getElementsByClassName('layer-switch');\r\n    for (let i = 0; i < elList.length; ++i) {\r\n        if (elList[i].classList.contains('shift')) {\r\n            // This is a potential press-and-hold layer switch\r\n            attachButtonHandlers(mf, elList[i], {\r\n                // When the modifier is initially pressed, we will shift the labels\r\n                // (if available)\r\n                pressed: ['shiftKeyboardLayer', 'shift'],\r\n                // If the key is released before a delay, we switch to the target layer\r\n                default: [\r\n                    'switchKeyboardLayer',\r\n                    elList[i].getAttribute('data-layer'),\r\n                ],\r\n                // If the key is released after a longer delay, we restore the\r\n                // shifted labels\r\n                pressAndHoldEnd: 'unshiftKeyboardLayer',\r\n            });\r\n        }\r\n        else {\r\n            // This is a simple layer switch\r\n            attachButtonHandlers(mf, elList[i], {\r\n                default: [\r\n                    'switchKeyboardLayer',\r\n                    elList[i].getAttribute('data-layer'),\r\n                ],\r\n            });\r\n        }\r\n    }\r\n    // Select the first keyboard as the initial one.\r\n    const layerElements = result.element.getElementsByClassName('keyboard-layer');\r\n    Array.from(layerElements).forEach((x) => {\r\n        x.addEventListener('mousedown', (evt) => {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        });\r\n        x.addEventListener('touchstart', (evt) => {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }, { passive: false });\r\n    });\r\n    layerElements[0].classList.add('is-visible');\r\n    return result;\r\n}\r\nfunction hideAlternateKeys() {\r\n    const altContainer = document.getElementById('mathlive-alternate-keys-panel');\r\n    if (altContainer) {\r\n        altContainer.classList.remove('is-visible');\r\n        altContainer.innerHTML = '';\r\n        releaseSharedElement(altContainer);\r\n    }\r\n    return false;\r\n}\r\n/*\r\n * Restore the key labels and commands to the state before a modifier key\r\n * was pressed.\r\n *\r\n */\r\nfunction unshiftKeyboardLayer(mathfield) {\r\n    var _a;\r\n    if (!isValidMathfield(mathfield))\r\n        return false;\r\n    hideAlternateKeys();\r\n    const keycaps = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelectorAll('div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action');\r\n    if (keycaps) {\r\n        for (let i = 0; i < keycaps.length; i++) {\r\n            const keycap = keycaps[i];\r\n            const content = keycap.getAttribute('data-unshifted-content');\r\n            if (content) {\r\n                keycap.innerHTML = mathfield.options.createHTML(content);\r\n            }\r\n            const command = keycap.getAttribute('data-unshifted-command');\r\n            if (command) {\r\n                keycap.setAttribute('data-' + mathfield.options.namespace + 'command', command);\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateUndoRedoButtons(mathfield) {\r\n    var _a;\r\n    const virtualKeyboardToolbar = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelector('.keyboard-toolbar');\r\n    if (virtualKeyboardToolbar) {\r\n        const undoButton = virtualKeyboardToolbar.querySelector('[data-command=\\'\"undo\"\\']');\r\n        const redoButton = virtualKeyboardToolbar.querySelector('[data-command=\\'\"redo\"\\']');\r\n        if (mathfield.canRedo()) {\r\n            redoButton.classList.remove('disabled');\r\n        }\r\n        else {\r\n            redoButton.classList.add('disabled');\r\n        }\r\n        if (mathfield.canUndo()) {\r\n            undoButton.classList.remove('disabled');\r\n        }\r\n        else {\r\n            undoButton.classList.add('disabled');\r\n        }\r\n    }\r\n}\n\n/*\r\n * Alternate options are displayed when a key on the virtual keyboard is pressed\r\n * and held.\r\n *\r\n */\r\nregister$2({\r\n    showAlternateKeys: (mathfield, keycap, altKeys) => {\r\n        var _a, _b;\r\n        const altContainer = getSharedElement('mathlive-alternate-keys-panel', 'ML__keyboard alternate-keys');\r\n        if ((_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.classList.contains('material')) {\r\n            altContainer.classList.add('material');\r\n        }\r\n        if (altKeys.length >= 7) {\r\n            // Width 4\r\n            altContainer.style.width = '286px';\r\n        }\r\n        else if (altKeys.length === 4 || altKeys.length === 2) {\r\n            // Width 2\r\n            altContainer.style.width = '146px';\r\n        }\r\n        else if (altKeys.length === 1) {\r\n            // Width 1\r\n            altContainer.style.width = '86px';\r\n        }\r\n        else {\r\n            // Width 3\r\n            altContainer.style.width = '146px';\r\n        }\r\n        // Reset container height\r\n        altContainer.style.height = 'auto';\r\n        let markup = '';\r\n        for (const altKey of altKeys) {\r\n            markup += '<li';\r\n            if (typeof altKey === 'string') {\r\n                markup +=\r\n                    ' data-latex=\"' + altKey.replace(/\"/g, '&quot;') + '\"';\r\n            }\r\n            else {\r\n                if (altKey.latex) {\r\n                    markup +=\r\n                        ' data-latex=\"' +\r\n                            altKey.latex.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                }\r\n                if (altKey.content) {\r\n                    markup +=\r\n                        ' data-content=\"' +\r\n                            altKey.content.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                }\r\n                if (altKey.insert) {\r\n                    markup +=\r\n                        ' data-insert=\"' +\r\n                            altKey.insert.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                }\r\n                if (altKey.command) {\r\n                    markup +=\r\n                        \" data-command='\" +\r\n                            altKey.command.replace(/\"/g, '&quot;') +\r\n                            \"'\";\r\n                }\r\n                if (altKey.aside) {\r\n                    markup +=\r\n                        ' data-aside=\"' +\r\n                            altKey.aside.replace(/\"/g, '&quot;') +\r\n                            '\"';\r\n                }\r\n                if (altKey.classes) {\r\n                    markup += ' data-classes=\"' + altKey.classes + '\"';\r\n                }\r\n            }\r\n            markup += '>';\r\n            markup += altKey.label || '';\r\n            markup += '</li>';\r\n        }\r\n        markup = '<ul>' + markup + '</ul>';\r\n        altContainer.innerHTML = mathfield.options.createHTML(markup);\r\n        makeKeycap(mathfield, [].slice.call(altContainer.getElementsByTagName('li')), 'performAlternateKeys');\r\n        const keycapEl = (_b = mathfield.virtualKeyboard) === null || _b === void 0 ? void 0 : _b.element.querySelector('div.keyboard-layer.is-visible div.rows ul li[data-alt-keys=\"' +\r\n            keycap +\r\n            '\"]');\r\n        const position = keycapEl.getBoundingClientRect();\r\n        if (position) {\r\n            if (position.top - altContainer.clientHeight < 0) {\r\n                // altContainer.style.maxWidth = '320px';  // Up to six columns\r\n                altContainer.style.width = 'auto';\r\n                if (altKeys.length <= 6) {\r\n                    altContainer.style.height = '56px'; // 1 row\r\n                }\r\n                else if (altKeys.length <= 12) {\r\n                    altContainer.style.height = '108px'; // 2 rows\r\n                }\r\n                else {\r\n                    altContainer.style.height = '205px'; // 3 rows\r\n                }\r\n            }\r\n            const top = (position.top - altContainer.clientHeight + 5).toString() +\r\n                'px';\r\n            const left = Math.max(0, Math.min(window.innerWidth - altContainer.offsetWidth, (position.left +\r\n                position.right -\r\n                altContainer.offsetWidth) /\r\n                2)) + 'px';\r\n            altContainer.style.transform =\r\n                'translate(' + left + ',' + top + ')';\r\n            altContainer.classList.add('is-visible');\r\n        }\r\n        return false;\r\n    },\r\n}, { target: 'virtual-keyboard' });\r\nfunction switchKeyboardLayer(mathfield, layer) {\r\n    var _a;\r\n    if (mathfield.options.virtualKeyboardMode !== 'off') {\r\n        if (layer !== 'lower-command' &&\r\n            layer !== 'upper-command' &&\r\n            layer !== 'symbols-command') {\r\n            // If we switch to a non-command keyboard layer, first exit command mode.\r\n            complete(mathfield);\r\n        }\r\n        showVirtualKeyboard(mathfield);\r\n        // If the alternate keys panel was visible, hide it\r\n        hideAlternateKeys();\r\n        // If we were in a temporarily shifted state (shift-key held down)\r\n        // restore our state before switching to a new layer.\r\n        unshiftKeyboardLayer(mathfield);\r\n        const layers = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.getElementsByClassName('keyboard-layer');\r\n        // Search for the requested layer\r\n        let found = false;\r\n        for (let i = 0; i < layers.length; i++) {\r\n            if (layers[i].dataset.layer === layer) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        // We did find the layer, switch to it.\r\n        // If we didn't find it, do nothing and keep the current layer\r\n        if (found) {\r\n            for (let i = 0; i < layers.length; i++) {\r\n                if (layers[i].dataset.layer === layer) {\r\n                    layers[i].classList.add('is-visible');\r\n                }\r\n                else {\r\n                    layers[i].classList.remove('is-visible');\r\n                }\r\n            }\r\n        }\r\n        mathfield.focus();\r\n    }\r\n    return true;\r\n}\r\n/*\r\n * Temporarily change the labels and the command of the keys\r\n * (for example when a modifier key is held down.)\r\n */\r\nregister$2({\r\n    shiftKeyboardLayer: (mathfield) => {\r\n        var _a;\r\n        const keycaps = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelectorAll('div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action');\r\n        if (keycaps) {\r\n            for (let i = 0; i < keycaps.length; i++) {\r\n                const keycap = keycaps[i];\r\n                let shiftedContent = keycap.getAttribute('data-shifted');\r\n                if (shiftedContent || /^[a-z]$/.test(keycap.innerHTML)) {\r\n                    keycap.setAttribute('data-unshifted-content', keycap.innerHTML);\r\n                    if (!shiftedContent) {\r\n                        shiftedContent = keycap.innerHTML.toUpperCase();\r\n                    }\r\n                    keycap.innerHTML = mathfield.options.createHTML(shiftedContent);\r\n                    const command = keycap.getAttribute('data-' + mathfield.options.namespace + 'command');\r\n                    if (command) {\r\n                        keycap.setAttribute('data-unshifted-command', command);\r\n                        const shifteCommand = keycap.getAttribute('data-shifted-command');\r\n                        if (shifteCommand) {\r\n                            keycap.setAttribute('data-' +\r\n                                mathfield.options.namespace +\r\n                                'command', shifteCommand);\r\n                        }\r\n                        else {\r\n                            const commandObj = JSON.parse(command);\r\n                            if (isArray(commandObj)) {\r\n                                commandObj[1] = commandObj[1].toUpperCase();\r\n                            }\r\n                            keycap.setAttribute('data-' +\r\n                                mathfield.options.namespace +\r\n                                'command', JSON.stringify(commandObj));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n}, { target: 'virtual-keyboard' });\r\nregister$2({\r\n    hideAlternateKeys: () => hideAlternateKeys(),\r\n    /*\r\n     * The command invoked when an alternate key is pressed.\r\n     * We need to hide the Alternate Keys panel, then perform the\r\n     * command.\r\n     */\r\n    performAlternateKeys: (mathfield, command) => {\r\n        hideAlternateKeys();\r\n        return mathfield.executeCommand(command);\r\n    },\r\n    switchKeyboardLayer: (mathfield, layer) => switchKeyboardLayer(mathfield, layer),\r\n    unshiftKeyboardLayer: (mathfield) => unshiftKeyboardLayer(mathfield),\r\n    insertAndUnshiftKeyboardLayer: (mathfield, c) => {\r\n        mathfield.insert(c);\r\n        unshiftKeyboardLayer(mathfield);\r\n        return true;\r\n    },\r\n}, { target: 'virtual-keyboard' });\r\nregister$2({\r\n    /* Toggle the virtual keyboard, but switch to the alternate theme if available */\r\n    toggleVirtualKeyboardAlt: (mathfield) => {\r\n        var _a, _b;\r\n        let hadAltTheme = false;\r\n        if ((_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element) {\r\n            hadAltTheme = (_b = mathfield.virtualKeyboard) === null || _b === void 0 ? void 0 : _b.element.classList.contains('material');\r\n            mathfield.virtualKeyboard.dispose();\r\n            delete mathfield.virtualKeyboard;\r\n        }\r\n        showVirtualKeyboard(mathfield, hadAltTheme ? '' : 'material');\r\n        return false;\r\n    },\r\n    /** Toggle the virtual keyboard, but switch another keyboard layout */\r\n    toggleVirtualKeyboardShift: (mathfield) => {\r\n        var _a, _b;\r\n        mathfield.options.virtualKeyboardLayout = {\r\n            qwerty: 'azerty',\r\n            azerty: 'qwertz',\r\n            qwertz: 'dvorak',\r\n            dvorak: 'colemak',\r\n            colemak: 'qwerty',\r\n        }[mathfield.options.virtualKeyboardLayout];\r\n        const layer = (_b = (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.querySelector('div.keyboard-layer.is-visible').id) !== null && _b !== void 0 ? _b : '';\r\n        if (mathfield.virtualKeyboard) {\r\n            mathfield.virtualKeyboard.dispose();\r\n            delete mathfield.virtualKeyboard;\r\n        }\r\n        showVirtualKeyboard(mathfield);\r\n        if (layer) {\r\n            switchKeyboardLayer(mathfield, layer);\r\n        }\r\n        return false;\r\n    },\r\n}, { target: 'virtual-keyboard' });\r\nfunction showVirtualKeyboard(mathfield, theme = '') {\r\n    mathfield.virtualKeyboardVisible = false;\r\n    toggleVirtualKeyboard(mathfield, theme);\r\n    return false;\r\n}\r\nfunction hideVirtualKeyboard(mathfield) {\r\n    mathfield.virtualKeyboardVisible = true;\r\n    toggleVirtualKeyboard(mathfield);\r\n    return false;\r\n}\r\nfunction toggleVirtualKeyboard(mathfield, theme) {\r\n    var _a, _b, _c;\r\n    mathfield.virtualKeyboardVisible = !mathfield.virtualKeyboardVisible;\r\n    if (mathfield.virtualKeyboardVisible) {\r\n        mathfield.focus();\r\n        if ((_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element) {\r\n            mathfield.virtualKeyboard.element.classList.add('is-visible');\r\n        }\r\n        else {\r\n            // Construct the virtual keyboard\r\n            mathfield.virtualKeyboard = makeKeyboard(mathfield, theme);\r\n            // Let's make sure that tapping on the keyboard focuses the field\r\n            on(mathfield.virtualKeyboard.element, 'touchstart:passive mousedown', () => {\r\n                mathfield.focus();\r\n            });\r\n            document.body.appendChild(mathfield.virtualKeyboard.element);\r\n        }\r\n        // For the transition effect to work, the property has to be changed\r\n        // after the insertion in the DOM. Use setTimeout\r\n        window.setTimeout(() => {\r\n            var _a;\r\n            (_a = mathfield.virtualKeyboard) === null || _a === void 0 ? void 0 : _a.element.classList.add('is-visible');\r\n        }, 1);\r\n    }\r\n    else if ((_b = mathfield.virtualKeyboard) === null || _b === void 0 ? void 0 : _b.element) {\r\n        mathfield.virtualKeyboard.element.classList.remove('is-visible');\r\n    }\r\n    if (((_c = mathfield.virtualKeyboard) === null || _c === void 0 ? void 0 : _c.element) &&\r\n        typeof mathfield.options.onVirtualKeyboardToggle === 'function') {\r\n        mathfield.options.onVirtualKeyboardToggle(mathfield, mathfield.virtualKeyboardVisible, mathfield.virtualKeyboard.element);\r\n    }\r\n    return false;\r\n}\r\nregister$2({\r\n    toggleVirtualKeyboard: (mathfield, theme) => toggleVirtualKeyboard(mathfield, theme),\r\n    hideVirtualKeyboard: (mathfield) => hideVirtualKeyboard(mathfield),\r\n    showVirtualKeyboard: (mathfield, theme) => showVirtualKeyboard(mathfield, theme),\r\n}, { target: 'virtual-keyboard' });\n\nvar css_248z$1 = \"@-webkit-keyframes ML__caret-blink{0%,to{opacity:1}50%{opacity:0}}@keyframes ML__caret-blink{0%,to{opacity:1}50%{opacity:0}}.ML__caret:after{content:\\\"\\\";border:none;border-radius:2px;border-right:2px solid var(--caret,hsl(var(--hue,212),40%,49%));margin-right:-2px;position:relative;left:-1px;-webkit-animation:ML__caret-blink 1.05s step-end infinite forwards;animation:ML__caret-blink 1.05s step-end infinite forwards}.ML__text-caret:after{content:\\\"\\\";border:none;border-radius:1px;border-right:1px solid var(--caret,hsl(var(--hue,212),40%,49%));margin-right:-1px;position:relative;left:0;-webkit-animation:ML__caret-blink 1.05s step-end infinite forwards;animation:ML__caret-blink 1.05s step-end infinite forwards}.ML__command-caret:after{content:\\\"_\\\";border:none;margin-right:-1ex;position:relative;color:var(--caret,hsl(var(--hue,212),40%,49%));-webkit-animation:ML__caret-blink 1.05s step-end infinite forwards;animation:ML__caret-blink 1.05s step-end infinite forwards}.ML__fieldcontainer{display:flex;flex-flow:row;justify-content:space-between;align-items:flex-end;min-height:39px;touch-action:none;width:100%;--hue:212;--secondary:hsl(var(--hue,212),19%,26%);--on-secondary:hsl(var(--hue,212),19%,26%)}.ML__fieldcontainer__field{align-self:center;position:relative;overflow:hidden;line-height:0;padding:2px;width:100%}.ML__virtual-keyboard-toggle{display:flex;align-self:center;align-items:center;flex-shrink:0;flex-direction:column;justify-content:center;width:34px;height:34px;padding:0;margin-right:4px;cursor:pointer;box-sizing:border-box;border-radius:50%;border:1px solid transparent;transition:background .2s cubic-bezier(.64,.09,.08,1);color:var(--primary,hsl(var(--hue,212),40%,50%));fill:currentColor;background:transparent}.ML__virtual-keyboard-toggle:hover{background:hsl(var(--hue,212),25%,35%);color:#fafafa;fill:currentColor;border-radius:50%;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2)}.ML__popover{visibility:hidden;min-width:160px;background-color:rgba(97,97,97,.95);color:#fff;text-align:center;border-radius:6px;position:fixed;z-index:1;display:flex;flex-direction:column;justify-content:center;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);transition:all .2s cubic-bezier(.64,.09,.08,1)}.ML__popover:after{content:\\\"\\\";position:absolute;top:-5px;left:calc(50% - 3px);width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;font-size:1rem;border-bottom:5px solid rgba(97,97,97,.9)}.ML__popover--reverse-direction:after{top:auto;bottom:-5px;border-top:5px solid rgba(97,97,97,.9);border-bottom:0}.ML__textarea__textarea{transform:scale(0);resize:none;outline:none;border:none;position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;font-size:1em;font-family:KaTeX_Main}.ML__focused .ML__text{background:hsla(var(--hue,212),40%,50%,.1)}.ML__smart-fence__close{opacity:.5}.ML__selection{background:var(--highlight-inactive,#ccc);box-sizing:border-box}.ML__focused .ML__selection{background:var(--highlight,hsl(var(--hue,212),97%,85%))!important;color:var(--on-highlight)}.ML__contains-caret.ML__close,.ML__contains-caret.ML__open,.ML__contains-caret>.ML__close,.ML__contains-caret>.ML__open,.sqrt.ML__contains-caret>.sqrt-sign,.sqrt.ML__contains-caret>.vlist>span>.sqrt-line{color:var(--caret,hsl(var(--hue,212),40%,49%))}.ML__command{font-family:IBM Plex Mono,Source Code Pro,Consolas,Roboto Mono,Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Courier,monospace;letter-spacing:-1px;font-weight:400;line-height:1em;color:var(--primary,hsl(var(--hue,212),40%,50%))}:not(.ML__command)+.ML__command{margin-left:.25em}.ML__command+:not(.ML__command){padding-left:.25em}.ML__suggestion{opacity:.5}.ML__virtual-keyboard-toggle.pressed{background:hsla(0,0%,70%,.5)}.ML__virtual-keyboard-toggle:focus{outline:none;border-radius:50%;border:2px solid var(--primary,hsl(var(--hue,212),40%,50%))}.ML__virtual-keyboard-toggle.active,.ML__virtual-keyboard-toggle.active:hover{background:hsla(0,0%,70%,.5);color:#000;fill:currentColor}.ML__scroller{position:fixed;z-index:1;top:0;height:100vh;width:200px}[data-ML__tooltip]{position:relative}[data-ML__tooltip][data-placement=top]:after{top:inherit;bottom:100%}[data-ML__tooltip]:after{position:absolute;display:none;content:attr(data-ML__tooltip);top:110%;width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:200px;padding:8px;background:#616161;color:#fff;text-align:center;z-index:2;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2);border-radius:2px;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-weight:400;font-size:12px;opacity:0;transform:scale(.5);transition:all .15s cubic-bezier(.4,0,1,1)}@media only screen and (max-width:767px){[data-ML__tooltip]:after{padding:8px 16px;font-size:14px}}:not(.tracking) [data-ML__tooltip]:hover{position:relative}:not(.tracking) [data-ML__tooltip]:hover:after{visibility:visible;display:inline-table;opacity:1;transform:scale(1)}[data-ML__tooltip][data-delay]:after{transition-delay:0s}[data-ML__tooltip][data-delay]:hover:after{transition-delay:1s}\";\n\nvar css_248z$2 = \".ML__sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}body.ML__fonts-loading .ML__base{visibility:hidden}.ML__base{visibility:inherit;display:inline-block;position:relative;cursor:text}.ML__strut,.ML__strut--bottom{display:inline-block;min-height:.5em}.ML__small-delim{font-family:KaTeX_Main}.ML__text{font-family:var(--text-font-family,system-ui,-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",\\\"Roboto\\\",\\\"Oxygen\\\",\\\"Ubuntu\\\",\\\"Cantarell\\\",\\\"Fira Sans\\\",\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",sans-serif);white-space:pre}.ML__cmr{font-family:KaTeX_Main;font-style:normal}.ML__mathit{font-family:KaTeX_Math;font-style:italic}.ML__mathbf{font-family:KaTeX_Main;font-weight:700}.lcGreek.ML__mathbf{font-family:KaTeX_Math;font-weight:400}.ML__mathbfit{font-family:KaTeX_Math;font-weight:700;font-style:italic}.ML__ams,.ML__bb{font-family:KaTeX_AMS}.ML__cal{font-family:KaTeX_Caligraphic}.ML__frak{font-family:KaTeX_Fraktur}.ML__tt{font-family:KaTeX_Typewriter}.ML__script{font-family:KaTeX_Script}.ML__sans{font-family:KaTeX_SansSerif}.ML__series_el,.ML__series_ul{font-weight:100}.ML__series_l{font-weight:200}.ML__series_sl{font-weight:300}.ML__series_sb{font-weight:500}.ML__bold,.ML__boldsymbol{font-weight:700}.ML__series_eb{font-weight:800}.ML__series_ub{font-weight:900}.ML__series_uc{font-stretch:ultra-condensed}.ML__series_ec{font-stretch:extra-condensed}.ML__series_c{font-stretch:condensed}.ML__series_sc{font-stretch:semi-condensed}.ML__series_sx{font-stretch:semi-expanded}.ML__series_x{font-stretch:expanded}.ML__series_ex{font-stretch:extra-expanded}.ML__series_ux{font-stretch:ultra-expanded}.ML__it{font-style:italic}.ML__shape_ol{-webkit-text-stroke:1px #000;text-stroke:1px #000;color:transparent}.ML__shape_sc{font-variant:small-caps}.ML__shape_sl{font-style:oblique}.ML__emph{color:#bc2612}.ML__emph .ML__emph{color:#0c7f99}.ML__highlight{color:#007cb2;background:#edd1b0}.ML__mathlive{display:inline-block;line-height:0;direction:ltr;text-align:left;text-indent:0;text-rendering:auto;font-family:KaTeX_Main;font-style:normal;font-size-adjust:none;letter-spacing:normal;word-wrap:normal;word-spacing:normal;white-space:nowrap;text-shadow:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:-webkit-min-content;width:-moz-min-content;width:min-content;transform:translateZ(0)}.ML__mathlive .reset-textstyle.scriptstyle{font-size:.7em}.ML__mathlive .reset-textstyle.scriptscriptstyle{font-size:.5em}.ML__mathlive .reset-scriptstyle.textstyle{font-size:1.42857em}.ML__mathlive .reset-scriptstyle.scriptscriptstyle{font-size:.71429em}.ML__mathlive .reset-scriptscriptstyle.textstyle{font-size:2em}.ML__mathlive .reset-scriptscriptstyle.scriptstyle{font-size:1.4em}.ML__mathlive .style-wrap{position:relative}.ML__mathlive .vlist{display:inline-block}.ML__mathlive .vlist>span{display:block;height:0;position:relative;line-height:0}.ML__mathlive .vlist>span>span{display:inline-block}.ML__mathlive .msubsup{text-align:left}.ML__mathlive .mfrac>span{text-align:center}.ML__mathlive .mfrac .frac-line{width:100%}.ML__mathlive .mfrac .frac-line:after{content:\\\"\\\";display:block;margin-top:-.04em;min-height:.04em;background:currentColor;box-sizing:content-box;transform:translate(0)}.ML__mathlive .rspace.negativethinspace{margin-right:-.16667em}.ML__mathlive .rspace.thinspace{margin-right:.16667em}.ML__mathlive .rspace.negativemediumspace{margin-right:-.22222em}.ML__mathlive .rspace.mediumspace{margin-right:.22222em}.ML__mathlive .rspace.thickspace{margin-right:.27778em}.ML__mathlive .rspace.sixmuspace{margin-right:.333333em}.ML__mathlive .rspace.eightmuspace{margin-right:.444444em}.ML__mathlive .rspace.enspace{margin-right:.5em}.ML__mathlive .rspace.twelvemuspace{margin-right:.666667em}.ML__mathlive .rspace.quad{margin-right:1em}.ML__mathlive .rspace.qquad{margin-right:2em}.ML__mathlive .mspace{display:inline-block}.ML__mathlive .mspace.negativethinspace{margin-left:-.16667em}.ML__mathlive .mspace.thinspace{width:.16667em}.ML__mathlive .mspace.negativemediumspace{margin-left:-.22222em}.ML__mathlive .mspace.mediumspace{width:.22222em}.ML__mathlive .mspace.thickspace{width:.27778em}.ML__mathlive .mspace.sixmuspace{width:.333333em}.ML__mathlive .mspace.eightmuspace{width:.444444em}.ML__mathlive .mspace.enspace{width:.5em}.ML__mathlive .mspace.twelvemuspace{width:.666667em}.ML__mathlive .mspace.quad{width:1em}.ML__mathlive .mspace.qquad{width:2em}.ML__mathlive .llap,.ML__mathlive .rlap{width:0;position:relative}.ML__mathlive .llap>.inner,.ML__mathlive .rlap>.inner{position:absolute}.ML__mathlive .llap>.fix,.ML__mathlive .rlap>.fix{display:inline-block}.ML__mathlive .llap>.inner{right:0}.ML__mathlive .rlap>.inner{left:0}.ML__mathlive .rule{display:inline-block;border:0 solid;position:relative}.ML__mathlive .overline .overline-line,.ML__mathlive .underline .underline-line{width:100%}.ML__mathlive .overline .overline-line:before,.ML__mathlive .underline .underline-line:before{border-bottom-style:solid;border-bottom-width:.04em;content:\\\"\\\";display:block}.ML__mathlive .overline .overline-line:after,.ML__mathlive .underline .underline-line:after{border-bottom-style:solid;border-bottom-width:.04em;min-height:thin;content:\\\"\\\";display:block;margin-top:-1px}.ML__mathlive .stretchy{display:block;position:absolute;width:100%;left:0;overflow:hidden}.ML__mathlive .stretchy:after,.ML__mathlive .stretchy:before{content:\\\"\\\"}.ML__mathlive .stretchy svg{display:block;position:absolute;width:100%;height:inherit;fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1}.ML__mathlive .slice-1-of-2{left:0}.ML__mathlive .slice-1-of-2,.ML__mathlive .slice-2-of-2{display:inline-flex;position:absolute;width:50.2%;overflow:hidden}.ML__mathlive .slice-2-of-2{right:0}.ML__mathlive .slice-1-of-3{display:inline-flex;position:absolute;left:0;width:25.1%;overflow:hidden}.ML__mathlive .slice-2-of-3{display:inline-flex;position:absolute;left:25%;width:50%;overflow:hidden}.ML__mathlive .slice-3-of-3{display:inline-flex;position:absolute;right:0;width:25.1%;overflow:hidden}.ML__mathlive .slice-1-of-1{display:inline-flex;position:absolute;width:100%;left:0;overflow:hidden}.ML__mathlive .sqrt{display:inline-block}.ML__mathlive .sqrt>.sqrt-sign{font-family:KaTeX_Main;position:relative}.ML__mathlive .sqrt .sqrt-line{height:.04em;width:100%}.ML__mathlive .sqrt .sqrt-line:before{content:\\\"\\\";display:block;margin-top:-.04em;min-height:.04em;background:currentColor}.ML__mathlive .sqrt .sqrt-line:after{border-bottom-width:1px;content:\\\" \\\";display:block;margin-top:-.1em;transform:translate(0)}.ML__mathlive .sqrt>.root{margin-left:.27777778em;margin-right:-.55555556em}.ML__mathlive .fontsize-ensurer,.ML__mathlive .sizing{display:inline-block}.ML__mathlive .fontsize-ensurer.reset-size1.size1,.ML__mathlive .sizing.reset-size1.size1{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size1.size2,.ML__mathlive .sizing.reset-size1.size2{font-size:1.4em}.ML__mathlive .fontsize-ensurer.reset-size1.size3,.ML__mathlive .sizing.reset-size1.size3{font-size:1.6em}.ML__mathlive .fontsize-ensurer.reset-size1.size4,.ML__mathlive .sizing.reset-size1.size4{font-size:1.8em}.ML__mathlive .fontsize-ensurer.reset-size1.size5,.ML__mathlive .sizing.reset-size1.size5{font-size:2em}.ML__mathlive .fontsize-ensurer.reset-size1.size6,.ML__mathlive .sizing.reset-size1.size6{font-size:2.4em}.ML__mathlive .fontsize-ensurer.reset-size1.size7,.ML__mathlive .sizing.reset-size1.size7{font-size:2.88em}.ML__mathlive .fontsize-ensurer.reset-size1.size8,.ML__mathlive .sizing.reset-size1.size8{font-size:3.46em}.ML__mathlive .fontsize-ensurer.reset-size1.size9,.ML__mathlive .sizing.reset-size1.size9{font-size:4.14em}.ML__mathlive .fontsize-ensurer.reset-size1.size10,.ML__mathlive .sizing.reset-size1.size10{font-size:4.98em}.ML__mathlive .fontsize-ensurer.reset-size2.size1,.ML__mathlive .sizing.reset-size2.size1{font-size:.71428571em}.ML__mathlive .fontsize-ensurer.reset-size2.size2,.ML__mathlive .sizing.reset-size2.size2{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size2.size3,.ML__mathlive .sizing.reset-size2.size3{font-size:1.14285714em}.ML__mathlive .fontsize-ensurer.reset-size2.size4,.ML__mathlive .sizing.reset-size2.size4{font-size:1.28571429em}.ML__mathlive .fontsize-ensurer.reset-size2.size5,.ML__mathlive .sizing.reset-size2.size5{font-size:1.42857143em}.ML__mathlive .fontsize-ensurer.reset-size2.size6,.ML__mathlive .sizing.reset-size2.size6{font-size:1.71428571em}.ML__mathlive .fontsize-ensurer.reset-size2.size7,.ML__mathlive .sizing.reset-size2.size7{font-size:2.05714286em}.ML__mathlive .fontsize-ensurer.reset-size2.size8,.ML__mathlive .sizing.reset-size2.size8{font-size:2.47142857em}.ML__mathlive .fontsize-ensurer.reset-size2.size9,.ML__mathlive .sizing.reset-size2.size9{font-size:2.95714286em}.ML__mathlive .fontsize-ensurer.reset-size2.size10,.ML__mathlive .sizing.reset-size2.size10{font-size:3.55714286em}.ML__mathlive .fontsize-ensurer.reset-size3.size1,.ML__mathlive .sizing.reset-size3.size1{font-size:.625em}.ML__mathlive .fontsize-ensurer.reset-size3.size2,.ML__mathlive .sizing.reset-size3.size2{font-size:.875em}.ML__mathlive .fontsize-ensurer.reset-size3.size3,.ML__mathlive .sizing.reset-size3.size3{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size3.size4,.ML__mathlive .sizing.reset-size3.size4{font-size:1.125em}.ML__mathlive .fontsize-ensurer.reset-size3.size5,.ML__mathlive .sizing.reset-size3.size5{font-size:1.25em}.ML__mathlive .fontsize-ensurer.reset-size3.size6,.ML__mathlive .sizing.reset-size3.size6{font-size:1.5em}.ML__mathlive .fontsize-ensurer.reset-size3.size7,.ML__mathlive .sizing.reset-size3.size7{font-size:1.8em}.ML__mathlive .fontsize-ensurer.reset-size3.size8,.ML__mathlive .sizing.reset-size3.size8{font-size:2.1625em}.ML__mathlive .fontsize-ensurer.reset-size3.size9,.ML__mathlive .sizing.reset-size3.size9{font-size:2.5875em}.ML__mathlive .fontsize-ensurer.reset-size3.size10,.ML__mathlive .sizing.reset-size3.size10{font-size:3.1125em}.ML__mathlive .fontsize-ensurer.reset-size4.size1,.ML__mathlive .sizing.reset-size4.size1{font-size:.55555556em}.ML__mathlive .fontsize-ensurer.reset-size4.size2,.ML__mathlive .sizing.reset-size4.size2{font-size:.77777778em}.ML__mathlive .fontsize-ensurer.reset-size4.size3,.ML__mathlive .sizing.reset-size4.size3{font-size:.88888889em}.ML__mathlive .fontsize-ensurer.reset-size4.size4,.ML__mathlive .sizing.reset-size4.size4{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size4.size5,.ML__mathlive .sizing.reset-size4.size5{font-size:1.11111111em}.ML__mathlive .fontsize-ensurer.reset-size4.size6,.ML__mathlive .sizing.reset-size4.size6{font-size:1.33333333em}.ML__mathlive .fontsize-ensurer.reset-size4.size7,.ML__mathlive .sizing.reset-size4.size7{font-size:1.6em}.ML__mathlive .fontsize-ensurer.reset-size4.size8,.ML__mathlive .sizing.reset-size4.size8{font-size:1.92222222em}.ML__mathlive .fontsize-ensurer.reset-size4.size9,.ML__mathlive .sizing.reset-size4.size9{font-size:2.3em}.ML__mathlive .fontsize-ensurer.reset-size4.size10,.ML__mathlive .sizing.reset-size4.size10{font-size:2.76666667em}.ML__mathlive .fontsize-ensurer.reset-size5.size1,.ML__mathlive .sizing.reset-size5.size1{font-size:.5em}.ML__mathlive .fontsize-ensurer.reset-size5.size2,.ML__mathlive .sizing.reset-size5.size2{font-size:.7em}.ML__mathlive .fontsize-ensurer.reset-size5.size3,.ML__mathlive .sizing.reset-size5.size3{font-size:.8em}.ML__mathlive .fontsize-ensurer.reset-size5.size4,.ML__mathlive .sizing.reset-size5.size4{font-size:.9em}.ML__mathlive .fontsize-ensurer.reset-size5.size5,.ML__mathlive .sizing.reset-size5.size5{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size5.size6,.ML__mathlive .sizing.reset-size5.size6{font-size:1.2em}.ML__mathlive .fontsize-ensurer.reset-size5.size7,.ML__mathlive .sizing.reset-size5.size7{font-size:1.44em}.ML__mathlive .fontsize-ensurer.reset-size5.size8,.ML__mathlive .sizing.reset-size5.size8{font-size:1.73em}.ML__mathlive .fontsize-ensurer.reset-size5.size9,.ML__mathlive .sizing.reset-size5.size9{font-size:2.07em}.ML__mathlive .fontsize-ensurer.reset-size5.size10,.ML__mathlive .sizing.reset-size5.size10{font-size:2.49em}.ML__mathlive .fontsize-ensurer.reset-size6.size1,.ML__mathlive .sizing.reset-size6.size1{font-size:.41666667em}.ML__mathlive .fontsize-ensurer.reset-size6.size2,.ML__mathlive .sizing.reset-size6.size2{font-size:.58333333em}.ML__mathlive .fontsize-ensurer.reset-size6.size3,.ML__mathlive .sizing.reset-size6.size3{font-size:.66666667em}.ML__mathlive .fontsize-ensurer.reset-size6.size4,.ML__mathlive .sizing.reset-size6.size4{font-size:.75em}.ML__mathlive .fontsize-ensurer.reset-size6.size5,.ML__mathlive .sizing.reset-size6.size5{font-size:.83333333em}.ML__mathlive .fontsize-ensurer.reset-size6.size6,.ML__mathlive .sizing.reset-size6.size6{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size6.size7,.ML__mathlive .sizing.reset-size6.size7{font-size:1.2em}.ML__mathlive .fontsize-ensurer.reset-size6.size8,.ML__mathlive .sizing.reset-size6.size8{font-size:1.44166667em}.ML__mathlive .fontsize-ensurer.reset-size6.size9,.ML__mathlive .sizing.reset-size6.size9{font-size:1.725em}.ML__mathlive .fontsize-ensurer.reset-size6.size10,.ML__mathlive .sizing.reset-size6.size10{font-size:2.075em}.ML__mathlive .fontsize-ensurer.reset-size7.size1,.ML__mathlive .sizing.reset-size7.size1{font-size:.34722222em}.ML__mathlive .fontsize-ensurer.reset-size7.size2,.ML__mathlive .sizing.reset-size7.size2{font-size:.48611111em}.ML__mathlive .fontsize-ensurer.reset-size7.size3,.ML__mathlive .sizing.reset-size7.size3{font-size:.55555556em}.ML__mathlive .fontsize-ensurer.reset-size7.size4,.ML__mathlive .sizing.reset-size7.size4{font-size:.625em}.ML__mathlive .fontsize-ensurer.reset-size7.size5,.ML__mathlive .sizing.reset-size7.size5{font-size:.69444444em}.ML__mathlive .fontsize-ensurer.reset-size7.size6,.ML__mathlive .sizing.reset-size7.size6{font-size:.83333333em}.ML__mathlive .fontsize-ensurer.reset-size7.size7,.ML__mathlive .sizing.reset-size7.size7{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size7.size8,.ML__mathlive .sizing.reset-size7.size8{font-size:1.20138889em}.ML__mathlive .fontsize-ensurer.reset-size7.size9,.ML__mathlive .sizing.reset-size7.size9{font-size:1.4375em}.ML__mathlive .fontsize-ensurer.reset-size7.size10,.ML__mathlive .sizing.reset-size7.size10{font-size:1.72916667em}.ML__mathlive .fontsize-ensurer.reset-size8.size1,.ML__mathlive .sizing.reset-size8.size1{font-size:.28901734em}.ML__mathlive .fontsize-ensurer.reset-size8.size2,.ML__mathlive .sizing.reset-size8.size2{font-size:.40462428em}.ML__mathlive .fontsize-ensurer.reset-size8.size3,.ML__mathlive .sizing.reset-size8.size3{font-size:.46242775em}.ML__mathlive .fontsize-ensurer.reset-size8.size4,.ML__mathlive .sizing.reset-size8.size4{font-size:.52023121em}.ML__mathlive .fontsize-ensurer.reset-size8.size5,.ML__mathlive .sizing.reset-size8.size5{font-size:.57803468em}.ML__mathlive .fontsize-ensurer.reset-size8.size6,.ML__mathlive .sizing.reset-size8.size6{font-size:.69364162em}.ML__mathlive .fontsize-ensurer.reset-size8.size7,.ML__mathlive .sizing.reset-size8.size7{font-size:.83236994em}.ML__mathlive .fontsize-ensurer.reset-size8.size8,.ML__mathlive .sizing.reset-size8.size8{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size8.size9,.ML__mathlive .sizing.reset-size8.size9{font-size:1.19653179em}.ML__mathlive .fontsize-ensurer.reset-size8.size10,.ML__mathlive .sizing.reset-size8.size10{font-size:1.43930636em}.ML__mathlive .fontsize-ensurer.reset-size9.size1,.ML__mathlive .sizing.reset-size9.size1{font-size:.24154589em}.ML__mathlive .fontsize-ensurer.reset-size9.size2,.ML__mathlive .sizing.reset-size9.size2{font-size:.33816425em}.ML__mathlive .fontsize-ensurer.reset-size9.size3,.ML__mathlive .sizing.reset-size9.size3{font-size:.38647343em}.ML__mathlive .fontsize-ensurer.reset-size9.size4,.ML__mathlive .sizing.reset-size9.size4{font-size:.43478261em}.ML__mathlive .fontsize-ensurer.reset-size9.size5,.ML__mathlive .sizing.reset-size9.size5{font-size:.48309179em}.ML__mathlive .fontsize-ensurer.reset-size9.size6,.ML__mathlive .sizing.reset-size9.size6{font-size:.57971014em}.ML__mathlive .fontsize-ensurer.reset-size9.size7,.ML__mathlive .sizing.reset-size9.size7{font-size:.69565217em}.ML__mathlive .fontsize-ensurer.reset-size9.size8,.ML__mathlive .sizing.reset-size9.size8{font-size:.83574879em}.ML__mathlive .fontsize-ensurer.reset-size9.size9,.ML__mathlive .sizing.reset-size9.size9{font-size:1em}.ML__mathlive .fontsize-ensurer.reset-size9.size10,.ML__mathlive .sizing.reset-size9.size10{font-size:1.20289855em}.ML__mathlive .fontsize-ensurer.reset-size10.size1,.ML__mathlive .sizing.reset-size10.size1{font-size:.20080321em}.ML__mathlive .fontsize-ensurer.reset-size10.size2,.ML__mathlive .sizing.reset-size10.size2{font-size:.2811245em}.ML__mathlive .fontsize-ensurer.reset-size10.size3,.ML__mathlive .sizing.reset-size10.size3{font-size:.32128514em}.ML__mathlive .fontsize-ensurer.reset-size10.size4,.ML__mathlive .sizing.reset-size10.size4{font-size:.36144578em}.ML__mathlive .fontsize-ensurer.reset-size10.size5,.ML__mathlive .sizing.reset-size10.size5{font-size:.40160643em}.ML__mathlive .fontsize-ensurer.reset-size10.size6,.ML__mathlive .sizing.reset-size10.size6{font-size:.48192771em}.ML__mathlive .fontsize-ensurer.reset-size10.size7,.ML__mathlive .sizing.reset-size10.size7{font-size:.57831325em}.ML__mathlive .fontsize-ensurer.reset-size10.size8,.ML__mathlive .sizing.reset-size10.size8{font-size:.69477912em}.ML__mathlive .fontsize-ensurer.reset-size10.size9,.ML__mathlive .sizing.reset-size10.size9{font-size:.8313253em}.ML__mathlive .fontsize-ensurer.reset-size10.size10,.ML__mathlive .sizing.reset-size10.size10{font-size:1em}.ML__mathlive .delimsizing.size1{font-family:KaTeX_Size1}.ML__mathlive .delimsizing.size2{font-family:KaTeX_Size2}.ML__mathlive .delimsizing.size3{font-family:KaTeX_Size3}.ML__mathlive .delimsizing.size4{font-family:KaTeX_Size4}.ML__mathlive .delimsizing.mult .delim-size1{font-family:KaTeX_Size1;vertical-align:top}.ML__mathlive .delimsizing.mult .delim-size4{font-family:KaTeX_Size4;vertical-align:top}.ML__mathlive .nulldelimiter{width:.12em}.ML__mathlive .op-symbol{position:relative}.ML__mathlive .op-symbol.small-op{font-family:KaTeX_Size1}.ML__mathlive .op-symbol.large-op{font-family:KaTeX_Size2}.ML__mathlive .op-limits .vlist>span{text-align:center}.ML__mathlive .op-over-under{position:relative}.ML__mathlive .op-over-under>.vlist>span:first-child,.ML__mathlive .op-over-under>.vlist>span:last-child{text-align:center}.ML__mathlive .accent>.vlist>span{text-align:center}.ML__mathlive .accent .accent-body>span{font-family:KaTeX_Main;width:0}.ML__mathlive .accent .accent-body.accent-vec>span{position:relative;left:.326em}.ML__mathlive .mtable .vertical-separator{display:inline-block;margin:0 -.025em;border-right:.05em solid}.ML__mathlive .mtable .arraycolsep{display:inline-block}.ML__mathlive .mtable .col-align-m>.vlist{text-align:center}.ML__mathlive .mtable .col-align-c>.vlist{text-align:center}.ML__mathlive .mtable .col-align-l>.vlist{text-align:left}.ML__mathlive .mtable .col-align-r>.vlist{text-align:right}.ML__error{background-image:radial-gradient(ellipse at center,#cc0041,transparent 70%);background-repeat:repeat-x;background-size:3px 3px;background-position:0 98%}.ML__composition{background:#fff1c2;color:#000;-webkit-text-decoration:underline var(--caret,hsl(var(--hue,212),40%,49%));text-decoration:underline var(--caret,hsl(var(--hue,212),40%,49%))}@media (prefers-color-scheme:dark){.ML__composition{background:#69571c;color:#fff}}.ML__placeholder{opacity:.7;padding-left:.4ex;padding-right:.4ex;padding-top:.4ex}\";\n\nvar css_248z$3 = \"div.ML__popover.is-visible{visibility:inherit;-webkit-animation:ML__fade-in .15s cubic-bezier(0,0,.2,1);animation:ML__fade-in .15s cubic-bezier(0,0,.2,1)}@-webkit-keyframes ML__fade-in{0%{opacity:0}to{opacity:1}}@keyframes ML__fade-in{0%{opacity:0}to{opacity:1}}.ML__popover__content{border-radius:6px;padding:2px;cursor:pointer;min-height:100px;display:flex;flex-direction:column;justify-content:center;margin-left:8px;margin-right:8px}.ML__popover__content a{color:#5ea6fd;padding-top:.3em;margin-top:.4em;display:block}.ML__popover__content a:hover{color:#5ea6fd;text-decoration:underline}.ML__popover__content.active,.ML__popover__content.pressed,.ML__popover__content:hover{background:hsla(0,0%,100%,.1)}.ML__popover__command{font-size:1.6rem}.ML__popover__prev-shortcut{height:31px;opacity:.1;cursor:pointer;margin-left:8px;margin-right:8px;padding-top:4px;padding-bottom:2px}.ML__popover__next-shortcut:hover,.ML__popover__prev-shortcut:hover{opacity:.3}.ML__popover__next-shortcut.active,.ML__popover__next-shortcut.pressed,.ML__popover__prev-shortcut.active,.ML__popover__prev-shortcut.pressed{opacity:1}.ML__popover__next-shortcut>span,.ML__popover__prev-shortcut>span{padding:5px;border-radius:50%;width:20px;height:20px;display:inline-block}.ML__popover__prev-shortcut>span>span{margin-top:-2px;display:block}.ML__popover__next-shortcut>span>span{margin-top:2px;display:block}.ML__popover__next-shortcut:hover>span,.ML__popover__prev-shortcut:hover>span{background:hsla(0,0%,100%,.1)}.ML__popover__next-shortcut{height:34px;opacity:.1;cursor:pointer;margin-left:8px;margin-right:8px;padding-top:2px;padding-bottom:4px}.ML__popover__shortcut{font-size:.8em;margin-top:.25em}.ML__popover__note,.ML__popover__shortcut{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;opacity:.7;padding-top:.25em}.ML__popover__note{font-size:.8rem;line-height:1em;padding-left:.5em;padding-right:.5em}.ML__shortcut-join{opacity:.5}\";\n\nvar css_248z$4 = \".ML__keystroke-caption{visibility:hidden;background:var(--secondary);border-color:var(--secondary-border);box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);text-align:center;border-radius:6px;padding:16px;position:absolute;z-index:1;display:flex;flex-direction:row;justify-content:center;--keystroke:#fff;--on-keystroke:#555;--keystroke-border:#f7f7f7}@media (prefers-color-scheme:dark){body:not([theme=light]) .ML__keystroke-caption{--keystroke:hsl(var(--hue,212),50%,30%);--on-keystroke:#fafafa;--keystroke-border:hsl(var(--hue,212),50%,25%)}}body[theme=dark] .ML__keystroke-caption{--keystroke:hsl(var(--hue,212),50%,30%);--on-keystroke:#fafafa;--keystroke-border:hsl(var(--hue,212),50%,25%)}.ML__keystroke-caption>span{min-width:14px;margin:0 8px 0 0;padding:4px;background-color:var(--keystroke);color:var(--on-keystroke);fill:currentColor;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:1em;border-radius:6px;border:2px solid var(--keystroke-border)}\";\n\n/**\r\n * This module parses and outputs an Abstract Syntax Tree representing the\r\n * formula using the {@tutorial math-json | MathJSON } format.\r\n *\r\n * To use it, use the {@linkcode atomtoAST | atomtoAST()}  method.\r\n */\r\n// type MathJson =\r\n//     | string\r\n//     | number\r\n//     | boolean\r\n//     | null\r\n//     | { [property: string]: MathJson }\r\n//     | MathJson[];\r\nconst CANONICAL_NAMES = {\r\n    // CONSTANTS\r\n    '\\\\imaginaryI': '\\u2148',\r\n    '\\\\imaginaryJ': '\\u2149',\r\n    '\\\\pi': 'π',\r\n    '\\\\exponentialE': '\\u212f',\r\n    // ARITHMETIC\r\n    '﹢': '+',\r\n    '＋': '+',\r\n    '−': '-',\r\n    '-': '-',\r\n    '﹣': '-',\r\n    '－': '-',\r\n    '\\\\times': '*',\r\n    '\\\\cdot': '*',\r\n    '⨉': '*',\r\n    '️✖': '*',\r\n    '️×': '*',\r\n    '.': '*',\r\n    '÷': '/',\r\n    // '/':             '/',        // SOLIDUS\r\n    '⁄': '/',\r\n    '／': '/',\r\n    '!': 'factorial',\r\n    '\\\\mp': 'minusplus',\r\n    '\\\\ne': '!=',\r\n    '\\\\coloneq': ':=',\r\n    '\\\\questeq': '?=',\r\n    '\\\\approx': 'approx',\r\n    '\\\\cong': 'congruent',\r\n    '\\\\sim': 'similar',\r\n    '\\\\equiv': 'equiv',\r\n    '\\\\pm': 'plusminus',\r\n    '\\\\land': 'and',\r\n    '\\\\wedge': 'and',\r\n    '\\\\lor': 'or',\r\n    '\\\\vee': 'or',\r\n    '\\\\oplus': 'xor',\r\n    '\\\\veebar': 'xor',\r\n    '\\\\lnot': 'not',\r\n    '\\\\neg': 'not',\r\n    '\\\\exists': 'exists',\r\n    '\\\\nexists': '!exists',\r\n    '\\\\forall': 'forAll',\r\n    '\\\\backepsilon': 'suchThat',\r\n    '\\\\therefore': 'therefore',\r\n    '\\\\because': 'because',\r\n    '\\\\nabla': 'nabla',\r\n    '\\\\circ': 'circle',\r\n    // '\\\\oplus':       'oplus',\r\n    '\\\\ominus': 'ominus',\r\n    '\\\\odot': 'odot',\r\n    '\\\\otimes': 'otimes',\r\n    '\\\\zeta': 'Zeta',\r\n    '\\\\Gamma': 'Gamma',\r\n    '\\\\min': 'min',\r\n    '\\\\max': 'max',\r\n    '\\\\mod': 'mod',\r\n    '\\\\lim': 'lim',\r\n    '\\\\sum': 'sum',\r\n    '\\\\prod': 'prod',\r\n    '\\\\int': 'integral',\r\n    '\\\\iint': 'integral2',\r\n    '\\\\iiint': 'integral3',\r\n    '\\\\Re': 'Re',\r\n    '\\\\gothicCapitalR': 'Re',\r\n    '\\\\Im': 'Im',\r\n    '\\\\gothicCapitalI': 'Im',\r\n    '\\\\binom': 'nCr',\r\n    '\\\\partial': 'partial',\r\n    '\\\\differentialD': 'differentialD',\r\n    '\\\\capitalDifferentialD': 'capitalDifferentialD',\r\n    '\\\\Finv': 'Finv',\r\n    '\\\\Game': 'Game',\r\n    '\\\\wp': 'wp',\r\n    '\\\\ast': 'ast',\r\n    '\\\\star': 'star',\r\n    '\\\\asymp': 'asymp',\r\n    // Function domain, limits\r\n    '\\\\to': 'to',\r\n    '\\\\gets': 'gets',\r\n    // Sets\r\n    '\\\\in': 'elementof',\r\n    '\\\\notin': '!elementof',\r\n    '\\\\ni': 'ownedby',\r\n    '\\\\owns': 'ownedby',\r\n    '\\\\subset': 'subset',\r\n    '\\\\supset': 'superset',\r\n    '\\\\complement': 'complement',\r\n    // Logic\r\n    '\\\\rightarrow': 'shortLogicalImplies',\r\n    '\\\\leftarrow': 'shortLogicalImpliedBy',\r\n    '\\\\leftrightarrow': 'shortLogicalEquivalent',\r\n    '\\\\longrightarrow': 'logicalImplies',\r\n    '\\\\longleftarrow': 'logicalImpliedBy',\r\n    '\\\\longleftrightarrow': 'logicalEquivalent',\r\n    // Metalogic\r\n    '\\\\Rightarrow': 'shortImplies',\r\n    '\\\\Leftarrow': 'shortImpliedBy',\r\n    '\\\\Leftrightarrow': 'shortEquivalent',\r\n    '\\\\implies': 'implies',\r\n    '\\\\Longrightarrow': 'implies',\r\n    '\\\\impliedby': 'impliedBy',\r\n    '\\\\Longleftarrow': 'impliedBy',\r\n    '\\\\iff': 'equivalent',\r\n    '\\\\Longleftrightarrow': 'equivalent',\r\n};\r\n// The OP_NAME table maps a canonical name to a function name\r\nconst OP_NAME = {\r\n    '+': 'add',\r\n    '*': 'multiply',\r\n    '-': 'subtract',\r\n    '/': 'divide',\r\n    '=': 'equal',\r\n    ':=': 'assign',\r\n    '!=': 'ne',\r\n    '?=': 'questeq',\r\n    approx: 'approx',\r\n    congruent: 'congruent',\r\n    similar: 'similar',\r\n    equiv: 'equiv',\r\n    '<': 'lt',\r\n    '>': 'gt',\r\n    '<=': 'le',\r\n    '>=': 'ge',\r\n    '≤': 'le',\r\n    '≥': 'ge',\r\n    '>>': 'gg',\r\n    '<<': 'll',\r\n    '**': 'pow',\r\n    '++': 'increment',\r\n    '--': 'decrement',\r\n};\r\n// The FUNCTION_TEMPLATE table maps a canonical name to a LaTeX template\r\nconst FUNCTION_TEMPLATE = {\r\n    equal: '%0 = %1',\r\n    ne: '%0 \\\\ne %1',\r\n    questeq: '%0 \\\\questeq %1',\r\n    approx: '%0 \\\\approx %1',\r\n    congruent: '%0 \\\\cong %1',\r\n    similar: '%0 \\\\sim %1',\r\n    equiv: '%0 \\\\equiv %1',\r\n    assign: '%0 := %1',\r\n    lt: '%0 < %1',\r\n    gt: '%0 > %1',\r\n    le: '%0 \\\\le %1',\r\n    ge: '%0 \\\\ge %1',\r\n    // TRIGONOMETRY\r\n    sin: '\\\\sin%_%^ %0',\r\n    cos: '\\\\cos%_%^ %0',\r\n    tan: '\\\\tan%_%^ %0',\r\n    cot: '\\\\cot%_%^ %0',\r\n    sec: '\\\\sec%_%^ %0',\r\n    csc: '\\\\csc%_%^ %0',\r\n    sinh: '\\\\sinh %0',\r\n    cosh: '\\\\cosh %0',\r\n    tanh: '\\\\tanh %0',\r\n    csch: '\\\\csch %0',\r\n    sech: '\\\\sech %0',\r\n    coth: '\\\\coth %0',\r\n    arcsin: '\\\\arcsin %0',\r\n    arccos: '\\\\arccos %0',\r\n    arctan: '\\\\arctan %0',\r\n    arccot: '\\\\arcctg %0',\r\n    arcsec: '\\\\arcsec %0',\r\n    arccsc: '\\\\arccsc %0',\r\n    arsinh: '\\\\arsinh %0',\r\n    arcosh: '\\\\arcosh %0',\r\n    artanh: '\\\\artanh %0',\r\n    arcsch: '\\\\arcsch %0',\r\n    arsech: '\\\\arsech %0',\r\n    arcoth: '\\\\arcoth %0',\r\n    // LOGARITHMS\r\n    ln: '\\\\ln%_%^ %',\r\n    log: '\\\\log%_%^ %',\r\n    lg: '\\\\lg %',\r\n    lb: '\\\\lb %',\r\n    // Big operator\r\n    sum: '\\\\sum%_%^ %0',\r\n    prod: '\\\\prod%_%^ %0',\r\n    // OTHER\r\n    Zeta: '\\\\zeta%_%^ %',\r\n    Gamma: '\\\\Gamma %',\r\n    min: '\\\\min%_%^ %',\r\n    max: '\\\\max%_%^ %',\r\n    mod: '\\\\mod%_%^ %',\r\n    lim: '\\\\lim%_%^ %',\r\n    binom: '\\\\binom %',\r\n    nabla: '\\\\nabla %',\r\n    curl: '\\\\nabla\\\\times %0',\r\n    div: '\\\\nabla\\\\cdot %0',\r\n    floor: '\\\\lfloor %0 \\\\rfloor%_%^',\r\n    ceil: '\\\\lceil %0 \\\\rceil%_%^',\r\n    abs: '\\\\left| %0 \\\\right|%_%^',\r\n    norm: '\\\\lVert %0 \\\\rVert%_%^',\r\n    ucorner: '\\\\ulcorner %0 \\\\urcorner%_%^',\r\n    lcorner: '\\\\llcorner %0 \\\\lrcorner%_%^',\r\n    angle: '\\\\langle %0 \\\\rangle%_%^',\r\n    group: '\\\\lgroup %0 \\\\rgroup%_%^',\r\n    moustache: '\\\\lmoustache %0 \\\\rmoustache%_%^',\r\n    brace: '\\\\lbrace %0 \\\\rbrace%_%^',\r\n    'sqrt[]': '\\\\sqrt[%^]{%0}',\r\n    sqrt: '\\\\sqrt{%0}',\r\n    lcm: '\\\\operatorname{lcm}%',\r\n    gcd: '\\\\operatorname{gcd}%',\r\n    erf: '\\\\operatorname{erf}%',\r\n    erfc: '\\\\operatorname{erfc}%',\r\n    randomReal: '\\\\operatorname{randomReal}%',\r\n    randomInteger: '\\\\operatorname{randomInteger}%',\r\n    // Logic operators\r\n    and: '%0 \\\\land %1',\r\n    or: '%0 \\\\lor %1',\r\n    xor: '%0 \\\\oplus %1',\r\n    not: '%0 \\\\lnot %1',\r\n    // Other operators\r\n    circle: '%0 \\\\circ %1',\r\n    ast: '%0 \\\\ast %1',\r\n    star: '%0 \\\\star %1',\r\n    asymp: '%0 \\\\asymp %1',\r\n    '/': '\\\\frac{%0}{%1}',\r\n    Re: '\\\\Re{%0}',\r\n    Im: '\\\\Im{%0}',\r\n    factorial: '%0!',\r\n    factorial2: '%0!!',\r\n};\r\n// From www.w3.org/TR/MathML3/appendixc.html\r\n// The keys of OP_PRECEDENCE are \"canonical names\"\r\n// (the values of the CANONICAL_NAMES table above, e.g. \"?=\")\r\n// Those are different from the latex names (e.g. \\\\questeq)\r\n// and from the function names (e.g. \"questeq\")\r\nconst OP_PRECEDENCE = {\r\n    degree: 880,\r\n    nabla: 740,\r\n    curl: 740,\r\n    partial: 740,\r\n    differentialD: 740,\r\n    capitalDifferentialD: 740,\r\n    '**': 720,\r\n    odot: 710,\r\n    // Logical not\r\n    not: 680,\r\n    // Division\r\n    div: 660,\r\n    solidus: 660,\r\n    '/': 660,\r\n    setminus: 650,\r\n    '%': 640,\r\n    otimes: 410,\r\n    // Set operators\r\n    union: 350,\r\n    intersection: 350,\r\n    // Multiplication, division and modulo\r\n    '*': 390,\r\n    ast: 390,\r\n    '.': 390,\r\n    oplus: 300,\r\n    ominus: 300,\r\n    // Addition\r\n    '+': 275,\r\n    '-': 275,\r\n    '+-': 275,\r\n    '-+': 275,\r\n    // Most circled-ops are 265\r\n    circle: 265,\r\n    circledast: 265,\r\n    circledcirc: 265,\r\n    star: 265,\r\n    // Range\r\n    '..': 263,\r\n    // Unit conversion\r\n    to: 262,\r\n    in: 262,\r\n    '|': 261,\r\n    // Relational\r\n    congruent: 265,\r\n    equiv: 260,\r\n    '=': 260,\r\n    '!=': 255,\r\n    '?=': 255,\r\n    similar: 250,\r\n    approx: 247,\r\n    '<': 245,\r\n    '>': 243,\r\n    '>=': 242,\r\n    '≥': 242,\r\n    '<=': 241,\r\n    // Set operator\r\n    complement: 240,\r\n    subset: 240,\r\n    superset: 240,\r\n    // @todo and equality and neg operators\r\n    elementof: 240,\r\n    '!elementof': 240,\r\n    //\r\n    exists: 230,\r\n    '!exists': 230,\r\n    forall: 230,\r\n    // Logical operators\r\n    and: 200,\r\n    xor: 195,\r\n    or: 190,\r\n    // Note: 'not' is 680\r\n    // center, low, diag, vert ellipsis         150\r\n    // Composition/sequence\r\n    suchThat: 110,\r\n    ':': 100,\r\n    // '..':               100,\r\n    // '...':               100,\r\n    // Conditional (?:)\r\n    // Assignment\r\n    assign: 80,\r\n    ':=': 80,\r\n    therefore: 70,\r\n    because: 70,\r\n    // Arrows\r\n    // Note: MathML had 270 for the arrows, but this\r\n    // would not work for (a = b => b = a)\r\n    // See also https://en.wikipedia.org/wiki/Logical_connective#Order_of_precedence\r\n    // for a suggested precedence (note that in this page lower precedence\r\n    // has the opposite meaning as what we use)\r\n    shortLogicalImplies: 52,\r\n    shortImplies: 51,\r\n    logicalImplies: 50,\r\n    implies: 49,\r\n    shortLogicalImpliedBy: 48,\r\n    shortImpliedBy: 47,\r\n    logicalImpliedBy: 46,\r\n    impliedBy: 45,\r\n    shortLogicalEquivalent: 44,\r\n    shortEquivalent: 43,\r\n    logicalEquivalent: 42,\r\n    equivalent: 41,\r\n    ',': 40,\r\n    ';': 30,\r\n};\r\nfunction getArg(ast, index) {\r\n    return isArray(ast.arg) ? ast.arg[index] : undefined;\r\n}\r\n/**\r\n * Given a canonical name, return its precedence\r\n * @param canonicalName, for example \"and\"\r\n */\r\nfunction getPrecedence(canonicalName) {\r\n    return canonicalName ? OP_PRECEDENCE[canonicalName] || -1 : -1;\r\n}\r\nfunction getAssociativity(canonicalName) {\r\n    if (/=|=>/.test(canonicalName)) {\r\n        return 'right';\r\n    }\r\n    return 'left';\r\n}\r\n/**\r\n *\r\n * @param name - function canonical name\r\n */\r\nfunction getLatexTemplateForFunction(name) {\r\n    let result = FUNCTION_TEMPLATE[name];\r\n    if (!result) {\r\n        result =\r\n            name.length > 1\r\n                ? '\\\\operatorname{' + name + '}%^%_ %'\r\n                : name + '%^%_ %';\r\n    }\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @param name symbol name, e.g. \"alpha\"\r\n */\r\nfunction getLatexForSymbol(name) {\r\n    let result = FUNCTION_TEMPLATE[name];\r\n    if (result) {\r\n        return result.replace('%1', '').replace('%0', '').replace('%', '');\r\n    }\r\n    if (name.length > 1) {\r\n        result = '\\\\' + name;\r\n    }\r\n    if (!result) {\r\n        result = unicodeStringToLatex('math', name);\r\n    }\r\n    return result;\r\n}\r\nfunction isFunction$1(canonicalName) {\r\n    if (canonicalName === 'f' || canonicalName === 'g')\r\n        return true;\r\n    const t = FUNCTION_TEMPLATE[canonicalName];\r\n    if (!t)\r\n        return false;\r\n    // A plain \"%\" is a placeholder for an argument list, indicating a function\r\n    if (/%[^01_^]?/.test(t))\r\n        return true;\r\n    return false;\r\n}\r\n/**\r\n *\r\n * @param latex, for example '\\\\times'\r\n * @retur the canonical name for the input, for example '*'\r\n */\r\nfunction getCanonicalName(latex) {\r\n    latex = (latex || '').trim();\r\n    let result = CANONICAL_NAMES[latex];\r\n    if (!result) {\r\n        if (/^\\\\[^{}]+$/.test(latex)) {\r\n            const info = getInfo(latex, 'math', {});\r\n            if (info) {\r\n                result = info.value || latex.slice(1);\r\n            }\r\n            else {\r\n                result = latex.slice(1);\r\n            }\r\n        }\r\n        else {\r\n            result = latex;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Return the operator precedence of the atom\r\n * or null if not an operator\r\n */\r\nfunction opPrec(atom) {\r\n    if (!atom)\r\n        return null;\r\n    const name = getCanonicalName(getString(atom));\r\n    const result = [\r\n        getPrecedence(name),\r\n        getAssociativity(name),\r\n    ];\r\n    if (result[0] <= 0)\r\n        return null;\r\n    return result;\r\n}\r\nfunction isOperator(atom) {\r\n    return opPrec(atom) !== null;\r\n}\r\nconst DELIM_FUNCTION = {\r\n    '\\\\lfloor\\\\rfloor': 'floor',\r\n    '\\\\lceil\\\\rceil': 'ceil',\r\n    '\\\\vert\\\\vert': 'abs',\r\n    '\\\\lvert\\\\rvert': 'abs',\r\n    '||': 'abs',\r\n    '\\\\Vert\\\\Vert': 'norm',\r\n    '\\\\lVert\\\\rVert': 'norm',\r\n    '\\\\ulcorner\\\\urcorner': 'ucorner',\r\n    '\\\\llcorner\\\\lrcorner': 'lcorner',\r\n    '\\\\langle\\\\rangle': 'angle',\r\n    '\\\\lgroup\\\\rgroup': 'group',\r\n    '\\\\lmoustache\\\\rmoustache': 'moustache',\r\n    '\\\\lbrace\\\\rbrace': 'brace',\r\n};\r\nconst POSTFIX_FUNCTION = {\r\n    '!': 'factorial',\r\n    '\\\\dag': 'dagger',\r\n    '\\\\dagger': 'dagger',\r\n    '\\\\ddagger': 'dagger2',\r\n    '\\\\maltese': 'maltese',\r\n    '\\\\backprime': 'backprime',\r\n    '\\\\backdoubleprime': 'backprime2',\r\n    '\\\\prime': 'prime',\r\n    '\\\\doubleprime': 'prime2',\r\n    '\\\\$': '$',\r\n    '\\\\%': '%',\r\n    '\\\\_': '_',\r\n    '\\\\degree': 'degree',\r\n};\r\nconst ASSOCIATIVE_FUNCTION = {\r\n    '+': 'add',\r\n    '-': 'add',\r\n    // handled specifically so that the\r\n    // argument is negated\r\n    '*': 'multiply',\r\n    '=': 'equal',\r\n    ',': 'list',\r\n    ';': 'list2',\r\n    and: 'and',\r\n    or: 'or',\r\n    xor: 'xor',\r\n    union: 'union',\r\n    // shortLogicalEquivalent and logicalEquivalent map to the same function\r\n    // they mean the same thing, but have a difference precedence.\r\n    shortLogicalEquivalent: 'logicalEquivalent',\r\n    logicalEquivalent: 'logicalEquivalent',\r\n    // shortEquivalent and equivalent map to the same function\r\n    // they mean the same thing, but have a difference precedence.\r\n    shortEquivalent: 'equivalent',\r\n    equivalent: 'equivalent',\r\n};\r\nconst SUPER_ASSOCIATIVE_FUNCTION = {\r\n    ',': 'list',\r\n    ';': 'list2',\r\n};\r\nfunction getString(atom) {\r\n    if (typeof atom === 'string')\r\n        return atom;\r\n    if (isArray(atom)) {\r\n        let result = '';\r\n        for (const subAtom of atom) {\r\n            result += getString(subAtom);\r\n        }\r\n        return result;\r\n    }\r\n    if (atom.symbol &&\r\n        !/^\\\\math(op|bin|rel|open|punct|ord|inner)/.test(atom.symbol)) {\r\n        return atom.symbol;\r\n    }\r\n    if (atom.type === 'leftright') {\r\n        return '';\r\n    }\r\n    if (typeof atom.body === 'string') {\r\n        return atom.body;\r\n    }\r\n    if (isArray(atom.body)) {\r\n        let result = '';\r\n        for (const subAtom of atom.body) {\r\n            result += getString(subAtom);\r\n        }\r\n        return result;\r\n    }\r\n    return '';\r\n}\r\n/**\r\n *\r\n * @param {object} expr - Abstract Syntax Tree object\r\n * @return A string, the symbol, or undefined\r\n */\r\nfunction asSymbol(node) {\r\n    return typeof node.sym === 'string'\r\n        ? getLatexForSymbol(node.sym) || node.sym\r\n        : '';\r\n}\r\n/**\r\n *\r\n * @param {object} node - Abstract Syntax Tree node\r\n * @return A JavaScript number, the value of the AST or NaN\r\n */\r\nfunction asMachineNumber(node) {\r\n    return parseFloat(node.num);\r\n}\r\nfunction isNumber$1(node) {\r\n    return typeof node === 'object' && typeof node.num !== 'undefined';\r\n}\r\nfunction numberRe(node) {\r\n    let result = 0;\r\n    if (isNumber$1(node)) {\r\n        if (typeof node.num === 'object') {\r\n            result =\r\n                typeof node.num.re !== 'undefined'\r\n                    ? parseFloatToPrecision(node.num.re)\r\n                    : 0;\r\n        }\r\n        else {\r\n            result = parseFloat(node.num);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction numberIm(node) {\r\n    let result = 0;\r\n    if (isNumber$1(node)) {\r\n        if (typeof node.num === 'object') {\r\n            result =\r\n                typeof node.num.im !== 'undefined'\r\n                    ? parseFloatToPrecision(node.num.im)\r\n                    : 0;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction isComplexWithRealAndImaginary(node) {\r\n    return numberRe(node) !== 0 && numberIm(node) !== 0;\r\n}\r\nfunction hasSup(node) {\r\n    return node && typeof node.sup !== 'undefined';\r\n}\r\nfunction hasSub(node) {\r\n    return node && typeof node.sub !== 'undefined';\r\n}\r\n/**\r\n * Return true if the current atom is of the specified type and value.\r\n */\r\nfunction isAtom(expr, type, value) {\r\n    let result = false;\r\n    const atom = expr.atoms[expr.index];\r\n    if (atom && atom.type === type) {\r\n        if (typeof value === 'undefined') {\r\n            result = true;\r\n        }\r\n        else {\r\n            result = getString(atom) === value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction wrapFn(functionName, ...params) {\r\n    const result = { fn: functionName, arg: undefined };\r\n    if (params) {\r\n        const args = [];\r\n        for (const arg of params) {\r\n            if (arg)\r\n                args.push(arg);\r\n        }\r\n        if (args.length > 0)\r\n            result.arg = args;\r\n    }\r\n    return result;\r\n}\r\nfunction wrapNum(num) {\r\n    if (typeof num === 'number') {\r\n        return { num: num.toString() };\r\n    }\r\n    else if (typeof num === 'string') {\r\n        return { num: num };\r\n    }\r\n    else if (typeof num === 'object') {\r\n        // This is a complex number\r\n        console.assert(typeof num['re'] === 'string' || typeof num['im'] === 'string');\r\n        return { num: num };\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * Return the negative of the expression. Usually { fn:'negate', arg }\r\n * but for numbers, the negated number\r\n * @param {object} node\r\n * @private\r\n */\r\nfunction negate(node) {\r\n    if (isNumber$1(node)) {\r\n        const re = numberRe(node);\r\n        const im = numberIm(node);\r\n        if (im !== 0) {\r\n            if (re !== 0) {\r\n                node.num.re = (-re).toString();\r\n            }\r\n            node.num.im = (-im).toString();\r\n        }\r\n        else {\r\n            node.num = (-re).toString();\r\n        }\r\n        return node;\r\n    }\r\n    return wrapFn('negate', node);\r\n}\r\nfunction nextIsSupsub(expr) {\r\n    const atom = expr.atoms[expr.index + 1];\r\n    return atom && atom.type === 'msubsup';\r\n}\r\n/**\r\n * Parse for a possible sup/sub attached directly to the current atom\r\n * or to a following 'msubsup' atom.\r\n * After the call, the index points to the next atom to process.\r\n * @param {object} expr\r\n * @private\r\n */\r\nfunction parseSupsub(expr, options) {\r\n    let atom = expr.atoms[expr.index];\r\n    // Is there a supsub directly on this atom?\r\n    if (atom &&\r\n        (typeof atom.superscript !== 'undefined' ||\r\n            typeof atom.subscript !== 'undefined')) {\r\n        // Move to the following atom\r\n        expr.index += 1;\r\n    }\r\n    else {\r\n        atom = null;\r\n    }\r\n    // If this atom didn't have a sup/sub,\r\n    // is the following atom a subsup atom?\r\n    if (!atom) {\r\n        atom = expr.atoms[expr.index + 1];\r\n        if (!atom ||\r\n            atom.type !== 'msubsup' ||\r\n            !(atom.superscript || atom.subscript)) {\r\n            atom = null;\r\n        }\r\n        else {\r\n            // Yes. Skip the current atom and the supsub\r\n            expr.index += 2;\r\n        }\r\n    }\r\n    if (atom) {\r\n        if (typeof atom.subscript !== 'undefined') {\r\n            expr.ast.sub = parse$1(atom.subscript, options);\r\n        }\r\n        if (typeof atom.superscript !== 'undefined') {\r\n            if (atom.type === 'msubsup') {\r\n                if (/['\\u2032]|\\\\prime/.test(getString(atom.superscript))) {\r\n                    expr.index += 1;\r\n                    atom = expr.atoms[expr.index + 1];\r\n                    if (atom &&\r\n                        atom.type === 'msubsup' &&\r\n                        /['\\u2032]|\\\\prime/.test(getString(atom.superscript))) {\r\n                        expr.ast.sup = { sym: '\\u2033' }; // DOUBLE-PRIME\r\n                    }\r\n                    else {\r\n                        expr.ast.sup = { sym: '\\u2032' }; // PRIME\r\n                        expr.index -= 1;\r\n                    }\r\n                }\r\n                else if (/['\\u2033]|\\\\doubleprime/.test(getString(atom.superscript))) {\r\n                    expr.ast.sup = { sym: '\\u2033' }; // DOUBLE-PRIME\r\n                }\r\n                else if (expr.ast) {\r\n                    expr.ast.sup = parse$1(atom.superscript, options);\r\n                }\r\n            }\r\n            else {\r\n                expr.ast.sup = parse$1(atom.superscript, options);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // Didn't find a supsup either on this atom and there was no 'msubsup'\r\n        // Time to move on to the next atom.\r\n        expr.index += 1;\r\n    }\r\n    return expr;\r\n}\r\n/**\r\n * Parse postfix operators, such as \"!\" (factorial)\r\n * @private\r\n */\r\nfunction parsePostfix(expr, options) {\r\n    const lhs = expr.ast;\r\n    if (nextIsDigraph(expr, '!!')) {\r\n        expr.index += 1;\r\n        expr.ast = wrapFn('factorial2', lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n        return expr;\r\n    }\r\n    if (nextIsDigraph(expr, '++')) {\r\n        expr.index += 1;\r\n        expr.ast = wrapFn('increment', lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n        return expr;\r\n    }\r\n    if (nextIsDigraph(expr, '--')) {\r\n        expr.index += 1;\r\n        expr.ast = wrapFn('decrement', lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n        return expr;\r\n    }\r\n    const atom = expr.atoms[expr.index];\r\n    if ((atom === null || atom === void 0 ? void 0 : atom.symbol) && POSTFIX_FUNCTION[atom.symbol]) {\r\n        expr.ast = wrapFn(POSTFIX_FUNCTION[atom.symbol], lhs);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n    }\r\n    return expr;\r\n}\r\n/**\r\n * Delimiters can be expressed:\r\n * - as a matching pair of regular characters: '(a)'\r\n * - a as 'leftright' expression: '\\left(a\\right)'\r\n * - as a matching pair of 'sizeddelim': '\\Bigl(a\\Bigr)\r\n *\r\n * Note that the '\\delim' command is only used for delimiters in the middle\r\n * of a \\left\\right pair and not to represent pair-matched delimiters.\r\n *\r\n * This function handles all three cases\r\n */\r\nfunction parseDelim(expr, ldelim, rdelim, options) {\r\n    expr.index = expr.index || 0;\r\n    if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) {\r\n        expr.ast = undefined;\r\n        return expr;\r\n    }\r\n    const savedPrec = expr.minPrec;\r\n    expr.minPrec = 0;\r\n    let atom = expr.atoms[expr.index];\r\n    if (!ldelim) {\r\n        // If we didn't expect a specific delimiter, parse any delimiter\r\n        // and return it as a function application\r\n        let pairedDelim = true;\r\n        if (atom.type === 'mopen') {\r\n            ldelim = atom.symbol;\r\n            rdelim = RIGHT_DELIM[ldelim];\r\n        }\r\n        else if (atom.type === 'sizeddelim') {\r\n            ldelim = atom.delim;\r\n            rdelim = RIGHT_DELIM[ldelim];\r\n        }\r\n        else if (atom.type === 'leftright') {\r\n            pairedDelim = false;\r\n            ldelim = atom.leftDelim;\r\n            rdelim = atom.rightDelim;\r\n            // If we have an unclosed smart fence, assume the right delim is\r\n            // matching the left delim\r\n            if (rdelim === '?')\r\n                rdelim = RIGHT_DELIM[ldelim];\r\n        }\r\n        else if (atom.type === 'textord') {\r\n            ldelim = atom.symbol;\r\n            rdelim = RIGHT_DELIM[ldelim];\r\n        }\r\n        if (ldelim && rdelim) {\r\n            if (ldelim === '|' && rdelim === '|') {\r\n                // Check if this could be a ||x|| instead of |x|\r\n                const atom = expr.atoms[expr.index + 1];\r\n                if (atom && atom.type === 'textord' && atom.symbol === '|') {\r\n                    // Yes, it's a ||x||\r\n                    ldelim = '\\\\lVert';\r\n                    rdelim = '\\\\rVert';\r\n                }\r\n            }\r\n            expr = parseDelim(expr, ldelim, rdelim, options);\r\n            if (expr) {\r\n                if (pairedDelim)\r\n                    expr.index += 1;\r\n                expr.ast = {\r\n                    fn: DELIM_FUNCTION[ldelim + rdelim] || ldelim + rdelim,\r\n                    arg: [expr.ast],\r\n                };\r\n                expr.minPrec = savedPrec;\r\n                return expr;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    if (atom.type === 'mopen' && getString(atom) === ldelim) {\r\n        expr.index += 1; // Skip the open delim\r\n        expr = parseExpression(expr, options);\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'mclose' && getString(atom) === rdelim) {\r\n            if (nextIsSupsub(expr)) {\r\n                // Wrap in a group if we have an upcoming superscript or subscript\r\n                expr.ast = { group: expr.ast };\r\n            }\r\n            expr = parseSupsub(expr, options);\r\n            expr = parsePostfix(expr, options);\r\n        } // TODO: else, syntax error?\r\n    }\r\n    else if (atom.type === 'textord' && getString(atom) === ldelim) {\r\n        expr.index += 1; // Skip the open delim\r\n        expr = parseExpression(expr, options);\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'textord' && getString(atom) === rdelim) {\r\n            expr.index += 1;\r\n            expr = parseSupsub(expr, options);\r\n            expr = parsePostfix(expr, options);\r\n        } // TODO: else, syntax error?\r\n    }\r\n    else if (ldelim === '\\\\lVert' &&\r\n        atom.type === 'textord' &&\r\n        atom.symbol === '|') {\r\n        atom = expr.atoms[expr.index + 1];\r\n        if (atom && atom.type === 'textord' && atom.symbol === '|') {\r\n            // This is an opening ||\r\n            expr.index += 2; // Skip the open delim\r\n            expr = parseExpression(expr, options);\r\n            atom = expr.atoms[expr.index];\r\n            const atom2 = expr.atoms[expr.index + 1];\r\n            if (atom &&\r\n                atom.type === 'textord' &&\r\n                atom.symbol === '|' &&\r\n                atom2 &&\r\n                atom2.type === 'textord' &&\r\n                atom2.symbol === '|') {\r\n                // This was a closing ||\r\n                expr.index += 2;\r\n                expr = parseSupsub(expr, options);\r\n                expr = parsePostfix(expr, options);\r\n            }\r\n        }\r\n    }\r\n    else if (atom.type === 'sizeddelim' && atom.delim === ldelim) {\r\n        expr.index += 1; // Skip the open delim\r\n        expr = parseExpression(expr, options);\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'sizeddelim' && atom.delim === rdelim) {\r\n            expr.index += 1;\r\n            expr = parseSupsub(expr, options);\r\n            expr = parsePostfix(expr, options);\r\n        } // TODO: else, syntax error?\r\n    }\r\n    else if (atom.type === 'leftright' &&\r\n        atom.leftDelim === ldelim &&\r\n        (atom.rightDelim === '?' || atom.rightDelim === rdelim)) {\r\n        // This atom type includes the content of the parenthetical expression\r\n        // in its body\r\n        expr.ast = parse$1(atom.body, options);\r\n        if (nextIsSupsub(expr)) {\r\n            // Wrap in a group if we have an upcoming superscript or subscript\r\n            expr.ast = { group: expr.ast };\r\n        }\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n    expr.minPrec = savedPrec;\r\n    return expr;\r\n}\r\nfunction nextIsDigraph(expr, digraph) {\r\n    expr.index = expr.index || 0;\r\n    if (expr.atoms.length <= 1 || expr.index >= expr.atoms.length - 1) {\r\n        return false;\r\n    }\r\n    return (digraph ===\r\n        getString(expr.atoms[expr.index]) +\r\n            getString(expr.atoms[expr.index + 1]));\r\n}\r\n/**\r\n * Some symbols are made up of two consecutive characters.\r\n * Handle them here. Return undefined if not a digraph.\r\n * TODO: other digraphs:\r\n * :=\r\n * ++\r\n * **\r\n * =:\r\n * °C U+2103\r\n * °F U+2109\r\n * @private\r\n *\r\n */\r\nfunction parseDigraph(expr) {\r\n    expr.index = expr.index || 0;\r\n    if (expr.atoms.length <= 1 || expr.index >= expr.atoms.length - 1) {\r\n        return undefined;\r\n    }\r\n    if (isAtom(expr, 'textord', '\\\\nabla')) {\r\n        expr.index += 1;\r\n        if (isAtom(expr, 'mbin', '\\\\times')) {\r\n            expr.index += 1;\r\n            expr.ast = 'curl'; // divergence\r\n            return expr;\r\n        }\r\n        else if (isAtom(expr, 'mbin', '\\\\cdot')) {\r\n            expr.index += 1;\r\n            expr.ast = 'div';\r\n            return expr;\r\n        }\r\n        expr.index -= 1;\r\n    }\r\n    else {\r\n        const digraph = expr.atoms[expr.index].symbol + expr.atoms[expr.index + 1].symbol;\r\n        const result = /^(>=|<=|>>|<<|:=|!=)$/.test(digraph) ? digraph : '';\r\n        if (result) {\r\n            expr.index += 1;\r\n        }\r\n        return result;\r\n    }\r\n    return undefined;\r\n}\r\nfunction parsePrimary(expr, options) {\r\n    // <primary> := ('-'|'+) <primary> | <number> |\r\n    //              '(' <expression> ')' | <symbol> | <text> (<expression>)\r\n    expr.index = expr.index || 0;\r\n    expr.ast = undefined;\r\n    if (expr.atoms.length === 0 || expr.index >= expr.atoms.length) {\r\n        return expr;\r\n    }\r\n    let atom = expr.atoms[expr.index];\r\n    if (atom.mode === 'text') {\r\n        let text = '';\r\n        while (expr.atoms[expr.index] &&\r\n            expr.atoms[expr.index].mode === 'text') {\r\n            text += expr.atoms[expr.index].body;\r\n            expr.index += 1;\r\n        }\r\n        expr.ast = { text: text };\r\n        return expr;\r\n    }\r\n    const val = getCanonicalName(getString(atom));\r\n    const digraph = parseDigraph(expr);\r\n    if (digraph) {\r\n        expr.ast = wrapFn(expr.ast, parsePrimary(expr, options).ast);\r\n    }\r\n    else if (atom.type === 'root') {\r\n        expr.index = 0;\r\n        expr.atoms = atom.body;\r\n        return parsePrimary(expr, options);\r\n    }\r\n    else if (atom.type === 'mbin' && val === '-') {\r\n        // Prefix - sign\r\n        expr.index += 1; // Skip the '-' symbol\r\n        expr = parsePrimary(expr, options);\r\n        expr.ast = negate(expr.ast);\r\n    }\r\n    else if (atom.type === 'mbin' && val === '+') {\r\n        // Prefix + sign\r\n        expr.index += 1; // Skip the '+' symbol\r\n        expr = parsePrimary(expr, options);\r\n        expr.ast = wrapFn('add', expr.ast);\r\n    }\r\n    else if (atom.type === 'mord' && /^[0-9.]$/.test(atom.symbol)) {\r\n        // Looks like a number\r\n        let num = '';\r\n        let done = false;\r\n        let pat = /^[0-9.eEdD]$/;\r\n        while (expr.index < expr.atoms.length &&\r\n            !done &&\r\n            (isAtom(expr, 'spacing') ||\r\n                ((isAtom(expr, 'mord') ||\r\n                    isAtom(expr, 'mpunct', ',') ||\r\n                    isAtom(expr, 'mbin')) &&\r\n                    pat.test(expr.atoms[expr.index].symbol)))) {\r\n            if (expr.atoms[expr.index].type === 'spacing') {\r\n                expr.index += 1;\r\n            }\r\n            else if (typeof expr.atoms[expr.index].superscript !== 'undefined' ||\r\n                typeof expr.atoms[expr.index].subscript !== 'undefined') {\r\n                done = true;\r\n            }\r\n            else {\r\n                let digit = expr.atoms[expr.index].symbol;\r\n                if (digit === 'd' || digit === 'D') {\r\n                    digit = 'e';\r\n                    pat = /^[0-9+-.]$/;\r\n                }\r\n                else if (digit === 'e' || digit === 'E') {\r\n                    if (nextIsSupsub(expr)) {\r\n                        digit = '';\r\n                        expr.index -= 1;\r\n                        done = true;\r\n                    }\r\n                    else {\r\n                        digit = 'E';\r\n                        pat = /^[0-9+-.]$/;\r\n                    }\r\n                }\r\n                else if (pat === /^[0-9+-.]$/) {\r\n                    pat = /^[0-9]$/;\r\n                }\r\n                num += digit === ',' ? '' : digit;\r\n                expr.index += 1;\r\n            }\r\n        }\r\n        expr.ast = num ? wrapNum(num) : undefined;\r\n        // This was a number. Is it followed by a fraction, e.g. 2 1/2\r\n        atom = expr.atoms[expr.index];\r\n        if (atom && atom.type === 'genfrac' && !isNaN(expr.ast.num)) {\r\n            // Add an invisible plus, i.e. 2 1/2 = 2 + 1/2\r\n            const lhs = expr.ast;\r\n            expr = parsePrimary(expr, options);\r\n            expr.ast = wrapFn('add', lhs, expr.ast);\r\n        }\r\n        if (atom &&\r\n            atom.type === 'group' &&\r\n            atom.symbol &&\r\n            atom.symbol.startsWith('\\\\nicefrac')) {\r\n            // \\nicefrac macro, add an invisible plus\r\n            const lhs = expr.ast;\r\n            expr = parsePrimary(expr, options);\r\n            expr.ast = wrapFn('add', lhs, expr.ast);\r\n        }\r\n        if (atom && atom.type === 'msubsup') {\r\n            expr = parseSupsub(expr, options);\r\n        }\r\n        expr = parsePostfix(expr, options);\r\n    }\r\n    else if (atom.type === 'genfrac' || atom.type === 'surd') {\r\n        // A fraction or a square/cube root\r\n        expr.ast = atomToMathJson(atom, options);\r\n        expr = parseSupsub(expr, options);\r\n        expr = parsePostfix(expr, options);\r\n    }\r\n    else if (atom.type === 'mord' || atom.type === 'mbin') {\r\n        // A 'mord' but not a number: either an identifier ('x') or\r\n        // a function ('\\\\Zeta')\r\n        if (isFunction$1(val) && !isOperator(atom)) {\r\n            // A function\r\n            expr.ast = { fn: val };\r\n            expr = parseSupsub(expr, options);\r\n            const fn = expr.ast;\r\n            const arg = parsePrimary(expr, options).ast;\r\n            if (arg && /^(list0|list|list2)$/.test(arg.fn)) {\r\n                fn.arg = arg.arg;\r\n            }\r\n            else if (arg) {\r\n                fn.arg = [arg];\r\n            }\r\n            expr.ast = fn;\r\n        }\r\n        else {\r\n            // An identifier\r\n            expr.ast = atomToMathJson(atom, options);\r\n            if (expr.ast.sym === 'ⅈ') {\r\n                // It's 'i', the imaginary unit\r\n                expr.ast = wrapNum({ im: '1' });\r\n            }\r\n            expr = parseSupsub(expr, options);\r\n        }\r\n        expr = parsePostfix(expr, options);\r\n    }\r\n    else if (atom.type === 'textord') {\r\n        // Note that 'textord' can also be operators, and are handled as such\r\n        // in parseExpression()\r\n        if (!isOperator(atom)) {\r\n            // This doesn't look like a textord operator\r\n            if (!RIGHT_DELIM[atom.symbol || atom.body]) {\r\n                // Not an operator, not a fence, it's a symbol or a function\r\n                if (isFunction$1(val)) {\r\n                    // It's a function\r\n                    expr.ast = { fn: val };\r\n                    expr = parseSupsub(expr, options);\r\n                    const fn = expr.ast;\r\n                    expr.index += 1; // Skip the function name\r\n                    fn.arg = [parsePrimary(expr, options).ast];\r\n                    expr.ast = fn;\r\n                    expr = parsePostfix(expr, options);\r\n                }\r\n                else {\r\n                    // It was a symbol...\r\n                    expr.ast = atomToMathJson(atom, options);\r\n                    if (typeof atom.superscript === 'undefined') {\r\n                        expr.index += 1;\r\n                    }\r\n                    expr = parseSupsub(expr, options);\r\n                    expr = parsePostfix(expr, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (atom.type === 'mop') {\r\n        // Could be a function or an operator.\r\n        if ((/^\\\\(mathop|operatorname|operatorname\\*)/.test(atom.symbol) ||\r\n            isFunction$1(val)) &&\r\n            !isOperator(atom)) {\r\n            expr.ast = {\r\n                fn: /^\\\\(mathop|operatorname|operatorname\\*)/.test(atom.symbol)\r\n                    ? getString(atom.body)\r\n                    : val,\r\n            };\r\n            expr = parseSupsub(expr, options);\r\n            if (hasSup(expr.ast)) {\r\n                // There was an exponent with the function.\r\n                // This may be an inverse function\r\n                const INVERSE_FUNCTION = {\r\n                    sin: 'arcsin',\r\n                    cos: 'arccos',\r\n                    tan: 'arctan',\r\n                    cot: 'arccot',\r\n                    sec: 'arcsec',\r\n                    csc: 'arccsc',\r\n                    sinh: 'arsinh',\r\n                    cosh: 'arcosh',\r\n                    tanh: 'artanh',\r\n                    csch: 'arcsch',\r\n                    sech: 'arsech',\r\n                    coth: 'arcoth',\r\n                };\r\n                if (asMachineNumber(expr.ast.sup) === -1 &&\r\n                    INVERSE_FUNCTION[val]) {\r\n                    expr.ast = wrapFn(INVERSE_FUNCTION[val], parsePrimary(expr, options).ast);\r\n                }\r\n                else {\r\n                    // Keep the exponent, add the argument\r\n                    const fn = expr.ast;\r\n                    fn.arg = [parsePrimary(expr, options).ast];\r\n                    expr.ast = fn;\r\n                }\r\n            }\r\n            else {\r\n                const fn = expr.ast;\r\n                const arg = parsePrimary(expr, options).ast;\r\n                if (arg && /^(list0|list|list2)$/.test(arg.fn)) {\r\n                    fn.arg = arg.arg;\r\n                }\r\n                else if (arg) {\r\n                    fn.arg = [arg];\r\n                }\r\n                expr.ast = fn;\r\n            }\r\n        }\r\n    }\r\n    else if (atom.type === 'array') {\r\n        expr.index += 1;\r\n        expr.ast = atomToMathJson(atom, options);\r\n    }\r\n    else if (atom.type === 'group') {\r\n        expr.index += 1;\r\n        expr.ast = atomToMathJson(atom, options);\r\n    }\r\n    else if (atom.type === 'mclose') {\r\n        return expr;\r\n    }\r\n    else if (atom.type === 'error') {\r\n        expr.index += 1;\r\n        expr.ast = { error: atom.symbol };\r\n        return expr;\r\n    }\r\n    if (expr.ast === undefined) {\r\n        // Parse either a group of paren, and return their content as the result\r\n        // or a pair of delimiters, and return them as a function applied\r\n        // to their content, i.e. \"|x|\" -> {fn: \"||\", arg: \"x\"}\r\n        const delim = parseDelim(expr, '(', ')', options) ||\r\n            parseDelim(expr, null, null, options);\r\n        if (delim) {\r\n            expr = delim;\r\n        }\r\n        else if (!isOperator(atom)) {\r\n            // This is not an operator (if it is, it may be an operator\r\n            // dealing with an empty lhs. It's possible.\r\n            // Couldn't interpret the expression. Output an error.\r\n            if (atom.type === 'placeholder') {\r\n                // Default value for a placeholder is 0\r\n                // (except for the denominator of a 'genfrac')\r\n                expr.ast = wrapNum(0);\r\n            }\r\n            else {\r\n                expr.ast = { text: '?' };\r\n                expr.ast.error = 'Unexpected token ' + \"'\" + atom.type + \"'\";\r\n                if (atom.latex) {\r\n                    expr.ast.latex = atom.latex;\r\n                }\r\n                else if (atom.body && atom.toLatex) {\r\n                    expr.ast.latex = atom.toLatex();\r\n                }\r\n            }\r\n            expr.index += 1; // Skip the unexpected token, and attempt to continue\r\n        }\r\n    }\r\n    atom = expr.atoms[expr.index];\r\n    if (atom &&\r\n        (atom.type === 'mord' ||\r\n            atom.type === 'surd' ||\r\n            atom.type === 'mop' ||\r\n            atom.type === 'mopen' ||\r\n            atom.type === 'sizeddelim' ||\r\n            atom.type === 'leftright')) {\r\n        if (atom.type === 'sizeddelim') {\r\n            for (const d in RIGHT_DELIM) {\r\n                if (atom.delim === RIGHT_DELIM[d]) {\r\n                    // This is (most likely) a closing delim, exit.\r\n                    // There are ambiguous cases, for example |x|y|z|.\r\n                    expr.index += 1;\r\n                    return expr;\r\n                }\r\n            }\r\n        }\r\n        if ((atom.type === 'mord' || atom.type === 'mop') && isOperator(atom)) {\r\n            // It's actually an operator\r\n            return expr;\r\n        }\r\n        const lhs = expr.ast;\r\n        expr.ast = {};\r\n        expr = parsePrimary(expr, options);\r\n        if ((expr === null || expr === void 0 ? void 0 : expr.ast) && lhs) {\r\n            if ((isFunction$1(lhs.fn) && typeof lhs.arg === 'undefined') ||\r\n                (isArray(lhs.arg) && lhs.arg.length === 0)) {\r\n                // A function with no arguments followed by a list ->\r\n                // the list becomes the argument to the function\r\n                if (expr.ast.fn === 'list2' || expr.ast.fn === 'list') {\r\n                    expr.ast = wrapFn(lhs.fn, expr.ast.arg);\r\n                }\r\n                else {\r\n                    // A function \"f(x)\" or \"√x\" followed by something else:\r\n                    // implicit multiply\r\n                    expr.ast = wrapFn('multiply', lhs, expr.ast);\r\n                }\r\n            }\r\n            else {\r\n                // Invisible times, e.g. '2x'\r\n                if (expr.ast.fn === 'multiply') {\r\n                    expr.ast.arg.unshift(lhs);\r\n                }\r\n                else if (numberIm(lhs) === 0 &&\r\n                    numberRe(lhs) !== 0 &&\r\n                    numberIm(expr.ast) === 1 &&\r\n                    numberRe(expr.ast) === 0) {\r\n                    // Imaginary number, i.e. \"3i\"\r\n                    expr.ast = wrapNum({ im: numberRe(lhs).toString() });\r\n                }\r\n                else {\r\n                    expr.ast = wrapFn('multiply', lhs, expr.ast);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            expr.ast = lhs;\r\n        }\r\n    }\r\n    return expr;\r\n}\r\n/**\r\n * Given an atom or an array of atoms, return their AST representation as\r\n * an object.\r\n * @param {object} expr An expressions, including expr.atoms, expr.index,\r\n * expr.minPrec the minimum precedence that this parser should parse\r\n * before returning; expr.ast, the resulting AST.\r\n * @return {object} the expr object, updated\r\n * @private\r\n */\r\nfunction parseExpression(expr, options) {\r\n    expr.index = expr.index || 0;\r\n    expr.ast = undefined;\r\n    if (expr.atoms.length === 0 || expr.index >= expr.atoms.length)\r\n        return expr;\r\n    expr.minPrec = expr.minPrec || 0;\r\n    let lhs = parsePrimary(expr, options).ast;\r\n    let done = false;\r\n    const minPrec = expr.minPrec;\r\n    while (!done) {\r\n        const atom = expr.atoms[expr.index];\r\n        const digraph = parseDigraph(expr);\r\n        done = !atom || atom.mode === 'text' || (!digraph && !isOperator(atom));\r\n        let prec, assoc;\r\n        if (!done) {\r\n            [prec, assoc] = digraph\r\n                ? [getPrecedence(digraph), getAssociativity(digraph)]\r\n                : opPrec(atom);\r\n            done = prec < minPrec;\r\n        }\r\n        if (!done) {\r\n            const opName = digraph || getCanonicalName(getString(atom));\r\n            if (assoc === 'left') {\r\n                expr.minPrec = prec + 1;\r\n            }\r\n            else {\r\n                expr.minPrec = prec;\r\n            }\r\n            expr.index += 1;\r\n            if (opName === '|') {\r\n                if (typeof atom.subscript !== 'undefined' ||\r\n                    (expr.atoms[expr.index] &&\r\n                        typeof expr.atoms[expr.index].subscript !==\r\n                            'undefined' &&\r\n                        expr.atoms[expr.index].type === 'msubsup')) {\r\n                    // Bind is a special function. It doesn't have a rhs, and\r\n                    // its argument is a subscript.\r\n                    expr.ast = {};\r\n                    const subArg = parseSupsub(expr, options).ast.sub;\r\n                    lhs = wrapFn('bind', lhs);\r\n                    if (subArg && subArg.fn === 'equal' && lhs.arg) {\r\n                        // This is a subscript of the form \"x=...\"\r\n                        lhs.arg.push(getArg(subArg, 0));\r\n                        lhs.arg.push(getArg(subArg, 1));\r\n                    }\r\n                    else if (subArg &&\r\n                        lhs.arg &&\r\n                        (subArg.fn === 'list' || subArg.fn === 'list2')) {\r\n                        // Form: \"x=0;n=3;z=5\"\r\n                        let currentSym = { sym: 'x' };\r\n                        for (let i = 0; i < subArg.arg.length; i++) {\r\n                            if (subArg.arg[i].fn === 'equal') {\r\n                                currentSym = getArg(subArg.arg[i], 0);\r\n                                lhs.arg.push(currentSym);\r\n                                lhs.arg.push(getArg(subArg.arg[i], 1));\r\n                            }\r\n                            else {\r\n                                lhs.arg.push(currentSym);\r\n                                lhs.arg.push(subArg.arg[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (subArg) {\r\n                        // Default identifier if none provided\r\n                        lhs.arg.push({ sym: 'x' });\r\n                        lhs.arg.push(subArg);\r\n                    }\r\n                }\r\n                else {\r\n                    // That was a \"|\", but not with a subscript after, so\r\n                    // it's the end of the expression, might be a right fence.\r\n                    done = true;\r\n                }\r\n            }\r\n            else {\r\n                const rhs = parseExpression(expr, options).ast;\r\n                // Some operators (',' and ';' for example) convert into a function\r\n                // even if there's only two arguments. They're super associative...\r\n                let fn = SUPER_ASSOCIATIVE_FUNCTION[opName];\r\n                if (fn && lhs && lhs.fn !== fn) {\r\n                    // Only promote them if the lhs is not already the same function.\r\n                    // If it is, we'll combine it below.\r\n                    lhs = wrapFn(fn, lhs);\r\n                }\r\n                // Promote subtraction to an addition\r\n                if (opName === '-') {\r\n                    if ((lhs === null || lhs === void 0 ? void 0 : lhs.arg) && lhs.fn === 'add') {\r\n                        // add(x,y) - z -> add(x, y, -z)\r\n                        if (rhs !== undefined)\r\n                            lhs.arg.push(negate(rhs));\r\n                    }\r\n                    else if (lhs && lhs.fn === 'subtract') {\r\n                        // x-y - z      -> add(x, -y, -z)\r\n                        lhs = wrapFn('add', getArg(lhs, 0), negate(getArg(lhs, 1)), negate(rhs));\r\n                    }\r\n                    else if (isNumber$1(lhs) &&\r\n                        !hasSup(lhs) &&\r\n                        isNumber$1(rhs) &&\r\n                        !hasSup(rhs) &&\r\n                        (typeof rhs.num.re === 'undefined' ||\r\n                            rhs.num.re === '0') &&\r\n                        typeof rhs.num.im !== 'undefined') {\r\n                        lhs = {\r\n                            num: {\r\n                                re: lhs.num,\r\n                                im: (-parseFloat(rhs.num.im)).toString(),\r\n                            },\r\n                        };\r\n                    }\r\n                    else {\r\n                        lhs = wrapFn('subtract', lhs, rhs);\r\n                    }\r\n                }\r\n                else {\r\n                    // Is there a function (e.g. 'add') implementing the\r\n                    // associative version of this operator (e.g. '+')?\r\n                    fn = ASSOCIATIVE_FUNCTION[opName];\r\n                    if (fn === 'add' && lhs && lhs.fn === 'subtract') {\r\n                        // subtract(x, y) + z -> add(x, -y, z)\r\n                        lhs = wrapFn('add', getArg(lhs, 0), negate(getArg(lhs, 1)), rhs);\r\n                    }\r\n                    else if (fn && lhs && lhs.fn === fn && !hasSup(lhs)) {\r\n                        // add(x,y) + z -> add(x, y, z)\r\n                        if (typeof rhs !== 'undefined') {\r\n                            if (rhs.fn === fn && !hasSup(rhs) && rhs.arg) {\r\n                                // add(x, y) = add (a, b)\r\n                                lhs.arg = [...lhs.arg, ...rhs.arg];\r\n                            }\r\n                            else if (lhs.arg) {\r\n                                lhs.arg.push(rhs);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (fn && rhs && rhs.arg && rhs.fn === fn) {\r\n                        // x =    y = z -> equal(x, y, z)\r\n                        rhs.arg.unshift(lhs);\r\n                        lhs = rhs;\r\n                    }\r\n                    else if (fn === 'multiply' &&\r\n                        isNumber$1(lhs) &&\r\n                        !hasSup(lhs) &&\r\n                        rhs &&\r\n                        asMachineNumber(rhs) === 10 &&\r\n                        isNumber$1(rhs.sup)) {\r\n                        // n * 10^m\r\n                        lhs = wrapNum(asMachineNumber(lhs) *\r\n                            Math.pow(10, asMachineNumber(rhs.sup)));\r\n                    }\r\n                    else if (fn === 'add' &&\r\n                        isNumber$1(lhs) &&\r\n                        !hasSup(lhs) &&\r\n                        rhs &&\r\n                        numberIm(rhs) !== 0 &&\r\n                        !hasSup(rhs)) {\r\n                        lhs = {\r\n                            num: {\r\n                                re: lhs.num,\r\n                                im: rhs.num.im,\r\n                            },\r\n                        };\r\n                    }\r\n                    else {\r\n                        lhs = wrapFn(fn || OP_NAME[opName] || opName, lhs, rhs);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    expr.ast = lhs;\r\n    return expr;\r\n}\r\n/**\r\n * Return a string escaped as necessary to comply with the JSON format\r\n * @param {string} s\r\n * @return {string}\r\n * @private\r\n */\r\nfunction escapeText(s) {\r\n    return s\r\n        .replace(/[\\\\]/g, '\\\\\\\\')\r\n        .replace(/[\"]/g, '\\\\\"')\r\n        .replace(/[\\b]/g, '\\\\b')\r\n        .replace(/[\\f]/g, '\\\\f')\r\n        .replace(/[\\n]/g, '\\\\n')\r\n        .replace(/[\\r]/g, '\\\\r')\r\n        .replace(/[\\t]/g, '\\\\t');\r\n}\r\n/**\r\n * Return an AST representation of a single atom\r\n *\r\n */\r\nfunction atomToMathJson(atom, options) {\r\n    var _a, _b, _c;\r\n    const MATH_VARIANTS = {\r\n        'double-struck': 'double-struck',\r\n        calligraphic: 'script',\r\n        script: 'script',\r\n        fraktur: 'fraktur',\r\n        'sans-serif': 'sans-serif',\r\n        monospace: 'monospace',\r\n    };\r\n    // TODO: See https://www.w3.org/TR/MathML2/chapter6.html#chars.letter-like-tables\r\n    let result = {};\r\n    let sym = '';\r\n    let m;\r\n    let lhs, rhs;\r\n    let variant = MATH_VARIANTS[atom.variant +\r\n        (!atom.variantStyle || atom.variantStyle === 'up'\r\n            ? ''\r\n            : '-' + atom.variantStyle)];\r\n    let variantSym;\r\n    let style = '';\r\n    if (atom.fontSeries === 'b')\r\n        style += 'bold';\r\n    if (atom.fontShape === 'it')\r\n        style += 'italic';\r\n    const command = atom.symbol;\r\n    switch (atom.type) {\r\n        case 'root':\r\n        case 'group':\r\n            // Macros appear as group as well. Handle some of them.\r\n            if ((_a = atom.symbol) === null || _a === void 0 ? void 0 : _a.startsWith('\\\\nicefrac')) {\r\n                m = atom.symbol.slice(9).match(/({.*}|[^}])({.*}|[^}])/);\r\n                if (m) {\r\n                    if (m[1].length === 1) {\r\n                        lhs = m[1];\r\n                    }\r\n                    else {\r\n                        lhs = m[1].substr(1, m[1].length - 2);\r\n                    }\r\n                    lhs = parseString(lhs, 'math', null, options.macros);\r\n                    if (m[2].length === 1) {\r\n                        rhs = m[2];\r\n                    }\r\n                    else {\r\n                        rhs = m[2].substr(1, m[2].length - 2);\r\n                    }\r\n                    rhs = parseString(rhs, 'math', null, options.macros);\r\n                    result = wrapFn('divide', parse$1(lhs, options), parse$1(rhs, options));\r\n                }\r\n                else {\r\n                    result = { fn: 'divide' };\r\n                }\r\n            }\r\n            else {\r\n                result = { group: parse$1(atom.body, options) };\r\n            }\r\n            break;\r\n        case 'genfrac':\r\n            // If there's no denominator, or a placeholder, use \"1\" as the value\r\n            result = wrapFn('divide', parse$1(atom.numer, options), ((_c = (_b = atom.denom) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.type) === 'placeholder'\r\n                ? wrapNum(1)\r\n                : parse$1(atom.denom, options));\r\n            break;\r\n        case 'surd':\r\n            if (atom.index) {\r\n                result = wrapFn('pow', parse$1(atom.body, options), wrapFn('divide', wrapNum(1), parse$1(atom.index, options)));\r\n            }\r\n            else {\r\n                result = wrapFn('sqrt', parse$1(atom.body, options));\r\n            }\r\n            break;\r\n        case 'rule':\r\n            break;\r\n        // case 'line':\r\n        case 'overlap':\r\n            // case 'accent':\r\n            break;\r\n        case 'overunder':\r\n            break;\r\n        case 'mord':\r\n        case 'textord':\r\n        case 'mbin':\r\n            // Check to see if it's a \\char command\r\n            m = !command\r\n                ? undefined\r\n                : command.match(/[{]?\\\\char\"([0-9abcdefABCDEF]*)[}]?/);\r\n            if (m) {\r\n                sym = String.fromCodePoint(parseInt(m[1], 16));\r\n            }\r\n            else {\r\n                sym = getCanonicalName(getString(atom));\r\n                if (sym.length > 0 && sym.charAt(0) === '\\\\') {\r\n                    // This is an identifier with no special handling.\r\n                    // Use the Unicode value if outside ASCII range\r\n                    if (typeof atom.body === 'string') {\r\n                        // TODO: consider making this an option?\r\n                        // if (atom.body.charCodeAt(0) > 255) {\r\n                        //     sym = '&#x' + ('000000' +\r\n                        //         atom.body.charCodeAt(0).toString(16)).substr(-4) + ';';\r\n                        // } else {\r\n                        sym = atom.body;\r\n                        // }\r\n                    }\r\n                }\r\n            }\r\n            variantSym = escapeText(mathVariantToUnicode(sym, variant, style));\r\n            if (variantSym !== sym) {\r\n                // If there's a specific Unicode character matching this one\r\n                // no need to record a variant.\r\n                result = { sym: variantSym };\r\n                variant = 'normal';\r\n            }\r\n            else {\r\n                result = { sym: sym };\r\n            }\r\n            break;\r\n        // case 'mpunct':\r\n        //     result = '<mo separator=\"true\">' + command + '</mo>';\r\n        //     break;\r\n        case 'minner':\r\n            break;\r\n        case 'mop':\r\n            break;\r\n        case 'box':\r\n            result = parse$1(atom.body, options);\r\n            break;\r\n        case 'enclose':\r\n            // result = '<menclose notation=\"';\r\n            // for (const notation in atom.notation) {\r\n            //     if (Object.prototype.hasOwnProperty.call(atom.notation, notation) &&\r\n            //         atom.notation[notation]) {\r\n            //         result += sep + notation;\r\n            //         sep = ' ';\r\n            //     }\r\n            // }\r\n            // result += '\">' + toAST(atom.body).mathML + '</menclose>';\r\n            break;\r\n        case 'array':\r\n            if (atom.environmentName === 'cardinality') {\r\n                // @revisit... It's an environment, but not an array...?\r\n                result = wrapFn('card', parse$1(atom.array, options));\r\n            }\r\n            else if (/array|matrix|pmatrix|bmatrix/.test(atom.environmentName)) {\r\n                result = { fn: 'array', args: [] };\r\n                for (const row of atom.array) {\r\n                    result.args.push(row.map((cell) => parse$1(cell, options)));\r\n                }\r\n            }\r\n            else if (atom.environmentName === 'cases') {\r\n                result = { fn: 'cases', args: [] };\r\n                for (const row of atom.array) {\r\n                    if (row[0]) {\r\n                        const statement = [];\r\n                        statement.push(parse$1(row[0], options));\r\n                        let condition = parse$1(row[1], options);\r\n                        if (condition) {\r\n                            if (condition.fn === 'text' && condition.arg) {\r\n                                if (/^(if|when|for)$/i.test(condition.arg[0].trim())) {\r\n                                    condition = condition.arg.filter((x) => typeof x !== 'string');\r\n                                }\r\n                            }\r\n                        }\r\n                        statement.push(condition !== null && condition !== void 0 ? condition : {});\r\n                        result.args.push(statement);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 'spacing':\r\n        case 'space':\r\n        case 'mathstyle':\r\n            break;\r\n        default:\r\n            result = undefined;\r\n            console.warn('Unhandled atom \"' +\r\n                atom.type +\r\n                '\" in \"' +\r\n                (atom.symbol || atom.body) +\r\n                '\"');\r\n    }\r\n    if (result && variant && variant !== 'normal') {\r\n        result.variant = variant;\r\n    }\r\n    if (result && typeof atom.cssClass === 'string') {\r\n        result.class = atom.cssClass;\r\n    }\r\n    if (result && typeof atom.cssId === 'string') {\r\n        result.id = atom.cssId;\r\n    }\r\n    return result;\r\n}\r\nfunction filterPresentationAtoms(atoms) {\r\n    if (!atoms)\r\n        return [];\r\n    let result;\r\n    if (isArray(atoms)) {\r\n        result = [];\r\n        for (const atom of atoms) {\r\n            const filter = filterPresentationAtoms(atom);\r\n            result = result.concat(filter);\r\n        }\r\n    }\r\n    else {\r\n        if (atoms.type === 'spacing' || atoms.type === 'first') {\r\n            return [];\r\n        }\r\n        else if (atoms.type === 'box') {\r\n            result = filterPresentationAtoms(atoms.body);\r\n        }\r\n        else {\r\n            if (atoms.body && isArray(atoms.body)) {\r\n                atoms.body = filterPresentationAtoms(atoms.body);\r\n            }\r\n            if (atoms.superscript && isArray(atoms.superscript)) {\r\n                atoms.superscript = filterPresentationAtoms(atoms.superscript);\r\n            }\r\n            if (atoms.subscript && isArray(atoms.subscript)) {\r\n                atoms.subscript = filterPresentationAtoms(atoms.subscript);\r\n            }\r\n            if (atoms.index && isArray(atoms.index)) {\r\n                atoms.index = filterPresentationAtoms(atoms.index);\r\n            }\r\n            if (atoms.denom && isArray(atoms.denom)) {\r\n                atoms.denom = filterPresentationAtoms(atoms.denom);\r\n            }\r\n            if (atoms.numer && isArray(atoms.numer)) {\r\n                atoms.numer = filterPresentationAtoms(atoms.numer);\r\n            }\r\n            if (atoms.array && isArray(atoms.array)) {\r\n                atoms.array = atoms.array.map((row) => row.map((cell) => filterPresentationAtoms(cell)));\r\n            }\r\n            result = [atoms];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Parse a sequence of text zone and math zones:\r\n * <sentence> := ((<text>) <expression>)+\r\n */\r\nfunction parseSentence(expr, options) {\r\n    expr.index = expr.index || 0;\r\n    expr.ast = undefined;\r\n    const zones = [];\r\n    // Iterate while we have atoms to look at\r\n    while (expr.atoms[expr.index]) {\r\n        if (expr.atoms[expr.index].mode === 'text') {\r\n            // Text mode atom...\r\n            let text = '';\r\n            while (expr.atoms[expr.index] &&\r\n                expr.atoms[expr.index].mode === 'text') {\r\n                text += expr.atoms[expr.index].body;\r\n                expr.index += 1;\r\n            }\r\n            zones.push(wrapFn('text', text));\r\n        }\r\n        else {\r\n            const z = parseExpression(expr, options).ast;\r\n            // Something went wrong in parsing the expression...\r\n            if (!z)\r\n                return undefined;\r\n            zones.push(z);\r\n        }\r\n    }\r\n    if (zones.length > 1) {\r\n        return wrapFn('sequence', ...zones);\r\n    }\r\n    return zones[0] || undefined;\r\n}\r\nfunction parse$1(atoms, options) {\r\n    return parseSentence({ atoms: filterPresentationAtoms(atoms) }, options);\r\n}\r\nfunction atomtoMathJson(atoms, options) {\r\n    return parse$1(atoms, options);\r\n}\r\n/**\r\n *\r\n * @param {string} fence - The fence to wrap around the arguments\r\n * @return {string} - A string wrapped in the fence\r\n */\r\nfunction wrapFence(fence, ...args) {\r\n    fence = fence || '.. ';\r\n    let result = '';\r\n    if (args.length > 0) {\r\n        if (fence[0] !== '.')\r\n            result += fence[0];\r\n        let sep = '';\r\n        for (const arg of args) {\r\n            result += sep + arg;\r\n            sep = fence[2];\r\n        }\r\n        if (fence[1] !== '.')\r\n            result += fence[1];\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Return a formatted mantissa:\r\n * 1234567 -> 123 456 7...\r\n * 1233333 -> 12(3)\r\n * @param {string} m\r\n * @param {Object.<string, any>} config\r\n * @private\r\n */\r\nfunction formatMantissa(m, config) {\r\n    const originalLength = m.length;\r\n    // The last digit may have been rounded, if it exceeds the precison,\r\n    // which could throw off the\r\n    // repeating pattern detection. Ignore   it.\r\n    m = m.substr(0, config.precision - 2);\r\n    for (let i = 0; i < m.length - 16; i++) {\r\n        // Offset is the part of the mantissa that is not repeating\r\n        const offset = m.substr(0, i);\r\n        // Try to find a repeating pattern of length j\r\n        for (let j = 0; j < 17; j++) {\r\n            const cycle = m.substr(i, j + 1);\r\n            const times = Math.floor((m.length - offset.length) / cycle.length);\r\n            if (times > 1) {\r\n                if ((offset + cycle.repeat(times + 1)).startsWith(m)) {\r\n                    // We've found a repeating pattern!\r\n                    if (cycle === '0') {\r\n                        return offset.replace(/(\\d{3})/g, '$1' + config.groupSeparator);\r\n                    }\r\n                    return (offset.replace(/(\\d{3})/g, '$1' + config.groupSeparator) +\r\n                        config.beginRepeatingDigits +\r\n                        cycle.replace(/(\\d{3})/g, '$1' + config.groupSeparator) +\r\n                        config.endRepeatingDigits);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (originalLength !== m.length) {\r\n        m += '\\\\ldots';\r\n    }\r\n    return m.replace(/(\\d{3})/g, '$1' + config.groupSeparator);\r\n}\r\nfunction parseFloatToPrecision(num) {\r\n    return parseFloat(parseFloat(num).toPrecision(15));\r\n}\r\n/**\r\n *\r\n * @param num - A number, represented as a string (e.g. \"-12.45\"\r\n *  particularly useful for arbitrary precision numbers) or a number (-12.45)\r\n * @return A LaTeX representation of the AST\r\n */\r\nfunction numberAsLatex(num, config) {\r\n    let result = '';\r\n    let value;\r\n    if (typeof config.precision === 'number') {\r\n        if (typeof num === 'number') {\r\n            value = parseFloatToPrecision(num);\r\n        }\r\n        else {\r\n            let sign = '';\r\n            let exponent = '';\r\n            if (num[0] === '-') {\r\n                sign = '-';\r\n                num = num.substr(1);\r\n            }\r\n            else if (num[0] === '+') {\r\n                num = num.substr(1);\r\n            }\r\n            if (num.indexOf('.') >= 0) {\r\n                const m = num.match(/(\\d*).(\\d*)([e|E]([-+]?[0-9]*))?/);\r\n                const base = m[1];\r\n                const mantissa = m[2].substring(0, Math.min(config.precision - base.length, m[2].length));\r\n                exponent = m[4] || '';\r\n                if (base === '0') {\r\n                    let p = 0; // Index of the first non-zero digit after the decimal\r\n                    while (mantissa[p] === '0' && p < mantissa.length) {\r\n                        p += 1;\r\n                    }\r\n                    let r = '';\r\n                    if (p <= 4) {\r\n                        r = '0' + config.decimalMarker;\r\n                        r += mantissa.substr(0, p);\r\n                        r += formatMantissa(num.substr(r.length), config);\r\n                    }\r\n                    else if (p + 1 >= config.precision) {\r\n                        r = '0';\r\n                        sign = '';\r\n                    }\r\n                    else {\r\n                        r = num[p];\r\n                        const f = formatMantissa(num.substr(p + 1), config);\r\n                        if (f) {\r\n                            r += config.decimalMarker + f;\r\n                        }\r\n                    }\r\n                    if (r !== '0') {\r\n                        if (num.length - 1 > config.precision &&\r\n                            !r.endsWith('}') &&\r\n                            !r.endsWith('\\\\ldots')) {\r\n                            r += '\\\\ldots';\r\n                        }\r\n                        if (p > 4) {\r\n                            r += config.exponentProduct;\r\n                            if (config.exponentMarker) {\r\n                                r += config.exponentMarker + (1 - p).toString();\r\n                            }\r\n                            else {\r\n                                r += '10^{' + (1 - p).toString() + '}';\r\n                            }\r\n                        }\r\n                    }\r\n                    num = r;\r\n                }\r\n                else {\r\n                    num = base.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\r\n                    const f = formatMantissa(mantissa, config);\r\n                    if (f) {\r\n                        num += config.decimalMarker + f;\r\n                        // if (num.length - 1 > config.precision && !num.endsWith('}') && !num.endsWith('\\\\ldots')) {\r\n                        //     num += '\\\\ldots';\r\n                        // }\r\n                    }\r\n                }\r\n            }\r\n            else if (num.length > config.precision) {\r\n                const len = num.length;\r\n                let r = num[0];\r\n                const f = formatMantissa(num.substr(2), config);\r\n                if (f) {\r\n                    r += config.decimalMarker + f;\r\n                    if (r[r.length - 1] !== '}') {\r\n                        r += '\\\\ldots';\r\n                    }\r\n                }\r\n                if (r !== '1') {\r\n                    r += config.exponentProduct;\r\n                }\r\n                else {\r\n                    r = '';\r\n                }\r\n                if (config.exponentMarker) {\r\n                    r += config.exponentMarker + (len - 2).toString();\r\n                }\r\n                else {\r\n                    r += '10^{' + (len - 2).toString() + '}';\r\n                }\r\n                num = r;\r\n            }\r\n            else {\r\n                num = num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\r\n            }\r\n            if (exponent) {\r\n                // There is an exponent...\r\n                if (config.exponentMarker) {\r\n                    exponent = config.exponentMarker + exponent;\r\n                }\r\n                else {\r\n                    exponent =\r\n                        config.exponentProduct + ' 10^{' + exponent + '}';\r\n                }\r\n            }\r\n            return sign + num + exponent;\r\n        }\r\n    }\r\n    if (config.scientificNotation === 'engineering') {\r\n        // Ensure the exponent is a multiple of 3\r\n        if (value === 0) {\r\n            result = '0';\r\n        }\r\n        else {\r\n            const y = Math.abs(value);\r\n            let exponent = Math.round(Math.log10(y));\r\n            exponent = exponent - (exponent % 3);\r\n            if (y < 1000)\r\n                exponent = 0;\r\n            const mantissa = y / Math.pow(10, exponent);\r\n            let mantissaString = '';\r\n            const m = mantissa.toString().match(/^(.*)\\.(.*)$/);\r\n            if ((m === null || m === void 0 ? void 0 : m[1]) && m[2]) {\r\n                mantissaString = m[1] + config.decimalMarker + m[2];\r\n            }\r\n            if (config.groupSeparator) {\r\n                mantissaString = formatMantissa(mantissa.toExponential(), config);\r\n            }\r\n            let exponentString = '';\r\n            if (exponent === 0) {\r\n                exponentString = '';\r\n            }\r\n            else if (config.exponentMarker) {\r\n                exponentString = config.exponentMarker + exponent;\r\n            }\r\n            else {\r\n                exponentString =\r\n                    config.exponentProduct + ' 10^{' + exponent + '}';\r\n            }\r\n            result = (value < 0 ? '-' : '') + mantissaString + exponentString;\r\n        }\r\n    }\r\n    else {\r\n        const valString = typeof num === 'string' ? num : num.toString();\r\n        let m = valString.match(/^(.*)[e|E]([-+]?[0-9]*)$/i);\r\n        let base, exponent, mantissa;\r\n        base = valString;\r\n        mantissa = '';\r\n        if ((m === null || m === void 0 ? void 0 : m[1]) && m[2]) {\r\n            // There is an exponent...\r\n            base = m[1];\r\n            if (config.exponentMarker) {\r\n                exponent = config.exponentMarker + m[2];\r\n            }\r\n            else {\r\n                exponent = config.exponentProduct + ' 10^{' + m[2] + '}';\r\n            }\r\n        }\r\n        m = base.match(/^(.*)\\.(.*)$/);\r\n        if ((m === null || m === void 0 ? void 0 : m[1]) && m[2]) {\r\n            base = m[1];\r\n            mantissa = m[2];\r\n        }\r\n        if (config.groupSeparator) {\r\n            base = base.replace(/\\B(?=(\\d{3})+(?!\\d))/g, config.groupSeparator);\r\n            mantissa = formatMantissa(mantissa, config);\r\n        }\r\n        if (mantissa)\r\n            mantissa = config.decimalMarker + mantissa;\r\n        result = base + mantissa + (exponent || '');\r\n    }\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @param {object} ast - Abstract Syntax Tree object (in canonical form)\r\n * @return {string} A LaTeX representation of the AST\r\n */\r\nfunction jsonToLatex(ast, options) {\r\n    const config = Object.assign({\r\n        precision: 14,\r\n        decimalMarker: '.',\r\n        groupSeparator: '\\\\, ',\r\n        product: '\\\\cdot ',\r\n        exponentProduct: '\\\\cdot ',\r\n        exponentMarker: '',\r\n        arcSeparator: '\\\\,',\r\n        scientificNotation: 'auto',\r\n        beginRepeatingDigits: '\\\\overline{',\r\n        endRepeatingDigits: '}',\r\n    }, options);\r\n    let result = '';\r\n    if (ast === undefined)\r\n        return '';\r\n    if (typeof ast === 'string') {\r\n        result = ast;\r\n    }\r\n    else if (ast.latex) {\r\n        // If ast.latex key is present, use it to render the element\r\n        result = ast.latex;\r\n    }\r\n    else if (isNumber$1(ast)) {\r\n        const val = asMachineNumber(ast);\r\n        if (val === -Infinity) {\r\n            result = '-\\\\infty ';\r\n        }\r\n        else if (val === Infinity) {\r\n            result = '\\\\infty ';\r\n        }\r\n        else if (typeof ast.num === 'object' &&\r\n            (typeof ast.num.re === 'string' || typeof ast.num.im === 'string')) {\r\n            const re = numberRe(ast);\r\n            const im = numberIm(ast);\r\n            if (isNaN(re) || isNaN(im)) {\r\n                result = '\\\\text{NaN}';\r\n            }\r\n            else if (Math.abs(im) <= Number.EPSILON &&\r\n                Math.abs(re) <= Number.EPSILON) {\r\n                result = '0';\r\n            }\r\n            else {\r\n                if (Math.abs(re) > Number.EPSILON) {\r\n                    result = numberAsLatex(re, config);\r\n                }\r\n                if (Math.abs(im) > Number.EPSILON) {\r\n                    if (Math.abs(re) > Number.EPSILON) {\r\n                        result += im > 0 ? '+' : '';\r\n                    }\r\n                    result +=\r\n                        (Math.abs(im) !== 1 ? numberAsLatex(im, config) : '') +\r\n                            '\\\\imaginaryI ';\r\n                }\r\n            }\r\n        }\r\n        else if (isNaN(val)) {\r\n            result = '\\\\text{NaN}';\r\n        }\r\n        else {\r\n            result = numberAsLatex(ast.num, config);\r\n        }\r\n        if (hasSup(ast))\r\n            result += '^{' + jsonToLatex(ast.sup, config) + '}';\r\n        if (hasSub(ast))\r\n            result += '_{' + jsonToLatex(ast.sub, config) + '}';\r\n    }\r\n    else if (ast.group) {\r\n        result = jsonToLatex(ast.group, config);\r\n        if (!isNumber$1(ast.group) && !asSymbol(ast.group)) {\r\n            result = wrapFence(ast.fence || '(),', result);\r\n        }\r\n        else if (numberIm(ast.group) !== 0) {\r\n            result = wrapFence(ast.fence || '(),', result);\r\n        }\r\n        if (hasSup(ast))\r\n            result += '^{' + jsonToLatex(ast.sup, config) + '}';\r\n        if (hasSub(ast))\r\n            result += '_{' + jsonToLatex(ast.sub, config) + '}';\r\n    }\r\n    else if (ast.fn) {\r\n        if (ast.fn === 'bind') {\r\n            result = jsonToLatex(getArg(ast, 0), config) + '|_{';\r\n            if (ast.arg && ast.arg.length === 2) {\r\n                result += jsonToLatex(getArg(ast, 1));\r\n            }\r\n            else {\r\n                let sep = '';\r\n                for (let i = 1; i < ast.arg.length; i += 2) {\r\n                    result +=\r\n                        sep +\r\n                            jsonToLatex(getArg(ast, i)) +\r\n                            ' = ' +\r\n                            jsonToLatex(getArg(ast, i + 1));\r\n                    sep = ', ';\r\n                }\r\n            }\r\n            result += '}';\r\n        }\r\n        else if (ast.fn === 'divide') {\r\n            result =\r\n                '\\\\frac{' +\r\n                    jsonToLatex(getArg(ast, 0), config) +\r\n                    '}{' +\r\n                    jsonToLatex(getArg(ast, 1), config) +\r\n                    '}';\r\n        }\r\n        else if (ast.fn === 'negate') {\r\n            result = '-' + jsonToLatex(getArg(ast, 0), config);\r\n        }\r\n        else if (ast.fn === 'subtract') {\r\n            result =\r\n                jsonToLatex(getArg(ast, 0), config) +\r\n                    ' - ' +\r\n                    jsonToLatex(getArg(ast, 1), config);\r\n        }\r\n        else if ((ast.fn === 'add' || ast.fn === 'multiply') &&\r\n            isArray(ast.arg)) {\r\n            const a = [];\r\n            for (const exp of ast.arg) {\r\n                if (exp.fn === 'add' || exp.fn === 'subtract') {\r\n                    a.push(wrapFence('() ', jsonToLatex(exp, config)));\r\n                }\r\n                else if (isComplexWithRealAndImaginary(exp)) {\r\n                    // Complex numbers that have both a real and imaginary part\r\n                    // should be wrapped in parentheses\r\n                    a.push(wrapFence('() ', jsonToLatex(exp, config)));\r\n                }\r\n                else if (hasSup(ast) &&\r\n                    !(numberIm(exp) === 0 || numberIm(exp) === 1)) {\r\n                    // Wrap with parentheses if there's an exponent\r\n                    // and the imaginary part is neither 0 nor 1\r\n                    a.push(wrapFence('() ', jsonToLatex(exp, config)));\r\n                }\r\n                else {\r\n                    a.push(jsonToLatex(exp, config));\r\n                }\r\n            }\r\n            if (ast.fn === 'multiply') {\r\n                if (ast.arg &&\r\n                    ast.arg.length === 2 &&\r\n                    (isNumber$1(ast.arg[0]) || ast.arg[0].fn === 'divide') &&\r\n                    (!isNumber$1(ast.arg[1]) ||\r\n                        (numberRe(ast.arg[1]) === 0 &&\r\n                            numberIm(ast.arg[1]) === 1))) {\r\n                    // Invisible times:\r\n                    // (number or fraction) * not a number\r\n                    // or (number or fraction) * imaginary unit\r\n                    result = a[0] + a[1];\r\n                }\r\n                else {\r\n                    result = a.join(' \\\\times ');\r\n                }\r\n            }\r\n            else {\r\n                // Addition (and subtraction)\r\n                if (ast.arg && ast.arg.length === 1) {\r\n                    if (ast.arg[0].fn === 'negate' ||\r\n                        (isNumber$1(ast.arg[0]) &&\r\n                            asMachineNumber(ast.arg[0]) < 0)) {\r\n                        // a[0] has a negative sign\r\n                        result = a[0];\r\n                    }\r\n                    else {\r\n                        // Single non-negative element, add a '+' in front\r\n                        result = '+' + a[0];\r\n                    }\r\n                }\r\n                else {\r\n                    result = a[0];\r\n                    for (let i = 1; i < ast.arg.length; i++) {\r\n                        if (ast.arg[i].fn === 'negate' ||\r\n                            (isNumber$1(ast.arg[i]) &&\r\n                                asMachineNumber(ast.arg[i]) < 0)) {\r\n                            // a[i] already has a negative sign, so we can do an\r\n                            // implicit add\r\n                            result += a[i];\r\n                        }\r\n                        else {\r\n                            result += ' + ' + a[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (ast.fn === 'list' || ast.fn === 'list2') {\r\n            const a = [];\r\n            if (ast.arg) {\r\n                for (const exp of ast.arg) {\r\n                    a.push(jsonToLatex(exp, config));\r\n                }\r\n            }\r\n            result = a.join(ast.fn === 'list2' ? '; ' : ', ');\r\n        }\r\n        else if (ast.fn === 'sequence') {\r\n            result = joinLatex(ast.arg.map((x) => jsonToLatex(x, config)));\r\n        }\r\n        else if (ast.fn === 'text') {\r\n            result = '\\\\text{' + (ast.arg[0] || '') + '}';\r\n        }\r\n        else if (ast.fn === 'pow' &&\r\n            isArray(ast.arg) &&\r\n            ast.arg.length >= 2) {\r\n            result = jsonToLatex(getArg(ast, 0), config);\r\n            if (!isNumber$1(getArg(ast, 0)) && !asSymbol(getArg(ast, 0))) {\r\n                result = wrapFence(ast.fence || '(),', result);\r\n            }\r\n            result += '^{' + jsonToLatex(getArg(ast, 1), config) + '}';\r\n        }\r\n        else if (ast.fn === 'equal' && ast.arg && ast.arg.length > 2) {\r\n            result = ast.arg.map((x) => jsonToLatex(x, config)).join(' = ');\r\n        }\r\n        else {\r\n            const fn = getLatexTemplateForFunction(ast.fn);\r\n            result = fn;\r\n            let argstring = '';\r\n            const parenRequired = /%(?![01_^])/.test(fn) &&\r\n                isArray(ast.arg) &&\r\n                ast.arg.length > 1;\r\n            if (parenRequired) {\r\n                // Parenthesis are required if argument list is longer than 1\r\n                result += wrapFence(ast.fence || '(),', ...ast.arg.map((x) => jsonToLatex(x, config)));\r\n            }\r\n            else if (isArray(ast.arg) && ast.arg.length > 0) {\r\n                // The parenthesis may be optional...\r\n                const arg0 = jsonToLatex(getArg(ast, 0), config);\r\n                const arg1 = jsonToLatex(getArg(ast, 1), config);\r\n                const argsn = [...ast.arg];\r\n                if (/%0/.test(fn)) {\r\n                    result = result.replace('%0', arg0);\r\n                    argsn.shift();\r\n                }\r\n                if (/%1/.test(fn)) {\r\n                    result = result.replace('%1', arg1);\r\n                    argsn.shift();\r\n                }\r\n                if (argsn.length > 0) {\r\n                    argstring = wrapFence(ast.fence || '(),', ...argsn.map((x) => jsonToLatex(x, config)));\r\n                }\r\n            }\r\n            else {\r\n                // Empty argument list\r\n                argstring = wrapFence(ast.fence || '(),', '');\r\n            }\r\n            if (hasSup(ast)) {\r\n                result = result.replace('%^', '^{' + jsonToLatex(ast.sup, config) + '}');\r\n            }\r\n            else {\r\n                result = result.replace('%^', '');\r\n            }\r\n            if (hasSub(ast)) {\r\n                result = result.replace('%_', '_{' + jsonToLatex(ast.sub, config) + '}');\r\n            }\r\n            else {\r\n                result = result.replace('%_', '');\r\n            }\r\n            // Insert the arguments in the function template (%)\r\n            result = result.replace(/%(?![01_^])/, argstring);\r\n            // If there are any placeholders left, remove them\r\n            result = result.replace('%0', '').replace('%1', '');\r\n        }\r\n    }\r\n    else if (typeof ast.sym === 'string') {\r\n        result = asSymbol(ast);\r\n        // Is it a Unicode value?\r\n        let m = result.match(/^&#x([0-9a-f]+);$/i);\r\n        if (m === null || m === void 0 ? void 0 : m[1]) {\r\n            result = String.fromCodePoint(parseInt(m[1], 16));\r\n        }\r\n        else {\r\n            m = result.match(/^&#([0-9]+);$/i);\r\n            if (m === null || m === void 0 ? void 0 : m[1]) {\r\n                result = String.fromCodePoint(parseInt(m[1]));\r\n            }\r\n        }\r\n        // Is there a variant info attached to it?\r\n        if (typeof ast.variant === 'string') {\r\n            const MATH_VARIANTS = {\r\n                normal: 'mathrm',\r\n                'double-struck': 'mathbb',\r\n                bold: 'mathbf',\r\n                // 'script': 'mathcal',\r\n                fraktur: 'mathfrak',\r\n                script: 'mathscr',\r\n                'sans-serif': 'mathsf',\r\n                monospace: 'mathtt',\r\n            };\r\n            result = '\\\\' + MATH_VARIANTS[ast.variant] + '{' + result + '}';\r\n        }\r\n        if (hasSup(ast))\r\n            result += '^{' + jsonToLatex(ast.sup, config) + '}';\r\n        if (hasSub(ast))\r\n            result += '_{' + jsonToLatex(ast.sub, config) + '}';\r\n    }\r\n    else if (typeof ast.text === 'string') {\r\n        result = '\\\\text{' + ast.text + '}';\r\n    }\r\n    // If there was an error attached to this node,\r\n    // display it on a red background\r\n    if (typeof ast.error === 'string') {\r\n        result = '\\\\bbox[#F56165]{' + result + '}';\r\n    }\r\n    return result;\r\n}\n\nclass MathfieldPrivate {\r\n    /**\r\n     * To create a mathfield, you would typically use {@linkcode makeMathField | MathLive.makeMathField()}\r\n     * instead of invoking directly this constructor.\r\n     *\r\n     *\r\n     * @param element - The DOM element that this mathfield is attached to.\r\n     * Note that `element.mathfield` is this object.\r\n     */\r\n    constructor(element, options) {\r\n        var _a;\r\n        this.stylesheets = [];\r\n        this.eventHandlingInProgress = '';\r\n        // Setup default config options\r\n        this.options = update(getDefault(), options);\r\n        this.element = element;\r\n        element['mathfield'] = this;\r\n        // Save existing content\r\n        this.originalContent = element.innerHTML;\r\n        let elementText = this.element.textContent;\r\n        if (elementText) {\r\n            elementText = elementText.trim();\r\n        }\r\n        // Load the fonts, inject the core and mathfield stylesheets\r\n        loadFonts(this.options.fontsDirectory, this.options.onError);\r\n        this.stylesheets.push(inject(element, css_248z$2));\r\n        this.stylesheets.push(inject(element, css_248z$1));\r\n        // Additional elements used for UI.\r\n        // They are retrieved in order a bit later, so they need to be kept in sync\r\n        // 1.0/ The field, where the math equation will be displayed\r\n        // 1.1/ The virtual keyboard toggle\r\n        // 2/ The popover panel which displays info in command mode\r\n        // 3/ The keystroke caption panel (option+shift+K)\r\n        // 4/ The virtual keyboard\r\n        // 5.0/ The area to stick MathML for screen reading larger exprs (not used right now)\r\n        //      The for the area is that focus would bounce their and then back triggering the\r\n        //         screen reader to read it\r\n        // 5.1/ The aria-live region for announcements\r\n        let markup = '';\r\n        if (!this.options.substituteTextArea) {\r\n            if (/android|ipad|ipod|iphone/i.test(navigator === null || navigator === void 0 ? void 0 : navigator.userAgent)) {\r\n                // On Android or iOS, don't use a textarea, which has the side effect of\r\n                // bringing up the OS virtual keyboard\r\n                markup += `<span class='ML__textarea'>\n                <span class='ML__textarea__textarea'\n                    tabindex=\"-1\" role=\"textbox\"\n                    style='display:inline-block;height:1px;width:1px' >\n                </span>\n            </span>`;\r\n            }\r\n            else {\r\n                markup +=\r\n                    '<span class=\"ML__textarea\">' +\r\n                        '<textarea class=\"ML__textarea__textarea\" autocapitalize=\"off\" autocomplete=\"off\" ' +\r\n                        `autocorrect=\"off\" spellcheck=\"false\" aria-hidden=\"true\" tabindex=\"${(_a = element.tabIndex) !== null && _a !== void 0 ? _a : 0}\">` +\r\n                        '</textarea>' +\r\n                        '</span>';\r\n            }\r\n        }\r\n        else {\r\n            if (typeof this.options.substituteTextArea === 'string') {\r\n                markup += this.options.substituteTextArea;\r\n            }\r\n            else {\r\n                // We don't really need this one, but we keep it here so that the\r\n                // indexes below remain the same whether a substituteTextArea is\r\n                // provided or not.\r\n                markup += '<span></span>';\r\n            }\r\n        }\r\n        markup +=\r\n            '<span class=\"ML__fieldcontainer\">' +\r\n                '<span class=\"ML__fieldcontainer__field\"></span>';\r\n        // Only display the virtual keyboard toggle if the virtual keyboard mode is\r\n        // 'manual'\r\n        if (this.options.virtualKeyboardMode === 'manual') {\r\n            markup += `<div part='virtual-keyboard-toggle' class=\"ML__virtual-keyboard-toggle\" role=\"button\" data-ML__tooltip=\"${localize('tooltip.toggle virtual keyboard')}\">`;\r\n            // data-ML__tooltip='Toggle Virtual Keyboard'\r\n            if (this.options.virtualKeyboardToggleGlyph) {\r\n                markup += this.options.virtualKeyboardToggleGlyph;\r\n            }\r\n            else {\r\n                markup += `<span style=\"width: 21px; margin-top: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"/></svg></span>`;\r\n            }\r\n            markup += '</div>';\r\n        }\r\n        else {\r\n            markup += '<span ></span>';\r\n        }\r\n        markup += '</span>';\r\n        markup += `\n        <div class=\"ML__sr-only\">\n            <span aria-live=\"assertive\" aria-atomic=\"true\"></span>\n            <span></span>\n        </div>\n    `;\r\n        this.element.innerHTML = this.options.createHTML(markup);\r\n        let iChild = 0; // index of child -- used to make changes below easier\r\n        let textarea;\r\n        if (typeof this.options.substituteTextArea === 'function') {\r\n            textarea = this.options.substituteTextArea();\r\n        }\r\n        else {\r\n            textarea = this.element.children[iChild++]\r\n                .firstElementChild;\r\n        }\r\n        this.field = this.element.children[iChild].children[0];\r\n        // Listen to 'wheel' events to scroll (horizontally) the field when it overflows\r\n        this.field.addEventListener('wheel', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            const wheelDelta = typeof ev.deltaX === 'undefined' ? ev.detail : -ev.deltaX;\r\n            if (isFinite(wheelDelta)) {\r\n                this.field.scroll({\r\n                    top: 0,\r\n                    left: this.field.scrollLeft - wheelDelta * 5,\r\n                });\r\n            }\r\n        }, { passive: false });\r\n        this.virtualKeyboardToggle = this.element.children[iChild++]\r\n            .children[1];\r\n        attachButtonHandlers(this, this.virtualKeyboardToggle, {\r\n            default: 'toggleVirtualKeyboard',\r\n            alt: 'toggleVirtualKeyboardAlt',\r\n            shift: 'toggleVirtualKeyboardShift',\r\n        });\r\n        this.ariaLiveText = this.element.children[iChild]\r\n            .children[0];\r\n        this.accessibleNode = this.element.children[iChild++]\r\n            .children[1];\r\n        // Some panels are shared amongst instances of mathfield\r\n        // (there's a single instance in the document)\r\n        this.popover = getSharedElement('mathlive-popover-panel', 'ML__popover');\r\n        this.stylesheets.push(inject(null, css_248z$3));\r\n        this.keystrokeCaption = getSharedElement('mathlive-keystroke-caption-panel', 'ML__keystroke-caption');\r\n        this.stylesheets.push(inject(null, css_248z$4));\r\n        // The keystroke caption panel and the command bar are\r\n        // initially hidden\r\n        this.keystrokeCaptionVisible = false;\r\n        this.virtualKeyboardVisible = false;\r\n        this.keystrokeBuffer = '';\r\n        this.keystrokeBufferStates = [];\r\n        this.keystrokeBufferResetTimer = null;\r\n        // This index indicates which of the suggestions available to\r\n        // display in the popover panel\r\n        this.suggestionIndex = 0;\r\n        // The input mode (text, math, command)\r\n        // While getAnchorMode() represent the mode of the current selection,\r\n        // this.mode is the mode chosen by the user. It indicates the mode the\r\n        // next character typed will be interpreted in.\r\n        // It is often identical to getAnchorMode() since changing the selection\r\n        // changes the mode, but sometimes it is not, for example when a user\r\n        // enters a mode changing command.\r\n        this.mode = this.options.defaultMode;\r\n        this.smartModeSuppressed = false;\r\n        // Current style (color, weight, italic, etc...):\r\n        // reflects the style to be applied on next insertion.\r\n        this.style = {};\r\n        // Focus/blur state\r\n        this.blurred = true;\r\n        on(this.element, 'focus', this);\r\n        on(this.element, 'blur', this);\r\n        // Capture clipboard events\r\n        // Delegate keyboard events\r\n        this.keyboardDelegate = delegateKeyboardEvents(textarea, {\r\n            typedText: (text) => onTypedText(this, text),\r\n            cut: () => onCut(this),\r\n            copy: (ev) => onCopy(this, ev),\r\n            paste: (ev) => onPaste(this, ev),\r\n            keystroke: (keystroke, e) => onKeystroke(this, keystroke, e),\r\n            focus: () => this.onFocus(),\r\n            blur: () => this.onBlur(),\r\n            compositionStart: (composition) => this.onCompositionStart(composition),\r\n            compositionUpdate: (composition) => this.onCompositionUpdate(composition),\r\n            compositionEnd: (composition) => this.onCompositionEnd(composition),\r\n        });\r\n        // Delegate mouse and touch events\r\n        if (window.PointerEvent) {\r\n            // Use modern pointer events if available\r\n            on(this.field, 'pointerdown', this);\r\n        }\r\n        else {\r\n            on(this.field, 'touchstart:active mousedown', this);\r\n        }\r\n        // Request notification for when the window is resized (\r\n        // or the device switched from portrait to landscape) to adjust\r\n        // the UI (popover, etc...)\r\n        on(window, 'resize', this);\r\n        // Setup the model\r\n        this.model = new ModelPrivate({\r\n            mode: this.options.defaultMode,\r\n            macros: this.options.macros,\r\n            removeExtraneousParentheses: this.options\r\n                .removeExtraneousParentheses,\r\n        }, {\r\n            onContentDidChange: (_sender) => this.options.onContentDidChange(this),\r\n            onSelectionDidChange: (_sender) => this._onSelectionDidChange(),\r\n            onContentWillChange: () => this.options.onContentWillChange(this),\r\n            onSelectionWillChange: () => this.options.onSelectionWillChange(this),\r\n            onError: this.options.onError,\r\n        }, {\r\n            announce: (_sender, command, modelBefore, atoms) => { var _a, _b; return (_b = (_a = this.options).onAnnounce) === null || _b === void 0 ? void 0 : _b.call(_a, this, command, modelBefore, atoms); },\r\n            moveOut: (_sender, direction) => this.options.onMoveOutOf(this, direction),\r\n            tabOut: (_sender, direction) => this.options.onTabOutOf(this, direction),\r\n        }, this);\r\n        // Prepare to manage undo/redo\r\n        this.undoManager = new UndoManager(this.model);\r\n        // Use the content of the element for the initial value of the mathfield\r\n        insert(this.model, elementText, {\r\n            insertionMode: 'replaceAll',\r\n            selectionMode: 'after',\r\n            format: 'latex',\r\n            mode: 'math',\r\n            suppressChangeNotifications: true,\r\n            macros: this.options.macros,\r\n        });\r\n        // Now start recording potentially undoable actions\r\n        this.undoManager.startRecording();\r\n        this.undoManager.snapshot(this.options);\r\n        this.model.setListeners({\r\n            onContentDidChange: (_sender) => this.options.onContentDidChange(this),\r\n            onSelectionDidChange: (_sender) => this._onSelectionDidChange(),\r\n            onContentWillChange: () => this.options.onContentWillChange(this),\r\n            onSelectionWillChange: () => this.options.onSelectionWillChange(this),\r\n            onError: this.options.onError,\r\n        });\r\n        this.model.setHooks({\r\n            announce: (_sender, command, modelBefore, atoms) => { var _a, _b; return (_b = (_a = this.options).onAnnounce) === null || _b === void 0 ? void 0 : _b.call(_a, this, command, modelBefore, atoms); },\r\n            moveOut: (_sender, direction) => this.options.onMoveOutOf(this, direction),\r\n            tabOut: (_sender, direction) => this.options.onTabOutOf(this, direction),\r\n        });\r\n        if (!this.options.locale.startsWith(getActiveKeyboardLayout().locale)) {\r\n            setKeyboardLayoutLocale(this.options.locale);\r\n        }\r\n        this.keybindings = normalizeKeybindings(this.options.keybindings, (e) => {\r\n            if (typeof this.options.onError === 'function') {\r\n                this.options.onError({\r\n                    code: 'invalid-keybinding',\r\n                    arg: e.join('\\n'),\r\n                });\r\n            }\r\n            console.log(e.join('\\n'));\r\n        });\r\n        requestUpdate(this);\r\n    }\r\n    /** @deprecated */\r\n    $setConfig(config) {\r\n        deprecated('$setConfig');\r\n        this.setOptions(config);\r\n    }\r\n    setOptions(config) {\r\n        this.options = update(this.options, config);\r\n        this.model.setListeners({\r\n            onContentDidChange: (_sender) => this.options.onContentDidChange(this),\r\n            onSelectionDidChange: (_sender) => this._onSelectionDidChange(),\r\n            onContentWillChange: () => this.options.onContentWillChange(this),\r\n            onSelectionWillChange: () => this.options.onSelectionWillChange(this),\r\n            onError: this.options.onError,\r\n        });\r\n        this.model.setHooks({\r\n            announce: (_sender, command, modelBefore, atoms) => { var _a, _b; return (_b = (_a = this.options).onAnnounce) === null || _b === void 0 ? void 0 : _b.call(_a, this, command, modelBefore, atoms); },\r\n            moveOut: (_sender, direction) => this.options.onMoveOutOf(this, direction),\r\n            tabOut: (_sender, direction) => this.options.onTabOutOf(this, direction),\r\n        });\r\n        if (!this.options.locale.startsWith(getActiveKeyboardLayout().locale)) {\r\n            setKeyboardLayoutLocale(this.options.locale);\r\n        }\r\n        this.keybindings = normalizeKeybindings(this.options.keybindings, (e) => {\r\n            if (typeof this.options.onError === 'function') {\r\n                this.options.onError({\r\n                    code: 'invalid-keybinding',\r\n                    arg: e.join('\\n'),\r\n                });\r\n            }\r\n            console.log(e.join('\\n'));\r\n        });\r\n        if (!this.options.readOnly) {\r\n            this.onBlur();\r\n        }\r\n        // Changing some config options (i.e. `macros`) may\r\n        // require the content to be reparsed and re-rendered\r\n        const content = this.model.root.toLatex();\r\n        insert(this.model, content, {\r\n            insertionMode: 'replaceAll',\r\n            selectionMode: 'after',\r\n            format: 'latex',\r\n            mode: 'math',\r\n            suppressChangeNotifications: true,\r\n            macros: this.options.macros,\r\n        });\r\n        requestUpdate(this);\r\n    }\r\n    /** @deprecated */\r\n    getConfig(keys) {\r\n        deprecated('$getConfig');\r\n        return get(this.options, keys);\r\n    }\r\n    getOptions(keys) {\r\n        return get(this.options, keys);\r\n    }\r\n    getOption(key) {\r\n        return get(this.options, key);\r\n    }\r\n    /*\r\n     * handleEvent is a function invoked when an event is registered with an\r\n     * object instead ( see `addEventListener()` in `on()`)\r\n     * The name is defined by `addEventListener()` and cannot be changed.\r\n     * This pattern is used to be able to release bound event handlers,\r\n     * (event handlers that need access to `this`) as the bind() function\r\n     * would create a new function that would have to be kept track off\r\n     * to be able to properly remove the event handler later.\r\n     */\r\n    handleEvent(evt) {\r\n        switch (evt.type) {\r\n            case 'focus':\r\n                if (!this.eventHandlingInProgress) {\r\n                    this.eventHandlingInProgress = 'focus';\r\n                    this.onFocus();\r\n                    this.eventHandlingInProgress = '';\r\n                }\r\n                break;\r\n            case 'blur':\r\n                if (!this.eventHandlingInProgress) {\r\n                    this.eventHandlingInProgress = 'blur';\r\n                    this.onBlur();\r\n                    this.eventHandlingInProgress = '';\r\n                }\r\n                break;\r\n            case 'touchstart':\r\n            case 'mousedown':\r\n                // iOS <=13 Safari and Firefox on Android\r\n                onPointerDown(this, evt);\r\n                break;\r\n            case 'pointerdown':\r\n                onPointerDown(this, evt);\r\n                break;\r\n            case 'resize': {\r\n                if (this.resizeTimer) {\r\n                    window.cancelAnimationFrame(this.resizeTimer);\r\n                }\r\n                this.resizeTimer = window.requestAnimationFrame(() => isValidMathfield(this) && this.onResize());\r\n                break;\r\n            }\r\n            default:\r\n                console.warn('Unexpected event type', evt.type);\r\n        }\r\n    }\r\n    /** @deprecated */\r\n    $revertToOriginalContent() {\r\n        deprecated('$revertToOriginalContent');\r\n        this.dispose();\r\n        this.element.innerHTML = this.options.createHTML(this.originalContent);\r\n    }\r\n    dispose() {\r\n        this.element.innerHTML = '$$' + this.getValue() + '$$';\r\n        delete this.element['mathfield'];\r\n        delete this.accessibleNode;\r\n        delete this.ariaLiveText;\r\n        delete this.field;\r\n        delete this.keyboardDelegate;\r\n        this.virtualKeyboardToggle.remove();\r\n        delete this.virtualKeyboardToggle;\r\n        releaseSharedElement(this.popover);\r\n        delete this.popover;\r\n        releaseSharedElement(this.keystrokeCaption);\r\n        delete this.keystrokeCaption;\r\n        if (this.virtualKeyboard) {\r\n            this.virtualKeyboard.dispose();\r\n            delete this.virtualKeyboard;\r\n        }\r\n        off(this.element, 'pointerdown', this);\r\n        off(this.element, 'touchstart:active mousedown', this);\r\n        off(this.element, 'focus', this);\r\n        off(this.element, 'blur', this);\r\n        off(window, 'resize', this);\r\n        delete this.element;\r\n        this.stylesheets.forEach((x) => x.release());\r\n    }\r\n    resetKeystrokeBuffer(options) {\r\n        options = options !== null && options !== void 0 ? options : { defer: false };\r\n        if (options.defer) {\r\n            if (this.options.inlineShortcutTimeout) {\r\n                // Set a timer to reset the shortcut buffer\r\n                this.keystrokeBufferResetTimer = setTimeout(() => {\r\n                    this.resetKeystrokeBuffer();\r\n                }, this.options.inlineShortcutTimeout);\r\n            }\r\n            return;\r\n        }\r\n        this.keystrokeBuffer = '';\r\n        this.keystrokeBufferStates = [];\r\n        clearTimeout(this.keystrokeBufferResetTimer);\r\n    }\r\n    _onSelectionDidChange() {\r\n        // Every atom before the new caret position is now committed\r\n        commitCommandStringBeforeInsertionPoint(this.model);\r\n        // Keep the content of the textarea in sync wiht the selection.\r\n        // This will allow cut/copy to work.\r\n        const result = selectionIsCollapsed(this.model)\r\n            ? ''\r\n            : makeRoot('math', getSelectedAtoms(this.model)).toLatex(false);\r\n        this.keyboardDelegate.setValue(result);\r\n        // Update the mode\r\n        {\r\n            const previousMode = this.mode;\r\n            this.mode = getAnchorMode(this.model) || this.options.defaultMode;\r\n            if (this.mode !== previousMode &&\r\n                typeof this.options.onModeChange === 'function') {\r\n                this.options.onModeChange(this, this.mode);\r\n            }\r\n            if (previousMode === 'command' && this.mode !== 'command') {\r\n                hidePopover(this);\r\n                removeCommandString(this.model);\r\n            }\r\n        }\r\n        // Defer the updating of the popover position: we'll need the tree to be\r\n        // re-rendered first to get an updated caret position\r\n        updatePopoverPosition(this, { deferred: true });\r\n        // Invoke client listeners, if provided.\r\n        if (typeof this.options.onSelectionDidChange === 'function') {\r\n            this.options.onSelectionDidChange(this);\r\n        }\r\n    }\r\n    onFocus() {\r\n        if (this.options.readOnly)\r\n            return;\r\n        if (this.blurred) {\r\n            this.blurred = false;\r\n            this.keyboardDelegate.focus();\r\n            if (this.options.virtualKeyboardMode === 'onfocus') {\r\n                showVirtualKeyboard(this);\r\n            }\r\n            updatePopoverPosition(this);\r\n            if (this.options.onFocus) {\r\n                this.options.onFocus(this);\r\n            }\r\n            // Save the current value.\r\n            // It will be compared in `onBlur()` to see if the\r\n            // `onCommit` listener needs to be invoked. This\r\n            // mimic the `<input>` and `<textarea>` behavior\r\n            this.valueOnFocus = this.getValue();\r\n            requestUpdate(this);\r\n        }\r\n    }\r\n    onBlur() {\r\n        if (!this.blurred) {\r\n            this.blurred = true;\r\n            this.ariaLiveText.textContent = '';\r\n            if (/onfocus|manual/.test(this.options.virtualKeyboardMode)) {\r\n                hideVirtualKeyboard(this);\r\n            }\r\n            complete(this, { discard: true });\r\n            requestUpdate(this);\r\n            if (typeof this.options.onBlur === 'function') {\r\n                this.options.onBlur(this);\r\n            }\r\n            if (typeof this.options.onCommit === 'function' &&\r\n                this.getValue() !== this.valueOnFocus) {\r\n                this.options.onCommit(this);\r\n            }\r\n        }\r\n    }\r\n    onCompositionStart(_composition) {\r\n        // Clear the selection if there is one\r\n        deleteChar(this.model);\r\n        requestAnimationFrame(() => {\r\n            render(this); // Recalculate the position of the caret\r\n            // Synchronize the location and style of textarea\r\n            // so that the IME candidate window can align with the composition\r\n            const caretPoint = getCaretPoint(this.field);\r\n            if (!caretPoint)\r\n                return;\r\n            this.keyboardDelegate.moveTo(caretPoint.x, caretPoint.y);\r\n        });\r\n    }\r\n    onCompositionUpdate(composition) {\r\n        updateComposition(this.model, composition);\r\n        requestUpdate(this);\r\n    }\r\n    onCompositionEnd(composition) {\r\n        removeComposition(this.model);\r\n        onTypedText(this, composition, {\r\n            simulateKeystroke: true,\r\n        });\r\n    }\r\n    onResize() {\r\n        this.element.classList.remove('ML__isNarrowWidth', 'ML__isWideWidth', 'ML__isExtendedWidth');\r\n        if (window.innerWidth >= 1024) {\r\n            this.element.classList.add('ML__isExtendedWidth');\r\n        }\r\n        else if (window.innerWidth >= 768) {\r\n            this.element.classList.add('ML__isWideWidth');\r\n        }\r\n        else {\r\n            this.element.classList.add('ML__isNarrowWidth');\r\n        }\r\n        updatePopoverPosition(this);\r\n    }\r\n    /** @deprecated */\r\n    $perform(command) {\r\n        deprecated('$perform');\r\n        return this.executeCommand(command);\r\n    }\r\n    executeCommand(command) {\r\n        return perform(this, command);\r\n    }\r\n    atomToString(root, format) {\r\n        format = format || 'latex';\r\n        let result = '';\r\n        if (format === 'latex' || format === 'latex-expanded') {\r\n            result = root.toLatex(format === 'latex-expanded');\r\n        }\r\n        else if (format === 'mathML') {\r\n            result = atomsToMathML(root, this.options);\r\n        }\r\n        else if (format === 'spoken') {\r\n            result = atomToSpeakableText(root, this.options);\r\n        }\r\n        else if (format === 'spoken-text') {\r\n            const saveTextToSpeechMarkup = this.options.textToSpeechMarkup;\r\n            this.options.textToSpeechMarkup = '';\r\n            result = atomToSpeakableText(root, this.options);\r\n            this.options.textToSpeechMarkup = saveTextToSpeechMarkup;\r\n        }\r\n        else if (format === 'spoken-ssml' ||\r\n            format === 'spoken-ssml-withHighlighting') {\r\n            const saveTextToSpeechMarkup = this.options.textToSpeechMarkup;\r\n            // const savedAtomIdsSettings = this.config.atomIdsSettings;    // @revisit\r\n            this.options.textToSpeechMarkup = 'ssml';\r\n            // if (format === 'spoken-ssml-withHighlighting') {     // @revisit\r\n            //     this.config.atomIdsSettings = { seed: 'random' };\r\n            // }\r\n            result = atomToSpeakableText(root, this.options);\r\n            this.options.textToSpeechMarkup = saveTextToSpeechMarkup;\r\n            // this.config.atomIdsSettings = savedAtomIdsSettings;      // @revisit\r\n        }\r\n        else if (format === 'json') {\r\n            console.log('deprecated format. Use MathJSON');\r\n            const json = atomtoMathJson(root);\r\n            result = JSON.stringify(json);\r\n        }\r\n        else if (format === 'json-2') {\r\n            console.log('deprecated format. Use MathJSON');\r\n            const json = atomtoMathJson(root);\r\n            // const json = parseLatex(root.toLatex(true), {\r\n            //     form: 'canonical',\r\n            // });\r\n            result = JSON.stringify(json, null, 2);\r\n        }\r\n        else if (format === 'ASCIIMath') {\r\n            result = atomToAsciiMath(root);\r\n        }\r\n        else {\r\n            console.warn('Unknown format :', format);\r\n        }\r\n        return result;\r\n    }\r\n    get lastPosition() {\r\n        return this.model.lastPosition;\r\n    }\r\n    get selection() {\r\n        return this.model.selection;\r\n    }\r\n    set selection(value) {\r\n        this.model.selection = value;\r\n    }\r\n    /** @deprecated */\r\n    $text(format) {\r\n        return this.atomToString(this.model.root, format);\r\n    }\r\n    getValue(arg1, arg2, arg3) {\r\n        if (typeof arg1 === 'undefined') {\r\n            return this.atomToString(this.model.root, 'latex');\r\n        }\r\n        let format;\r\n        if (typeof arg1 === 'string') {\r\n            // Output format only\r\n            format = arg1;\r\n            return this.atomToString(this.model.root, format);\r\n        }\r\n        let ranges;\r\n        if (typeof arg1 === 'number' &&\r\n            (typeof arg2 === 'number' || typeof arg2 === 'undefined')) {\r\n            ranges = [\r\n                {\r\n                    start: arg1,\r\n                    end: arg2 !== null && arg2 !== void 0 ? arg2 : -1,\r\n                },\r\n            ];\r\n            format = arg3 !== null && arg3 !== void 0 ? arg3 : 'latex';\r\n        }\r\n        else if (Array.isArray(arg1)) {\r\n            ranges = arg1;\r\n            format = arg2;\r\n        }\r\n        else {\r\n            ranges = [arg1];\r\n            format = arg2;\r\n        }\r\n        const iter = new PositionIterator(this.model.root);\r\n        const result = ranges\r\n            .map((range) => {\r\n            let res = '';\r\n            range = normalizeRange(iter, range);\r\n            if (!range.collapsed) {\r\n                const depth = iter.at(range.start).depth;\r\n                for (let i = range.start + 1; i <= range.end; i++) {\r\n                    if (iter.at(i).depth === depth) {\r\n                        res += this.atomToString(iter.at(i).atom, format);\r\n                    }\r\n                }\r\n            }\r\n            return res;\r\n        })\r\n            .join('');\r\n        return result;\r\n    }\r\n    setValue(value, options) {\r\n        if (value === this.getValue())\r\n            return;\r\n        options = options !== null && options !== void 0 ? options : { mode: 'math' };\r\n        insert(this.model, value, {\r\n            insertionMode: 'replaceAll',\r\n            selectionMode: 'after',\r\n            format: 'latex',\r\n            mode: 'math',\r\n            suppressChangeNotifications: options.suppressChangeNotifications,\r\n            macros: this.options.macros,\r\n        });\r\n        this.undoManager.snapshot(this.options);\r\n        requestUpdate(this);\r\n    }\r\n    find(latex) {\r\n        const result = [];\r\n        const iter = new PositionIterator(this.model.root);\r\n        const lastPosition = iter.lastPosition;\r\n        for (let i = 0; i < lastPosition; i++) {\r\n            const depth = iter.at(i).depth;\r\n            // @todo: adjust for depth, use the smallest depth of start and end\r\n            // and adjust start/end to be at the same depth\r\n            // if parent of start and end is not the same,\r\n            // look at common ancestor, if start's parent is common ancestor,\r\n            // use start, otherwise start =  position of common ancestor.\r\n            // if end's parent is common ancestor, use end, otherwise use position\r\n            // of common ancestor + 1.\r\n            // And maybe that \"adjustment\" need to be in getValue()? but then\r\n            // the range result might include duplicates\r\n            for (let j = i; j < lastPosition; j++) {\r\n                let value = '';\r\n                for (let k = i + 1; k <= j; k++) {\r\n                    if (iter.at(k).depth === depth) {\r\n                        value += this.atomToString(iter.at(k).atom, 'latex');\r\n                        console.log(`value(${i + 1}, ${j}) = \"${value}\" = '${this.getValue(i, j)}'`);\r\n                    }\r\n                }\r\n                if (value === latex) {\r\n                    result.push(normalizeRange(iter, { start: i, end: j }));\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /** @deprecated */\r\n    $selectedText(format) {\r\n        deprecated('$selectedText');\r\n        const atoms = getSelectedAtoms(this.model);\r\n        if (!atoms) {\r\n            return '';\r\n        }\r\n        return this.atomToString(makeRoot('math', atoms), format);\r\n    }\r\n    /** @deprecated */\r\n    $selectionIsCollapsed() {\r\n        deprecated('$selectionIsCollapsed');\r\n        return selectionIsCollapsed(this.model);\r\n    }\r\n    /** @deprecated */\r\n    $selectionDepth() {\r\n        deprecated('$selectionDepth');\r\n        return this.model.path.length;\r\n    }\r\n    /**\r\n     * Checks if the selection starts at the beginning of the selection group.\r\n     *\r\n     * @deprecated\r\n     */\r\n    $selectionAtStart() {\r\n        deprecated('$selectionAtStart');\r\n        return false;\r\n    }\r\n    /** @deprecated */\r\n    $selectionAtEnd() {\r\n        deprecated('$selectionAtEnd');\r\n        return false;\r\n    }\r\n    /** @deprecated */\r\n    $latex(text, options) {\r\n        deprecated('$latex');\r\n        if (typeof text === 'string') {\r\n            const oldValue = this.model.root.toLatex();\r\n            if (text !== oldValue) {\r\n                options = options !== null && options !== void 0 ? options : { mode: 'math' };\r\n                insert(this.model, text, {\r\n                    insertionMode: 'replaceAll',\r\n                    selectionMode: 'after',\r\n                    format: 'latex',\r\n                    mode: 'math',\r\n                    suppressChangeNotifications: options.suppressChangeNotifications,\r\n                    macros: this.options.macros,\r\n                });\r\n                this.undoManager.snapshot(this.options);\r\n                requestUpdate(this);\r\n            }\r\n            return text;\r\n        }\r\n        // Return the content as LaTeX\r\n        return this.model.root.toLatex();\r\n    }\r\n    /** @deprecated */\r\n    $el() {\r\n        deprecated('$el');\r\n        return this.element;\r\n    }\r\n    scrollIntoView() {\r\n        var _a;\r\n        // If a render is pending, do it now to make sure we have correct layout\r\n        // and caret position\r\n        if (this.dirty) {\r\n            render(this);\r\n        }\r\n        let caretPoint = (_a = getCaretPoint(this.field)) === null || _a === void 0 ? void 0 : _a.x;\r\n        const fieldBounds = this.field.getBoundingClientRect();\r\n        if (typeof caretPoint === 'undefined') {\r\n            const selectionBounds = getSelectionBounds(this.field);\r\n            if (selectionBounds !== null) {\r\n                caretPoint =\r\n                    selectionBounds.right +\r\n                        fieldBounds.left -\r\n                        this.field.scrollLeft;\r\n            }\r\n        }\r\n        if (typeof caretPoint !== 'undefined') {\r\n            const x = caretPoint - window.scrollX;\r\n            if (x < fieldBounds.left) {\r\n                this.field.scroll({\r\n                    top: 0,\r\n                    left: x - fieldBounds.left + this.field.scrollLeft - 20,\r\n                    behavior: 'smooth',\r\n                });\r\n            }\r\n            else if (x > fieldBounds.right) {\r\n                this.field.scroll({\r\n                    top: 0,\r\n                    left: x - fieldBounds.right + this.field.scrollLeft + 20,\r\n                    behavior: 'smooth',\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /** @deprecated */\r\n    $insert(s, options) {\r\n        deprecated('$insert');\r\n        return this.insert(s, options);\r\n    }\r\n    insert(s, options) {\r\n        if (typeof s === 'string' && s.length > 0) {\r\n            options = options !== null && options !== void 0 ? options : { mode: 'math' };\r\n            if (options.focus) {\r\n                this.focus();\r\n            }\r\n            if (options.feedback) {\r\n                if (this.options.keypressVibration && (navigator === null || navigator === void 0 ? void 0 : navigator.vibrate)) {\r\n                    navigator.vibrate(HAPTIC_FEEDBACK_DURATION);\r\n                }\r\n                if (this.keypressSound) {\r\n                    this.keypressSound.load();\r\n                    this.keypressSound.play();\r\n                }\r\n            }\r\n            if (s === '\\\\\\\\') {\r\n                // This string is interpreted as an \"insert row after\" command\r\n                addRowAfter(this.model);\r\n            }\r\n            else if (s === '&') {\r\n                addColumnAfter(this.model);\r\n            }\r\n            else {\r\n                const savedStyle = this.style;\r\n                insert(this.model, s, {\r\n                    mode: this.mode,\r\n                    style: getAnchorStyle(this.model),\r\n                    ...options,\r\n                });\r\n                if (options.resetStyle) {\r\n                    this.style = savedStyle;\r\n                }\r\n            }\r\n            this.undoManager.snapshot(this.options);\r\n            requestUpdate(this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    switchMode(mode, prefix = '', suffix = '') {\r\n        if (this.mode === mode)\r\n            return;\r\n        this.resetKeystrokeBuffer();\r\n        // Suppress (temporarily) smart mode if switching to/from text or math\r\n        // This prevents switching to/from command mode from supressing smart mode.\r\n        this.smartModeSuppressed =\r\n            /text|math/.test(this.mode) && /text|math/.test(mode);\r\n        if (prefix) {\r\n            this.insert(prefix, {\r\n                format: 'latex',\r\n                mode: { math: 'text', text: 'math' }[mode],\r\n            });\r\n        }\r\n        // Remove any error indicator on the current command sequence (if there is one)\r\n        decorateCommandStringAroundInsertionPoint(this.model, false);\r\n        if (mode === 'command') {\r\n            removeSuggestion(this.model);\r\n            hidePopover(this);\r\n            this.suggestionIndex = 0;\r\n            // Switch to the command mode keyboard layer\r\n            if (this.virtualKeyboardVisible) {\r\n                switchKeyboardLayer(this, 'lower-command');\r\n            }\r\n            insert(this.model, '\\u001b', { mode: 'math' });\r\n        }\r\n        else {\r\n            this.mode = mode;\r\n        }\r\n        if (suffix) {\r\n            this.insert(suffix, {\r\n                format: 'latex',\r\n                mode: mode,\r\n            });\r\n        }\r\n        // Notify of mode change\r\n        if (typeof this.options.onModeChange === 'function') {\r\n            this.options.onModeChange(this, this.mode);\r\n        }\r\n        requestUpdate(this);\r\n    }\r\n    /** @deprecated */\r\n    $hasFocus() {\r\n        deprecated('$hasFocus');\r\n        return this.hasFocus();\r\n    }\r\n    hasFocus() {\r\n        return document.hasFocus() && this.keyboardDelegate.hasFocus();\r\n    }\r\n    focus() {\r\n        if (!this.hasFocus()) {\r\n            this.keyboardDelegate.focus();\r\n            this.model.announce('line');\r\n        }\r\n    }\r\n    blur() {\r\n        if (this.hasFocus()) {\r\n            this.keyboardDelegate.blur();\r\n        }\r\n    }\r\n    /** @deprecated */\r\n    $focus() {\r\n        deprecated('$focus');\r\n        return this.focus();\r\n    }\r\n    /** @deprecated */\r\n    $blur() {\r\n        deprecated('$blur');\r\n        return this.blur();\r\n    }\r\n    /** @deprecated */\r\n    $select() {\r\n        selectAll(this.model);\r\n    }\r\n    select() {\r\n        selectAll(this.model);\r\n    }\r\n    /** @deprecated */\r\n    $clearSelection() {\r\n        deprecated('$clearSelection');\r\n        deleteChar(this.model);\r\n    }\r\n    applyStyle(style) {\r\n        applyStyle$3(this.model, style);\r\n    }\r\n    /** @deprecated */\r\n    $applyStyle(style) {\r\n        applyStyle$3(this.model, style);\r\n    }\r\n    /** @deprecated */\r\n    $keystroke(keys, evt) {\r\n        deprecated('$keystroke');\r\n        return onKeystroke(this, keys, evt);\r\n    }\r\n    /** @deprecated */\r\n    $typedText(text) {\r\n        deprecated('$typedText');\r\n        onTypedText(this, text);\r\n    }\r\n    getCaretPoint() {\r\n        const caretPosition = getCaretPoint(this.field);\r\n        return caretPosition\r\n            ? { x: caretPosition.x, y: caretPosition.y }\r\n            : null;\r\n    }\r\n    setCaretPoint(x, y) {\r\n        const oldPath = this.model.clone();\r\n        const anchor = pathFromPoint(this, x, y, { bias: 0 });\r\n        const result = setPath(this.model, anchor, 0);\r\n        this.model.announce('move', oldPath);\r\n        requestUpdate(this);\r\n        return result;\r\n    }\r\n    canUndo() {\r\n        return this.undoManager.canUndo();\r\n    }\r\n    canRedo() {\r\n        return this.undoManager.canRedo();\r\n    }\r\n    popUndoStack() {\r\n        this.undoManager.pop();\r\n    }\r\n    snapshot() {\r\n        this.undoManager.snapshot({\r\n            ...this.options,\r\n            onUndoStateDidChange: (mf, reason) => {\r\n                updateUndoRedoButtons(this);\r\n                this.options.onUndoStateDidChange(mf, reason);\r\n            },\r\n        });\r\n    }\r\n    snapshotAndCoalesce() {\r\n        this.undoManager.snapshotAndCoalesce({\r\n            ...this.options,\r\n            onUndoStateDidChange: (mf, reason) => {\r\n                updateUndoRedoButtons(this);\r\n                this.options.onUndoStateDidChange(mf, reason);\r\n            },\r\n        });\r\n    }\r\n    getUndoRecord() {\r\n        return this.undoManager.save();\r\n    }\r\n    restoreToUndoRecord(s) {\r\n        this.undoManager.restore(s, {\r\n            ...this.options,\r\n            suppressChangeNotifications: true,\r\n        });\r\n    }\r\n    undo() {\r\n        return this.undoManager.undo({\r\n            ...this.options,\r\n            onUndoStateDidChange: (mf, reason) => {\r\n                updateUndoRedoButtons(this);\r\n                this.options.onUndoStateDidChange(mf, reason);\r\n            },\r\n        });\r\n    }\r\n    redo() {\r\n        return this.undoManager.redo({\r\n            ...this.options,\r\n            onUndoStateDidChange: (mf, reason) => {\r\n                updateUndoRedoButtons(this);\r\n                this.options.onUndoStateDidChange(mf, reason);\r\n            },\r\n        });\r\n    }\r\n}\r\nfunction deprecated(method) {\r\n    console.warn(`Method \"${method}\" is deprecated`);\r\n}\n\n/* eslint no-console:0 */\r\nfunction findEndOfMath(delimiter, text, startIndex) {\r\n    // Adapted from\r\n    // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\r\n    let index = startIndex;\r\n    let braceLevel = 0;\r\n    const delimLength = delimiter.length;\r\n    while (index < text.length) {\r\n        const character = text[index];\r\n        if (braceLevel <= 0 &&\r\n            text.slice(index, index + delimLength) === delimiter) {\r\n            return index;\r\n        }\r\n        else if (character === '\\\\') {\r\n            index++;\r\n        }\r\n        else if (character === '{') {\r\n            braceLevel++;\r\n        }\r\n        else if (character === '}') {\r\n            braceLevel--;\r\n        }\r\n        index++;\r\n    }\r\n    return -1;\r\n}\r\nfunction splitAtDelimiters(startData, leftDelim, rightDelim, mathstyle) {\r\n    const finalData = [];\r\n    for (let i = 0; i < startData.length; i++) {\r\n        if (startData[i].type === 'text') {\r\n            const text = startData[i].data;\r\n            let lookingForLeft = true;\r\n            let currIndex = 0;\r\n            let nextIndex;\r\n            nextIndex = text.indexOf(leftDelim);\r\n            if (nextIndex !== -1) {\r\n                currIndex = nextIndex;\r\n                if (currIndex > 0) {\r\n                    finalData.push({\r\n                        type: 'text',\r\n                        data: text.slice(0, currIndex),\r\n                    });\r\n                }\r\n                lookingForLeft = false;\r\n            }\r\n            let done = false;\r\n            while (!done) {\r\n                if (lookingForLeft) {\r\n                    nextIndex = text.indexOf(leftDelim, currIndex);\r\n                    if (nextIndex === -1) {\r\n                        done = true;\r\n                        break;\r\n                    }\r\n                    if (currIndex !== nextIndex) {\r\n                        finalData.push({\r\n                            type: 'text',\r\n                            data: text.slice(currIndex, nextIndex),\r\n                        });\r\n                    }\r\n                    currIndex = nextIndex;\r\n                }\r\n                else {\r\n                    nextIndex = findEndOfMath(rightDelim, text, currIndex + leftDelim.length);\r\n                    if (nextIndex === -1) {\r\n                        done = true;\r\n                        break;\r\n                    }\r\n                    finalData.push({\r\n                        type: 'math',\r\n                        data: text.slice(currIndex + leftDelim.length, nextIndex),\r\n                        rawData: text.slice(currIndex, nextIndex + rightDelim.length),\r\n                        mathstyle: mathstyle,\r\n                    });\r\n                    currIndex = nextIndex + rightDelim.length;\r\n                }\r\n                lookingForLeft = !lookingForLeft;\r\n            }\r\n            if (currIndex < text.length) {\r\n                finalData.push({\r\n                    type: 'text',\r\n                    data: text.slice(currIndex),\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            finalData.push(startData[i]);\r\n        }\r\n    }\r\n    return finalData;\r\n}\r\nfunction splitWithDelimiters(text, delimiters) {\r\n    let data = [{ type: 'text', data: text }];\r\n    for (let i = 0; i < delimiters.inline.length; i++) {\r\n        const delimiter = delimiters.inline[i];\r\n        data = splitAtDelimiters(data, delimiter[0], delimiter[1], 'textstyle');\r\n    }\r\n    for (let i = 0; i < delimiters.display.length; i++) {\r\n        const delimiter = delimiters.display[i];\r\n        data = splitAtDelimiters(data, delimiter[0], delimiter[1], 'displaystyle');\r\n    }\r\n    return data;\r\n}\r\nfunction createMathMLNode(latex, options) {\r\n    // Create a node for AT (Assistive Technology, e.g. screen reader) to speak, etc.\r\n    // This node has a style that makes it be invisible to display but is seen by AT\r\n    const span = document.createElement('span');\r\n    try {\r\n        const html = \"<math xmlns='http://www.w3.org/1998/Math/MathML'>\" +\r\n            options.renderToMathML(latex, options) +\r\n            '</math>';\r\n        span.innerHTML = options.createHTML ? options.createHTML(html) : html;\r\n    }\r\n    catch (e) {\r\n        console.error(\"Could not convert'\" + latex + \"' to MathML with \", e);\r\n        span.textContent = latex;\r\n    }\r\n    span.className = 'ML__sr-only';\r\n    return span;\r\n}\r\nfunction createMarkupNode(text, options, mathstyle, createNodeOnFailure) {\r\n    // Create a node for displaying math.\r\n    //   This is slightly ugly because in the case of failure to create the markup,\r\n    //   sometimes a text node is desired and sometimes not.\r\n    //   'createTextNodeOnFailure' controls this and null is returned when no node is created.\r\n    // This node is made invisible to AT (screen readers)\r\n    let span = document.createElement('span');\r\n    span.setAttribute('aria-hidden', 'true');\r\n    if (options.preserveOriginalContent) {\r\n        span.setAttribute('data-' + options.namespace + 'original-content', text);\r\n        if (mathstyle) {\r\n            span.setAttribute('data-' + options.namespace + 'original-mathstyle', mathstyle);\r\n        }\r\n    }\r\n    try {\r\n        loadFonts(options.fontsDirectory);\r\n        inject(null, css_248z$2);\r\n        const html = options.renderToMarkup(text, {\r\n            mathstyle: mathstyle !== null && mathstyle !== void 0 ? mathstyle : 'displaystyle',\r\n            format: 'html',\r\n            macros: options.macros,\r\n        });\r\n        span.innerHTML = options.createHTML ? options.createHTML(html) : html;\r\n    }\r\n    catch (e) {\r\n        console.error(\"Could not parse'\" + text + \"' with \", e);\r\n        if (createNodeOnFailure) {\r\n            span = document.createTextNode(text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    return span;\r\n}\r\nfunction createAccessibleMarkupPair(text, mathstyle, options, createNodeOnFailure) {\r\n    // Create a math node (a span with an accessible component and a visual component)\r\n    // If there is an error in parsing the latex, 'createNodeOnFailure' controls whether\r\n    //   'null' is returned or an accessible node with the text used.\r\n    const markupNode = createMarkupNode(text, options, mathstyle, createNodeOnFailure);\r\n    if (markupNode &&\r\n        /\\b(mathml|speakable-text)\\b/i.test(options.renderAccessibleContent)) {\r\n        const fragment = document.createDocumentFragment();\r\n        if (/\\bmathml\\b/i.test(options.renderAccessibleContent) &&\r\n            options.renderToMathML) {\r\n            fragment.appendChild(createMathMLNode(text, options));\r\n        }\r\n        if (/\\bspeakable-text\\b/i.test(options.renderAccessibleContent) &&\r\n            options.renderToSpeakableText) {\r\n            const span = document.createElement('span');\r\n            const html = options.renderToSpeakableText(text, options);\r\n            span.innerHTML = options.createHTML\r\n                ? options.createHTML(html)\r\n                : html;\r\n            span.className = 'ML__sr-only';\r\n            fragment.appendChild(span);\r\n        }\r\n        fragment.appendChild(markupNode);\r\n        return fragment;\r\n    }\r\n    return markupNode;\r\n}\r\nfunction scanText$1(text, options) {\r\n    // If the text starts with '\\begin'...\r\n    // (this is a MathJAX behavior)\r\n    let fragment = null;\r\n    if (options.TeX.processEnvironments && /^\\s*\\\\begin/.test(text)) {\r\n        fragment = document.createDocumentFragment();\r\n        fragment.appendChild(createAccessibleMarkupPair(text, undefined, options, true));\r\n    }\r\n    else {\r\n        if (!text.trim())\r\n            return null;\r\n        const data = splitWithDelimiters(text, options.TeX.delimiters);\r\n        if (data.length === 1 && data[0].type === 'text') {\r\n            // This text contains no math. No need to continue processing\r\n            return null;\r\n        }\r\n        fragment = document.createDocumentFragment();\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].type === 'text') {\r\n                fragment.appendChild(document.createTextNode(data[i].data));\r\n            }\r\n            else {\r\n                fragment.appendChild(createAccessibleMarkupPair(data[i].data, data[i].mathstyle, options, true));\r\n            }\r\n        }\r\n    }\r\n    return fragment;\r\n}\r\nfunction scanElement(elem, options) {\r\n    const originalContent = elem.getAttribute('data-' + options.namespace + 'original-content');\r\n    if (originalContent) {\r\n        const mathstyle = elem.getAttribute('data-' + options.namespace + 'mathstyle');\r\n        const span = createAccessibleMarkupPair(originalContent, mathstyle, options, false);\r\n        if (span != null) {\r\n            elem.textContent = '';\r\n            elem.appendChild(span);\r\n        }\r\n        return;\r\n    }\r\n    if (elem.childNodes.length === 1 && elem.childNodes[0].nodeType === 3) {\r\n        // This is a node with textual content only. Perhaps an opportunity\r\n        // to simplify and avoid creating extra nested elements...\r\n        const text = elem.childNodes[0].textContent;\r\n        if (options.TeX.processEnvironments && /^\\s*\\\\begin/.test(text)) {\r\n            elem.textContent = '';\r\n            elem.appendChild(createAccessibleMarkupPair(text, undefined, options, true));\r\n            return;\r\n        }\r\n        const data = splitWithDelimiters(text, options.TeX.delimiters);\r\n        if (data.length === 1 && data[0].type === 'math') {\r\n            // The entire content is a math expression: we can replace the content\r\n            // with the latex markup without creating additional wrappers.\r\n            elem.textContent = '';\r\n            elem.appendChild(createAccessibleMarkupPair(data[0].data, data[0].mathstyle, options, true));\r\n            return;\r\n        }\r\n        else if (data.length === 1 && data[0].type === 'text') {\r\n            // This element only contained text with no math. No need to\r\n            // do anything.\r\n            return;\r\n        }\r\n    }\r\n    for (let i = 0; i < elem.childNodes.length; i++) {\r\n        const childNode = elem.childNodes[i];\r\n        if (childNode.nodeType === 3) {\r\n            // A text node\r\n            // Look for math mode delimiters inside the text\r\n            const frag = scanText$1(childNode.textContent, options);\r\n            if (frag) {\r\n                i += frag.childNodes.length - 1;\r\n                elem.replaceChild(frag, childNode);\r\n            }\r\n        }\r\n        else if (childNode.nodeType === 1) {\r\n            // An element node\r\n            const tag = childNode.nodeName.toLowerCase();\r\n            if (tag === 'script' &&\r\n                options.processScriptTypePattern.test(childNode.type)) {\r\n                let style = 'displaystyle';\r\n                for (const l of childNode.type.split(';')) {\r\n                    const v = l.split('=');\r\n                    if (v[0].toLowerCase() === 'mode') {\r\n                        if (v[1].toLoweCase() === 'display') {\r\n                            style = 'displaystyle';\r\n                        }\r\n                        else {\r\n                            style = 'textstyle';\r\n                        }\r\n                    }\r\n                }\r\n                const span = createAccessibleMarkupPair(childNode.textContent, style, options, true);\r\n                childNode.parentNode.replaceChild(span, childNode);\r\n            }\r\n            else if (tag !== 'script') {\r\n                // Element node\r\n                // console.assert(childNode.className !== 'formula');\r\n                const shouldRender = options.processClassPattern.test(childNode.className) ||\r\n                    !(options.skipTags.includes(tag) ||\r\n                        options.ignoreClassPattern.test(childNode.className));\r\n                if (shouldRender) {\r\n                    if (elem.childNodes.length === 1 &&\r\n                        elem.childNodes[0].nodeType === 3) {\r\n                        const formula = elem.textContent;\r\n                        elem.textContent = '';\r\n                        elem.appendChild(createAccessibleMarkupPair(formula, 'displaystyle', options, true));\r\n                    }\r\n                    else {\r\n                        scanElement(childNode, options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Otherwise, it's something else, and ignore it.\r\n    }\r\n}\r\nconst defaultOptions = {\r\n    // Optional namespace for the `data-` attributes.\r\n    namespace: '',\r\n    // Name of tags whose content will not be scanned for math delimiters\r\n    skipTags: [\r\n        'noscript',\r\n        'style',\r\n        'textarea',\r\n        'pre',\r\n        'code',\r\n        'annotation',\r\n        'annotation-xml',\r\n    ],\r\n    // <script> tags of the following types will be processed. Others, ignored.\r\n    processScriptType: 'math/tex',\r\n    // Regex pattern of the class name of elements whose contents should not\r\n    // be processed\r\n    ignoreClass: 'tex2jax_ignore',\r\n    // Regex pattern of the class name of elements whose contents should\r\n    // be processed when they appear inside ones that are ignored.\r\n    processClass: 'tex2jax_process',\r\n    // Indicate whether to preserve or discard the original content of the\r\n    // elements being rendered in a 'data-original-content' attribute.\r\n    preserveOriginalContent: true,\r\n    // Indicate the format to use to render accessible content\r\n    renderAccessibleContent: 'mathml',\r\n    TeX: {\r\n        processEnvironments: true,\r\n        delimiters: {\r\n            inline: [['\\\\(', '\\\\)']],\r\n            display: [\r\n                ['$$', '$$'],\r\n                ['\\\\[', '\\\\]'],\r\n            ],\r\n        },\r\n    },\r\n};\r\nfunction renderMathInElement(elem, options) {\r\n    try {\r\n        options = { ...defaultOptions, ...options };\r\n        options.ignoreClassPattern = new RegExp(options.ignoreClass);\r\n        options.processClassPattern = new RegExp(options.processClass);\r\n        options.processScriptTypePattern = new RegExp(options.processScriptType);\r\n        options.macros = MACROS;\r\n        // Validate the namespace (used for `data-` attributes)\r\n        if (options.namespace) {\r\n            if (!/^[a-z]+[-]?$/.test(options.namespace)) {\r\n                throw Error('options.namespace must be a string of lowercase characters only');\r\n            }\r\n            if (!/-$/.test(options.namespace)) {\r\n                options.namespace += '-';\r\n            }\r\n        }\r\n        scanElement(elem, options);\r\n    }\r\n    catch (e) {\r\n        if (e instanceof Error) {\r\n            console.error('renderMathInElement(): ' + e.message);\r\n        }\r\n        else {\r\n            console.error('renderMathInElement(): Could not render math for element ' +\r\n                elem);\r\n        }\r\n    }\r\n}\r\nvar AutoRender = {\r\n    renderMathInElement,\r\n};\n\n/**\r\n * This module contains utilities to debug mathlive internal data structures.\r\n *\r\n * It is also used by the automated test suite.\r\n */\r\nfunction latexToAsciiMath(latex, mode = 'math') {\r\n    const mathlist = parseString(latex, mode, null, null);\r\n    return atomToAsciiMath(mathlist);\r\n}\r\nfunction asciiMathToLatex(ascii) {\r\n    const [, result] = parseMathString(ascii, { format: 'ASCIIMath' });\r\n    return result;\r\n}\r\n/**\r\n *\r\n * @param symbol specify which span to consider.\r\n * If a string, a span whose body match the string\r\n * If a number, the nth span in the list\r\n * If an array, each element in the array indicate the nth child to traverse\r\n */\r\nfunction getSymbol(spans, symbol) {\r\n    if (!spans)\r\n        return null;\r\n    let childSymbol = null;\r\n    if (Array.isArray(symbol)) {\r\n        childSymbol = symbol.slice(); // Clone the array\r\n        symbol = childSymbol.shift(); // Get the first element and remove it from the array\r\n    }\r\n    let result = null;\r\n    if (typeof symbol === 'number' && symbol < spans.length) {\r\n        if (childSymbol && childSymbol.length > 0) {\r\n            return getSymbol(spans[symbol].children, childSymbol);\r\n        }\r\n        return spans[symbol];\r\n    }\r\n    else if (typeof symbol === 'string') {\r\n        for (let i = 0; i < spans.length; i++) {\r\n            // Does this span match the symbol we're looking for?\r\n            if (spans[i].body === symbol) {\r\n                if (childSymbol && childSymbol.length > 0) {\r\n                    return getSymbol(spans[i].children, childSymbol);\r\n                }\r\n                return spans[i];\r\n            }\r\n            // If not, try its children\r\n            result = getSymbol(spans[i].children, symbol);\r\n            if (result)\r\n                return result;\r\n        }\r\n        return result;\r\n    }\r\n    return null;\r\n}\r\nfunction getProp(spans, symbol, prop) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s)\r\n        return s[prop];\r\n    return null;\r\n}\r\n/**\r\n * Return the type ('mbin', etc...) of a span\r\n */\r\nfunction getType(spans, symbol) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s)\r\n        return s.type;\r\n    return null;\r\n}\r\nfunction getStyle(spans, symbol, prop) {\r\n    const s = getSymbol(spans, symbol);\r\n    if (s === null || s === void 0 ? void 0 : s.style)\r\n        return s.style[prop];\r\n    return null;\r\n}\r\nfunction getClasses(spans, symbol) {\r\n    var _a;\r\n    const s = getSymbol(spans, symbol);\r\n    if (s)\r\n        return (_a = s.classes) !== null && _a !== void 0 ? _a : '';\r\n    return null;\r\n}\r\nfunction hasClass(spans, symbol, cls) {\r\n    const classes = getClasses(spans, symbol);\r\n    if (!classes)\r\n        return false;\r\n    const clsList = classes.split(' ');\r\n    for (let j = 0; j < clsList.length; j++) {\r\n        if (clsList[j] === cls)\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\nfunction spanToString(span, indent = '') {\r\n    let result = '';\r\n    if (Array.isArray(span)) {\r\n        if (span.length === 0) {\r\n            result += '[]\\n';\r\n        }\r\n        else {\r\n            result += '[\\n';\r\n            for (let i = 0; i < span.length; i++) {\r\n                result += spanToString(span[i], '\\t' + indent + i + ',');\r\n                result += i < span.length - 1 ? ',\\n' : '\\n';\r\n            }\r\n            result += indent + ']\\n';\r\n        }\r\n    }\r\n    else {\r\n        result = indent + '{\\n';\r\n        if (span.type) {\r\n            result += indent + 'type:\"' + span.type + '\",\\n';\r\n        }\r\n        if (span.body && span.body.length > 0) {\r\n            result += indent + 'body:\"' + span.body + '\",\\n';\r\n        }\r\n        if (span.classes && span.classes.length > 0) {\r\n            result += indent + 'classes:\"' + span.classes + '\",\\n';\r\n        }\r\n        if (span.style) {\r\n            for (const s in span.style) {\r\n                if (Object.prototype.hasOwnProperty.call(span.style, s)) {\r\n                    result += indent + s + ':\"';\r\n                    result += span.style[s] + '\",\\n';\r\n                }\r\n            }\r\n        }\r\n        if (span.children && span.children.length > 0) {\r\n            result +=\r\n                indent +\r\n                    'children:' +\r\n                    span.children.map((x) => spanToString(x, indent)).join('; ');\r\n        }\r\n        result += indent + '}';\r\n    }\r\n    return result;\r\n}\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////\r\nfunction spanToMarkup(span, indent = '') {\r\n    // if (indent.length === 0) {\r\n    //     result += '<table>';\r\n    // }\r\n    let result = '';\r\n    if (Array.isArray(span)) {\r\n        for (let i = 0; i < span.length; i++) {\r\n            result += spanToMarkup(span[i], indent);\r\n        }\r\n    }\r\n    else if (span) {\r\n        result = '<br>' + indent;\r\n        if (span.classes.includes('fontsize-ensurer')) {\r\n            result += 'FONTSIZE-ENSURER';\r\n        }\r\n        else {\r\n            if (span.type) {\r\n                result += '<span class=\"type\">' + span.type + '</span>';\r\n            }\r\n            if (span.body && span.body.length > 0) {\r\n                result += '<span class=\"value\">' + span.body + '</span>';\r\n            }\r\n            if (span.classes && span.classes.length > 0) {\r\n                result +=\r\n                    '&nbsp;<span class=\"classes\">' + span.classes + '</span>';\r\n            }\r\n            if (span.isTight) {\r\n                result += '&nbsp;<span class=\"stylevalue\"> tight </span>';\r\n            }\r\n            if (span.caret) {\r\n                result += '&nbsp;<span class=\"stylevalue\"> caret </span>';\r\n            }\r\n            if (span.style) {\r\n                for (const s in span.style) {\r\n                    if (Object.prototype.hasOwnProperty.call(span.style, s)) {\r\n                        result +=\r\n                            '&nbsp;<span class=\"styleprop\">' + s + ':</span>';\r\n                        result +=\r\n                            '<span class=\"stylevalue\"> ' +\r\n                                span.style[s] +\r\n                                '</span>;&nbsp;';\r\n                    }\r\n                }\r\n            }\r\n            if (span.children) {\r\n                result += span.children\r\n                    .map((x) => spanToMarkup(x, indent + '▷'))\r\n                    .join('; ');\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction mathListColorToMarkup(mathlist, propname) {\r\n    let result = '';\r\n    if (mathlist[propname]) {\r\n        result += '<span class=\"styleprop\">' + propname + '=</span>';\r\n        result +=\r\n            '<span style=\"font-size:2em;vertical-align:middle;color:' +\r\n                mathlist[propname] +\r\n                '\">&#9632;</span>';\r\n        result += '<span class=\"stylevalue\">';\r\n        result += mathlist[propname];\r\n        result += '</span>';\r\n    }\r\n    return result;\r\n}\r\nfunction mathListPropToMarkup(mathlist, propname) {\r\n    let result = '';\r\n    if (mathlist[propname]) {\r\n        result += '<span class=\"styleprop\">' + propname + '=</span>';\r\n        result += '<span class=\"stylevalue\">';\r\n        result += mathlist[propname];\r\n        result += '</span>\" ';\r\n    }\r\n    return result;\r\n}\r\nfunction mathlistToMarkup(mathlist, indent = '') {\r\n    if (!mathlist)\r\n        return '';\r\n    let result = '';\r\n    if (Array.isArray(mathlist)) {\r\n        for (let i = 0; i < mathlist.length; i++) {\r\n            result += mathlistToMarkup(mathlist[i], i + '.' + indent);\r\n        }\r\n    }\r\n    else {\r\n        result = '<br>' + indent;\r\n        if (mathlist.type) {\r\n            result += '<span class=\"type';\r\n            result += mathlist.isSelected ? ' selected' : '';\r\n            result += mathlist.caret ? ' caret' : '';\r\n            result +=\r\n                '\">' +\r\n                    mathlist.type +\r\n                    (mathlist.caret ? ' caret ' : '') +\r\n                    '</span>';\r\n        }\r\n        if (typeof mathlist.body === 'string' && mathlist.body.length > 0) {\r\n            result += '&nbsp;<span class=\"value\">';\r\n            result += mathlist.body;\r\n            if (mathlist.body.charCodeAt(0) < 32 ||\r\n                mathlist.body.charCodeAt(0) > 127) {\r\n                result +=\r\n                    '&nbsp;U+' +\r\n                        ('000000' + mathlist.body.charCodeAt(0).toString(16)).substr(-6);\r\n            }\r\n            result += '</span>&nbsp;';\r\n        }\r\n        if (mathlist.fontFamily === 'mathrm') {\r\n            result += '<span style=\"opacity:.2\">';\r\n            result += mathListPropToMarkup(mathlist, 'fontFamily');\r\n            result += '</span>';\r\n        }\r\n        else {\r\n            result += mathListPropToMarkup(mathlist, 'fontFamily');\r\n        }\r\n        // Type 'genfrac'\r\n        result += mathListPropToMarkup(mathlist, 'hasBarLine');\r\n        result += mathListPropToMarkup(mathlist, 'leftDelim');\r\n        result += mathListPropToMarkup(mathlist, 'rightDelim');\r\n        result += mathListPropToMarkup(mathlist, 'continuousFraction');\r\n        // Type...?\r\n        result += mathListPropToMarkup(mathlist, 'limits');\r\n        result += mathListPropToMarkup(mathlist, 'symbol');\r\n        // Type 'color'\r\n        result += mathListColorToMarkup(mathlist, 'framecolor');\r\n        // Type 'mathstyle'\r\n        result += mathListPropToMarkup(mathlist, 'mathstyle');\r\n        // Type 'sizeddelim'\r\n        result += mathListPropToMarkup(mathlist, 'size');\r\n        result += mathListPropToMarkup(mathlist, 'cls');\r\n        result += mathListPropToMarkup(mathlist, 'delim');\r\n        // Type 'rule'\r\n        result += mathListPropToMarkup(mathlist, 'shift');\r\n        result += mathListPropToMarkup(mathlist, 'width');\r\n        result += mathListPropToMarkup(mathlist, 'height');\r\n        // Type 'line'\r\n        result += mathListPropToMarkup(mathlist, 'position');\r\n        // Type 'overunder'\r\n        result += mathlistToMarkup(mathlist.overscript, indent + '↑');\r\n        result += mathlistToMarkup(mathlist.underscript, indent + '↓');\r\n        result += mathlistToMarkup(mathlist.superscript, indent + '↑');\r\n        result += mathlistToMarkup(mathlist.subscript, indent + '↓');\r\n        result += mathlistToMarkup(mathlist.body, indent + '▶');\r\n        result += mathlistToMarkup(mathlist.numer, indent + '\\u25B2');\r\n        result += mathlistToMarkup(mathlist.denom, indent + '\\u25Bc');\r\n        if (mathlist.array) {\r\n            for (let i = 0; i < mathlist.array.length; i++) {\r\n                result +=\r\n                    '<br>' +\r\n                        indent +\r\n                        '\\u2317 row ' +\r\n                        (i + 1) +\r\n                        '/' +\r\n                        mathlist.array.length;\r\n                for (let j = 0; j < mathlist.array[i].length; j++) {\r\n                    result += mathlistToMarkup(mathlist.array[i][j], indent + '\\u2317\\u232A');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n// Export the public interface for this module\r\nvar MathLiveDebug = {\r\n    mathlistToMarkup,\r\n    spanToMarkup,\r\n    spanToString,\r\n    hasClass,\r\n    getClasses,\r\n    getProp,\r\n    getStyle,\r\n    getType,\r\n    latexToAsciiMath,\r\n    asciiMathToLatex,\r\n    FUNCTIONS,\r\n    MATH_SYMBOLS,\r\n    TEXT_SYMBOLS,\r\n    ENVIRONMENTS,\r\n    MACROS,\r\n    INLINE_SHORTCUTS,\r\n    DEFAULT_KEYBINDINGS,\r\n    getKeybindingMarkup,\r\n};\n\nfunction removeHighlight(element) {\r\n    element.classList.remove('ML__highlight');\r\n    if (element.children) {\r\n        for (const child of element.children) {\r\n            removeHighlight(child);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Highlights the span corresponding to the specified atomID.\r\n *\r\n * This is used for text-to-speech with synchronized highlighting (read aloud)\r\n *\r\n * @category Read Aloud\r\n * @param {string} atomID\r\n *\r\n */\r\nfunction highlightAtomID(element, atomID) {\r\n    var _a;\r\n    if (!atomID || ((_a = element['dataset']) === null || _a === void 0 ? void 0 : _a.atomId) === atomID) {\r\n        element.classList.add('ML__highlight');\r\n        if (element.children && element.children.length > 0) {\r\n            Array.from(element.children).forEach((x) => {\r\n                highlightAtomID(x);\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        element.classList.remove('ML__highlight');\r\n        if (element.children && element.children.length > 0) {\r\n            Array.from(element.children).forEach((x) => {\r\n                highlightAtomID(x, atomID);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * \"Read Aloud\" is an asynchronous operation that reads the\r\n * reading with synchronized highlighting\r\n *\r\n * @param element - The DOM element to highlight\r\n * @param text - The text to speak\r\n */\r\nfunction defaultReadAloudHook(element, text, config) {\r\n    var _a;\r\n    if (!window) {\r\n        return;\r\n    }\r\n    if (!config && window['mathlive']) {\r\n        config = window['mathlive'].config;\r\n    }\r\n    if (config.speechEngine !== 'amazon') {\r\n        console.warn('Use Amazon TTS Engine for synchronized highlighting');\r\n        if (config.speakHook)\r\n            config.speakHook(text, config);\r\n        return;\r\n    }\r\n    if (!window['AWS']) {\r\n        console.warn('AWS SDK not loaded. See https://www.npmjs.com/package/aws-sdk');\r\n        return;\r\n    }\r\n    const polly = new window['AWS'].Polly({ apiVersion: '2016-06-10' });\r\n    const params = {\r\n        OutputFormat: 'json',\r\n        VoiceId: config.speechEngineVoice || 'Joanna',\r\n        Engine: 'standard',\r\n        Text: text,\r\n        TextType: 'ssml',\r\n        SpeechMarkTypes: ['ssml'],\r\n    };\r\n    window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\r\n    window['mathlive'].readAloudElement = element;\r\n    const statusHook = config.onReadAloudStatus || window['mathlive'].onReadAloudStatus;\r\n    // Request the mark points\r\n    polly.synthesizeSpeech(params, (err, data) => {\r\n        if (err) {\r\n            console.warn('polly.synthesizeSpeech() error:', err, err.stack);\r\n            return;\r\n        }\r\n        if (!data || !data.AudioStream) {\r\n            console.log('polly.synthesizeSpeech():' + data);\r\n            return;\r\n        }\r\n        const response = new TextDecoder('utf-8').decode(new Uint8Array(data.AudioStream));\r\n        window['mathlive'].readAloudMarks = response\r\n            .split('\\n')\r\n            .map((x) => (x ? JSON.parse(x) : {}));\r\n        window['mathlive'].readAloudTokens = [];\r\n        for (const mark of window['mathlive'].readAloudMarks) {\r\n            if (mark.value) {\r\n                window['mathlive'].readAloudTokens.push(mark.value);\r\n            }\r\n        }\r\n        window['mathlive'].readAloudCurrentMark = '';\r\n        // Request the audio\r\n        params.OutputFormat = 'mp3';\r\n        params.SpeechMarkTypes = [];\r\n        polly.synthesizeSpeech(params, function (err, data) {\r\n            if (err) {\r\n                console.warn('polly.synthesizeSpeech(', text, ') error:', err, err.stack);\r\n                return;\r\n            }\r\n            if (!data || !data.AudioStream) {\r\n                return;\r\n            }\r\n            const uInt8Array = new Uint8Array(data.AudioStream);\r\n            const blob = new Blob([uInt8Array.buffer], {\r\n                type: 'audio/mpeg',\r\n            });\r\n            const url = URL.createObjectURL(blob);\r\n            if (!window['mathlive'].readAloudAudio) {\r\n                window['mathlive'].readAloudAudio = new Audio();\r\n                window['mathlive'].readAloudAudio.addEventListener('ended', () => {\r\n                    const mathfield = window['mathlive'].readAloudMathField;\r\n                    if (statusHook) {\r\n                        statusHook(mathfield, 'ended');\r\n                    }\r\n                    if (mathfield) {\r\n                        render(mathfield);\r\n                        window['mathlive'].readAloudElement = null;\r\n                        window['mathlive'].readAloudMathField = null;\r\n                        window['mathlive'].readAloudTokens = [];\r\n                        window['mathlive'].readAloudMarks = [];\r\n                        window['mathlive'].readAloudCurrentMark = '';\r\n                    }\r\n                    else {\r\n                        removeHighlight(window['mathlive'].readAloudElement);\r\n                    }\r\n                });\r\n                window['mathlive'].readAloudAudio.addEventListener('timeupdate', () => {\r\n                    let value = '';\r\n                    // The target, the atom we're looking for, is the one matching the current audio\r\n                    // plus 100 ms. By anticipating it a little bit, it feels more natural, otherwise it\r\n                    // feels like the highlighting is trailing the audio.\r\n                    const target = window['mathlive'].readAloudAudio.currentTime *\r\n                        1000 +\r\n                        100;\r\n                    // Find the smallest element which is bigger than the target time\r\n                    for (const mark of window['mathlive'].readAloudMarks) {\r\n                        if (mark.time < target) {\r\n                            value = mark.value;\r\n                        }\r\n                    }\r\n                    if (window['mathlive'].readAloudCurrentMark !== value) {\r\n                        window['mathlive'].readAloudCurrentToken = value;\r\n                        if (value &&\r\n                            value === window['mathlive'].readAloudFinalToken) {\r\n                            window['mathlive'].readAloudAudio.pause();\r\n                        }\r\n                        else {\r\n                            window['mathlive'].readAloudCurrentMark = value;\r\n                            highlightAtomID(window['mathlive'].readAloudElement, window['mathlive'].readAloudCurrentMark);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                window['mathlive'].readAloudAudio.pause();\r\n            }\r\n            window['mathlive'].readAloudAudio.src = url;\r\n            if (statusHook) {\r\n                statusHook(window['mathlive'].readAloudMathField, 'playing');\r\n            }\r\n            window['mathlive'].readAloudAudio.play();\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the status of a Read Aloud operation (reading with synchronized\r\n * highlighting).\r\n *\r\n * Possible values are:\r\n * - `\"ready\"`\r\n * - `\"playing\"`\r\n * - `\"paused\"`\r\n * - `\"unavailable\"`\r\n *\r\n * **See** {@linkcode speak}\r\n * @category Read Aloud\r\n */\r\nfunction readAloudStatus() {\r\n    var _a;\r\n    if (!window)\r\n        return 'unavailable';\r\n    window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\r\n    if (!window['mathlive'].readAloudAudio)\r\n        return 'ready';\r\n    if (window['mathlive'].readAloudAudio.paused)\r\n        return 'paused';\r\n    if (!window['mathlive'].readAloudAudio.ended)\r\n        return 'playing';\r\n    return 'ready';\r\n}\r\n/**\r\n * Pauses a read aloud operation if one is in progress.\r\n *\r\n * **See** {@linkcode speak}\r\n */\r\nfunction pauseReadAloud() {\r\n    var _a;\r\n    if (!window)\r\n        return;\r\n    window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\r\n    if (window['mathlive'].readAloudAudio) {\r\n        if (window['mathlive'].onReadAloudStatus) {\r\n            window['mathlive'].onReadAloudStatus(window['mathlive'].readAloudMathField, 'paused');\r\n        }\r\n        window['mathlive'].readAloudAudio.pause();\r\n    }\r\n}\r\n/**\r\n * Resumes a read aloud operation if one was paused.\r\n *\r\n * **See** {@linkcode speak}\r\n */\r\nfunction resumeReadAloud() {\r\n    var _a;\r\n    if (!window)\r\n        return;\r\n    window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\r\n    if (window['mathlive'].readAloudAudio) {\r\n        if (window['mathlive'].onReadAloudStatus) {\r\n            window['mathlive'].onReadAloudStatus(window['mathlive'].readAloudMathField, 'playing');\r\n        }\r\n        window['mathlive'].readAloudAudio.play();\r\n    }\r\n}\r\n/**\r\n * If a Read Aloud operation is in progress, read from a specified token\r\n *\r\n * **See** {@linkcode speak}\r\n *\r\n * @param count The number of tokens to read.\r\n */\r\nfunction playReadAloud(token, count) {\r\n    var _a;\r\n    if (!window)\r\n        return;\r\n    window['mathlive'] = (_a = window['mathlive']) !== null && _a !== void 0 ? _a : {};\r\n    if (window['mathlive'].readAloudAudio) {\r\n        let timeIndex = 0;\r\n        window['mathlive'].readAloudFinalToken = null;\r\n        if (token) {\r\n            window['mathlive'].readAloudMarks =\r\n                window['mathlive'].readAloudMarks || [];\r\n            for (const mark of window['mathlive'].readAloudMarks) {\r\n                if (mark.value === token) {\r\n                    timeIndex = mark.time / 1000;\r\n                }\r\n            }\r\n            let tokenIndex = window['mathlive'].readAloudTokens.indexOf(token);\r\n            if (tokenIndex >= 0) {\r\n                tokenIndex += count;\r\n                if (tokenIndex < window['mathlive'].readAloudTokens.length) {\r\n                    window['mathlive'].readAloudFinalToken = tokenIndex;\r\n                }\r\n            }\r\n        }\r\n        window['mathlive'].readAloudAudio.currentTime = timeIndex;\r\n        if (window['mathlive'].onReadAloudStatus) {\r\n            window['mathlive'].onReadAloudStatus(window['mathlive'].readAloudMathField, 'playing');\r\n        }\r\n        window['mathlive'].readAloudAudio.play();\r\n    }\r\n}\n\n/// ^.*('\\\\.*').*\r\n// Frequency of a symbol.\r\n// String constants corresponding to frequency values,\r\n// which are the number of results returned by latexsearch.com\r\n// When the precise number is known, it is provided. Otherwise,\r\n// the following constants are used to denote an estimate.\r\nconst CRYPTIC = 0;\r\nconst ARCANE = 200;\r\nconst RARE = 1200;\r\nconst UNCOMMON = 2000;\r\nconst COMMON = 3000;\r\nconst SUPERCOMMON = 4000;\r\n/*\r\n * Set the metadata for the specified symbols\r\n *\r\n * metadata('Functions', ['\\\\sin', '\\\\cos'], COMMON, '$0{a}')\r\n *\r\n */\r\nfunction metadata(category, symbols, frequency = COMMON, template = '$0') {\r\n    symbols.forEach((symbol) => {\r\n        if (MATH_SYMBOLS[symbol]) {\r\n            MATH_SYMBOLS[symbol].frequency = frequency;\r\n            MATH_SYMBOLS[symbol].category = category;\r\n            MATH_SYMBOLS[symbol].template = template.replace(/\\$0/g, symbol);\r\n        }\r\n        if (FUNCTIONS[symbol]) {\r\n            // Make a copy of the entry, since it could be shared by multiple\r\n            // symbols\r\n            FUNCTIONS[symbol] = {\r\n                ...FUNCTIONS[symbol],\r\n                frequency: frequency,\r\n                category: category,\r\n                template: template.replace(/\\$0/g, symbol),\r\n            };\r\n        }\r\n    });\r\n}\r\nmetadata('Trigonometry', ['\\\\cos', '\\\\sin', '\\\\tan'], SUPERCOMMON);\r\nmetadata('Trigonometry', [\r\n    '\\\\arcsin',\r\n    '\\\\arccos',\r\n    '\\\\arctan',\r\n    '\\\\arctg',\r\n    '\\\\arcctg',\r\n    '\\\\arcsec',\r\n    '\\\\arccsc',\r\n    '\\\\arsinh',\r\n    '\\\\arcosh',\r\n    '\\\\artanh',\r\n    '\\\\arcsech',\r\n    '\\\\arccsch',\r\n    '\\\\arg',\r\n    '\\\\ch',\r\n    '\\\\cosec',\r\n    '\\\\cosh',\r\n    '\\\\cot',\r\n    '\\\\cotg',\r\n    '\\\\coth',\r\n    '\\\\csc',\r\n    '\\\\ctg',\r\n    '\\\\cth',\r\n    '\\\\lg',\r\n    '\\\\lb',\r\n    '\\\\sec',\r\n    '\\\\sinh',\r\n    '\\\\sh',\r\n    '\\\\tanh',\r\n    '\\\\tg',\r\n    '\\\\th',\r\n], UNCOMMON);\r\nmetadata('Functions', ['\\\\ln', '\\\\log', '\\\\exp', '\\\\lim'], SUPERCOMMON);\r\nmetadata('Functions', ['\\\\dim', '\\\\ker', '\\\\deg', '\\\\det', '\\\\mod', '\\\\min', '\\\\max'], COMMON);\r\nmetadata('Functions', ['\\\\hom'], RARE);\r\nmetadata('Decoration', ['\\\\rule'], ARCANE, '$0{2em}{1em}');\r\nmetadata('Decoration', ['\\\\color', '\\\\textcolor'], ARCANE, '{$0{m0}A}{$0{m1}B}{$0{m2}C }{$0{m3}a}{$0{m4}b}{$0{m5}c}{$0{m6}8}');\r\nmetadata('Decoration', ['\\\\overline', '\\\\underline'], COMMON, '$0{\\\\placeholder{}}');\r\nmetadata('Decoration', ['\\\\enclose'], RARE, '\\\\enclose{updiagonalstrike,roundedbox}[1px solid red, mathbackground=\"#fbc0bd\"]{x=0}');\r\nmetadata('Decoration', ['\\\\fcolorbox'], RARE, '\\\\fcolorbox{#cd0030}{#ffd400}{\\\\unicode{\"2B1A}}');\r\nmetadata('Decoration', ['\\\\colorbox'], RARE, '\\\\colorbox{#fbc0bd}{\\\\unicode{\"2B1A}}');\r\nmetadata('Decoration', ['\\\\boxed', '\\\\cancel', '\\\\bcancel', '\\\\xcancel'], RARE, '$0{\\\\placeholder{}}');\r\nmetadata('Decoration', ['\\\\bbox'], RARE, '\\\\bbox[#ffd400, solid 2px #ffd400]{\\\\unicode{\"2B1A}}');\r\nmetadata('Styling', ['\\\\mathbb'], SUPERCOMMON, '$0{Don Knuth}');\r\nmetadata('Styling', [\r\n    '\\\\textbf',\r\n    '\\\\textup',\r\n    '\\\\textit',\r\n    '\\\\textrm',\r\n    '\\\\textsf',\r\n    '\\\\texttt',\r\n    '\\\\textnormal',\r\n    '\\\\textmd',\r\n    '\\\\textsl',\r\n    '\\\\textsc',\r\n    '\\\\mathsf',\r\n    '\\\\mathtt',\r\n    '\\\\mathrm',\r\n    '\\\\mathfrak',\r\n    '\\\\mathcal',\r\n    '\\\\mathscr',\r\n    '\\\\mathbf',\r\n    '\\\\mathmd',\r\n    '\\\\mathit',\r\n    '\\\\text',\r\n    '\\\\mbox',\r\n    '\\\\Bbb',\r\n    '\\\\bold',\r\n    '\\\\bm',\r\n    '\\\\boldsymbol',\r\n], COMMON, '$0{Don Knuth}');\r\nmetadata('Styling', [\r\n    '\\\\frak',\r\n    '\\\\tt',\r\n    '\\\\bf',\r\n    '\\\\it',\r\n    '\\\\rmfamily',\r\n    '\\\\sffamily',\r\n    '\\\\ttfamily',\r\n    '\\\\class',\r\n    '\\\\cssId',\r\n], RARE, '{$0 Don Knuth}');\r\nmetadata('Styling', ['\\\\bfseries', '\\\\mdseries', '\\\\upshape', '\\\\slshape', '\\\\scshape'], RARE, '\\\\text{$0 Don Knuth}');\r\nmetadata('Styling', ['\\\\class', '\\\\cssId'], RARE, '$0{testIdentifier}{Don Knuth}');\r\n// Note: In LaTeX, \\fontseries, \\fontfamily, \\fontshape are applicable to\r\n// text mode only\r\nmetadata('Styling', ['\\\\fontseries'], RARE, '\\\\text{$0{b}Don Knuth}');\r\nmetadata('Styling', ['\\\\fontfamily'], RARE, '\\\\text{$0{cmtt}Don Knuth}');\r\nmetadata('Styling', ['\\\\fontshape'], RARE, '\\\\text{$0{sc}Don Knuth}');\r\nmetadata('Styling', ['\\\\selectfont'], RARE, '\\\\text{$0}'); // no-op, but only valid in text mode\r\nmetadata('Styling', ['\\\\emph'], RARE, 'Don$0{Knuth}');\r\nmetadata('Styling', ['\\\\em'], RARE, 'Don{$0 Knuth}');\r\nmetadata('Layout', [\r\n    '\\\\mathop',\r\n    '\\\\mathbin',\r\n    '\\\\mathrel',\r\n    '\\\\mathopen',\r\n    '\\\\mathclose',\r\n    '\\\\mathpunct',\r\n    '\\\\mathord',\r\n    '\\\\mathinner',\r\n    '\\\\operatorname',\r\n    '\\\\operatorname*',\r\n], RARE, 'x=$0{arg}=0');\r\nmetadata('Layout', ['\\\\middle'], RARE, '\\\\left\\\\{x$0|x>0\\\\right\\\\}');\r\nmetadata('Layout', ['\\\\overset', '\\\\underset', '\\\\stackrel', '\\\\stackbin'], RARE, '$0{arg}{x=0}');\r\nmetadata('Layout', ['\\\\rlap', '\\\\mathrlap'], RARE, '$0{/}0');\r\nmetadata('Layout', ['\\\\llap', '\\\\mathllap'], RARE, 'o$0{/}');\r\nmetadata('Fractions', ['\\\\frac'], SUPERCOMMON, '$0{\\\\placeholder{}}{\\\\placeholder{}}');\r\nmetadata('Fractions', [\r\n    '\\\\binom',\r\n    '\\\\dfrac',\r\n    '\\\\tfrac',\r\n    '\\\\dbinom',\r\n    '\\\\tbinom',\r\n    '\\\\pdiff',\r\n    '\\\\cfrac',\r\n], RARE, '$0{\\\\placeholder{}}{\\\\placeholder{}}');\r\nmetadata('Fractions', ['\\\\over', '\\\\atop', '\\\\choose'], RARE, '\\\\unicode{\"2B1A} $0 \\\\unicode{\"2B1A}');\r\nmetadata('Fractions', ['\\\\overwithdelims', '\\\\atopwithdelims'], RARE, '{\\\\unicode{\"2B1A} $0{\\\\lbrace}{\\\\rbrace} \\\\unicode{\"2B1A}}');\r\nmetadata('Extensible Operators', ['\\\\sum', '\\\\prod', '\\\\bigcap', '\\\\bigcup', '\\\\int'], SUPERCOMMON);\r\nmetadata('Extensible Operators', ['\\\\bigoplus', '\\\\smallint', '\\\\iint', '\\\\oint'], COMMON);\r\nmetadata('Extensible Operators', [\r\n    '\\\\bigwedge',\r\n    '\\\\bigvee',\r\n    '\\\\coprod',\r\n    '\\\\bigsqcup',\r\n    '\\\\bigotimes',\r\n    '\\\\bigodot',\r\n    '\\\\biguplus',\r\n    '\\\\intop',\r\n    '\\\\sqcup',\r\n    '\\\\sqcap',\r\n    '\\\\uplus',\r\n    '\\\\wr',\r\n    '\\\\Cap',\r\n    '\\\\Cup',\r\n    '\\\\doublecap',\r\n    '\\\\doublecup',\r\n    '\\\\amalg',\r\n    '\\\\iiint',\r\n    '\\\\oiint',\r\n    '\\\\oiiint',\r\n    '\\\\intclockwise',\r\n    '\\\\varointclockwise',\r\n    '\\\\ointctrclockwise',\r\n    '\\\\intctrclockwise',\r\n], RARE);\r\nmetadata('Accents', ['\\\\vec'], SUPERCOMMON);\r\nmetadata('Accents', ['\\\\bar', '\\\\ddot', '\\\\acute', '\\\\tilde', '\\\\check'], COMMON, '$0{\\\\placeholder{}}');\r\nmetadata('Accents', ['\\\\^', '\\\\`', \"\\\\'\"], RARE, '$0{e}');\r\nmetadata('Accents', ['\\\\c'], RARE, '$0{c}');\r\nmetadata('Accents', ['\\\\~'], RARE, '$0{n}');\r\nmetadata('Accents', ['\\\\mathring', '\\\\hat', '\\\\dot', '\\\\breve', '\\\\grave'], RARE, '$0{\\\\placeholder{}}');\r\nmetadata('Extensible Symbols', [\r\n    '\\\\overrightarrow',\r\n    '\\\\overleftarrow',\r\n    '\\\\Overrightarrow',\r\n    '\\\\overleftharpoon',\r\n    '\\\\overrightharpoon',\r\n    '\\\\overleftrightarrow',\r\n    '\\\\overbrace',\r\n    '\\\\overlinesegment',\r\n    '\\\\overgroup',\r\n    '\\\\widehat',\r\n    '\\\\widecheck',\r\n    '\\\\widetilde',\r\n], COMMON, '$0{ABC}');\r\nmetadata('Extensible Symbols', [\r\n    '\\\\underrightarrow',\r\n    '\\\\underleftarrow',\r\n    '\\\\underleftrightarrow',\r\n    '\\\\underbrace',\r\n    '\\\\underlinesegment',\r\n    '\\\\undergroup',\r\n    '\\\\utilde',\r\n], COMMON, '$0{ABC}');\r\nmetadata('Sizing', [\r\n    '\\\\tiny',\r\n    '\\\\scriptsize',\r\n    '\\\\footnotesize',\r\n    '\\\\small',\r\n    '\\\\normalsize',\r\n    '\\\\large',\r\n    '\\\\Large',\r\n    '\\\\LARGE',\r\n    '\\\\huge',\r\n    '\\\\Huge',\r\n], RARE, '$0{x=0}');\r\nmetadata('Sizing', ['\\\\big', '\\\\Big', '\\\\bigg', '\\\\Bigg'], RARE, '$0($0)');\r\nmetadata('Sizing', ['\\\\bigl', '\\\\Bigl', '\\\\biggl', '\\\\Biggl'], RARE, '$0(');\r\nmetadata('Sizing', ['\\\\bigr', '\\\\Bigr', '\\\\biggr', '\\\\Biggr'], RARE, '$0)');\r\nmetadata('Sizing', ['\\\\bigm', '\\\\Bigm', '\\\\biggm', '\\\\Biggm'], RARE, '$0|');\r\nmetadata('Letterlike Symbols', [\r\n    '\\\\nabla',\r\n    '\\\\partial',\r\n    '\\\\doubleStruckCapitalN',\r\n    '\\\\N',\r\n    '\\\\doubleStruckCapitalR',\r\n    '\\\\R',\r\n    '\\\\doubleStruckCapitalQ',\r\n    '\\\\Q',\r\n    '\\\\doubleStruckCapitalC',\r\n    '\\\\C',\r\n    '\\\\doubleStruckCapitalZ',\r\n    '\\\\Z',\r\n    '\\\\exponentialE',\r\n    '\\\\forall',\r\n    '\\\\exists',\r\n    '\\\\nexists',\r\n    '\\\\$',\r\n    '\\\\%',\r\n    '\\\\And',\r\n    '\\\\degree',\r\n], SUPERCOMMON);\r\nmetadata('Letterlike Symbols', [\r\n    '\\\\doubleStruckCapitalP',\r\n    '\\\\P',\r\n    '\\\\ell',\r\n    '\\\\hbar',\r\n    '\\\\hslash',\r\n    '\\\\imath',\r\n    '\\\\jmath',\r\n    '\\\\imaginaryI',\r\n    '\\\\imaginaryJ',\r\n    '\\\\differentialD',\r\n    '\\\\rd',\r\n    '\\\\capitalDifferentialD',\r\n    '\\\\rD',\r\n    '\\\\differencedelta',\r\n    '\\\\mid',\r\n    '@',\r\n    '\\\\Re',\r\n    '\\\\Im',\r\n], COMMON);\r\nmetadata('Letterlike Symbols', [\r\n    '\\\\top',\r\n    '\\\\bot',\r\n    '\\\\scriptCapitalE',\r\n    '\\\\scriptCapitalH',\r\n    '\\\\scriptCapitalL',\r\n    '\\\\gothicCapitalC',\r\n    '\\\\gothicCapitalH',\r\n    '\\\\gothicCapitalI',\r\n    '\\\\gothicCapitalR',\r\n    '\\\\Bbbk',\r\n    '\\\\Finv',\r\n    '\\\\Game',\r\n    '\\\\wp',\r\n    '\\\\eth',\r\n    '\\\\mho',\r\n    '\\\\pounds',\r\n    '\\\\yen',\r\n    '\\\\euro',\r\n], RARE);\r\nmetadata('Crosses', ['\\\\dagger', '\\\\dag'], SUPERCOMMON);\r\nmetadata('Crosses', ['\\\\ddag', '\\\\ddagger', '\\\\maltese', '\\\\textdagger', '\\\\textdaggerdbl'], RARE);\r\nmetadata('Various', [\r\n    '\\\\checkmark',\r\n    '\\\\diagup',\r\n    '\\\\diagdown',\r\n    '\\\\angle',\r\n    '\\\\measuredangle',\r\n    '\\\\sphericalangle',\r\n    '\\\\prime',\r\n    '\\\\doubleprime',\r\n    '\\\\backprime',\r\n    '\\\\backdoubleprime',\r\n    '\\\\sharp',\r\n    '\\\\flat',\r\n    '\\\\natural',\r\n    '\\\\&',\r\n    '\\\\#',\r\n    '\\\\clubsuit',\r\n    '\\\\spadesuit',\r\n    '\\\\diamondsuit',\r\n    '\\\\heartsuit',\r\n    '\\\\backslash',\r\n    '\\\\infty',\r\n    '/',\r\n    '\\\\_',\r\n    '\\\\/',\r\n    '|',\r\n    \"'\",\r\n], RARE);\r\nmetadata('Various', ['\\\\unicode'], RARE, '$0{\"2B1A}');\r\nmetadata('Arrows', ['\\\\longrightarrow', '\\\\rightarrow', '\\\\Longrightarrow', '\\\\Rightarrow'], SUPERCOMMON);\r\nmetadata('Arrows', [\r\n    '\\\\longmapsto',\r\n    '\\\\mapsto',\r\n    '\\\\Longleftrightarrow',\r\n    '\\\\rightleftarrows',\r\n    '\\\\leftarrow',\r\n    '\\\\curvearrowleft',\r\n    '\\\\uparrow',\r\n    '\\\\downarrow',\r\n    '\\\\hookrightarrow',\r\n    '\\\\rightharpoonup',\r\n    '\\\\rightleftharpoons',\r\n], COMMON);\r\nmetadata('Arrows', [\r\n    '\\\\Leftarrow',\r\n    '\\\\longleftrightarrow',\r\n    '\\\\longleftarrow',\r\n    '\\\\Longleftarrow',\r\n    '\\\\searrow',\r\n    '\\\\nearrow',\r\n    '\\\\swarrow',\r\n    '\\\\nwarrow',\r\n    '\\\\Uparrow',\r\n    '\\\\Downarrow',\r\n    '\\\\updownarrow',\r\n    '\\\\Updownarrow',\r\n    '\\\\hookleftarrow',\r\n    '\\\\leftharpoonup',\r\n    '\\\\leftharpoondown',\r\n    '\\\\rightharpoondown',\r\n    '\\\\leftrightarrows',\r\n    '\\\\dashrightarrow',\r\n    '\\\\dashleftarrow',\r\n    '\\\\leftleftarrows',\r\n    '\\\\Lleftarrow',\r\n    '\\\\twoheadleftarrow',\r\n    '\\\\leftarrowtail',\r\n    '\\\\looparrowleft',\r\n    '\\\\leftrightharpoons',\r\n    '\\\\circlearrowleft',\r\n    '\\\\Lsh',\r\n    '\\\\upuparrows',\r\n    '\\\\downharpoonleft',\r\n    '\\\\multimap',\r\n    '\\\\leftrightsquigarrow',\r\n    '\\\\twoheadrightarrow',\r\n    '\\\\rightarrowtail',\r\n    '\\\\looparrowright',\r\n    '\\\\curvearrowright',\r\n    '\\\\circlearrowright',\r\n    '\\\\Rsh',\r\n    '\\\\downdownarrows',\r\n    '\\\\upharpoonright',\r\n    '\\\\downharpoonright',\r\n    '\\\\rightsquigarrow',\r\n    '\\\\leadsto',\r\n    '\\\\Rrightarrow',\r\n    '\\\\restriction',\r\n], RARE);\r\nmetadata('Arrows', ['\\\\upharpoonleft', '\\\\rightrightarrows'], CRYPTIC);\r\n// AMS Negated Arrows\r\nmetadata('Negated Arrows', [\r\n    '\\\\nrightarrow',\r\n    '\\\\nRightarrow',\r\n    '\\\\nleftrightarrow',\r\n    '\\\\nLeftrightarrow',\r\n    '\\\\nleftarrow',\r\n    '\\\\nLeftarrow',\r\n], RARE);\r\nmetadata('Extensible Symbols', [\r\n    '\\\\xrightarrow',\r\n    '\\\\xleftarrow',\r\n    '\\\\xRightarrow',\r\n    '\\\\xLeftarrow',\r\n    '\\\\xleftharpoonup',\r\n    '\\\\xleftharpoondown',\r\n    '\\\\xrightharpoonup',\r\n    '\\\\xrightharpoondown',\r\n    '\\\\xlongequal',\r\n    '\\\\xtwoheadleftarrow',\r\n    '\\\\xtwoheadrightarrow',\r\n    '\\\\xleftrightarrow',\r\n    '\\\\xLeftrightarrow',\r\n    '\\\\xrightleftharpoons',\r\n    '\\\\xleftrightharpoons',\r\n    '\\\\xhookleftarrow',\r\n    '\\\\xhookrightarrow',\r\n    '\\\\xmapsto',\r\n    '\\\\xtofrom',\r\n    '\\\\xrightleftarrows',\r\n    '\\\\xrightequilibrium',\r\n    '\\\\xleftequilibrium',\r\n], RARE, '$0[below]{above}=0');\r\n// AMS Negated Binary Relations\r\nmetadata('Negated Relations', [\r\n    '\\\\nless',\r\n    '\\\\nleqslant',\r\n    '\\\\lneq',\r\n    '\\\\lneqq',\r\n    '\\\\nleqq',\r\n    '\\\\unlhd',\r\n    '\\\\unrhd',\r\n    '\\\\lvertneqq',\r\n    '\\\\lnsim',\r\n    '\\\\lnapprox',\r\n    '\\\\nprec',\r\n    '\\\\npreceq',\r\n    '\\\\precnsim',\r\n    '\\\\precnapprox',\r\n    '\\\\nsim',\r\n    '\\\\nshortmid',\r\n    '\\\\nmid',\r\n    '\\\\nvdash',\r\n    '\\\\nvDash',\r\n    '\\\\ngtr',\r\n    '\\\\ngeqslant',\r\n    '\\\\ngeqq',\r\n    '\\\\gneq',\r\n    '\\\\gneqq',\r\n    '\\\\gvertneqq',\r\n    '\\\\gnsim',\r\n    '\\\\nsucc',\r\n    '\\\\succnsim',\r\n    '\\\\ncong',\r\n    '\\\\nshortparallel',\r\n    '\\\\nparallel',\r\n    '\\\\nVDash',\r\n    '\\\\nVdash',\r\n    '\\\\precneqq',\r\n    '\\\\succneqq',\r\n    '\\\\gnapprox',\r\n    '\\\\succnapprox',\r\n    '\\\\nsucceq',\r\n], RARE);\r\n// AMS Hebrew\r\nmetadata('Hebrew', ['\\\\aleph', '\\\\beth', '\\\\daleth', '\\\\gimel'], RARE);\r\nmetadata('Fences', [\r\n    '\\\\lbrace',\r\n    '\\\\rbrace',\r\n    '\\\\vert',\r\n    '\\\\Vert',\r\n    '\\\\{',\r\n    '\\\\}',\r\n    '(',\r\n    ')',\r\n    '[',\r\n    ']',\r\n], SUPERCOMMON);\r\nmetadata('Fences', [\r\n    '\\\\langle',\r\n    '\\\\rangle',\r\n    '\\\\lfloor',\r\n    '\\\\rfloor',\r\n    '\\\\lceil',\r\n    '\\\\rceil',\r\n    '\\\\mvert',\r\n    '\\\\|',\r\n    '\\\\mVert',\r\n], COMMON);\r\nmetadata('Fences', [\r\n    '\\\\lvert',\r\n    '\\\\rvert',\r\n    '\\\\lVert',\r\n    '\\\\rVert',\r\n    '\\\\lbrack',\r\n    '\\\\rbrack',\r\n    '\\\\ulcorner',\r\n    '\\\\urcorner',\r\n    '\\\\llcorner',\r\n    '\\\\lrcorner',\r\n    '\\\\lgroup',\r\n    '\\\\rgroup',\r\n    '\\\\lmoustache',\r\n    '\\\\rmoustache',\r\n], RARE);\r\nmetadata('Relations', ['=', '\\\\ne', '\\\\neq', '<', '>', '\\\\leqslant', '\\\\geqslant', '\\\\approx'], SUPERCOMMON);\r\nmetadata('Relations', [\r\n    '\\\\lt',\r\n    '\\\\gt',\r\n    '\\\\le',\r\n    '\\\\ge',\r\n    '\\\\leq',\r\n    '\\\\geq',\r\n    '\\\\gg',\r\n    '\\\\cong',\r\n    '\\\\equiv',\r\n    '\\\\prec',\r\n    '\\\\preceq',\r\n    '\\\\succ',\r\n    '\\\\perp',\r\n    '\\\\parallel',\r\n    '\\\\propto',\r\n    '\\\\smile',\r\n    '\\\\frown',\r\n    '\\\\sim',\r\n    '\\\\gtrsim',\r\n], COMMON);\r\nmetadata('Relations', [\r\n    '\\\\coloneq',\r\n    '\\\\succeq',\r\n    '\\\\approxeq',\r\n    '\\\\thickapprox',\r\n    '\\\\lessapprox',\r\n    '\\\\gtrapprox',\r\n    '\\\\precapprox',\r\n    '\\\\succapprox',\r\n    '\\\\thicksim',\r\n    '\\\\succsim',\r\n    '\\\\precsim',\r\n    '\\\\backsim',\r\n    '\\\\eqsim',\r\n    '\\\\backsimeq',\r\n    '\\\\simeq',\r\n    '\\\\lesssim',\r\n    '\\\\nleq',\r\n    '\\\\ngeq',\r\n    '\\\\smallsmile',\r\n    '\\\\smallfrown',\r\n    '\\\\bowtie',\r\n    '\\\\asymp',\r\n    '\\\\leqq',\r\n    '\\\\eqslantless',\r\n    '\\\\ll',\r\n    '\\\\lll',\r\n    '\\\\lessgtr',\r\n    '\\\\lesseqgtr',\r\n    '\\\\lesseqqgtr',\r\n    '\\\\risingdotseq',\r\n    '\\\\fallingdotseq',\r\n    '\\\\preccurlyeq',\r\n    '\\\\curlyeqprec',\r\n    '\\\\vDash',\r\n    '\\\\Vvdash',\r\n    '\\\\bumpeq',\r\n    '\\\\Bumpeq',\r\n    '\\\\geqq',\r\n    '\\\\eqslantgtr',\r\n    '\\\\ggg',\r\n    '\\\\gtrless',\r\n    '\\\\gtreqless',\r\n    '\\\\gtreqqless',\r\n    '\\\\succcurlyeq',\r\n    '\\\\curlyeqsucc',\r\n    '\\\\Vdash',\r\n    '\\\\shortmid',\r\n    '\\\\shortparallel',\r\n    '\\\\between',\r\n    '\\\\pitchfork',\r\n    '\\\\varpropto',\r\n    '\\\\backepsilon',\r\n    '\\\\llless',\r\n    '\\\\gggtr',\r\n    '\\\\lhd',\r\n    '\\\\rhd',\r\n    '\\\\Join',\r\n    '\\\\doteq',\r\n    '\\\\doteqdot',\r\n    '\\\\Doteq',\r\n    '\\\\eqcirc',\r\n    '\\\\circeq',\r\n    '\\\\lessdot',\r\n    '\\\\gtrdot',\r\n    '\\\\measeq',\r\n    '\\\\eqdef',\r\n    '\\\\questeq',\r\n], RARE);\r\nmetadata('Logic', ['\\\\leftrightarrow', '\\\\Leftrightarrow', '\\\\to'], SUPERCOMMON);\r\nmetadata('Logic', ['\\\\models', '\\\\vdash'], COMMON);\r\nmetadata('Logic', [\r\n    '\\\\therefore',\r\n    '\\\\because',\r\n    '\\\\implies',\r\n    '\\\\gets',\r\n    '\\\\dashv',\r\n    '\\\\impliedby',\r\n    '\\\\biconditional',\r\n    '\\\\roundimplies',\r\n], RARE);\r\nmetadata('Operators', ['+', '-', '*', '\\\\cdot'], SUPERCOMMON);\r\nmetadata('Operators', ['\\\\sqrt'], SUPERCOMMON, '$0{\\\\placeholder{}}');\r\nmetadata('Operators', ['\\\\pm', '\\\\mp', '\\\\times', '\\\\div', '\\\\surd'], COMMON);\r\nmetadata('Operators', [\r\n    '\\\\ltimes',\r\n    '\\\\rtimes',\r\n    '\\\\leftthreetimes',\r\n    '\\\\rightthreetimes',\r\n    '\\\\intercal',\r\n    '\\\\dotplus',\r\n    '\\\\centerdot',\r\n    '\\\\doublebarwedge',\r\n    '\\\\divideontimes',\r\n    '\\\\divides',\r\n], RARE);\r\nmetadata('Logic', ['\\\\wedge', '\\\\vee', '\\\\neg'], SUPERCOMMON);\r\nmetadata('Logic', ['\\\\lnot'], COMMON);\r\nmetadata('Logic', [\r\n    '\\\\land',\r\n    '\\\\lor',\r\n    '\\\\barwedge',\r\n    '\\\\veebar',\r\n    '\\\\nor',\r\n    '\\\\curlywedge',\r\n    '\\\\curlyvee',\r\n], RARE);\r\nmetadata('Greek', [\r\n    '\\\\alpha',\r\n    '\\\\beta',\r\n    '\\\\gamma',\r\n    '\\\\delta',\r\n    '\\\\epsilon',\r\n    '\\\\varepsilon',\r\n    '\\\\zeta',\r\n    '\\\\eta',\r\n    '\\\\theta',\r\n    '\\\\vartheta',\r\n    '\\\\iota',\r\n    '\\\\kappa',\r\n    '\\\\varkappa',\r\n    '\\\\lambda',\r\n    '\\\\mu',\r\n    '\\\\nu',\r\n    '\\\\xi',\r\n    '\\\\pi',\r\n    '\\\\varpi',\r\n    '\\\\rho',\r\n    '\\\\varrho',\r\n    '\\\\sigma',\r\n    '\\\\varsigma',\r\n    '\\\\tau',\r\n    '\\\\phi',\r\n    '\\\\varphi',\r\n    '\\\\upsilon',\r\n    '\\\\chi',\r\n    '\\\\psi',\r\n    '\\\\omega',\r\n    '\\\\Gamma',\r\n    '\\\\Delta',\r\n    '\\\\Theta',\r\n    '\\\\Lambda',\r\n    '\\\\Xi',\r\n    '\\\\Pi',\r\n    '\\\\Sigma',\r\n    '\\\\Upsilon',\r\n    '\\\\Phi',\r\n    '\\\\Psi',\r\n    '\\\\Omega',\r\n    '\\\\digamma',\r\n    '\\\\omicron',\r\n], COMMON);\r\nmetadata('Sets', [\r\n    '\\\\emptyset',\r\n    '\\\\varnothing',\r\n    '\\\\cap',\r\n    '\\\\cup',\r\n    '\\\\in',\r\n    '\\\\notin',\r\n    '\\\\subset',\r\n    '\\\\supset',\r\n    '\\\\subseteq',\r\n    '\\\\supseteq',\r\n    '\\\\sqsubseteq',\r\n], SUPERCOMMON);\r\nmetadata('Sets', [\r\n    '\\\\setminus',\r\n    '\\\\not',\r\n    '\\\\ni',\r\n    '\\\\sqsupseteq',\r\n    '\\\\nsupseteqq',\r\n    '\\\\supsetneq',\r\n    '\\\\varsupsetneq',\r\n    '\\\\supsetneqq',\r\n    '\\\\varsupsetneqq',\r\n], COMMON);\r\nmetadata('Sets', [\r\n    '\\\\smallsetminus',\r\n    '\\\\complement',\r\n    '\\\\owns',\r\n    '\\\\subsetneq',\r\n    '\\\\varsubsetneq',\r\n    '\\\\subsetneqq',\r\n    '\\\\varsubsetneqq',\r\n    '\\\\nsubset',\r\n    '\\\\nsupset',\r\n    '\\\\nsubseteq',\r\n    '\\\\nsupseteq',\r\n    '\\\\nsubseteqq',\r\n    '\\\\subseteqq',\r\n    '\\\\Subset',\r\n    '\\\\sqsubset',\r\n    '\\\\supseteqq',\r\n    '\\\\Supset',\r\n    '\\\\sqsupset',\r\n], RARE);\r\nmetadata('Spacing', ['\\\\space, \\\\quad', '\\\\qquad'], COMMON, '\\\\unicode{\"203A}$0\\\\unicode{\"2039}');\r\nmetadata('Spacing', ['\\\\!', '\\\\,', '\\\\:', '\\\\;', '\\\\enskip', '\\\\enspace'], RARE, '\\\\unicode{\"203A}$0\\\\unicode{\"2039}');\r\nmetadata('Spacing', ['\\\\hspace', '\\\\hspace*'], RARE, '\\\\unicode{\"203A}$0{1em}\\\\unicode{\"2039}');\r\nmetadata('Punctuation', [\r\n    '\\\\colon',\r\n    '\\\\cdotp',\r\n    '\\\\ldots',\r\n    '\\\\cdots',\r\n    '\\\\ddots',\r\n    '\\\\vdots',\r\n    '?',\r\n    '!',\r\n    ':',\r\n    '\"',\r\n    ',',\r\n    '.',\r\n    ';',\r\n], COMMON);\r\nmetadata('Punctuation', ['\\\\mathellipsis', '\\\\ldotp', '\\\\Colon'], RARE);\r\nmetadata('Boxes', ['\\\\square', '\\\\Box'], COMMON);\r\nmetadata('Boxes', ['\\\\blacksquare', '\\\\boxminus', '\\\\boxplus', '\\\\boxtimes', '\\\\boxdot'], RARE);\r\nmetadata('Circles', ['\\\\circ', '\\\\bullet', '\\\\circleddash', '\\\\oplus', '\\\\otimes'], COMMON);\r\nmetadata('Circles', [\r\n    '\\\\bigcirc',\r\n    '\\\\circledast',\r\n    '\\\\ominus',\r\n    '\\\\circledcirc',\r\n    '\\\\oslash',\r\n    '\\\\circledS',\r\n    '\\\\circledR',\r\n    '\\\\odot',\r\n], RARE);\r\nmetadata('Triangles', ['\\\\triangle', '\\\\triangleq'], COMMON);\r\nmetadata('Triangles', [\r\n    '\\\\bigtriangleup',\r\n    '\\\\vartriangle',\r\n    '\\\\triangledown',\r\n    '\\\\bigtriangledown',\r\n    '\\\\triangleleft',\r\n    '\\\\vartriangleleft',\r\n    '\\\\trianglelefteq',\r\n    '\\\\ntriangleleft',\r\n    '\\\\ntrianglelefteq',\r\n    '\\\\triangleright',\r\n    '\\\\vartriangleright',\r\n    '\\\\trianglerighteq',\r\n    '\\\\ntriangleright',\r\n    '\\\\ntrianglerighteq',\r\n    '\\\\blacktriangle',\r\n    '\\\\blacktriangledown',\r\n    '\\\\blacktriangleleft',\r\n    '\\\\blacktriangleright',\r\n], RARE);\r\nmetadata('Shapes', ['\\\\ast', '\\\\star'], COMMON);\r\nmetadata('Shapes', ['\\\\diamond', '\\\\Diamond', '\\\\lozenge', '\\\\blacklozenge', '\\\\bigstar'], RARE);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\n\nvar _mathfield;\r\nconst MATHFIELD_TEMPLATE = document.createElement('template');\r\nMATHFIELD_TEMPLATE.innerHTML = `<style>\n:host {\n    display: block;\n}\n:host([hidden]) {\n    display: none;\n}\n:host([disabled]) {\n    opacity:  .5;\n}\n:host(:focus), :host(:focus-within) {\n    outline: Highlight auto 1px;    /* For Firefox */\n    outline: -webkit-focus-ring-color auto 1px;\n}\n</style>\n<div></div><slot style=\"display:none\"></slot>`;\r\n//\r\n// Deferred State\r\n//\r\n// Methods such as `setOptions()` or `getOptions()` could be called before\r\n// the element has been connected (i.e. `mf = new MathfieldElement(); mf.setConfig()`...)\r\n// and therefore before the matfield instance has been created.\r\n// So we'll stash any deferred operations on options (and value) here, and\r\n// will apply them to the element when it gets connected to the DOM.\r\n//\r\nconst gDeferredState = new WeakMap();\r\n/**\r\n * The `MathfieldElement` class provides special properties and\r\n * methods to control the display and behavior of `<math-field>`\r\n * elements.\r\n *\r\n * It inherits many useful properties and methods from [[`HTMLElement`]] such\r\n * as `style`, `tabIndex`, `addEventListener()`, `getAttribute()`,  etc...\r\n *\r\n * To create a new `MathfieldElement`:\r\n *\r\n * ```javascript\r\n * // 1. Create a new MathfieldElement\r\n * const mfe = new MathfieldElement();\r\n * // 2. Attach it to the DOM\r\n * document.body.appendChild(mfe);\r\n * ```\r\n *\r\n * The `MathfieldElement` constructor has an optional argument of\r\n * [[`MathfieldOptions`]] to configure the element. The options can also\r\n * be modified later:\r\n *\r\n * ```javascript\r\n * // Setting options during construction\r\n * const mfe = new MathfieldElement({smartFence: false});\r\n * // Modifying options after construction\r\n * mfe.setOptions({smartFence: true});\r\n * ```\r\n *\r\n * ### CSS Variables\r\n *\r\n * To customize the appearance of the mathfield, declare the following CSS\r\n * variables (custom properties) in a ruleset that applied to the mathfield.\r\n * ```css\r\n * math-field {\r\n *  --hue: 10       // Set the highlight color and caret to a reddish hue\r\n * }\r\n * ```\r\n *\r\n * | CSS Variable | Usage |\r\n * |:---|:---|\r\n * | `--hue` | Hue of the highlight color and the caret |\r\n * | `--highlight` | Color of the selection |\r\n * | `--highlight-inactive` | Color of the selection, when the mathfield is not focused |\r\n * | `--caret` | Color of the caret/insertion point |\r\n * | `--primary` | Primary accent color, used for example in the virtual keyboard |\r\n * | `--text-font-family` | The font stack used in text mode |\r\n * | `--keyboard-zindex` | The z-index attribute of the virtual keyboard panel |\r\n *\r\n * ### CSS Parts\r\n *\r\n * To style the virtual keyboard toggle, use the `virtual-keyboard-toggle` CSS\r\n * part. To use it, define a CSS rule with a `::part()` selector\r\n * for example:\r\n * ```css\r\n * math-field::part(virtual-keyboard-toggle) {\r\n *  color: red;\r\n * }\r\n * ```\r\n *\r\n *\r\n * ### Attributes\r\n *\r\n * An attribute is a key-value pair set as part of the tag:\r\n *\r\n * ```html\r\n * <math-field locale=\"fr\"></math-field>\r\n * ```\r\n *\r\n * The supported attributes are listed in the table below with their correspnding\r\n * property.\r\n *\r\n * The property can be changed either directly on the\r\n * `MathfieldElement` object, or using `setOptions()` if it is prefixed with\r\n * `options.`, for example\r\n * ```javascript\r\n *  getElementById('mf').value = '\\\\sin x';\r\n *  getElementById('mf').setOptions({horizontalSpacingScale: 1.1});\r\n * ```\r\n *\r\n * The values of attributes and properties are reflected, which means you can change one or the\r\n * other, for example:\r\n * ```javascript\r\n * getElementById('mf').setAttribute('virtual-keyboard-mode',  'manual');\r\n * console.log(getElementById('mf').getOption('virtualKeyboardMode'));\r\n * // Result: \"manual\"\r\n * getElementById('mf').setOptions({virtualKeyboardMode: 'onfocus');\r\n * console.log(getElementById('mf').getAttribute('virtual-keyboard-mode');\r\n * // Result: 'onfocus'\r\n * ```\r\n *\r\n * An exception is the `value` property, which is not reflected on the `value`\r\n * attribute: the `value` attribute remains at its initial value.\r\n *\r\n *\r\n * | Attribute | Property |\r\n * |:---|:---|\r\n * | `disabled` | `disabled` |\r\n * | `default-mode` | `options.defaultMode` |\r\n * | `fonts-directory` | `options.fontsDirectory` |\r\n * | `horizontal-spacing-scale` | `options.horizontalSpacingScale` |\r\n * | `ignore-spacebar-in-math-mode` | `options.ignoreSpacbarInMathMode` |\r\n * | `inline-shortcut-timeout` | `options.inlineShortcutTimeout` |\r\n * | `keypress-vibration` | `options.keypressVibration` |\r\n * | `letter-shape-style` | `options.letterShapeStyle` |\r\n * | `locale` | `options.locale` |\r\n * | `read-only` | `options.readOnly` |\r\n * | `remove-extraneous-parentheses` | `options.removeExtraneousParentheses` |\r\n * | `smart-fence` | `options.smartFence` |\r\n * | `smart-mode` | `options.smartMode` |\r\n * | `smart-superscript` | `options.superscript` |\r\n * | `speech-engine` | `options.speechEngine` |\r\n * | `speech-engine-rate` | `options.speechEngineRate` |\r\n * | `speech-engine-voice` | `options.speechEngineVoice` |\r\n * | `text-to-speech-markup` | `options.textToSpeechMarkup` |\r\n * | `text-to-speech-rules` | `options.textToSpeechRules` |\r\n * | `value` | value |\r\n * | `virtual-keyboard-layout` | `options.keyboardLayout` |\r\n * | `virtual-keyboard-mode` | `options.keyboardMode` |\r\n * | `virtual-keyboard-theme` | `options.keyboardTheme` |\r\n * | `virtual-keyboards` | `options.keyboards` |\r\n *\r\n * See [[`MathfieldOptions`]] for more details about these options.\r\n *\r\n * In addition, the following [global attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes)\r\n * can also be used:\r\n * - `class`\r\n * - `data-*`\r\n * - `hidden`\r\n * - `id`\r\n * - `item*`\r\n * - `style`\r\n * - `tabindex`\r\n *\r\n *\r\n * ### Events\r\n *\r\n * Listen to these events by using `addEventListener()`. For events with additional\r\n * arguments, the arguments are availble in `event.detail`.\r\n *\r\n * | Event Name  | Description |\r\n * |:---|:---|\r\n * | `input` | The value of the mathfield has been modified. This happens on almost every keystroke in the mathfield.  |\r\n * | `change` | The user has commited the value of the mathfield. This happens when the user presses **Return** or leaves the mathfield. |\r\n * | `selection-change` | The selection (or caret position) in the mathfield has changed |\r\n * | `mode-change` | The mode (`math`, `text`) of the mathfield has changed |\r\n * | `undo-state-change` |  The state of the undo stack has changed |\r\n * | `read-aloud-status-change` | The status of a read aloud operation has changed |\r\n * | `virtual-keyboard-toggle` | The visibility of the virtual keyboard panel has changed |\r\n * | `blur` | The mathfield is losing focus |\r\n * | `focus` | The mathfield is gaining focus |\r\n * | `focus-out` | The user is navigating out of the mathfield, typically using the keyboard<br> `detail: {direction: 'forward' | 'backward' | 'upward' | 'downward'}` **cancellable**|\r\n * | `math-error` | A parsing or configuration error happened <br> `detail: ErrorListener<ParserErrorCode | MathfieldErrorCode>` |\r\n * | `keystroke` | The user typed a keystroke with a physical keyboard <br> `detail: {keystroke: string, event: KeyboardEvent}` |\r\n * | `mount` | The element has been attached to the DOM |\r\n * | `unmount` | The element is about to be removed from the DOM |\r\n *\r\n */\r\nclass MathfieldElement extends HTMLElement {\r\n    /**\r\n     * To create programmatically a new mahfield use:\r\n     * ```javascript\r\n    let mfe = new MathfieldElement();\r\n    // Set initial value and options\r\n    mfe.value = \"\\\\frac{\\\\sin(x)}{\\\\cos(x)}\";\r\n    // Options can be set either as an attribute (for simple options)...\r\n    mfe.setAttribute('virtual-keyboard-layout', 'dvorak');\r\n    // ... or using `setOptions()`\r\n    mfe.setOptions({\r\n        virtualKeyboardMode: 'manual',\r\n    });\r\n    // Attach the element to the DOM\r\n    document.body.appendChild(mfe);\r\n    * ```\r\n    */\r\n    constructor(options) {\r\n        var _a;\r\n        super();\r\n        _mathfield.set(this, void 0);\r\n        this.attachShadow({ mode: 'open' });\r\n        this.shadowRoot.appendChild(MATHFIELD_TEMPLATE.content.cloneNode(true));\r\n        const slot = this.shadowRoot.querySelector('slot:not([name])');\r\n        // When the elements get focused (through tabbing for example)\r\n        // focus the mathfield\r\n        this.shadowRoot.host.addEventListener('focus', (_event) => this.focus());\r\n        // Inline options (as a JSON structure in the markup)\r\n        try {\r\n            const json = slot\r\n                .assignedElements()\r\n                .filter((x) => x['type'] !== 'application/json')\r\n                .map((x) => x.textContent)\r\n                .join('');\r\n            if (json) {\r\n                this.setOptions(JSON.parse(json));\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        // Record the (optional) configuration options, as a deferred state\r\n        if (options) {\r\n            this.setOptions(options);\r\n        }\r\n        // Check if there is a `value` attribute and set the initial value\r\n        // of the mathfield from it\r\n        if (this.hasAttribute('value')) {\r\n            this.value = this.getAttribute('value');\r\n        }\r\n        else {\r\n            this.value = (_a = slot === null || slot === void 0 ? void 0 : slot.assignedNodes().map((x) => (x.nodeType === 3 ? x.textContent : '')).join('').trim()) !== null && _a !== void 0 ? _a : '';\r\n        }\r\n        slot.addEventListener('slotchange', (e) => {\r\n            if (e.target !== slot)\r\n                return;\r\n            const value = slot\r\n                .assignedNodes()\r\n                .map((x) => (x.nodeType === 3 ? x.textContent : ''))\r\n                .join('')\r\n                .trim();\r\n            if (!__classPrivateFieldGet(this, _mathfield)) {\r\n                this.value = value;\r\n            }\r\n            else {\r\n                // Don't suppress notification changes. We need to know\r\n                // if the value has changed indirectly through slot manipulation\r\n                __classPrivateFieldGet(this, _mathfield).setValue(value, {\r\n                    insertionMode: 'replaceAll',\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Private lifecycle hooks\r\n     * @internal\r\n     */\r\n    static get optionsAttributes() {\r\n        return {\r\n            'default-mode': 'string',\r\n            'fonts-directory': 'string',\r\n            'horizontal-spacing-scale': 'number',\r\n            'ignore-spacebar-in-math-mode': 'boolean',\r\n            'inline-shortcut-timeout': 'number',\r\n            'keypress-vibration': 'boolean',\r\n            'letter-shape-style': 'string',\r\n            locale: 'string',\r\n            'read-only': 'boolean',\r\n            'remove-extraneous-parentheses': 'boolean',\r\n            'smart-fence': 'boolean',\r\n            'smart-mode': 'boolean',\r\n            'smart-superscript': 'boolean',\r\n            'speech-engine': 'string',\r\n            'speech-engine-rate': 'string',\r\n            'speech-engine-voice': 'string',\r\n            'text-to-speech-markup': 'string',\r\n            'text-to-speech-rules': 'string',\r\n            'virtual-keyboard-layout': 'string',\r\n            'virtual-keyboard-mode': 'string',\r\n            'virtual-keyboard-theme': 'string',\r\n            'virtual-keyboards': 'string',\r\n        };\r\n    }\r\n    /**\r\n     * Custom elements lifecycle hooks\r\n     * @internal\r\n     */\r\n    static get observedAttributes() {\r\n        return [...Object.keys(MathfieldElement.optionsAttributes), 'disabled'];\r\n    }\r\n    get mode() {\r\n        var _a;\r\n        return (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.mode;\r\n    }\r\n    set mode(value) {\r\n        if (!__classPrivateFieldGet(this, _mathfield))\r\n            return;\r\n        __classPrivateFieldGet(this, _mathfield).mode = value;\r\n    }\r\n    getOptions(keys) {\r\n        if (__classPrivateFieldGet(this, _mathfield)) {\r\n            return get(__classPrivateFieldGet(this, _mathfield).options, keys);\r\n        }\r\n        if (!gDeferredState.has(this))\r\n            return null;\r\n        return get(update(getDefault(), gDeferredState.get(this).options), keys);\r\n    }\r\n    /**\r\n     *  @category Options\r\n     */\r\n    getOption(key) {\r\n        return this.getOptions([key]);\r\n    }\r\n    /**\r\n     *  @category Options\r\n     */\r\n    setOptions(options) {\r\n        if (__classPrivateFieldGet(this, _mathfield)) {\r\n            __classPrivateFieldGet(this, _mathfield).setOptions(options);\r\n        }\r\n        else {\r\n            if (gDeferredState.has(this)) {\r\n                gDeferredState.set(this, {\r\n                    value: gDeferredState.get(this).value,\r\n                    selection: [{ start: 0, end: -1 }],\r\n                    options: {\r\n                        ...gDeferredState.get(this).options,\r\n                        ...options,\r\n                    },\r\n                });\r\n            }\r\n            else {\r\n                gDeferredState.set(this, {\r\n                    value: '',\r\n                    selection: [{ start: 0 }],\r\n                    options: options,\r\n                });\r\n            }\r\n        }\r\n        // Reflect options to attributes\r\n        reflectAttributes(this);\r\n    }\r\n    /**\r\n     * Execute a [[`Commands`|command]] defined by a selector.\r\n     * ```javascript\r\n     * mfe.executeCommand('add-column-after');\r\n     * mfe.executeCommand(['switch-mode', 'math']);\r\n     * ```\r\n     *\r\n     * @param command - A selector, or an array whose first element\r\n     * is a selector, and whose subsequent elements are arguments to the selector.\r\n     *\r\n     * Selectors can be passed either in camelCase or kebab-case.\r\n     *\r\n     * ```javascript\r\n     * // Both calls do the same thing\r\n     * mfe.executeCommand('selectAll');\r\n     * mfe.executeCommand('select-all');\r\n     * ```\r\n     */\r\n    executeCommand(command) {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.executeCommand(command)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    getValue(arg1, arg2, arg3) {\r\n        var _a, _b;\r\n        let ranges;\r\n        let format;\r\n        if (typeof arg1 === 'undefined') {\r\n            format = 'latex';\r\n            ranges = [{ start: 0, end: -1 }];\r\n        }\r\n        else if (typeof arg1 === 'string') {\r\n            format = arg1;\r\n            ranges = [{ start: 0, end: -1 }];\r\n        }\r\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number') {\r\n            ranges = [\r\n                {\r\n                    start: arg1,\r\n                    end: arg2 !== null && arg2 !== void 0 ? arg2 : -1,\r\n                },\r\n            ];\r\n            format = arg3 !== null && arg3 !== void 0 ? arg3 : 'latex';\r\n        }\r\n        else if (Array.isArray(arg1)) {\r\n            ranges = arg1;\r\n            format = (_a = arg2) !== null && _a !== void 0 ? _a : 'latex';\r\n        }\r\n        else {\r\n            ranges = [arg1];\r\n            format = (_b = arg2) !== null && _b !== void 0 ? _b : 'latex';\r\n        }\r\n        if (__classPrivateFieldGet(this, _mathfield)) {\r\n            return __classPrivateFieldGet(this, _mathfield).getValue(ranges, format);\r\n        }\r\n        if (gDeferredState.has(this)) {\r\n            const fullRange = ranges.length === 1 &&\r\n                ranges[0].start === 0 &&\r\n                ranges[0].end === -1;\r\n            if (format === 'latex' && fullRange) {\r\n                return gDeferredState.get(this).value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     *  @category Accessing and changing the content\r\n     */\r\n    setValue(value, options) {\r\n        if (__classPrivateFieldGet(this, _mathfield)) {\r\n            __classPrivateFieldGet(this, _mathfield).setValue(value, options);\r\n            return;\r\n        }\r\n        if (gDeferredState.has(this)) {\r\n            gDeferredState.set(this, {\r\n                value,\r\n                selection: [{ start: 0, end: -1, direction: 'forward' }],\r\n                options: gDeferredState.get(this).options,\r\n            });\r\n            return;\r\n        }\r\n        gDeferredState.set(this, {\r\n            value,\r\n            selection: [{ start: 0, end: -1, direction: 'forward' }],\r\n            options: getOptionsFromAttributes(this),\r\n        });\r\n    }\r\n    /**\r\n     * Return true if the mathfield is currently focused (responds to keyboard\r\n     * input).\r\n     *\r\n     * @category Focus\r\n     *\r\n     */\r\n    hasFocus() {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.hasFocus()) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /**\r\n     * Sets the focus to the mathfield (will respond to keyboard input).\r\n     *\r\n     * @category Focus\r\n     *\r\n     */\r\n    focus() {\r\n        var _a;\r\n        (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n    /**\r\n     * Remove the focus from the mathfield (will no longer respond to keyboard\r\n     * input).\r\n     *\r\n     * @category Focus\r\n     *\r\n     */\r\n    blur() {\r\n        var _a;\r\n        (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.blur();\r\n    }\r\n    /**\r\n     * Select the content of the mathfield.\r\n     * @category Selection\r\n     */\r\n    select() {\r\n        var _a;\r\n        (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.select();\r\n    }\r\n    /**\r\n     * Inserts a block of text at the current insertion point.\r\n     *\r\n     * This method can be called explicitly or invoked as a selector with\r\n     * `executeCommand(\"insert\")`.\r\n     *\r\n     * After the insertion, the selection will be set according to the\r\n     * `options.selectionMode`.\r\n     *\r\n     *  @category Accessing and changing the content\r\n     */\r\n    insert(s, options) {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.insert(s, options)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /**\r\n     * Updates the style (color, bold, italic, etc...) of the selection or sets\r\n     * the style to be applied to future input.\r\n     *\r\n     * If there is a selection, the style is applied to the selection\r\n     *\r\n     * If the selection already has this style, it is removed.\r\n     *\r\n     * If the selection has the style partially applied (i.e. only some\r\n     * sections), it is removed from those sections, and applied to the\r\n     * entire selection.\r\n     *\r\n     * If there is no selection, the style will apply to the next character typed.\r\n     *\r\n     * @category Accessing and changing the content\r\n     */\r\n    applyStyle(style) {\r\n        var _a;\r\n        return (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.applyStyle(style);\r\n    }\r\n    /**\r\n     * The bottom location of the caret (insertion point) in viewport\r\n     * coordinates.\r\n     *\r\n     * See also [[`setCaretPoint`]]\r\n     * @category Selection\r\n     */\r\n    get caretPoint() {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.getCaretPoint()) !== null && _b !== void 0 ? _b : null;\r\n    }\r\n    set caretPoint(point) {\r\n        var _a;\r\n        (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.setCaretPoint(point.x, point.y);\r\n    }\r\n    /**\r\n     * `x` and `y` are in viewport coordinates.\r\n     *\r\n     * Return true if the location of the point is a valid caret location.\r\n     *\r\n     * See also [[`caretPoint`]]\r\n     * @category Selection\r\n     */\r\n    setCaretPoint(x, y) {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.setCaretPoint(x, y)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /**\r\n     *  Return an array of ranges matching the argument.\r\n     *\r\n     * An array is always returned, but it has no element if there are no\r\n     * matching items.\r\n     */\r\n    find(latex) {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.find(latex)) !== null && _b !== void 0 ? _b : [];\r\n    }\r\n    /**\r\n     * Custom elements lifecycle hooks\r\n     * @internal\r\n     */\r\n    connectedCallback() {\r\n        if (!this.hasAttribute('role'))\r\n            this.setAttribute('role', 'textbox');\r\n        // this.setAttribute('aria-multiline', 'false');\r\n        if (!this.hasAttribute('tabindex'))\r\n            this.setAttribute('tabindex', '0');\r\n        __classPrivateFieldSet(this, _mathfield, new MathfieldPrivate(this.shadowRoot.querySelector(':host > div'), {\r\n            ...getOptionsFromAttributes(this),\r\n            ...(gDeferredState.has(this)\r\n                ? gDeferredState.get(this).options\r\n                : {}),\r\n            onBlur: () => {\r\n                this.dispatchEvent(new Event('blur', {\r\n                    cancelable: false,\r\n                    bubbles: false,\r\n                }));\r\n            },\r\n            onContentDidChange: () => {\r\n                this.dispatchEvent(new Event('input', {\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onError: (err) => {\r\n                this.dispatchEvent(new CustomEvent('math-error', {\r\n                    detail: {\r\n                        code: err.code,\r\n                        arg: err.arg,\r\n                        latex: err.latex,\r\n                        before: err.before,\r\n                        after: err.after,\r\n                    },\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onFocus: () => {\r\n                this.dispatchEvent(new Event('focus', {\r\n                    cancelable: false,\r\n                    bubbles: false,\r\n                }));\r\n            },\r\n            onKeystroke: (_sender, keystroke, ev) => {\r\n                return this.dispatchEvent(new CustomEvent('keystroke', {\r\n                    detail: {\r\n                        keystroke,\r\n                        event: ev,\r\n                    },\r\n                    cancelable: true,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onModeChange: (_sender, _mode) => {\r\n                this.dispatchEvent(new Event('mode-change', {\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onCommit: (_sender) => {\r\n                // Match the DOM event sent by `<input>`, `<textarea>`, etc...\r\n                // Sent when the [Return] or [Enter] key is pressed, or on\r\n                // focus loss if the content has changed.\r\n                this.dispatchEvent(new Event('change', {\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onMoveOutOf: (_sender, direction) => {\r\n                return this.dispatchEvent(new CustomEvent('focus-out', {\r\n                    detail: { direction },\r\n                    cancelable: true,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onTabOutOf: (_sender, direction) => {\r\n                return this.dispatchEvent(new CustomEvent('focus-out', {\r\n                    detail: { direction },\r\n                    cancelable: true,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onReadAloudStatus: () => {\r\n                this.dispatchEvent(new Event('read-aloud-status-change', {\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onSelectionDidChange: () => {\r\n                this.dispatchEvent(new Event('selection-change', {\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onUndoStateDidChange: () => {\r\n                this.dispatchEvent(new Event('undo-state-change', {\r\n                    cancelable: false,\r\n                    bubbles: true,\r\n                }));\r\n            },\r\n            onVirtualKeyboardToggle: (_sender, _visible, _keyboardElement) => {\r\n                this.dispatchEvent(new Event('virtual-keyboard-toggle', {\r\n                    bubbles: true,\r\n                    cancelable: false,\r\n                }));\r\n            },\r\n        }));\r\n        if (gDeferredState.has(this)) {\r\n            const suppressChangeNotifications = __classPrivateFieldGet(this, _mathfield).model\r\n                .suppressChangeNotifications;\r\n            __classPrivateFieldGet(this, _mathfield).model.suppressChangeNotifications = true;\r\n            __classPrivateFieldGet(this, _mathfield).setValue(gDeferredState.get(this).value);\r\n            __classPrivateFieldGet(this, _mathfield).selection = gDeferredState.get(this).selection;\r\n            gDeferredState.delete(this);\r\n            __classPrivateFieldGet(this, _mathfield).model.suppressChangeNotifications = suppressChangeNotifications;\r\n        }\r\n        this.upgradeProperty('disabled');\r\n        // Notify listeners that we're mounted and ready\r\n        this.dispatchEvent(new Event('mount', {\r\n            cancelable: false,\r\n            bubbles: true,\r\n        }));\r\n    }\r\n    /**\r\n     * Custom elements lifecycle hooks\r\n     * @internal\r\n     */\r\n    disconnectedCallback() {\r\n        // Notify listeners that we're about to be unmounted\r\n        this.dispatchEvent(new Event('unmount', {\r\n            cancelable: false,\r\n            bubbles: true,\r\n        }));\r\n        if (!__classPrivateFieldGet(this, _mathfield))\r\n            return;\r\n        // Save the state (in case the elements get reconnected later)\r\n        const options = {};\r\n        Object.keys(MathfieldElement.optionsAttributes).forEach((x) => {\r\n            options[toCamelCase(x)] = __classPrivateFieldGet(this, _mathfield).getOption(toCamelCase(x));\r\n        });\r\n        gDeferredState.set(this, {\r\n            value: __classPrivateFieldGet(this, _mathfield).getValue(),\r\n            selection: __classPrivateFieldGet(this, _mathfield).selection,\r\n            options,\r\n        });\r\n        // Dispose of the mathfield\r\n        __classPrivateFieldGet(this, _mathfield).dispose();\r\n        __classPrivateFieldSet(this, _mathfield, null);\r\n    }\r\n    /**\r\n     * Private lifecycle hooks\r\n     * @internal\r\n     */\r\n    upgradeProperty(prop) {\r\n        if (this.hasOwnProperty(prop)) {\r\n            const value = this[prop];\r\n            // A property may have already been set on the object, before\r\n            // the element was connected: delete the property (after saving its value)\r\n            // and use the setter to (re-)set its value.\r\n            delete this[prop];\r\n            this[prop] = value;\r\n        }\r\n    }\r\n    /**\r\n     * Custom elements lifecycle hooks\r\n     * @internal\r\n     */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (oldValue === newValue)\r\n            return;\r\n        const hasValue = newValue !== null;\r\n        switch (name) {\r\n            case 'disabled':\r\n                this.disabled = hasValue;\r\n                break;\r\n        }\r\n    }\r\n    set disabled(value) {\r\n        const isDisabled = Boolean(value);\r\n        if (isDisabled)\r\n            this.setAttribute('disabled', '');\r\n        else\r\n            this.removeAttribute('disabled');\r\n        this.setAttribute('aria-disabled', isDisabled ? 'true' : 'false');\r\n        this.setOptions({ readOnly: isDisabled });\r\n    }\r\n    get disabled() {\r\n        return this.hasAttribute('disabled');\r\n    }\r\n    /**\r\n     *  @category Accessing and changing the content\r\n     */\r\n    set value(value) {\r\n        this.setValue(value);\r\n    }\r\n    /**\r\n     * The content of the mathfield as a Latex expression.\r\n     * ```\r\n     * document.querySelector('mf').value = '\\\\frac{1}{\\\\pi}'\r\n     * ```\r\n     *  @category Accessing and changing the content\r\n     */\r\n    get value() {\r\n        return this.getValue();\r\n    }\r\n    /**\r\n     * An array of ranges representing the selection.\r\n     *\r\n     * It is guaranteed there will be at least one element. If a discontinuous\r\n     * selection is present, the result will include more than one element.\r\n     *\r\n     * @category Selection\r\n     *\r\n     */\r\n    get selection() {\r\n        if (__classPrivateFieldGet(this, _mathfield)) {\r\n            return __classPrivateFieldGet(this, _mathfield).selection;\r\n        }\r\n        if (gDeferredState.has(this)) {\r\n            return gDeferredState.get(this).selection;\r\n        }\r\n        return [{ start: 0, direction: 'forward' }];\r\n    }\r\n    /**\r\n     *\r\n     * @category Selection\r\n     */\r\n    set selection(value) {\r\n        if (__classPrivateFieldGet(this, _mathfield)) {\r\n            __classPrivateFieldGet(this, _mathfield).selection = value;\r\n        }\r\n        if (gDeferredState.has(this)) {\r\n            gDeferredState.set(this, {\r\n                value: gDeferredState.get(this).value,\r\n                selection: value,\r\n                options: gDeferredState.get(this).options,\r\n            });\r\n            return;\r\n        }\r\n        gDeferredState.set(this, {\r\n            value: '',\r\n            selection: value,\r\n            options: getOptionsFromAttributes(this),\r\n        });\r\n    }\r\n    /**\r\n     * The position of the caret/insertion point, from 0 to `lastPosition`.\r\n     *\r\n     * @category Selection\r\n     *\r\n     */\r\n    get position() {\r\n        var _a;\r\n        const selection = this.selection;\r\n        if (selection[selection.length - 1].direction === 'backward') {\r\n            return selection[selection.length - 1].start;\r\n        }\r\n        return (_a = selection[0].end) !== null && _a !== void 0 ? _a : selection[0].start;\r\n    }\r\n    /**\r\n     * @category Selection\r\n     */\r\n    set position(value) {\r\n        this.selection = [{ start: value }];\r\n    }\r\n    /**\r\n     * The last valid position.\r\n     * @category Selection\r\n     */\r\n    get lastPosition() {\r\n        var _a, _b;\r\n        return (_b = (_a = __classPrivateFieldGet(this, _mathfield)) === null || _a === void 0 ? void 0 : _a.lastPosition) !== null && _b !== void 0 ? _b : -1;\r\n    }\r\n}\r\n_mathfield = new WeakMap();\r\nfunction toCamelCase(s) {\r\n    return s\r\n        .toLowerCase()\r\n        .replace(/[^a-zA-Z0-9]+(.)/g, (m, c) => c.toUpperCase());\r\n}\r\nfunction reflectAttributes(el) {\r\n    const defaultOptions = getDefault();\r\n    const options = el.getOptions();\r\n    Object.keys(MathfieldElement.optionsAttributes).forEach((x) => {\r\n        const prop = toCamelCase(x);\r\n        if (defaultOptions[prop] !== options[prop]) {\r\n            if (MathfieldElement.optionsAttributes[x] === 'boolean') {\r\n                if (options[prop]) {\r\n                    // add attribute\r\n                    el.setAttribute(x, '');\r\n                }\r\n                else {\r\n                    // remove attribute\r\n                    el.removeAttribute(x);\r\n                }\r\n            }\r\n            else {\r\n                // set attribute (as string)\r\n                el.setAttribute(x, options[prop].toString());\r\n            }\r\n        }\r\n    });\r\n}\r\n// function toKebabCase(s: string): string {\r\n//     return s\r\n//         .match(\r\n//             /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\r\n//         )\r\n//         .map((x: string) => x.toLowerCase())\r\n//         .join('-');\r\n// }\r\nfunction getOptionsFromAttributes(mfe) {\r\n    const result = {};\r\n    const attribs = MathfieldElement.optionsAttributes;\r\n    Object.keys(attribs).forEach((x) => {\r\n        if (mfe.hasAttribute(x)) {\r\n            const value = mfe.getAttribute(x);\r\n            if (attribs[x] === 'boolean') {\r\n                const lcValue = value.toLowerCase();\r\n                if (lcValue === 'true' ||\r\n                    lcValue === 'yes' ||\r\n                    lcValue === 'on') {\r\n                    result[toCamelCase(x)] = true;\r\n                }\r\n                else {\r\n                    result[toCamelCase(x)] = false;\r\n                }\r\n            }\r\n            else if (attribs[x] === 'number') {\r\n                result[toCamelCase(x)] = parseFloat(value);\r\n            }\r\n            else {\r\n                result[toCamelCase(x)] = value;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\nif (!window.customElements.get('math-field')) {\r\n    window.MathfieldElement = MathfieldElement;\r\n    window.customElements.define('math-field', MathfieldElement);\r\n}\n\nfunction makeMathField(element, options = {}) {\r\n    var _a, _b;\r\n    options.speakHook = (_a = options.speakHook) !== null && _a !== void 0 ? _a : defaultSpeakHook;\r\n    options.readAloudHook = (_b = options.readAloudHook) !== null && _b !== void 0 ? _b : defaultReadAloudHook;\r\n    return new MathfieldPrivate(getElement(element), options);\r\n}\r\n/** @deprecated */\r\nfunction latexToMarkup$2(text, options) {\r\n    return convertLatexToMarkup(text, options);\r\n}\r\nfunction convertLatexToMarkup(text, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    options.mathstyle = options.mathstyle || 'displaystyle';\r\n    options.letterShapeStyle = options.letterShapeStyle || 'auto';\r\n    options.macros = { ...MACROS, ...((_a = options.macros) !== null && _a !== void 0 ? _a : {}) };\r\n    //\r\n    // 1. Parse the formula and return a tree of atoms, e.g. 'genfrac'.\r\n    //\r\n    const atoms = parseString(text, 'math', null, options.macros, false, options.onError);\r\n    //\r\n    // 2. Transform the math atoms into elementary spans\r\n    //    for example from genfrac to vlist.\r\n    //\r\n    let spans = decompose({\r\n        mathstyle: MATHSTYLES[options.mathstyle],\r\n        letterShapeStyle: options.letterShapeStyle,\r\n    }, atoms);\r\n    //\r\n    // 3. Simplify by coalescing adjacent nodes\r\n    //    for example, from <span>1</span><span>2</span>\r\n    //    to <span>12</span>\r\n    //\r\n    spans = coalesce(spans);\r\n    if (options.format === 'span')\r\n        return spans;\r\n    //\r\n    // 4. Wrap the expression with struts\r\n    //\r\n    const wrapper = makeStruts(makeSpan(spans, 'ML__base'), 'ML__mathlive');\r\n    //\r\n    // 5. Generate markup\r\n    //\r\n    return wrapper.toMarkup();\r\n}\r\nfunction convertLatexToMathMl(latex, options = {}) {\r\n    var _a;\r\n    options.macros = { ...MACROS, ...((_a = options.macros) !== null && _a !== void 0 ? _a : {}) };\r\n    return atomsToMathML(parseString(latex, 'math', [], options.macros, false, options.onError), options);\r\n}\r\n/** @deprecated */\r\nfunction latexToMathML(latex, options) {\r\n    return convertLatexToMathMl(latex, options);\r\n}\r\n/** @deprecated Use MathJSON */\r\nfunction latexToAST(latex, options) {\r\n    var _a;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    options.macros = { ...MACROS, ...((_a = options.macros) !== null && _a !== void 0 ? _a : {}) };\r\n    // return parseLatex(latex, options);\r\n    return atomtoMathJson(parseString(latex, 'math', null, options.macros, false, options.onError), options);\r\n}\r\n/** @deprecated Use MathJSON */\r\nfunction astToLatex(expr, options) {\r\n    return jsonToLatex(typeof expr === 'string' ? JSON.parse(expr) : expr, options);\r\n    // return emitLatex(expr, options);\r\n}\r\nfunction convertLatexToSpeakableText(latex, options = {}) {\r\n    var _a;\r\n    options.macros = (_a = options.macros) !== null && _a !== void 0 ? _a : {};\r\n    Object.assign(options.macros, MACROS);\r\n    const mathlist = parseString(latex, 'math', null, options.macros, false, options.onError);\r\n    return atomToSpeakableText(mathlist, options);\r\n}\r\n/** @deprecated */\r\nfunction latexToSpeakableText(latex, options) {\r\n    return convertLatexToSpeakableText(latex, options);\r\n}\r\nfunction renderMathInDocument(options) {\r\n    renderMathInElement$1(document.body, options);\r\n}\r\nfunction getElement(element) {\r\n    if (typeof element === 'string') {\r\n        const result = document.getElementById(element);\r\n        if (result === null) {\r\n            throw Error(`The element with ID \"${element}\" could not be found.`);\r\n        }\r\n        return result;\r\n    }\r\n    return element;\r\n}\r\nfunction renderMathInElement$1(element, options) {\r\n    var _a, _b, _c, _d;\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    options.renderToMarkup = (_a = options.renderToMarkup) !== null && _a !== void 0 ? _a : convertLatexToMarkup;\r\n    options.renderToMathML = (_b = options.renderToMathML) !== null && _b !== void 0 ? _b : convertLatexToMathMl;\r\n    options.renderToSpeakableText = (_c = options.renderToSpeakableText) !== null && _c !== void 0 ? _c : convertLatexToSpeakableText;\r\n    options.macros = (_d = options.macros) !== null && _d !== void 0 ? _d : MACROS;\r\n    AutoRender.renderMathInElement(getElement(element), options);\r\n}\r\nfunction validateNamespace(options) {\r\n    if (typeof options.namespace === 'string') {\r\n        if (!/^[a-z]+[-]?$/.test(options.namespace)) {\r\n            throw Error('options.namespace must be a string of lowercase characters only');\r\n        }\r\n        if (!/-$/.test(options.namespace)) {\r\n            options.namespace += '-';\r\n        }\r\n    }\r\n}\r\n/** @deprecated */\r\nfunction revertToOriginalContent(element, options) {\r\n    var _a;\r\n    deprecated$1('revertToOriginalContent');\r\n    //  if (element instanceof MathfieldPrivate) {\r\n    //      element.$revertToOriginalContent();\r\n    //    } else {\r\n    // element is a pair: accessible span, math -- set it to the math part\r\n    element = getElement(element).children[1];\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    validateNamespace(options);\r\n    const html = element.getAttribute('data-' + ((_a = options.namespace) !== null && _a !== void 0 ? _a : '') + 'original-content');\r\n    element.innerHTML =\r\n        typeof options.createHTML === 'function'\r\n            ? options.createHTML(html)\r\n            : html;\r\n    //  }\r\n}\r\n/** @deprecated */\r\nfunction getOriginalContent(element, options) {\r\n    var _a;\r\n    deprecated$1('getOriginalContent');\r\n    if (element instanceof MathfieldPrivate) {\r\n        return element.originalContent;\r\n    }\r\n    // element is a pair: accessible span, math -- set it to the math part\r\n    element = getElement(element).children[1];\r\n    options = options !== null && options !== void 0 ? options : {};\r\n    validateNamespace(options);\r\n    return element.getAttribute('data-' + ((_a = options.namespace) !== null && _a !== void 0 ? _a : '') + 'original-content');\r\n}\r\n// This SDK_VERSION variable will be replaced during the build process.\r\nconst version = '0.59.0';\r\nfunction deprecated$1(method) {\r\n    console.warn(`Function \"${method}\" is deprecated`);\r\n}\r\nconst debug = {\r\n    getStyle: MathLiveDebug.getStyle,\r\n    getType: MathLiveDebug.getType,\r\n    spanToString: MathLiveDebug.spanToString,\r\n    hasClass: MathLiveDebug.hasClass,\r\n    latexToAsciiMath: MathLiveDebug.latexToAsciiMath,\r\n    asciiMathToLatex: MathLiveDebug.asciiMathToLatex,\r\n    FUNCTIONS: MathLiveDebug.FUNCTIONS,\r\n    MATH_SYMBOLS: MathLiveDebug.MATH_SYMBOLS,\r\n    TEXT_SYMBOLS: MathLiveDebug.TEXT_SYMBOLS,\r\n    ENVIRONMENTS: MathLiveDebug.ENVIRONMENTS,\r\n    MACROS: MathLiveDebug.MACROS,\r\n    DEFAULT_KEYBINDINGS: MathLiveDebug.DEFAULT_KEYBINDINGS,\r\n    getKeybindingMarkup: MathLiveDebug.getKeybindingMarkup,\r\n};\r\nvar mathlive = {\r\n    version: () => {\r\n        deprecated$1('export default version');\r\n        return version;\r\n    },\r\n    latexToMarkup: (text, options) => {\r\n        deprecated$1('export default latexToMarkup');\r\n        return latexToMarkup$2(text, options);\r\n    },\r\n    latexToMathML: (latex, options) => {\r\n        deprecated$1('export default latexToMathML');\r\n        return latexToMathML(latex, options);\r\n    },\r\n    latexToSpeakableText: (latex, options) => {\r\n        deprecated$1('export default latexToSpeakableText');\r\n        return latexToSpeakableText(latex, options);\r\n    },\r\n    latexToAST: (latex, options) => {\r\n        deprecated$1('export default latexToAST: use MathJSON');\r\n        return latexToAST(latex, options);\r\n    },\r\n    astToLatex: (expr, options) => {\r\n        deprecated$1('export default astToLatex: use MathJSON');\r\n        return astToLatex(expr, options);\r\n    },\r\n    makeMathField: (element, options) => {\r\n        deprecated$1('export default makeMathField');\r\n        return makeMathField(element, options);\r\n    },\r\n    renderMathInDocument: (options) => {\r\n        deprecated$1('export default renderMathInDocument');\r\n        renderMathInDocument(options);\r\n    },\r\n    renderMathInElement: (el, options) => {\r\n        deprecated$1('export default renderMathInElement');\r\n        renderMathInElement$1(el, options);\r\n    },\r\n    revertToOriginalContent: (el, options) => {\r\n        deprecated$1('export default revertToOriginalContent');\r\n        revertToOriginalContent(el, options);\r\n    },\r\n    getOriginalContent: (el, options) => {\r\n        deprecated$1('export default getOriginalContent');\r\n        getOriginalContent(el, options);\r\n    },\r\n    readAloud: (element, text, config) => {\r\n        deprecated$1('export default readAloud');\r\n        return defaultReadAloudHook(element, text, config);\r\n    },\r\n    readAloudStatus: () => {\r\n        deprecated$1('export default readAloudStatus');\r\n        return readAloudStatus();\r\n    },\r\n    pauseReadAloud: () => {\r\n        deprecated$1('export default pauseReadAloud');\r\n        pauseReadAloud();\r\n    },\r\n    resumeReadAloud: () => {\r\n        deprecated$1('export default resumeReadAloud');\r\n        resumeReadAloud();\r\n    },\r\n    playReadAloud: (token, count) => {\r\n        deprecated$1('export default playReadAloud');\r\n        playReadAloud(token, count);\r\n    },\r\n};\n\nexport default mathlive;\nexport { MathfieldElement, astToLatex, convertLatexToMarkup, convertLatexToMathMl, convertLatexToSpeakableText, debug, makeMathField, renderMathInDocument, renderMathInElement$1 as renderMathInElement };\n"]},"metadata":{},"sourceType":"module"}